
;; Function int hash_UNH(int*, int, long int, int) (_Z8hash_UNHPiili, funcdef_no=1063, decl_uid=23699, cgraph_uid=307)

int hash_UNH(int*, int, long int, int) (int * ints, int num_ints, long int m, int increment)
{
  unsigned long ivtmp.78;
  long int sum;
  long int index;
  int i;
  static int first_call = 1;
  static unsigned int rndseq[2048];
  int first_call.4;
  unsigned int _14;
  int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  long unsigned int _26;
  long unsigned int _27;
  int * _29;
  int _30;
  int _33;
  long int _34;
  int _38;
  unsigned int _39;
  long int _40;
  long int _44;
  int _45;
  unsigned int ivtmp_48;
  unsigned int ivtmp_51;
  int pretmp_98;
  int pretmp_99;
  int prephitmp_100;
  unsigned long _113;
  unsigned long _114;
  void * _115;
  unsigned int prephitmp_121;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG sum => 0
  first_call.4_11 = first_call;
  if (first_call.4_11 != 0)
    goto <bb 3>;
  else
    goto <bb 10>;
;;    succ:       3
;;                10

;;   basic block 3, loop depth 0
;;    pred:       2
  ivtmp.78_116 = (unsigned long) &rndseq[0];
  _114 = (unsigned long) &rndseq;
  _113 = _114 + 8192;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       8
;;                3
  # ivtmp.78_50 = PHI <ivtmp.78_21(8), ivtmp.78_116(3)>
  # DEBUG k => NULL
  _115 = (void *) ivtmp.78_50;
  MEM[base: _115, offset: 0B] = 0;
  # DEBUG i => 0
  # DEBUG i => 0
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       6
;;                4
  # prephitmp_121 = PHI <_19(6), 0(4)>
  # ivtmp_51 = PHI <ivtmp_48(6), 4(4)>
  # DEBUG i => NULL
  _14 = prephitmp_121 << 8;
  _16 = rand ();
  _17 = (unsigned int) _16;
  _18 = _17 & 255;
  _19 = _18 | _14;
  MEM[base: _115, offset: 0B] = _19;
  # DEBUG i => D#1
  # DEBUG i => D#1
  ivtmp_48 = ivtmp_51 - 1;
  if (ivtmp_48 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 2
;;    pred:       5
  # DEBUG i => D#1
  goto <bb 5>;
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  # DEBUG k => D#2
  # DEBUG k => D#2
  ivtmp.78_21 = ivtmp.78_50 + 4;
  if (ivtmp.78_21 != _113)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 1
;;    pred:       7
  goto <bb 4>;
;;    succ:       4

;;   basic block 9, loop depth 0
;;    pred:       7
  first_call = 0;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       2
;;                9
  # DEBUG i => 0
  # DEBUG sum => 0
  # DEBUG i => 0
  if (num_ints_25(D) > 0)
    goto <bb 11>;
  else
    goto <bb 20>;
;;    succ:       11
;;                20

;;   basic block 11, loop depth 0
;;    pred:       10
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       13
;;                11
  # i_59 = PHI <i_42(13), 0(11)>
  # sum_58 = PHI <sum_41(13), 0(11)>
  # DEBUG sum => sum_58
  # DEBUG i => i_59
  _26 = (long unsigned int) i_59;
  _27 = _26 * 4;
  _29 = ints_28(D) + _27;
  _30 = *_29;
  index_31 = (long int) _30;
  # DEBUG index => index_31
  _33 = increment_32(D) * i_59;
  _34 = (long int) _33;
  index_35 = _34 + index_31;
  # DEBUG index => index_35
  index_36 = index_35 & 2047;
  # DEBUG index => index_36
  # DEBUG index => index_36
  _38 = (int) index_36;
  _39 = rndseq[_38];
  _40 = (long int) _39;
  sum_41 = _40 + sum_58;
  # DEBUG sum => sum_41
  i_42 = i_59 + 1;
  # DEBUG i => i_42
  # DEBUG sum => sum_41
  # DEBUG i => i_42
  if (num_ints_25(D) > i_42)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  goto <bb 12>;
;;    succ:       12

;;   basic block 14, loop depth 0
;;    pred:       12
  # sum_119 = PHI <sum_41(12)>
  _44 = sum_119 % m_43(D);
  _45 = (int) _44;
  index_46 = (long int) _45;
  # DEBUG index => index_46
  # DEBUG index => index_46
  if (index_46 < 0)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  pretmp_99 = _45;
  goto <bb 20>;
;;    succ:       20

;;   basic block 16, loop depth 0
;;    pred:       14
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       18
;;                16
  # index_56 = PHI <index_47(18), index_46(16)>
  # DEBUG index => index_56
  index_47 = index_56 + m_43(D);
  # DEBUG index => index_47
  # DEBUG index => index_47
  if (index_47 < 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18
;;                19

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 17>;
;;    succ:       17

;;   basic block 19, loop depth 0
;;    pred:       17
  # index_118 = PHI <index_47(17)>
  pretmp_98 = (int) index_118;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       19
;;                15
;;                10
  # prephitmp_100 = PHI <pretmp_98(19), pretmp_99(15), 0(10)>
  return prephitmp_100;
;;    succ:       EXIT

}



Partition map 

Partition 11 (first_call.4_11 - 11 )
Partition 14 (_14 - 14 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 21 (ivtmp.78_21 - 21 )
Partition 25 (num_ints_25(D) - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (ints_28(D) - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (index_31 - 31 )
Partition 32 (increment_32(D) - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (index_35 - 35 )
Partition 36 (index_36 - 36 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (sum_41 - 41 )
Partition 42 (i_42 - 42 )
Partition 43 (m_43(D) - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (index_46 - 46 )
Partition 47 (index_47 - 47 )
Partition 48 (ivtmp_48 - 48 )
Partition 50 (ivtmp.78_50 - 50 )
Partition 51 (ivtmp_51 - 51 )
Partition 56 (index_56 - 56 )
Partition 58 (sum_58 - 58 )
Partition 59 (i_59 - 59 )
Partition 98 (pretmp_98 - 98 )
Partition 99 (pretmp_99 - 99 )
Partition 100 (prephitmp_100 - 100 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (ivtmp.78_116 - 116 )
Partition 118 (index_118 - 118 )
Partition 119 (sum_119 - 119 )
Partition 121 (prephitmp_121 - 121 )


Partition map 

Partition 0 (_19 - 19 )
Partition 1 (ivtmp.78_21 - 21 )
Partition 2 (num_ints_25(D) - 25 )
Partition 3 (ints_28(D) - 28 )
Partition 4 (increment_32(D) - 32 )
Partition 5 (sum_41 - 41 )
Partition 6 (i_42 - 42 )
Partition 7 (m_43(D) - 43 )
Partition 8 (_45 - 45 )
Partition 9 (index_46 - 46 )
Partition 10 (index_47 - 47 )
Partition 11 (ivtmp_48 - 48 )
Partition 12 (ivtmp.78_50 - 50 )
Partition 13 (ivtmp_51 - 51 )
Partition 14 (index_56 - 56 )
Partition 15 (sum_58 - 58 )
Partition 16 (i_59 - 59 )
Partition 17 (pretmp_98 - 98 )
Partition 18 (pretmp_99 - 99 )
Partition 19 (prephitmp_100 - 100 )
Partition 20 (ivtmp.78_116 - 116 )
Partition 21 (index_118 - 118 )
Partition 22 (sum_119 - 119 )
Partition 23 (prephitmp_121 - 121 )


Live on entry to BB2 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB3 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB4 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB5 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  ivtmp.78_50  

Live on entry to BB6 : _19  num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  ivtmp_48  ivtmp.78_50  

Live on entry to BB7 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  ivtmp.78_50  

Live on entry to BB8 : ivtmp.78_21  num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB9 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB10 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB11 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB12 : num_ints_25(D)  ints_28(D)  increment_32(D)  m_43(D)  

Live on entry to BB13 : num_ints_25(D)  ints_28(D)  increment_32(D)  sum_41  i_42  m_43(D)  

Live on entry to BB14 : m_43(D)  

Live on entry to BB15 : _45  

Live on entry to BB16 : m_43(D)  index_46  

Live on entry to BB17 : m_43(D)  

Live on entry to BB18 : m_43(D)  index_47  

Live on entry to BB19 : 

Live on entry to BB20 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(6000) _19 <-> prephitmp_121
(6000) ivtmp_48 <-> ivtmp_51
(1980) ivtmp.78_21 <-> ivtmp.78_50
(372) sum_41 <-> sum_58
(372) i_42 <-> i_59
(372) index_47 <-> index_56
(37) sum_41 <-> sum_119
(37) index_47 <-> index_118
(37) pretmp_98 <-> prephitmp_100
(36) index_46 <-> index_56
(20) ivtmp.78_50 <-> ivtmp.78_116
(1) _45 <-> pretmp_99

Partition map 

Partition 0 (_19 - 19 )
Partition 1 (ivtmp.78_21 - 21 )
Partition 2 (num_ints_25(D) - 25 )
Partition 3 (ints_28(D) - 28 )
Partition 4 (increment_32(D) - 32 )
Partition 5 (sum_41 - 41 )
Partition 6 (i_42 - 42 )
Partition 7 (m_43(D) - 43 )
Partition 8 (_45 - 45 )
Partition 9 (index_46 - 46 )
Partition 10 (index_47 - 47 )
Partition 11 (ivtmp_48 - 48 )
Partition 12 (ivtmp.78_50 - 50 )
Partition 13 (ivtmp_51 - 51 )
Partition 14 (index_56 - 56 )
Partition 15 (sum_58 - 58 )
Partition 16 (i_59 - 59 )
Partition 17 (pretmp_98 - 98 )
Partition 18 (pretmp_99 - 99 )
Partition 19 (prephitmp_100 - 100 )
Partition 20 (ivtmp.78_116 - 116 )
Partition 21 (index_118 - 118 )
Partition 22 (sum_119 - 119 )
Partition 23 (prephitmp_121 - 121 )

Coalesce list: (19)_19 & (121)prephitmp_121 [map: 0, 23] : Success -> 0
Coalesce list: (48)ivtmp_48 & (51)ivtmp_51 [map: 11, 13] : Success -> 11
Coalesce list: (21)ivtmp.78_21 & (50)ivtmp.78_50 [map: 1, 12] : Success -> 1
Coalesce list: (41)sum_41 & (58)sum_58 [map: 5, 15] : Success -> 5
Coalesce list: (42)i_42 & (59)i_59 [map: 6, 16] : Success -> 6
Coalesce list: (47)index_47 & (56)index_56 [map: 10, 14] : Success -> 10
Coalesce list: (41)sum_41 & (119)sum_119 [map: 5, 22] : Success -> 5
Coalesce list: (47)index_47 & (118)index_118 [map: 10, 21] : Success -> 10
Coalesce list: (98)pretmp_98 & (100)prephitmp_100 [map: 17, 19] : Success -> 17
Coalesce list: (46)index_46 & (56)index_47 [map: 9, 10] : Success -> 10
Coalesce list: (50)ivtmp.78_21 & (116)ivtmp.78_116 [map: 1, 20] : Success -> 1
Coalesce list: (45)_45 & (99)pretmp_99 [map: 8, 18] : Success -> 8
Coalesce list: (100)pretmp_98 & (99)_45 [map: 17, 8] : Success -> 17
After Coalescing:

Partition map 

Partition 0 (first_call.4_11 - 11 )
Partition 1 (_14 - 14 )
Partition 2 (_16 - 16 )
Partition 3 (_17 - 17 )
Partition 4 (_18 - 18 )
Partition 5 (_19 - 19 121 )
Partition 6 (ivtmp.78_21 - 21 50 116 )
Partition 7 (num_ints_25(D) - 25 )
Partition 8 (_26 - 26 )
Partition 9 (_27 - 27 )
Partition 10 (ints_28(D) - 28 )
Partition 11 (_29 - 29 )
Partition 12 (_30 - 30 )
Partition 13 (index_31 - 31 )
Partition 14 (increment_32(D) - 32 )
Partition 15 (_33 - 33 )
Partition 16 (_34 - 34 )
Partition 17 (index_35 - 35 )
Partition 18 (index_36 - 36 )
Partition 19 (_38 - 38 )
Partition 20 (_39 - 39 )
Partition 21 (_40 - 40 )
Partition 22 (sum_41 - 41 58 119 )
Partition 23 (i_42 - 42 59 )
Partition 24 (m_43(D) - 43 )
Partition 25 (_44 - 44 )
Partition 26 (index_47 - 46 47 56 118 )
Partition 27 (ivtmp_48 - 48 51 )
Partition 28 (pretmp_98 - 45 98 99 100 )
Partition 29 (_113 - 113 )
Partition 30 (_114 - 114 )
Partition 31 (_115 - 115 )


Replacing Expressions
first_call.4_11 replace with --> first_call.4_11 = first_call;

_14 replace with --> _14 = prephitmp_121 << 8;

_17 replace with --> _17 = (unsigned int) _16;

_18 replace with --> _18 = _17 & 255;

_26 replace with --> _26 = (long unsigned int) i_59;

_27 replace with --> _27 = _26 * 4;

_29 replace with --> _29 = ints_28(D) + _27;

_30 replace with --> _30 = *_29;

_33 replace with --> _33 = increment_32(D) * i_59;

_34 replace with --> _34 = (long int) _33;

index_36 replace with --> index_36 = index_35 & 2047;

_38 replace with --> _38 = (int) index_36;

_39 replace with --> _39 = rndseq[_38];

_40 replace with --> _40 = (long int) _39;

_44 replace with --> _44 = sum_119 % m_43(D);

_114 replace with --> _114 = (unsigned long) &rndseq;


int hash_UNH(int*, int, long int, int) (int * ints, int num_ints, long int m, int increment)
{
  unsigned long ivtmp.78;
  long int sum;
  long int index;
  int i;
  static int first_call = 1;
  static unsigned int rndseq[2048];
  int first_call.4;
  unsigned int _14;
  int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  long unsigned int _26;
  long unsigned int _27;
  int * _29;
  int _30;
  int _33;
  long int _34;
  int _38;
  unsigned int _39;
  long int _40;
  long int _44;
  int _45;
  unsigned int ivtmp_48;
  unsigned int ivtmp_51;
  int pretmp_98;
  int pretmp_99;
  int prephitmp_100;
  unsigned long _113;
  unsigned long _114;
  void * _115;
  unsigned int prephitmp_121;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG sum => 0
  first_call.4_11 = first_call;
  if (first_call.4_11 != 0)
    goto <bb 3>;
  else
    goto <bb 10>;
;;    succ:       3
;;                10

;;   basic block 3, loop depth 0
;;    pred:       2
  ivtmp.78_116 = (unsigned long) &rndseq[0];
  _114 = (unsigned long) &rndseq;
  _113 = _114 + 8192;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       8
;;                3
  # ivtmp.78_50 = PHI <ivtmp.78_21(8), ivtmp.78_116(3)>
  # DEBUG k => NULL
  _115 = (void *) ivtmp.78_50;
  MEM[base: _115, offset: 0B] = 0;
  # DEBUG i => 0
  # DEBUG i => 0
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       6
;;                4
  # prephitmp_121 = PHI <_19(6), 0(4)>
  # ivtmp_51 = PHI <ivtmp_48(6), 4(4)>
  # DEBUG i => NULL
  _14 = prephitmp_121 << 8;
  _16 = rand ();
  _17 = (unsigned int) _16;
  _18 = _17 & 255;
  _19 = _18 | _14;
  MEM[base: _115, offset: 0B] = _19;
  # DEBUG i => D#1
  # DEBUG i => D#1
  ivtmp_48 = ivtmp_51 - 1;
  if (ivtmp_48 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 2
;;    pred:       5
  # DEBUG i => D#1
  goto <bb 5>;
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  # DEBUG k => D#2
  # DEBUG k => D#2
  ivtmp.78_21 = ivtmp.78_50 + 4;
  if (ivtmp.78_21 != _113)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 1
;;    pred:       7
  goto <bb 4>;
;;    succ:       4

;;   basic block 9, loop depth 0
;;    pred:       7
  first_call = 0;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       2
;;                9
  # DEBUG i => 0
  # DEBUG sum => 0
  # DEBUG i => 0
  if (num_ints_25(D) > 0)
    goto <bb 11>;
  else
    goto <bb 20>;
;;    succ:       11
;;                20

;;   basic block 11, loop depth 0
;;    pred:       10
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       13
;;                11
  # i_59 = PHI <i_42(13), 0(11)>
  # sum_58 = PHI <sum_41(13), 0(11)>
  # DEBUG sum => sum_58
  # DEBUG i => i_59
  _26 = (long unsigned int) i_59;
  _27 = _26 * 4;
  _29 = ints_28(D) + _27;
  _30 = *_29;
  index_31 = (long int) _30;
  # DEBUG index => index_31
  _33 = increment_32(D) * i_59;
  _34 = (long int) _33;
  index_35 = _34 + index_31;
  # DEBUG index => index_35
  index_36 = index_35 & 2047;
  # DEBUG index => index_36
  # DEBUG index => index_36
  _38 = (int) index_36;
  _39 = rndseq[_38];
  _40 = (long int) _39;
  sum_41 = _40 + sum_58;
  # DEBUG sum => sum_41
  i_42 = i_59 + 1;
  # DEBUG i => i_42
  # DEBUG sum => sum_41
  # DEBUG i => i_42
  if (num_ints_25(D) > i_42)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  goto <bb 12>;
;;    succ:       12

;;   basic block 14, loop depth 0
;;    pred:       12
  # sum_119 = PHI <sum_41(12)>
  _44 = sum_119 % m_43(D);
  _45 = (int) _44;
  index_46 = (long int) _45;
  # DEBUG index => index_46
  # DEBUG index => index_46
  if (index_46 < 0)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  pretmp_99 = _45;
  goto <bb 20>;
;;    succ:       20

;;   basic block 16, loop depth 0
;;    pred:       14
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       18
;;                16
  # index_56 = PHI <index_47(18), index_46(16)>
  # DEBUG index => index_56
  index_47 = index_56 + m_43(D);
  # DEBUG index => index_47
  # DEBUG index => index_47
  if (index_47 < 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18
;;                19

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 17>;
;;    succ:       17

;;   basic block 19, loop depth 0
;;    pred:       17
  # index_118 = PHI <index_47(17)>
  pretmp_98 = (int) index_118;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       19
;;                15
;;                10
  # prephitmp_100 = PHI <pretmp_98(19), pretmp_99(15), 0(10)>
  return prephitmp_100;
;;    succ:       EXIT

}


Inserting a value copy on edge BB4->BB5 : PART.27 = 4
Inserting a value copy on edge BB4->BB5 : PART.5 = 0
Inserting a value copy on edge BB11->BB12 : PART.22 = 0
Inserting a value copy on edge BB11->BB12 : PART.23 = 0
Inserting a value copy on edge BB10->BB20 : PART.28 = 0

;; Generating RTL for gimple basic block 2

;; # DEBUG sum => 0

(debug_insn 40 39 0 (var_location:DI sum (const_int 0 [0])) tiles.cpp:134 -1
     (nil))
;; if (first_call.4_11 != 0)

(insn 41 40 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b82f1f7d688 first_call>) [0 first_call+0 S4 A128])
            (const_int 0 [0]))) tiles.cpp:137 -1
     (nil))

(jump_insn 42 41 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:137 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 3

;; ivtmp.78_116 = (unsigned long) &rndseq[0];

(insn 44 43 0 (set (reg:DI 91 [ ivtmp.78 ])
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) -1
     (nil))

;; _113 = _114 + 8192;

(insn 45 44 46 (set (reg:DI 118)
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) -1
     (nil))

(insn 46 45 0 (parallel [
            (set (reg:DI 110 [ D.25971 ])
                (plus:DI (reg:DI 118)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 4

;; # DEBUG k => NULL

(debug_insn 48 47 0 (var_location:SI k (const_int 0 [0])) -1
     (nil))
;; _115 = (void *) ivtmp.78_50;

(insn 49 48 0 (set (reg/f:DI 112 [ D.25972 ])
        (reg:DI 91 [ ivtmp.78 ])) -1
     (nil))

;; MEM[base: _115, offset: 0B] = 0;

(insn 50 49 0 (set (mem:SI (reg/f:DI 112 [ D.25972 ]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) tiles.cpp:139 -1
     (nil))

;; # DEBUG i => 0

(debug_insn 51 50 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:140 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 52 51 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 5

;; # DEBUG i => NULL

(debug_insn 54 53 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _16 = rand ();

(call_insn 55 54 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x2b82f1e2a500 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) tiles.cpp:141 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 56 55 0 (set (reg:SI 87 [ D.25966 ])
        (reg:SI 0 ax)) tiles.cpp:141 -1
     (nil))

;; _19 = _18 | _14;

(insn 57 56 58 (set (reg:SI 119 [ D.25965 ])
        (zero_extend:SI (subreg:QI (reg:SI 87 [ D.25966 ]) 0))) tiles.cpp:141 -1
     (nil))

(insn 58 57 59 (parallel [
            (set (reg:SI 120 [ D.25965 ])
                (ashift:SI (reg:SI 90 [ D.25965 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 -1
     (nil))

(insn 59 58 0 (parallel [
            (set (reg:SI 90 [ D.25965 ])
                (ior:SI (reg:SI 119 [ D.25965 ])
                    (reg:SI 120 [ D.25965 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 -1
     (nil))

;; MEM[base: _115, offset: 0B] = _19;

(insn 60 59 0 (set (mem:SI (reg/f:DI 112 [ D.25972 ]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (reg:SI 90 [ D.25965 ])) tiles.cpp:141 -1
     (nil))

;; # DEBUG i => D#1

(debug_insn 61 60 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:140 -1
     (nil))
;; # DEBUG i => D#1

(debug_insn 62 61 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _48 = _51 - 1;

(insn 63 62 0 (parallel [
            (set (reg:SI 108 [ D.25970 ])
                (plus:SI (reg:SI 108 [ D.25970 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (_48 != 0)

(insn 64 63 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.25970 ])
            (const_int 0 [0]))) tiles.cpp:140 -1
     (nil))

(jump_insn 65 64 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:140 -1
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil)))

;; Generating RTL for gimple basic block 6

;; # DEBUG i => D#1

(debug_insn 67 66 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 7

;; 

(code_label 71 70 72 3 "" [0 uses])

(note 72 71 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG k => D#2

(debug_insn 73 72 0 (var_location:SI k (const_int 0 [0])) tiles.cpp:138 -1
     (nil))
;; # DEBUG k => D#2

(debug_insn 74 73 0 (var_location:SI k (const_int 0 [0])) -1
     (nil))
;; ivtmp.78_21 = ivtmp.78_50 + 4;

(insn 75 74 0 (parallel [
            (set (reg:DI 91 [ ivtmp.78 ])
                (plus:DI (reg:DI 91 [ ivtmp.78 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.78_21 != _113)

(insn 76 75 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ ivtmp.78 ])
            (reg:DI 110 [ D.25971 ]))) tiles.cpp:138 -1
     (nil))

(jump_insn 77 76 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:138 -1
     (expr_list:REG_BR_PROB (const_int 101 [0x65])
        (nil)))

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; 

(code_label 82 81 83 5 "" [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; first_call = 0;

(insn 84 83 0 (set (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b82f1f7d688 first_call>) [0 first_call+0 S4 A128])
        (const_int 0 [0])) tiles.cpp:143 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 85 84 86 2 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG i => 0

(debug_insn 87 86 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:146 -1
     (nil))
;; # DEBUG sum => 0

(debug_insn 88 87 0 (var_location:DI sum (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => 0

(debug_insn 89 88 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_ints_25(D) > 0)

(insn 90 89 91 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 115 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:146 -1
     (nil))

(jump_insn 91 90 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:146 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; # DEBUG sum => sum_58

(debug_insn 94 93 0 (var_location:DI sum (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => i_59

(debug_insn 95 94 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; index_31 = (long int) _30;

(insn 96 95 97 (set (reg:DI 121 [ D.25967 ])
        (sign_extend:DI (reg/v:SI 105 [ i ]))) tiles.cpp:148 -1
     (nil))

(insn 97 96 98 (set (reg:SI 122)
        (mem:SI (plus:DI (mult:DI (reg:DI 121 [ D.25967 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 114 [ ints ])) [0 *_29+0 S4 A32])) tiles.cpp:148 -1
     (nil))

(insn 98 97 0 (set (reg/v:DI 96 [ index ])
        (sign_extend:DI (reg:SI 122))) tiles.cpp:148 -1
     (nil))

;; # DEBUG index => index_31

(debug_insn 99 98 0 (var_location:DI index (const_int 0 [0])) tiles.cpp:148 -1
     (nil))
;; index_35 = _34 + index_31;

(insn 100 99 101 (parallel [
            (set (reg:SI 123 [ D.25966 ])
                (mult:SI (reg/v:SI 117 [ increment ])
                    (reg/v:SI 105 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:149 -1
     (nil))

(insn 101 100 102 (set (reg:DI 124 [ D.25969 ])
        (sign_extend:DI (reg:SI 123 [ D.25966 ]))) tiles.cpp:149 -1
     (nil))

(insn 102 101 0 (parallel [
            (set (reg/v:DI 99 [ index ])
                (plus:DI (reg:DI 124 [ D.25969 ])
                    (reg/v:DI 96 [ index ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:149 -1
     (nil))

;; # DEBUG index => index_35

(debug_insn 103 102 0 (var_location:DI index (const_int 0 [0])) tiles.cpp:149 -1
     (nil))
;; # DEBUG index => index_36

(debug_insn 104 103 0 (var_location:DI index (const_int 0 [0])) tiles.cpp:151 -1
     (nil))
;; # DEBUG index => index_36

(debug_insn 105 104 0 (var_location:DI index (const_int 0 [0])) -1
     (nil))
;; sum_41 = _40 + sum_58;

(insn 106 105 107 (parallel [
            (set (reg:DI 125 [ index ])
                (and:DI (reg/v:DI 99 [ index ])
                    (const_int 2047 [0x7ff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:151 -1
     (nil))

(insn 107 106 108 (set (reg:DI 126)
        (sign_extend:DI (subreg:SI (reg:DI 125 [ index ]) 0))) tiles.cpp:155 -1
     (nil))

(insn 108 107 109 (set (reg/f:DI 127)
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) tiles.cpp:155 -1
     (nil))

(insn 109 108 110 (set (reg:DI 128 [ D.25969 ])
        (zero_extend:DI (mem/j:SI (plus:DI (mult:DI (reg:DI 126)
                        (const_int 4 [0x4]))
                    (reg/f:DI 127)) [0 rndseq S4 A32]))) tiles.cpp:155 -1
     (nil))

(insn 110 109 0 (parallel [
            (set (reg/v:DI 104 [ sum ])
                (plus:DI (reg/v:DI 104 [ sum ])
                    (reg:DI 128 [ D.25969 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:155 -1
     (nil))

;; # DEBUG sum => sum_41

(debug_insn 111 110 0 (var_location:DI sum (const_int 0 [0])) tiles.cpp:155 -1
     (nil))
;; i_42 = i_59 + 1;

(insn 112 111 0 (parallel [
            (set (reg/v:SI 105 [ i ])
                (plus:SI (reg/v:SI 105 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:146 -1
     (nil))

;; # DEBUG i => i_42

(debug_insn 113 112 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:146 -1
     (nil))
;; # DEBUG sum => sum_41

(debug_insn 114 113 0 (var_location:DI sum (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => i_42

(debug_insn 115 114 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_ints_25(D) > i_42)

(insn 116 115 117 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 115 [ num_ints ])
            (reg/v:SI 105 [ i ]))) tiles.cpp:146 -1
     (nil))

(jump_insn 117 116 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:146 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; 

(code_label 122 121 123 8 "" [0 uses])

(note 123 122 0 NOTE_INSN_BASIC_BLOCK)

;; _45 = (int) _44;

(insn 124 123 125 (parallel [
            (set (reg:DI 131)
                (div:DI (reg/v:DI 104 [ sum ])
                    (reg/v:DI 116 [ m ])))
            (set (reg:DI 130 [ D.25969 ])
                (mod:DI (reg/v:DI 104 [ sum ])
                    (reg/v:DI 116 [ m ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:157 -1
     (nil))

(insn 125 124 0 (set (reg:SI 109 [ D.25966 ])
        (subreg:SI (reg:DI 130 [ D.25969 ]) 0)) tiles.cpp:157 -1
     (nil))

;; index_46 = (long int) _45;

(insn 126 125 0 (set (reg/v:DI 107 [ index ])
        (sign_extend:DI (reg:SI 109 [ D.25966 ]))) tiles.cpp:157 -1
     (nil))

;; # DEBUG index => index_46

(debug_insn 127 126 0 (var_location:DI index (const_int 0 [0])) tiles.cpp:157 -1
     (nil))
;; # DEBUG index => index_46

(debug_insn 128 127 0 (var_location:DI index (const_int 0 [0])) -1
     (nil))
;; if (index_46 < 0)

(insn 129 128 130 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 107 [ index ])
            (const_int 0 [0]))) tiles.cpp:158 -1
     (nil))

(jump_insn 130 129 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:158 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil)))

;; Generating RTL for gimple basic block 15

;; _99 = _45;

(nil)

;; Generating RTL for gimple basic block 16

;; 

(code_label 134 133 135 10 "" [0 uses])

(note 135 134 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 17

;; # DEBUG index => index_56

(debug_insn 137 136 0 (var_location:DI index (const_int 0 [0])) -1
     (nil))
;; index_47 = index_56 + m_43(D);

(insn 138 137 0 (parallel [
            (set (reg/v:DI 107 [ index ])
                (plus:DI (reg/v:DI 107 [ index ])
                    (reg/v:DI 116 [ m ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:158 -1
     (nil))

;; # DEBUG index => index_47

(debug_insn 139 138 0 (var_location:DI index (const_int 0 [0])) tiles.cpp:158 -1
     (nil))
;; # DEBUG index => index_47

(debug_insn 140 139 0 (var_location:DI index (const_int 0 [0])) -1
     (nil))
;; if (index_47 < 0)

(insn 141 140 142 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 107 [ index ])
            (const_int 0 [0]))) tiles.cpp:158 -1
     (nil))

(jump_insn 142 141 0 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:158 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; 

(code_label 147 146 148 11 "" [0 uses])

(note 148 147 0 NOTE_INSN_BASIC_BLOCK)

;; _98 = (int) index_118;

(insn 149 148 0 (set (reg:SI 109 [ D.25966 ])
        (subreg:SI (reg/v:DI 107 [ index ]) 0)) -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 150 149 151 7 "" [0 uses])

(note 151 150 0 NOTE_INSN_BASIC_BLOCK)

;; return _100;

(insn 152 151 153 (set (reg:SI 113 [ <retval> ])
        (reg:SI 109 [ D.25966 ])) tiles.cpp:162 -1
     (nil))

(jump_insn 153 152 154 (set (pc)
        (label_ref 0)) tiles.cpp:162 -1
     (nil))

(barrier 154 153 0)
Edge 10->20 redirected to 23
deleting block 22


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 15->16 to 22 failed.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.


try_optimize_cfg iteration 2

Forwarding edge 15->16 to 22 failed.


;;
;; Full RTL generated for this function:
;;
(note 27 0 38 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 38 27 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 28 38 29 2 (set (reg/v/f:DI 114 [ ints ])
        (reg:DI 5 di [ ints ])) tiles.cpp:129 -1
     (nil))
(insn 29 28 30 2 (set (reg/v:SI 115 [ num_ints ])
        (reg:SI 4 si [ num_ints ])) tiles.cpp:129 -1
     (nil))
(insn 30 29 31 2 (set (reg/v:DI 116 [ m ])
        (reg:DI 1 dx [ m ])) tiles.cpp:129 -1
     (nil))
(insn 31 30 32 2 (set (reg/v:SI 117 [ increment ])
        (reg:SI 2 cx [ increment ])) tiles.cpp:129 -1
     (nil))
(note 32 31 40 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 40 32 41 2 (var_location:DI sum (const_int 0 [0])) tiles.cpp:134 -1
     (nil))
(insn 41 40 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b82f1f7d688 first_call>) [0 first_call+0 S4 A128])
            (const_int 0 [0]))) tiles.cpp:137 -1
     (nil))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) tiles.cpp:137 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 85)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              11 [50.0%] 

;; basic block 4, loop depth 0, count 0, freq 20, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (set (reg:DI 91 [ ivtmp.78 ])
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) -1
     (nil))
(insn 45 44 46 4 (set (reg:DI 118)
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) -1
     (nil))
(insn 46 45 79 4 (parallel [
            (set (reg:DI 110 [ D.25971 ])
                (plus:DI (reg:DI 118)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 2000, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (DFS_BACK)
;;              4 [100.0%]  (FALLTHRU)
(code_label 79 46 47 5 6 "" [1 uses])
(note 47 79 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 48 47 49 5 (var_location:SI k (clobber (const_int 0 [0]))) -1
     (nil))
(insn 49 48 50 5 (set (reg/f:DI 112 [ D.25972 ])
        (reg:DI 91 [ ivtmp.78 ])) -1
     (nil))
(insn 50 49 51 5 (set (mem:SI (reg/f:DI 112 [ D.25972 ]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) tiles.cpp:139 -1
     (nil))
(debug_insn 51 50 52 5 (var_location:SI i (const_int 0 [0])) tiles.cpp:140 -1
     (nil))
(debug_insn 52 51 33 5 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 33 52 34 5 (set (reg:SI 108 [ D.25970 ])
        (const_int 4 [0x4])) tiles.cpp:139 -1
     (nil))
(insn 34 33 68 5 (set (reg:SI 90 [ D.25965 ])
        (const_int 0 [0])) tiles.cpp:139 -1
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)

;; basic block 6, loop depth 2, count 0, freq 8000, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%]  (DFS_BACK)
;;              5 [100.0%]  (FALLTHRU)
(code_label 68 34 53 6 4 "" [1 uses])
(note 53 68 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 6 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(call_insn 55 54 56 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x2b82f1e2a500 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) tiles.cpp:141 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 56 55 57 6 (set (reg:SI 87 [ D.25966 ])
        (reg:SI 0 ax)) tiles.cpp:141 -1
     (nil))
(insn 57 56 58 6 (set (reg:SI 119 [ D.25965 ])
        (zero_extend:SI (subreg:QI (reg:SI 87 [ D.25966 ]) 0))) tiles.cpp:141 -1
     (nil))
(insn 58 57 59 6 (parallel [
            (set (reg:SI 120 [ D.25965 ])
                (ashift:SI (reg:SI 90 [ D.25965 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:SI 90 [ D.25965 ])
                (ior:SI (reg:SI 119 [ D.25965 ])
                    (reg:SI 120 [ D.25965 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 -1
     (nil))
(insn 60 59 61 6 (set (mem:SI (reg/f:DI 112 [ D.25972 ]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (reg:SI 90 [ D.25965 ])) tiles.cpp:141 -1
     (nil))
(debug_insn 61 60 62 6 (var_location:SI i (debug_expr:SI D#1)) tiles.cpp:140 -1
     (nil))
(debug_insn 62 61 63 6 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:SI 108 [ D.25970 ])
                (plus:SI (reg:SI 108 [ D.25970 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 64 63 65 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.25970 ])
            (const_int 0 [0]))) tiles.cpp:140 -1
     (nil))
(jump_insn 65 64 66 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) tiles.cpp:140 -1
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil))
 -> 71)
;;  succ:       7 [75.0%]  (FALLTHRU)
;;              8 [25.0%] 

;; basic block 7, loop depth 2, count 0, freq 6000, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [75.0%]  (FALLTHRU)
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 69 7 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(jump_insn 69 67 70 7 (set (pc)
        (label_ref 68)) -1
     (nil)
 -> 68)
;;  succ:       6 [100.0%]  (DFS_BACK)

(barrier 70 69 71)
;; basic block 8, loop depth 1, count 0, freq 2000, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [25.0%] 
(code_label 71 70 72 8 3 "" [1 uses])
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 73 72 74 8 (var_location:SI k (debug_expr:SI D#2)) tiles.cpp:138 -1
     (nil))
(debug_insn 74 73 75 8 (var_location:SI k (debug_expr:SI D#2)) -1
     (nil))
(insn 75 74 76 8 (parallel [
            (set (reg:DI 91 [ ivtmp.78 ])
                (plus:DI (reg:DI 91 [ ivtmp.78 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 76 75 77 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ ivtmp.78 ])
            (reg:DI 110 [ D.25971 ]))) tiles.cpp:138 -1
     (nil))
(jump_insn 77 76 78 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) tiles.cpp:138 -1
     (expr_list:REG_BR_PROB (const_int 101 [0x65])
        (nil))
 -> 82)
;;  succ:       9 [99.0%]  (FALLTHRU)
;;              10 [1.0%] 

;; basic block 9, loop depth 1, count 0, freq 1980, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [99.0%]  (FALLTHRU)
(note 78 77 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 80 78 81 9 (set (pc)
        (label_ref 79)) -1
     (nil)
 -> 79)
;;  succ:       5 [100.0%]  (DFS_BACK)

(barrier 81 80 82)
;; basic block 10, loop depth 0, count 0, freq 20, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [1.0%] 
(code_label 82 81 83 10 5 "" [1 uses])
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 10 (set (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b82f1f7d688 first_call>) [0 first_call+0 S4 A128])
        (const_int 0 [0])) tiles.cpp:143 -1
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              10 [100.0%]  (FALLTHRU)
(code_label 85 84 86 11 2 "" [1 uses])
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 87 86 88 11 (var_location:SI i (const_int 0 [0])) tiles.cpp:146 -1
     (nil))
(debug_insn 88 87 89 11 (var_location:DI sum (const_int 0 [0])) -1
     (nil))
(debug_insn 89 88 90 11 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 90 89 91 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 115 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:146 -1
     (nil))
(jump_insn 91 90 92 11 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) tiles.cpp:146 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 164)
;;  succ:       12 [91.0%]  (FALLTHRU)
;;              21 [9.0%] 

;; basic block 12, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
(note 92 91 35 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 35 92 36 12 (set (reg/v:DI 104 [ sum ])
        (const_int 0 [0])) tiles.cpp:134 -1
     (nil))
(insn 36 35 119 12 (set (reg/v:SI 105 [ i ])
        (const_int 0 [0])) tiles.cpp:146 -1
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)

;; basic block 13, loop depth 1, count 0, freq 409, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0%]  (DFS_BACK)
;;              12 [100.0%]  (FALLTHRU)
(code_label 119 36 93 13 9 "" [1 uses])
(note 93 119 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 13 (var_location:DI sum (reg/v:DI 104 [ sum ])) -1
     (nil))
(debug_insn 95 94 96 13 (var_location:SI i (reg/v:SI 105 [ i ])) -1
     (nil))
(insn 96 95 97 13 (set (reg:DI 121 [ D.25967 ])
        (sign_extend:DI (reg/v:SI 105 [ i ]))) tiles.cpp:148 -1
     (nil))
(insn 97 96 98 13 (set (reg:SI 122)
        (mem:SI (plus:DI (mult:DI (reg:DI 121 [ D.25967 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 114 [ ints ])) [0 *_29+0 S4 A32])) tiles.cpp:148 -1
     (nil))
(insn 98 97 99 13 (set (reg/v:DI 96 [ index ])
        (sign_extend:DI (reg:SI 122))) tiles.cpp:148 -1
     (nil))
(debug_insn 99 98 100 13 (var_location:DI index (reg/v:DI 96 [ index ])) tiles.cpp:148 -1
     (nil))
(insn 100 99 101 13 (parallel [
            (set (reg:SI 123 [ D.25966 ])
                (mult:SI (reg/v:SI 117 [ increment ])
                    (reg/v:SI 105 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:149 -1
     (nil))
(insn 101 100 102 13 (set (reg:DI 124 [ D.25969 ])
        (sign_extend:DI (reg:SI 123 [ D.25966 ]))) tiles.cpp:149 -1
     (nil))
(insn 102 101 103 13 (parallel [
            (set (reg/v:DI 99 [ index ])
                (plus:DI (reg:DI 124 [ D.25969 ])
                    (reg/v:DI 96 [ index ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:149 -1
     (nil))
(debug_insn 103 102 104 13 (var_location:DI index (reg/v:DI 99 [ index ])) tiles.cpp:149 -1
     (nil))
(debug_insn 104 103 105 13 (var_location:DI index (and:DI (reg/v:DI 99 [ index ])
        (const_int 2047 [0x7ff]))) tiles.cpp:151 -1
     (nil))
(debug_insn 105 104 106 13 (var_location:DI index (and:DI (reg/v:DI 99 [ index ])
        (const_int 2047 [0x7ff]))) -1
     (nil))
(insn 106 105 107 13 (parallel [
            (set (reg:DI 125 [ index ])
                (and:DI (reg/v:DI 99 [ index ])
                    (const_int 2047 [0x7ff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:151 -1
     (nil))
(insn 107 106 108 13 (set (reg:DI 126)
        (sign_extend:DI (subreg:SI (reg:DI 125 [ index ]) 0))) tiles.cpp:155 -1
     (nil))
(insn 108 107 109 13 (set (reg/f:DI 127)
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) tiles.cpp:155 -1
     (nil))
(insn 109 108 110 13 (set (reg:DI 128 [ D.25969 ])
        (zero_extend:DI (mem/j:SI (plus:DI (mult:DI (reg:DI 126)
                        (const_int 4 [0x4]))
                    (reg/f:DI 127)) [0 rndseq S4 A32]))) tiles.cpp:155 -1
     (nil))
(insn 110 109 111 13 (parallel [
            (set (reg/v:DI 104 [ sum ])
                (plus:DI (reg/v:DI 104 [ sum ])
                    (reg:DI 128 [ D.25969 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:155 -1
     (nil))
(debug_insn 111 110 112 13 (var_location:DI sum (reg/v:DI 104 [ sum ])) tiles.cpp:155 -1
     (nil))
(insn 112 111 113 13 (parallel [
            (set (reg/v:SI 105 [ i ])
                (plus:SI (reg/v:SI 105 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:146 -1
     (nil))
(debug_insn 113 112 114 13 (var_location:SI i (reg/v:SI 105 [ i ])) tiles.cpp:146 -1
     (nil))
(debug_insn 114 113 115 13 (var_location:DI sum (reg/v:DI 104 [ sum ])) -1
     (nil))
(debug_insn 115 114 116 13 (var_location:SI i (reg/v:SI 105 [ i ])) -1
     (nil))
(insn 116 115 117 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 115 [ num_ints ])
            (reg/v:SI 105 [ i ]))) tiles.cpp:146 -1
     (nil))
(jump_insn 117 116 118 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) tiles.cpp:146 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 122)
;;  succ:       14 [91.0%]  (FALLTHRU)
;;              15 [9.0%] 

;; basic block 14, loop depth 1, count 0, freq 372, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 [91.0%]  (FALLTHRU)
(note 118 117 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 120 118 121 14 (set (pc)
        (label_ref 119)) -1
     (nil)
 -> 119)
;;  succ:       13 [100.0%]  (DFS_BACK)

(barrier 121 120 122)
;; basic block 15, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 [9.0%] 
(code_label 122 121 123 15 8 "" [1 uses])
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 15 (parallel [
            (set (reg:DI 131)
                (div:DI (reg/v:DI 104 [ sum ])
                    (reg/v:DI 116 [ m ])))
            (set (reg:DI 130 [ D.25969 ])
                (mod:DI (reg/v:DI 104 [ sum ])
                    (reg/v:DI 116 [ m ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:157 -1
     (nil))
(insn 125 124 126 15 (set (reg:SI 109 [ D.25966 ])
        (subreg:SI (reg:DI 130 [ D.25969 ]) 0)) tiles.cpp:157 -1
     (nil))
(insn 126 125 127 15 (set (reg/v:DI 107 [ index ])
        (sign_extend:DI (reg:SI 109 [ D.25966 ]))) tiles.cpp:157 -1
     (nil))
(debug_insn 127 126 128 15 (var_location:DI index (reg/v:DI 107 [ index ])) tiles.cpp:157 -1
     (nil))
(debug_insn 128 127 129 15 (var_location:DI index (reg/v:DI 107 [ index ])) -1
     (nil))
(insn 129 128 130 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 107 [ index ])
            (const_int 0 [0]))) tiles.cpp:158 -1
     (nil))
(jump_insn 130 129 131 15 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) tiles.cpp:158 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil))
 -> 134)
;;  succ:       17 [100.0%] 
;;              16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 131 130 132 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 132 131 133 16 (set (pc)
        (label_ref 150)) -1
     (nil)
 -> 150)
;;  succ:       22 [100.0%] 

(barrier 133 132 134)
;; basic block 17, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [100.0%] 
(code_label 134 133 135 17 10 "" [1 uses])
(note 135 134 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       18 [100.0%]  (FALLTHRU)

;; basic block 18, loop depth 1, count 0, freq 409, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 [100.0%]  (DFS_BACK)
;;              17 [100.0%]  (FALLTHRU)
(code_label 144 135 136 18 12 "" [1 uses])
(note 136 144 137 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 137 136 138 18 (var_location:DI index (reg/v:DI 107 [ index ])) -1
     (nil))
(insn 138 137 139 18 (parallel [
            (set (reg/v:DI 107 [ index ])
                (plus:DI (reg/v:DI 107 [ index ])
                    (reg/v:DI 116 [ m ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:158 -1
     (nil))
(debug_insn 139 138 140 18 (var_location:DI index (reg/v:DI 107 [ index ])) tiles.cpp:158 -1
     (nil))
(debug_insn 140 139 141 18 (var_location:DI index (reg/v:DI 107 [ index ])) -1
     (nil))
(insn 141 140 142 18 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 107 [ index ])
            (const_int 0 [0]))) tiles.cpp:158 -1
     (nil))
(jump_insn 142 141 143 18 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) tiles.cpp:158 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 147)
;;  succ:       19 [91.0%]  (FALLTHRU)
;;              20 [9.0%] 

;; basic block 19, loop depth 1, count 0, freq 372, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [91.0%]  (FALLTHRU)
(note 143 142 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 145 143 146 19 (set (pc)
        (label_ref 144)) -1
     (nil)
 -> 144)
;;  succ:       18 [100.0%]  (DFS_BACK)

(barrier 146 145 147)
;; basic block 20, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [9.0%] 
(code_label 147 146 148 20 11 "" [1 uses])
(note 148 147 149 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 161 20 (set (reg:SI 109 [ D.25966 ])
        (subreg:SI (reg/v:DI 107 [ index ]) 0)) -1
     (nil))
(jump_insn 161 149 162 20 (set (pc)
        (label_ref 150)) -1
     (nil)
 -> 150)
;;  succ:       22 [100.0%] 

(barrier 162 161 164)
;; basic block 21, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [9.0%] 
(code_label 164 162 163 21 13 "" [1 uses])
(note 163 164 37 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 37 163 150 21 (set (reg:SI 109 [ D.25966 ])
        (const_int 0 [0])) tiles.cpp:146 -1
     (nil))
;;  succ:       22 [100.0%]  (FALLTHRU)

;; basic block 22, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 21, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;;              20 [100.0%] 
(code_label 150 37 151 22 7 "" [2 uses])
(note 151 150 152 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 156 22 (set (reg:SI 113 [ <retval> ])
        (reg:SI 109 [ D.25966 ])) tiles.cpp:162 -1
     (nil))
(insn 156 152 159 22 (set (reg/i:SI 0 ax)
        (reg:SI 113 [ <retval> ])) tiles.cpp:163 -1
     (nil))
(insn 159 156 0 22 (use (reg/i:SI 0 ax)) tiles.cpp:163 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles(int*, int, int, float*, int, int*, int) (_Z5tilesPiiiPfiS_i, funcdef_no=1061, decl_uid=23639, cgraph_uid=305)

void tiles(int*, int, int, float*, int, int*, int) (int * the_tiles, int num_tilings, int memory_size, float * floats, int num_floats, int * ints, int num_ints)
{
  sizetype ivtmp.104;
  unsigned long ivtmp.98;
  unsigned int ivtmp.93;
  sizetype ivtmp.87;
  int num_coordinates;
  int coordinates[41];
  int base[20];
  int qstate[20];
  int j;
  int _12;
  float _20;
  float _21;
  float _22;
  int _23;
  unsigned int _24;
  sizetype _25;
  sizetype _27;
  sizetype _28;
  void * _31;
  unsigned int _32;
  sizetype _33;
  sizetype _34;
  sizetype _35;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  sizetype _43;
  int _44;
  sizetype _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _50;
  int cstore_51;
  int _53;
  int _54;
  unsigned int _61;
  unsigned int _63;
  int _65;
  long int pretmp_98;
  sizetype _106;
  sizetype _107;
  int[41] * _111;
  float pretmp_114;
  sizetype _116;
  ssizetype _117;
  ssizetype _118;
  sizetype _119;
  sizetype _120;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _12 = num_floats_10(D) + num_ints_11(D);
  num_coordinates_13 = _12 + 1;
  # DEBUG num_coordinates => num_coordinates_13
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_11(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 4, loop depth 0
;;    pred:       2
  _45 = (sizetype) num_ints_11(D);
  _43 = _45 * 4;
  _120 = (sizetype) num_floats_10(D);
  _119 = _120 * 4;
  _118 = (ssizetype) _119;
  _117 = _118 + 4;
  _116 = (sizetype) _117;
  _111 = &coordinates + _116;
  __builtin_memcpy (_111, ints_19(D), _43);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
;;                9
  # DEBUG j => 0
  if (num_tilings_29(D) > 0)
    goto <bb 10>;
  else
    goto <bb 20>;
;;    succ:       10
;;                20

;;   basic block 6, loop depth 0
;;    pred:       3
  pretmp_114 = (float) num_tilings_29(D);
  _61 = (unsigned int) num_floats_10(D);
  _32 = _61 + 4294967295;
  _33 = (sizetype) _32;
  _34 = _33 + 1;
  _35 = _34 * 4;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       8
;;                6
  # ivtmp.104_58 = PHI <ivtmp.104_59(8), 0(6)>
  # DEBUG i => NULL
  _20 = MEM[base: floats_26(D), index: ivtmp.104_58, offset: 0B];
  _21 = _20 * pretmp_114;
  _22 = __builtin_floorf (_21);
  _23 = (int) _22;
  MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B] = _23;
  # DEBUG i => D#6
  # DEBUG i => D#6
  ivtmp.104_59 = ivtmp.104_58 + 4;
  if (ivtmp.104_59 != _35)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 1
;;    pred:       7
  goto <bb 7>;
;;    succ:       7

;;   basic block 9, loop depth 0
;;    pred:       7
  _107 = (sizetype) num_floats_10(D);
  _106 = _107 * 4;
  __builtin_memset (&base, 0, _106);
  goto <bb 5>;
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       5
  pretmp_98 = (long int) memory_size_62(D);
  ivtmp.98_52 = (unsigned long) the_tiles_60(D);
  _63 = (unsigned int) num_floats_10(D);
  _24 = _63 + 4294967295;
  _25 = (sizetype) _24;
  _27 = _25 + 1;
  _28 = _27 * 4;
  goto <bb 18>;
;;    succ:       18

;;   basic block 11, loop depth 2
;;    pred:       15
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       11
;;                19
  # ivtmp.87_15 = PHI <ivtmp.87_122(11), 0(19)>
  # ivtmp.93_121 = PHI <ivtmp.93_30(11), 1(19)>
  # DEBUG i => NULL
  _37 = MEM[symbol: qstate, index: ivtmp.87_15, offset: 0B];
  _38 = MEM[symbol: base, index: ivtmp.87_15, offset: 0B];
  if (_37 >= _38)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 2
;;    pred:       12
  _39 = _37 - _38;
  _40 = _39 % num_tilings_29(D);
  _41 = _37 - _40;
  goto <bb 15>;
;;    succ:       15

;;   basic block 14, loop depth 2
;;    pred:       12
  _44 = _37 + 1;
  _46 = _38 - _37;
  _47 = _46 + -1;
  _48 = _47 % num_tilings_29(D);
  _49 = _44 + _48;
  _50 = _49 - num_tilings_29(D);
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       13
;;                14
  # cstore_51 = PHI <_41(13), _50(14)>
  MEM[symbol: coordinates, index: ivtmp.87_15, offset: 0B] = cstore_51;
  _53 = (int) ivtmp.93_121;
  _54 = _38 + _53;
  MEM[symbol: base, index: ivtmp.87_15, offset: 0B] = _54;
  # DEBUG i => D#5
  # DEBUG i => D#5
  ivtmp.87_122 = ivtmp.87_15 + 4;
  ivtmp.93_30 = ivtmp.93_121 + 2;
  if (ivtmp.87_122 != _28)
    goto <bb 11>;
  else
    goto <bb 16>;
;;    succ:       11
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
;;                18
  # num_floats_75 = PHI <num_floats_10(D)(15), 0(18)>
  coordinates[num_floats_75] = j_80;
  _65 = hash_UNH (&coordinates, num_coordinates_13, pretmp_98, 449);
  _31 = (void *) ivtmp.98_76;
  MEM[base: _31, offset: 0B] = _65;
  j_68 = j_80 + 1;
  # DEBUG j => j_68
  # DEBUG j => j_68
  ivtmp.98_56 = ivtmp.98_76 + 4;
  if (j_68 != num_tilings_29(D))
    goto <bb 17>;
  else
    goto <bb 20>;
;;    succ:       17
;;                20

;;   basic block 17, loop depth 1
;;    pred:       16
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       17
;;                10
  # j_80 = PHI <j_68(17), 0(10)>
  # ivtmp.98_76 = PHI <ivtmp.98_56(17), ivtmp.98_52(10)>
  # DEBUG j => j_80
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 19>;
  else
    goto <bb 16>;
;;    succ:       19
;;                16

;;   basic block 19, loop depth 1
;;    pred:       18
  goto <bb 12>;
;;    succ:       12

;;   basic block 20, loop depth 0
;;    pred:       5
;;                16
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 10 (num_floats_10(D) - 10 )
Partition 11 (num_ints_11(D) - 11 )
Partition 12 (_12 - 12 )
Partition 13 (num_coordinates_13 - 13 )
Partition 15 (ivtmp.87_15 - 15 )
Partition 19 (ints_19(D) - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (floats_26(D) - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (num_tilings_29(D) - 29 )
Partition 30 (ivtmp.93_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (cstore_51 - 51 )
Partition 52 (ivtmp.98_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 56 (ivtmp.98_56 - 56 )
Partition 58 (ivtmp.104_58 - 58 )
Partition 59 (ivtmp.104_59 - 59 )
Partition 60 (the_tiles_60(D) - 60 )
Partition 61 (_61 - 61 )
Partition 62 (memory_size_62(D) - 62 )
Partition 63 (_63 - 63 )
Partition 65 (_65 - 65 )
Partition 68 (j_68 - 68 )
Partition 75 (num_floats_75 - 75 )
Partition 76 (ivtmp.98_76 - 76 )
Partition 80 (j_80 - 80 )
Partition 98 (pretmp_98 - 98 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 111 (_111 - 111 )
Partition 114 (pretmp_114 - 114 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (ivtmp.93_121 - 121 )
Partition 122 (ivtmp.87_122 - 122 )


Partition map 

Partition 0 (num_floats_10(D) - 10 )
Partition 1 (num_ints_11(D) - 11 )
Partition 2 (ivtmp.87_15 - 15 )
Partition 3 (ints_19(D) - 19 )
Partition 4 (floats_26(D) - 26 )
Partition 5 (num_tilings_29(D) - 29 )
Partition 6 (ivtmp.93_30 - 30 )
Partition 7 (_41 - 41 )
Partition 8 (_50 - 50 )
Partition 9 (cstore_51 - 51 )
Partition 10 (ivtmp.98_52 - 52 )
Partition 11 (ivtmp.98_56 - 56 )
Partition 12 (ivtmp.104_58 - 58 )
Partition 13 (ivtmp.104_59 - 59 )
Partition 14 (the_tiles_60(D) - 60 )
Partition 15 (memory_size_62(D) - 62 )
Partition 16 (j_68 - 68 )
Partition 17 (num_floats_75 - 75 )
Partition 18 (ivtmp.98_76 - 76 )
Partition 19 (j_80 - 80 )
Partition 20 (ivtmp.93_121 - 121 )
Partition 21 (ivtmp.87_122 - 122 )


Live on entry to BB2 : num_floats_10(D)  num_ints_11(D)  ints_19(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB3 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB4 : num_floats_10(D)  num_ints_11(D)  ints_19(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB5 : num_floats_10(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB6 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB7 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB8 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  ivtmp.104_59  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB9 : num_floats_10(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB10 : num_floats_10(D)  num_tilings_29(D)  the_tiles_60(D)  memory_size_62(D)  

Live on entry to BB11 : num_floats_10(D)  num_tilings_29(D)  ivtmp.93_30  ivtmp.98_76  j_80  ivtmp.87_122  

Live on entry to BB12 : num_floats_10(D)  num_tilings_29(D)  ivtmp.98_76  j_80  

Live on entry to BB13 : num_floats_10(D)  ivtmp.87_15  num_tilings_29(D)  ivtmp.98_76  j_80  ivtmp.93_121  

Live on entry to BB14 : num_floats_10(D)  ivtmp.87_15  num_tilings_29(D)  ivtmp.98_76  j_80  ivtmp.93_121  

Live on entry to BB15 : num_floats_10(D)  ivtmp.87_15  num_tilings_29(D)  ivtmp.98_76  j_80  ivtmp.93_121  

Live on entry to BB16 : num_floats_10(D)  num_tilings_29(D)  ivtmp.98_76  j_80  

Live on entry to BB17 : num_floats_10(D)  num_tilings_29(D)  ivtmp.98_56  j_68  

Live on entry to BB18 : num_floats_10(D)  num_tilings_29(D)  

Live on entry to BB19 : num_floats_10(D)  num_tilings_29(D)  ivtmp.98_76  j_80  

Live on entry to BB20 : 

Conflict graph:
0: 17
17: 0

After sorting:
Sorted Coalesce list:
(9071) ivtmp.87_15 <-> ivtmp.87_122
(9071) ivtmp.93_30 <-> ivtmp.93_121
(4762) _41 <-> cstore_51
(4762) _50 <-> cstore_51
(906) num_floats_10(D) <-> num_floats_75
(897) ivtmp.104_58 <-> ivtmp.104_59
(433) ivtmp.98_56 <-> ivtmp.98_76
(433) j_68 <-> j_80
(43) ivtmp.98_52 <-> ivtmp.98_76

Partition map 

Partition 0 (num_floats_10(D) - 10 )
Partition 1 (num_ints_11(D) - 11 )
Partition 2 (ivtmp.87_15 - 15 )
Partition 3 (ints_19(D) - 19 )
Partition 4 (floats_26(D) - 26 )
Partition 5 (num_tilings_29(D) - 29 )
Partition 6 (ivtmp.93_30 - 30 )
Partition 7 (_41 - 41 )
Partition 8 (_50 - 50 )
Partition 9 (cstore_51 - 51 )
Partition 10 (ivtmp.98_52 - 52 )
Partition 11 (ivtmp.98_56 - 56 )
Partition 12 (ivtmp.104_58 - 58 )
Partition 13 (ivtmp.104_59 - 59 )
Partition 14 (the_tiles_60(D) - 60 )
Partition 15 (memory_size_62(D) - 62 )
Partition 16 (j_68 - 68 )
Partition 17 (num_floats_75 - 75 )
Partition 18 (ivtmp.98_76 - 76 )
Partition 19 (j_80 - 80 )
Partition 20 (ivtmp.93_121 - 121 )
Partition 21 (ivtmp.87_122 - 122 )

Coalesce list: (15)ivtmp.87_15 & (122)ivtmp.87_122 [map: 2, 21] : Success -> 2
Coalesce list: (30)ivtmp.93_30 & (121)ivtmp.93_121 [map: 6, 20] : Success -> 6
Coalesce list: (41)_41 & (51)cstore_51 [map: 7, 9] : Success -> 7
Coalesce list: (50)_50 & (51)_41 [map: 8, 7] : Success -> 7
Coalesce list: (10)num_floats_10(D) & (75)num_floats_75 [map: 0, 17] : Fail due to conflict
Coalesce list: (58)ivtmp.104_58 & (59)ivtmp.104_59 [map: 12, 13] : Success -> 12
Coalesce list: (56)ivtmp.98_56 & (76)ivtmp.98_76 [map: 11, 18] : Success -> 11
Coalesce list: (68)j_68 & (80)j_80 [map: 16, 19] : Success -> 16
Coalesce list: (52)ivtmp.98_52 & (76)ivtmp.98_56 [map: 10, 11] : Success -> 11
After Coalescing:

Partition map 

Partition 0 (num_floats_10(D) - 10 )
Partition 1 (num_ints_11(D) - 11 )
Partition 2 (_12 - 12 )
Partition 3 (num_coordinates_13 - 13 )
Partition 4 (ivtmp.87_15 - 15 122 )
Partition 5 (ints_19(D) - 19 )
Partition 6 (_20 - 20 )
Partition 7 (_21 - 21 )
Partition 8 (_22 - 22 )
Partition 9 (_23 - 23 )
Partition 10 (_24 - 24 )
Partition 11 (_25 - 25 )
Partition 12 (floats_26(D) - 26 )
Partition 13 (_27 - 27 )
Partition 14 (_28 - 28 )
Partition 15 (num_tilings_29(D) - 29 )
Partition 16 (ivtmp.93_30 - 30 121 )
Partition 17 (_31 - 31 )
Partition 18 (_32 - 32 )
Partition 19 (_33 - 33 )
Partition 20 (_34 - 34 )
Partition 21 (_35 - 35 )
Partition 22 (_37 - 37 )
Partition 23 (_38 - 38 )
Partition 24 (_39 - 39 )
Partition 25 (_40 - 40 )
Partition 26 (_41 - 41 50 51 )
Partition 27 (_43 - 43 )
Partition 28 (_44 - 44 )
Partition 29 (_45 - 45 )
Partition 30 (_46 - 46 )
Partition 31 (_47 - 47 )
Partition 32 (_48 - 48 )
Partition 33 (_49 - 49 )
Partition 34 (_53 - 53 )
Partition 35 (_54 - 54 )
Partition 36 (ivtmp.98_56 - 52 56 76 )
Partition 37 (ivtmp.104_58 - 58 59 )
Partition 38 (the_tiles_60(D) - 60 )
Partition 39 (_61 - 61 )
Partition 40 (memory_size_62(D) - 62 )
Partition 41 (_63 - 63 )
Partition 42 (_65 - 65 )
Partition 43 (j_68 - 68 80 )
Partition 44 (num_floats_75 - 75 )
Partition 45 (pretmp_98 - 98 )
Partition 46 (_106 - 106 )
Partition 47 (_107 - 107 )
Partition 48 (_111 - 111 )
Partition 49 (pretmp_114 - 114 )
Partition 50 (_116 - 116 )
Partition 51 (_117 - 117 )
Partition 52 (_118 - 118 )
Partition 53 (_119 - 119 )
Partition 54 (_120 - 120 )


Replacing Expressions
_12 replace with --> _12 = num_floats_10(D) + num_ints_11(D);

_20 replace with --> _20 = MEM[base: floats_26(D), index: ivtmp.104_58, offset: 0B];

_21 replace with --> _21 = _20 * pretmp_114;

_23 replace with --> _23 = (int) _22;

_24 replace with --> _24 = _63 + 4294967295;

_25 replace with --> _25 = (sizetype) _24;

_27 replace with --> _27 = _25 + 1;

_31 replace with --> _31 = (void *) ivtmp.98_76;

_32 replace with --> _32 = _61 + 4294967295;

_33 replace with --> _33 = (sizetype) _32;

_34 replace with --> _34 = _33 + 1;

_39 replace with --> _39 = _37 - _38;

_40 replace with --> _40 = _39 % num_tilings_29(D);

_43 replace with --> _43 = _45 * 4;

_44 replace with --> _44 = _37 + 1;

_45 replace with --> _45 = (sizetype) num_ints_11(D);

_46 replace with --> _46 = _38 - _37;

_47 replace with --> _47 = _46 + -1;

_48 replace with --> _48 = _47 % num_tilings_29(D);

_49 replace with --> _49 = _44 + _48;

_53 replace with --> _53 = (int) ivtmp.93_121;

_54 replace with --> _54 = _38 + _53;

_61 replace with --> _61 = (unsigned int) num_floats_10(D);

_63 replace with --> _63 = (unsigned int) num_floats_10(D);

_106 replace with --> _106 = _107 * 4;

_107 replace with --> _107 = (sizetype) num_floats_10(D);

_111 replace with --> _111 = &coordinates + _116;

_116 replace with --> _116 = (sizetype) _117;

_117 replace with --> _117 = _118 + 4;

_118 replace with --> _118 = (ssizetype) _119;

_119 replace with --> _119 = _120 * 4;

_120 replace with --> _120 = (sizetype) num_floats_10(D);


void tiles(int*, int, int, float*, int, int*, int) (int * the_tiles, int num_tilings, int memory_size, float * floats, int num_floats, int * ints, int num_ints)
{
  sizetype ivtmp.104;
  unsigned long ivtmp.98;
  unsigned int ivtmp.93;
  sizetype ivtmp.87;
  int num_coordinates;
  int coordinates[41];
  int base[20];
  int qstate[20];
  int j;
  int _12;
  float _20;
  float _21;
  float _22;
  int _23;
  unsigned int _24;
  sizetype _25;
  sizetype _27;
  sizetype _28;
  void * _31;
  unsigned int _32;
  sizetype _33;
  sizetype _34;
  sizetype _35;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  sizetype _43;
  int _44;
  sizetype _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _50;
  int cstore_51;
  int _53;
  int _54;
  unsigned int _61;
  unsigned int _63;
  int _65;
  long int pretmp_98;
  sizetype _106;
  sizetype _107;
  int[41] * _111;
  float pretmp_114;
  sizetype _116;
  ssizetype _117;
  ssizetype _118;
  sizetype _119;
  sizetype _120;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _12 = num_floats_10(D) + num_ints_11(D);
  num_coordinates_13 = _12 + 1;
  # DEBUG num_coordinates => num_coordinates_13
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_11(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 4, loop depth 0
;;    pred:       2
  _45 = (sizetype) num_ints_11(D);
  _43 = _45 * 4;
  _120 = (sizetype) num_floats_10(D);
  _119 = _120 * 4;
  _118 = (ssizetype) _119;
  _117 = _118 + 4;
  _116 = (sizetype) _117;
  _111 = &coordinates + _116;
  __builtin_memcpy (_111, ints_19(D), _43);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
;;                9
  # DEBUG j => 0
  if (num_tilings_29(D) > 0)
    goto <bb 10>;
  else
    goto <bb 20>;
;;    succ:       10
;;                20

;;   basic block 6, loop depth 0
;;    pred:       3
  pretmp_114 = (float) num_tilings_29(D);
  _61 = (unsigned int) num_floats_10(D);
  _32 = _61 + 4294967295;
  _33 = (sizetype) _32;
  _34 = _33 + 1;
  _35 = _34 * 4;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       8
;;                6
  # ivtmp.104_58 = PHI <ivtmp.104_59(8), 0(6)>
  # DEBUG i => NULL
  _20 = MEM[base: floats_26(D), index: ivtmp.104_58, offset: 0B];
  _21 = _20 * pretmp_114;
  _22 = __builtin_floorf (_21);
  _23 = (int) _22;
  MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B] = _23;
  # DEBUG i => D#6
  # DEBUG i => D#6
  ivtmp.104_59 = ivtmp.104_58 + 4;
  if (ivtmp.104_59 != _35)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 1
;;    pred:       7
  goto <bb 7>;
;;    succ:       7

;;   basic block 9, loop depth 0
;;    pred:       7
  _107 = (sizetype) num_floats_10(D);
  _106 = _107 * 4;
  __builtin_memset (&base, 0, _106);
  goto <bb 5>;
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       5
  pretmp_98 = (long int) memory_size_62(D);
  ivtmp.98_52 = (unsigned long) the_tiles_60(D);
  _63 = (unsigned int) num_floats_10(D);
  _24 = _63 + 4294967295;
  _25 = (sizetype) _24;
  _27 = _25 + 1;
  _28 = _27 * 4;
  goto <bb 18>;
;;    succ:       18

;;   basic block 11, loop depth 2
;;    pred:       15
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       11
;;                19
  # ivtmp.87_15 = PHI <ivtmp.87_122(11), 0(19)>
  # ivtmp.93_121 = PHI <ivtmp.93_30(11), 1(19)>
  # DEBUG i => NULL
  _37 = MEM[symbol: qstate, index: ivtmp.87_15, offset: 0B];
  _38 = MEM[symbol: base, index: ivtmp.87_15, offset: 0B];
  if (_37 >= _38)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 2
;;    pred:       12
  _39 = _37 - _38;
  _40 = _39 % num_tilings_29(D);
  _41 = _37 - _40;
  goto <bb 15>;
;;    succ:       15

;;   basic block 14, loop depth 2
;;    pred:       12
  _44 = _37 + 1;
  _46 = _38 - _37;
  _47 = _46 + -1;
  _48 = _47 % num_tilings_29(D);
  _49 = _44 + _48;
  _50 = _49 - num_tilings_29(D);
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       13
;;                14
  # cstore_51 = PHI <_41(13), _50(14)>
  MEM[symbol: coordinates, index: ivtmp.87_15, offset: 0B] = cstore_51;
  _53 = (int) ivtmp.93_121;
  _54 = _38 + _53;
  MEM[symbol: base, index: ivtmp.87_15, offset: 0B] = _54;
  # DEBUG i => D#5
  # DEBUG i => D#5
  ivtmp.87_122 = ivtmp.87_15 + 4;
  ivtmp.93_30 = ivtmp.93_121 + 2;
  if (ivtmp.87_122 != _28)
    goto <bb 11>;
  else
    goto <bb 16>;
;;    succ:       11
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
;;                18
  # num_floats_75 = PHI <num_floats_10(D)(15), 0(18)>
  coordinates[num_floats_75] = j_80;
  _65 = hash_UNH (&coordinates, num_coordinates_13, pretmp_98, 449);
  _31 = (void *) ivtmp.98_76;
  MEM[base: _31, offset: 0B] = _65;
  j_68 = j_80 + 1;
  # DEBUG j => j_68
  # DEBUG j => j_68
  ivtmp.98_56 = ivtmp.98_76 + 4;
  if (j_68 != num_tilings_29(D))
    goto <bb 17>;
  else
    goto <bb 20>;
;;    succ:       17
;;                20

;;   basic block 17, loop depth 1
;;    pred:       16
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       17
;;                10
  # j_80 = PHI <j_68(17), 0(10)>
  # ivtmp.98_76 = PHI <ivtmp.98_56(17), ivtmp.98_52(10)>
  # DEBUG j => j_80
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 19>;
  else
    goto <bb 16>;
;;    succ:       19
;;                16

;;   basic block 19, loop depth 1
;;    pred:       18
  goto <bb 12>;
;;    succ:       12

;;   basic block 20, loop depth 0
;;    pred:       5
;;                16
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}


Partition 2: size 164 align 16
	coordinates
Partition 1: size 80 align 16
	base
Partition 0: size 80 align 16
	qstate
Inserting a value copy on edge BB6->BB7 : PART.37 = 0
Inserting a value copy on edge BB19->BB12 : PART.16 = 1
Inserting a value copy on edge BB19->BB12 : PART.4 = 0
Inserting a partition copy on edge BB15->BB16 :PART.44 = PART.0
Inserting a value copy on edge BB18->BB16 : PART.44 = 0
Inserting a value copy on edge BB10->BB18 : PART.43 = 0

;; Generating RTL for gimple basic block 2

;; num_coordinates_13 = _12 + 1;

(insn 42 41 43 (parallel [
            (set (reg:SI 138 [ D.26001 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (reg/v:SI 137 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:42 -1
     (nil))

(insn 43 42 0 (parallel [
            (set (reg/v:SI 84 [ num_coordinates ])
                (plus:SI (reg:SI 138 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:42 -1
     (nil))

;; # DEBUG num_coordinates => num_coordinates_13

(debug_insn 44 43 0 (var_location:SI num_coordinates (const_int 0 [0])) tiles.cpp:42 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 45 44 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:44 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 46 45 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_ints_11(D) > 0)

(insn 47 46 48 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 137 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:44 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:44 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil)))

;; Generating RTL for gimple basic block 3

;; # DEBUG i => 0

(debug_insn 50 49 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_10(D) > 0)

(insn 51 50 52 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 135 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:47 -1
     (nil))

(jump_insn 52 51 55 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:47 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

(note 55 52 53 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 53 55 54 22 (set (pc)
        (label_ref 0)) tiles.cpp:47 -1
     (nil))

(barrier 54 53 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 56 54 57 18 "" [0 uses])

(note 57 56 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memcpy (_111, ints_19(D), _43);

(insn 58 57 59 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))

(insn 59 58 60 (set (reg:DI 140 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 135 [ num_floats ]))) tiles.cpp:44 -1
     (nil))

(insn 60 59 61 (parallel [
            (set (reg:DI 141 [ D.26004 ])
                (ashift:DI (reg:DI 140 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))

(insn 61 60 62 (parallel [
            (set (reg:DI 142 [ D.26008 ])
                (plus:DI (reg:DI 141 [ D.26004 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))

(insn 62 61 63 (parallel [
            (set (reg:DI 143 [ D.26007 ])
                (plus:DI (reg:DI 139)
                    (reg:DI 142 [ D.26008 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))

(insn 63 62 64 (set (reg:DI 144 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 137 [ num_ints ]))) tiles.cpp:44 -1
     (nil))

(insn 64 63 65 (parallel [
            (set (reg:DI 145 [ D.26004 ])
                (ashift:DI (reg:DI 144 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))

(insn 65 64 66 (set (reg:DI 146)
        (reg:DI 143 [ D.26007 ])) -1
     (nil))

(insn 66 65 67 (set (reg:DI 147)
        (reg/v/f:DI 136 [ ints ])) -1
     (nil))

(insn 67 66 68 (set (reg:DI 148)
        (reg:DI 145 [ D.26004 ])) -1
     (nil))

(insn 68 67 69 (set (reg:DI 1 dx)
        (reg:DI 148)) -1
     (nil))

(insn 69 68 70 (set (reg:DI 4 si)
        (reg:DI 147)) -1
     (nil))

(insn 70 69 71 (set (reg:DI 5 di)
        (reg:DI 146)) -1
     (nil))

(call_insn 71 70 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))

(insn 72 71 73 (set (reg:DI 149)
        (reg:DI 0 ax)) -1
     (nil))

(insn 73 72 0 (set (reg:DI 150)
        (reg:DI 149)) -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 77 76 78 20 "" [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => 0

(debug_insn 79 78 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; if (num_tilings_29(D) > 0)

(insn 80 79 81 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 132 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:53 -1
     (nil))

(jump_insn 81 80 84 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:53 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

(note 84 81 82 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn 82 84 83 23 (set (pc)
        (label_ref 0)) tiles.cpp:53 -1
     (nil))

(barrier 83 82 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 85 83 86 19 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; _114 = (float) num_tilings_29(D);

(insn 87 86 0 (set (reg:SF 125 [ D.26002 ])
        (float:SF (reg/v:SI 132 [ num_tilings ]))) -1
     (nil))

;; _35 = _34 * 4;

(insn 88 87 89 (parallel [
            (set (reg:SI 151 [ D.26003 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 89 88 90 (set (reg:DI 152 [ D.26004 ])
        (zero_extend:DI (reg:SI 151 [ D.26003 ]))) -1
     (nil))

(insn 90 89 91 (parallel [
            (set (reg:DI 153 [ D.26004 ])
                (plus:DI (reg:DI 152 [ D.26004 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 91 90 0 (parallel [
            (set (reg:DI 99 [ D.26004 ])
                (ashift:DI (reg:DI 153 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 7

;; # DEBUG i => NULL

(debug_insn 93 92 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _22 = __builtin_floorf (_21);

(insn 94 93 95 (set (reg:SF 154 [ D.26002 ])
        (mult:SF (reg:SF 125 [ D.26002 ])
            (mem:SF (plus:DI (reg/v/f:DI 134 [ floats ])
                    (reg:DI 115 [ ivtmp.104 ])) [0 MEM[base: floats_26(D), index: ivtmp.104_58, offset: 0B]+0 S4 A32]))) tiles.cpp:48 -1
     (nil))

(insn 95 94 96 (set (reg:SF 21 xmm0)
        (reg:SF 154 [ D.26002 ])) tiles.cpp:48 -1
     (nil))

(call_insn/u 96 95 97 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:48 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 97 96 0 (set (reg:SF 88 [ D.26002 ])
        (reg:SF 21 xmm0)) tiles.cpp:48 -1
     (nil))

;; MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B] = _23;

(insn 98 97 99 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:48 -1
     (nil))

(insn 99 98 100 (set (reg:SI 156)
        (fix:SI (reg:SF 88 [ D.26002 ]))) tiles.cpp:48 -1
     (nil))

(insn 100 99 0 (set (mem:SI (plus:DI (reg:DI 115 [ ivtmp.104 ])
                (reg:DI 155)) [0 MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B]+0 S4 A32])
        (reg:SI 156)) tiles.cpp:48 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 88 [ D.26002 ]))
        (nil)))

;; # DEBUG i => D#6

(debug_insn 101 100 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:47 -1
     (nil))
;; # DEBUG i => D#6

(debug_insn 102 101 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.104_59 = ivtmp.104_58 + 4;

(insn 103 102 0 (parallel [
            (set (reg:DI 115 [ ivtmp.104 ])
                (plus:DI (reg:DI 115 [ ivtmp.104 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.104_59 != _35)

(insn 104 103 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ ivtmp.104 ])
            (reg:DI 99 [ D.26004 ]))) tiles.cpp:47 -1
     (nil))

(jump_insn 105 104 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:47 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; 

(code_label 110 109 111 24 "" [0 uses])

(note 111 110 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memset (&base, 0, _106);

(insn 112 111 113 (set (reg:DI 157 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 135 [ num_floats ]))) tiles.cpp:49 -1
     (nil))

(insn 113 112 114 (parallel [
            (set (reg:DI 158 [ D.26004 ])
                (ashift:DI (reg:DI 157 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:49 -1
     (nil))

(insn 114 113 115 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 115 114 116 (set (reg:DI 160)
        (reg:DI 159)) -1
     (nil))

(insn 116 115 117 (set (reg:DI 161)
        (reg:DI 158 [ D.26004 ])) -1
     (nil))

(insn 117 116 118 (set (reg:DI 1 dx)
        (reg:DI 161)) -1
     (nil))

(insn 118 117 119 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))

(insn 119 118 120 (set (reg:DI 5 di)
        (reg:DI 160)) -1
     (nil))

(call_insn 120 119 121 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 121 120 122 (set (reg:DI 162)
        (reg:DI 0 ax)) -1
     (nil))

(insn 122 121 0 (set (reg:DI 163)
        (reg:DI 162)) -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 125 124 126 22 "" [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; _98 = (long int) memory_size_62(D);

(insn 127 126 0 (set (reg:DI 121 [ D.26006 ])
        (sign_extend:DI (reg/v:SI 133 [ memory_size ]))) -1
     (nil))

;; ivtmp.98_52 = (unsigned long) the_tiles_60(D);

(insn 128 127 0 (set (reg:DI 114 [ ivtmp.98 ])
        (reg/v/f:DI 131 [ the_tiles ])) -1
     (nil))

;; _28 = _27 * 4;

(insn 129 128 130 (parallel [
            (set (reg:SI 164 [ D.26003 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 130 129 131 (set (reg:DI 165 [ D.26004 ])
        (zero_extend:DI (reg:SI 164 [ D.26003 ]))) -1
     (nil))

(insn 131 130 132 (parallel [
            (set (reg:DI 166 [ D.26004 ])
                (plus:DI (reg:DI 165 [ D.26004 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 132 131 0 (parallel [
            (set (reg:DI 93 [ D.26004 ])
                (ashift:DI (reg:DI 166 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; # DEBUG i => NULL

(debug_insn 137 136 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _37 = MEM[symbol: qstate, index: ivtmp.87_15, offset: 0B];

(insn 138 137 139 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:59 -1
     (nil))

(insn 139 138 0 (set (reg:SI 100 [ D.26001 ])
        (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 167)) [0 MEM[symbol: qstate, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 -1
     (nil))

;; _38 = MEM[symbol: base, index: ivtmp.87_15, offset: 0B];

(insn 140 139 141 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:59 -1
     (nil))

(insn 141 140 0 (set (reg:SI 101 [ D.26001 ])
        (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 168)) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 -1
     (nil))

;; if (_37 >= _38)

(insn 142 141 143 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 100 [ D.26001 ])
            (reg:SI 101 [ D.26001 ]))) tiles.cpp:59 -1
     (nil))

(jump_insn 143 142 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:59 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 13

;; _41 = _37 - _40;

(insn 145 144 146 (parallel [
            (set (reg:SI 169 [ D.26001 ])
                (minus:SI (reg:SI 100 [ D.26001 ])
                    (reg:SI 101 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 -1
     (nil))

(insn 146 145 147 (parallel [
            (set (reg:SI 172)
                (div:SI (reg:SI 169 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (set (reg:SI 171 [ D.26001 ])
                (mod:SI (reg:SI 169 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 -1
     (nil))

(insn 147 146 0 (parallel [
            (set (reg:SI 104 [ D.26001 ])
                (minus:SI (reg:SI 100 [ D.26001 ])
                    (reg:SI 171 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 150 149 151 27 "" [0 uses])

(note 151 150 0 NOTE_INSN_BASIC_BLOCK)

;; _50 = _49 - num_tilings_29(D);

(insn 152 151 153 (parallel [
            (set (reg:SI 173 [ D.26001 ])
                (plus:SI (reg:SI 100 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))

(insn 153 152 154 (parallel [
            (set (reg:SI 174 [ D.26001 ])
                (minus:SI (reg:SI 101 [ D.26001 ])
                    (reg:SI 100 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))

(insn 154 153 155 (parallel [
            (set (reg:SI 175 [ D.26001 ])
                (plus:SI (reg:SI 174 [ D.26001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))

(insn 155 154 156 (parallel [
            (set (reg:SI 178)
                (div:SI (reg:SI 175 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (set (reg:SI 177 [ D.26001 ])
                (mod:SI (reg:SI 175 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))

(insn 156 155 157 (parallel [
            (set (reg:SI 179 [ D.26001 ])
                (plus:SI (reg:SI 173 [ D.26001 ])
                    (reg:SI 177 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))

(insn 157 156 0 (parallel [
            (set (reg:SI 104 [ D.26001 ])
                (minus:SI (reg:SI 179 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 158 157 159 28 "" [0 uses])

(note 159 158 0 NOTE_INSN_BASIC_BLOCK)

;; MEM[symbol: coordinates, index: ivtmp.87_15, offset: 0B] = _51;

(insn 160 159 161 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 161 160 0 (set (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 180)) [0 MEM[symbol: coordinates, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 104 [ D.26001 ])) -1
     (nil))

;; MEM[symbol: base, index: ivtmp.87_15, offset: 0B] = _54;

(insn 162 161 163 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:65 -1
     (nil))

(insn 163 162 164 (parallel [
            (set (reg:SI 182)
                (plus:SI (reg:SI 101 [ D.26001 ])
                    (reg:SI 94 [ ivtmp.93 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:65 -1
     (nil))

(insn 164 163 0 (set (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 181)) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 182)) tiles.cpp:65 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 101 [ D.26001 ])
            (reg:SI 94 [ ivtmp.93 ]))
        (nil)))

;; # DEBUG i => D#5

(debug_insn 165 164 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:56 -1
     (nil))
;; # DEBUG i => D#5

(debug_insn 166 165 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.87_122 = ivtmp.87_15 + 4;

(insn 167 166 0 (parallel [
            (set (reg:DI 85 [ ivtmp.87 ])
                (plus:DI (reg:DI 85 [ ivtmp.87 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; ivtmp.93_30 = ivtmp.93_121 + 2;

(insn 168 167 0 (parallel [
            (set (reg:SI 94 [ ivtmp.93 ])
                (plus:SI (reg:SI 94 [ ivtmp.93 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.87_122 != _28)

(insn 170 168 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 85 [ ivtmp.87 ])
            (reg:DI 93 [ D.26004 ]))) tiles.cpp:56 -1
     (nil))

(jump_insn 171 170 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) tiles.cpp:56 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

;; Generating RTL for gimple basic block 16

;; coordinates[num_floats_75] = j_80;

(insn 173 172 174 (set (reg:DI 183)
        (sign_extend:DI (reg/v:SI 120 [ num_floats ]))) tiles.cpp:68 -1
     (nil))

(insn 174 173 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 183)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 119 [ j ])) tiles.cpp:68 -1
     (nil))

;; _65 = hash_UNH (&coordinates, num_coordinates_13, _98, 449);

(insn 175 174 176 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:70 -1
     (nil))

(insn 176 175 177 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:70 -1
     (nil))

(insn 177 176 178 (set (reg:DI 1 dx)
        (reg:DI 121 [ D.26006 ])) tiles.cpp:70 -1
     (nil))

(insn 178 177 179 (set (reg:SI 4 si)
        (reg/v:SI 84 [ num_coordinates ])) tiles.cpp:70 -1
     (nil))

(insn 179 178 180 (set (reg:DI 5 di)
        (reg:DI 184)) tiles.cpp:70 -1
     (nil))

(call_insn 180 179 181 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:70 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))

(insn 181 180 0 (set (reg:SI 118 [ D.26001 ])
        (reg:SI 0 ax)) tiles.cpp:70 -1
     (nil))

;; MEM[base: _31, offset: 0B] = _65;

(insn 182 181 0 (set (mem:SI (reg:DI 114 [ ivtmp.98 ]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 118 [ D.26001 ])) tiles.cpp:70 -1
     (nil))

;; j_68 = j_80 + 1;

(insn 183 182 0 (parallel [
            (set (reg/v:SI 119 [ j ])
                (plus:SI (reg/v:SI 119 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:53 -1
     (nil))

;; # DEBUG j => j_68

(debug_insn 184 183 0 (var_location:SI j (const_int 0 [0])) tiles.cpp:53 -1
     (nil))
;; # DEBUG j => j_68

(debug_insn 185 184 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; ivtmp.98_56 = ivtmp.98_76 + 4;

(insn 186 185 0 (parallel [
            (set (reg:DI 114 [ ivtmp.98 ])
                (plus:DI (reg:DI 114 [ ivtmp.98 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (j_68 != num_tilings_29(D))

(insn 187 186 188 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 119 [ j ])
            (reg/v:SI 132 [ num_tilings ]))) tiles.cpp:53 -1
     (nil))

(jump_insn 188 187 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:53 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; 

(code_label 190 189 191 26 "" [0 uses])

(note 191 190 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => j_80

(debug_insn 192 191 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => 0

(debug_insn 193 192 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_10(D) > 0)

(insn 195 193 196 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 135 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:56 -1
     (nil))

(jump_insn 196 195 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) tiles.cpp:56 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; 

(code_label 201 200 202 23 "" [0 uses])

(note 202 201 0 NOTE_INSN_BASIC_BLOCK)

;; qstate ={v} {CLOBBER};

(nil)

;; base ={v} {CLOBBER};

(nil)

;; coordinates ={v} {CLOBBER};

(nil)
Edge 18->16 redirected to 26


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 7 failed.
Forwarding edge 7->8 to 26 failed.
Redirecting jump 82 from 25 to 26.
Edge 21->25 redirected to 26
deleting block 25


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 7 failed.
Forwarding edge 7->8 to 26 failed.


;;
;; Full RTL generated for this function:
;;
(note 25 0 40 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 40 25 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 26 40 27 2 (set (reg/v/f:DI 131 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:37 -1
     (nil))
(insn 27 26 28 2 (set (reg/v:SI 132 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:37 -1
     (nil))
(insn 28 27 29 2 (set (reg/v:SI 133 [ memory_size ])
        (reg:SI 1 dx [ memory_size ])) tiles.cpp:37 -1
     (nil))
(insn 29 28 30 2 (set (reg/v/f:DI 134 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:37 -1
     (nil))
(insn 30 29 31 2 (set (reg/v:SI 135 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:37 -1
     (nil))
(insn 31 30 32 2 (set (reg/v/f:DI 136 [ ints ])
        (reg:DI 38 r9 [ ints ])) tiles.cpp:37 -1
     (nil))
(insn 32 31 33 2 (set (reg/v:SI 137 [ num_ints ])
        (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 num_ints+0 S4 A64])) tiles.cpp:37 -1
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 num_ints+0 S4 A64])
        (nil)))
(note 33 32 42 2 NOTE_INSN_FUNCTION_BEG)
(insn 42 33 43 2 (parallel [
            (set (reg:SI 138 [ D.26001 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (reg/v:SI 137 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:42 -1
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg/v:SI 84 [ num_coordinates ])
                (plus:SI (reg:SI 138 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:42 -1
     (nil))
(debug_insn 44 43 45 2 (var_location:SI num_coordinates (reg/v:SI 84 [ num_coordinates ])) tiles.cpp:42 -1
     (nil))
(debug_insn 45 44 46 2 (var_location:SI i (const_int 0 [0])) tiles.cpp:44 -1
     (nil))
(debug_insn 46 45 47 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 47 46 48 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 137 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:44 -1
     (nil))
(jump_insn 48 47 74 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) tiles.cpp:44 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 56)
;;  succ:       6 [97.6%] 
;;              4 [2.4%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              6 [100.0%] 
(code_label 74 48 49 4 21 "" [1 uses])
(note 49 74 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 50 49 51 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 51 50 52 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 135 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:47 -1
     (nil))
(jump_insn 52 51 55 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) tiles.cpp:47 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 85)
;;  succ:       9 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [4.8%]  (FALLTHRU)
(note 55 52 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 53 55 54 5 (set (pc)
        (label_ref 77)) tiles.cpp:47 -1
     (nil)
 -> 77)
;;  succ:       7 [100.0%] 

(barrier 54 53 56)
;; basic block 6, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [97.6%] 
(code_label 56 54 57 6 18 "" [1 uses])
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 140 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 135 [ num_floats ]))) tiles.cpp:44 -1
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg:DI 141 [ D.26004 ])
                (ashift:DI (reg:DI 140 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))
(insn 61 60 62 6 (parallel [
            (set (reg:DI 142 [ D.26008 ])
                (plus:DI (reg:DI 141 [ D.26004 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg:DI 143 [ D.26007 ])
                (plus:DI (reg:DI 139)
                    (reg:DI 142 [ D.26008 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))
(insn 63 62 64 6 (set (reg:DI 144 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 137 [ num_ints ]))) tiles.cpp:44 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 145 [ D.26004 ])
                (ashift:DI (reg:DI 144 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 -1
     (nil))
(insn 65 64 66 6 (set (reg:DI 146)
        (reg:DI 143 [ D.26007 ])) -1
     (nil))
(insn 66 65 67 6 (set (reg:DI 147)
        (reg/v/f:DI 136 [ ints ])) -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 148)
        (reg:DI 145 [ D.26004 ])) -1
     (nil))
(insn 68 67 69 6 (set (reg:DI 1 dx)
        (reg:DI 148)) -1
     (nil))
(insn 69 68 70 6 (set (reg:DI 4 si)
        (reg:DI 147)) -1
     (nil))
(insn 70 69 71 6 (set (reg:DI 5 di)
        (reg:DI 146)) -1
     (nil))
(call_insn 71 70 72 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 72 71 73 6 (set (reg:DI 149)
        (reg:DI 0 ax)) -1
     (nil))
(insn 73 72 75 6 (set (reg:DI 150)
        (reg:DI 149)) -1
     (nil))
(jump_insn 75 73 76 6 (set (pc)
        (label_ref 74)) -1
     (nil)
 -> 74)
;;  succ:       4 [100.0%] 

(barrier 76 75 77)
;; basic block 7, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0%] 
;;              5 [100.0%] 
(code_label 77 76 78 7 20 "" [2 uses])
(note 78 77 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 79 78 80 7 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 80 79 81 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 132 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:53 -1
     (nil))
(jump_insn 81 80 84 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) tiles.cpp:53 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 125)
;;  succ:       13 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
(note 84 81 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 82 84 83 8 (set (pc)
        (label_ref:DI 203)) tiles.cpp:53 650 {jump}
     (nil)
 -> 203)
;;  succ:       26 [100.0%] 

(barrier 83 82 85)
;; basic block 9, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [95.2%] 
(code_label 85 83 86 9 19 "" [1 uses])
(note 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 9 (set (reg:SF 125 [ D.26002 ])
        (float:SF (reg/v:SI 132 [ num_tilings ]))) -1
     (nil))
(insn 88 87 89 9 (parallel [
            (set (reg:SI 151 [ D.26003 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 89 88 90 9 (set (reg:DI 152 [ D.26004 ])
        (zero_extend:DI (reg:SI 151 [ D.26003 ]))) -1
     (nil))
(insn 90 89 91 9 (parallel [
            (set (reg:DI 153 [ D.26004 ])
                (plus:DI (reg:DI 152 [ D.26004 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 91 90 34 9 (parallel [
            (set (reg:DI 99 [ D.26004 ])
                (ashift:DI (reg:DI 153 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 34 91 107 9 (set (reg:DI 115 [ ivtmp.104 ])
        (const_int 0 [0])) tiles.cpp:47 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 942, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [100.0%]  (DFS_BACK)
;;              9 [100.0%]  (FALLTHRU)
(code_label 107 34 92 10 25 "" [1 uses])
(note 92 107 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 93 92 94 10 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 94 93 95 10 (set (reg:SF 154 [ D.26002 ])
        (mult:SF (reg:SF 125 [ D.26002 ])
            (mem:SF (plus:DI (reg/v/f:DI 134 [ floats ])
                    (reg:DI 115 [ ivtmp.104 ])) [0 MEM[base: floats_26(D), index: ivtmp.104_58, offset: 0B]+0 S4 A32]))) tiles.cpp:48 -1
     (nil))
(insn 95 94 96 10 (set (reg:SF 21 xmm0)
        (reg:SF 154 [ D.26002 ])) tiles.cpp:48 -1
     (nil))
(call_insn/u 96 95 97 10 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:48 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 97 96 98 10 (set (reg:SF 88 [ D.26002 ])
        (reg:SF 21 xmm0)) tiles.cpp:48 -1
     (nil))
(insn 98 97 99 10 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:48 -1
     (nil))
(insn 99 98 100 10 (set (reg:SI 156)
        (fix:SI (reg:SF 88 [ D.26002 ]))) tiles.cpp:48 -1
     (nil))
(insn 100 99 101 10 (set (mem:SI (plus:DI (reg:DI 115 [ ivtmp.104 ])
                (reg:DI 155)) [0 MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B]+0 S4 A32])
        (reg:SI 156)) tiles.cpp:48 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 88 [ D.26002 ]))
        (nil)))
(debug_insn 101 100 102 10 (var_location:SI i (debug_expr:SI D#6)) tiles.cpp:47 -1
     (nil))
(debug_insn 102 101 103 10 (var_location:SI i (debug_expr:SI D#6)) -1
     (nil))
(insn 103 102 104 10 (parallel [
            (set (reg:DI 115 [ ivtmp.104 ])
                (plus:DI (reg:DI 115 [ ivtmp.104 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 104 103 105 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ ivtmp.104 ])
            (reg:DI 99 [ D.26004 ]))) tiles.cpp:47 -1
     (nil))
(jump_insn 105 104 106 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) tiles.cpp:47 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 110)
;;  succ:       11 [95.2%]  (FALLTHRU)
;;              12 [4.8%] 

;; basic block 11, loop depth 1, count 0, freq 897, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [95.2%]  (FALLTHRU)
(note 106 105 108 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 108 106 109 11 (set (pc)
        (label_ref 107)) tiles.cpp:47 -1
     (nil)
 -> 107)
;;  succ:       10 [100.0%]  (DFS_BACK)

(barrier 109 108 110)
;; basic block 12, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [4.8%] 
(code_label 110 109 111 12 24 "" [1 uses])
(note 111 110 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 12 (set (reg:DI 157 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 135 [ num_floats ]))) tiles.cpp:49 -1
     (nil))
(insn 113 112 114 12 (parallel [
            (set (reg:DI 158 [ D.26004 ])
                (ashift:DI (reg:DI 157 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:49 -1
     (nil))
(insn 114 113 115 12 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 115 114 116 12 (set (reg:DI 160)
        (reg:DI 159)) -1
     (nil))
(insn 116 115 117 12 (set (reg:DI 161)
        (reg:DI 158 [ D.26004 ])) -1
     (nil))
(insn 117 116 118 12 (set (reg:DI 1 dx)
        (reg:DI 161)) -1
     (nil))
(insn 118 117 119 12 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))
(insn 119 118 120 12 (set (reg:DI 5 di)
        (reg:DI 160)) -1
     (nil))
(call_insn 120 119 121 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 121 120 122 12 (set (reg:DI 162)
        (reg:DI 0 ax)) -1
     (nil))
(insn 122 121 123 12 (set (reg:DI 163)
        (reg:DI 162)) -1
     (nil))
(jump_insn 123 122 124 12 (set (pc)
        (label_ref 77)) -1
     (nil)
 -> 77)
;;  succ:       7 [100.0%] 

(barrier 124 123 125)
;; basic block 13, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [91.0%] 
(code_label 125 124 126 13 22 "" [1 uses])
(note 126 125 127 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 13 (set (reg:DI 121 [ D.26006 ])
        (sign_extend:DI (reg/v:SI 133 [ memory_size ]))) -1
     (nil))
(insn 128 127 129 13 (set (reg:DI 114 [ ivtmp.98 ])
        (reg/v/f:DI 131 [ the_tiles ])) -1
     (nil))
(insn 129 128 130 13 (parallel [
            (set (reg:SI 164 [ D.26003 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 130 129 131 13 (set (reg:DI 165 [ D.26004 ])
        (zero_extend:DI (reg:SI 164 [ D.26003 ]))) -1
     (nil))
(insn 131 130 132 13 (parallel [
            (set (reg:DI 166 [ D.26004 ])
                (plus:DI (reg:DI 165 [ D.26004 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 132 131 39 13 (parallel [
            (set (reg:DI 93 [ D.26004 ])
                (ashift:DI (reg:DI 166 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 39 132 133 13 (set (reg/v:SI 119 [ j ])
        (const_int 0 [0])) tiles.cpp:53 -1
     (nil))
(jump_insn 133 39 134 13 (set (pc)
        (label_ref 190)) -1
     (nil)
 -> 190)
;;  succ:       23 [100.0%] 

(barrier 134 133 169)
;; basic block 14, loop depth 2, count 0, freq 9071, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [95.2%] 
(code_label 169 134 135 14 29 "" [1 uses])
(note 135 169 198 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;  succ:       15 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 15, loop depth 2, count 0, freq 9524, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0%]  (FALLTHRU,DFS_BACK)
;;              24 [100.0%] 
(code_label 198 135 136 15 31 "" [1 uses])
(note 136 198 137 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 137 136 138 15 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 138 137 139 15 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:59 -1
     (nil))
(insn 139 138 140 15 (set (reg:SI 100 [ D.26001 ])
        (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 167)) [0 MEM[symbol: qstate, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 -1
     (nil))
(insn 140 139 141 15 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:59 -1
     (nil))
(insn 141 140 142 15 (set (reg:SI 101 [ D.26001 ])
        (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 168)) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 -1
     (nil))
(insn 142 141 143 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 100 [ D.26001 ])
            (reg:SI 101 [ D.26001 ]))) tiles.cpp:59 -1
     (nil))
(jump_insn 143 142 144 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) tiles.cpp:59 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 150)
;;  succ:       16 [50.0%]  (FALLTHRU)
;;              17 [50.0%] 

;; basic block 16, loop depth 2, count 0, freq 4762, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [50.0%]  (FALLTHRU)
(note 144 143 145 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 16 (parallel [
            (set (reg:SI 169 [ D.26001 ])
                (minus:SI (reg:SI 100 [ D.26001 ])
                    (reg:SI 101 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 -1
     (nil))
(insn 146 145 147 16 (parallel [
            (set (reg:SI 172)
                (div:SI (reg:SI 169 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (set (reg:SI 171 [ D.26001 ])
                (mod:SI (reg:SI 169 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 -1
     (nil))
(insn 147 146 148 16 (parallel [
            (set (reg:SI 104 [ D.26001 ])
                (minus:SI (reg:SI 100 [ D.26001 ])
                    (reg:SI 171 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 -1
     (nil))
(jump_insn 148 147 149 16 (set (pc)
        (label_ref 158)) -1
     (nil)
 -> 158)
;;  succ:       18 [100.0%] 

(barrier 149 148 150)
;; basic block 17, loop depth 2, count 0, freq 4762, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [50.0%] 
(code_label 150 149 151 17 27 "" [1 uses])
(note 151 150 152 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 17 (parallel [
            (set (reg:SI 173 [ D.26001 ])
                (plus:SI (reg:SI 100 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))
(insn 153 152 154 17 (parallel [
            (set (reg:SI 174 [ D.26001 ])
                (minus:SI (reg:SI 101 [ D.26001 ])
                    (reg:SI 100 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))
(insn 154 153 155 17 (parallel [
            (set (reg:SI 175 [ D.26001 ])
                (plus:SI (reg:SI 174 [ D.26001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))
(insn 155 154 156 17 (parallel [
            (set (reg:SI 178)
                (div:SI (reg:SI 175 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (set (reg:SI 177 [ D.26001 ])
                (mod:SI (reg:SI 175 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))
(insn 156 155 157 17 (parallel [
            (set (reg:SI 179 [ D.26001 ])
                (plus:SI (reg:SI 173 [ D.26001 ])
                    (reg:SI 177 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))
(insn 157 156 158 17 (parallel [
            (set (reg:SI 104 [ D.26001 ])
                (minus:SI (reg:SI 179 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 -1
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)

;; basic block 18, loop depth 2, count 0, freq 9524, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [100.0%] 
;;              17 [100.0%]  (FALLTHRU)
(code_label 158 157 159 18 28 "" [1 uses])
(note 159 158 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 18 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 161 160 162 18 (set (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 180)) [0 MEM[symbol: coordinates, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 104 [ D.26001 ])) -1
     (nil))
(insn 162 161 163 18 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:65 -1
     (nil))
(insn 163 162 164 18 (parallel [
            (set (reg:SI 182)
                (plus:SI (reg:SI 101 [ D.26001 ])
                    (reg:SI 94 [ ivtmp.93 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:65 -1
     (nil))
(insn 164 163 165 18 (set (mem:SI (plus:DI (reg:DI 85 [ ivtmp.87 ])
                (reg:DI 181)) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 182)) tiles.cpp:65 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 101 [ D.26001 ])
            (reg:SI 94 [ ivtmp.93 ]))
        (nil)))
(debug_insn 165 164 166 18 (var_location:SI i (debug_expr:SI D#5)) tiles.cpp:56 -1
     (nil))
(debug_insn 166 165 167 18 (var_location:SI i (debug_expr:SI D#5)) -1
     (nil))
(insn 167 166 168 18 (parallel [
            (set (reg:DI 85 [ ivtmp.87 ])
                (plus:DI (reg:DI 85 [ ivtmp.87 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 168 167 170 18 (parallel [
            (set (reg:SI 94 [ ivtmp.93 ])
                (plus:SI (reg:SI 94 [ ivtmp.93 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 170 168 171 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 85 [ ivtmp.87 ])
            (reg:DI 93 [ D.26004 ]))) tiles.cpp:56 -1
     (nil))
(jump_insn 171 170 205 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) tiles.cpp:56 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 169)
;;  succ:       14 [95.2%] 
;;              19 [4.8%]  (FALLTHRU)

;; basic block 19, loop depth 1, count 0, freq 453, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 [4.8%]  (FALLTHRU)
(note 205 171 37 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 37 205 206 19 (set (reg/v:SI 120 [ num_floats ])
        (reg/v:SI 135 [ num_floats ])) -1
     (nil))
(jump_insn 206 37 207 19 (set (pc)
        (label_ref 194)) -1
     (nil)
 -> 194)
;;  succ:       21 [100.0%] 

(barrier 207 206 209)
;; basic block 20, loop depth 1, count 0, freq 23, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 [4.8%] 
(code_label 209 207 208 20 32 "" [1 uses])
(note 208 209 38 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 38 208 194 20 (set (reg/v:SI 120 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:56 -1
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)

;; basic block 21, loop depth 1, count 0, freq 476, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              19 [100.0%] 
(code_label 194 38 172 21 30 "" [1 uses])
(note 172 194 173 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 21 (set (reg:DI 183)
        (sign_extend:DI (reg/v:SI 120 [ num_floats ]))) tiles.cpp:68 -1
     (nil))
(insn 174 173 175 21 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 183)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 119 [ j ])) tiles.cpp:68 -1
     (nil))
(insn 175 174 176 21 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:70 -1
     (nil))
(insn 176 175 177 21 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:70 -1
     (nil))
(insn 177 176 178 21 (set (reg:DI 1 dx)
        (reg:DI 121 [ D.26006 ])) tiles.cpp:70 -1
     (nil))
(insn 178 177 179 21 (set (reg:SI 4 si)
        (reg/v:SI 84 [ num_coordinates ])) tiles.cpp:70 -1
     (nil))
(insn 179 178 180 21 (set (reg:DI 5 di)
        (reg:DI 184)) tiles.cpp:70 -1
     (nil))
(call_insn 180 179 181 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:70 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 181 180 182 21 (set (reg:SI 118 [ D.26001 ])
        (reg:SI 0 ax)) tiles.cpp:70 -1
     (nil))
(insn 182 181 183 21 (set (mem:SI (reg:DI 114 [ ivtmp.98 ]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 118 [ D.26001 ])) tiles.cpp:70 -1
     (nil))
(insn 183 182 184 21 (parallel [
            (set (reg/v:SI 119 [ j ])
                (plus:SI (reg/v:SI 119 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:53 -1
     (nil))
(debug_insn 184 183 185 21 (var_location:SI j (reg/v:SI 119 [ j ])) tiles.cpp:53 -1
     (nil))
(debug_insn 185 184 186 21 (var_location:SI j (reg/v:SI 119 [ j ])) -1
     (nil))
(insn 186 185 187 21 (parallel [
            (set (reg:DI 114 [ ivtmp.98 ])
                (plus:DI (reg:DI 114 [ ivtmp.98 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 187 186 188 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 119 [ j ])
            (reg/v:SI 132 [ num_tilings ]))) tiles.cpp:53 -1
     (nil))
(jump_insn 188 187 189 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 203)
            (pc))) tiles.cpp:53 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 203)
;;  succ:       22 [91.0%]  (FALLTHRU)
;;              26 [9.0%] 

;; basic block 22, loop depth 1, count 0, freq 433, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 [91.0%]  (FALLTHRU)
(note 189 188 190 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;;  succ:       23 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 23, loop depth 1, count 0, freq 476, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU,DFS_BACK)
;;              13 [100.0%] 
(code_label 190 189 191 23 26 "" [1 uses])
(note 191 190 192 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 192 191 193 23 (var_location:SI j (reg/v:SI 119 [ j ])) -1
     (nil))
(debug_insn 193 192 195 23 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 195 193 196 23 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 135 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:56 -1
     (nil))
(jump_insn 196 195 197 23 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 209)
            (pc))) tiles.cpp:56 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 209)
;;  succ:       24 [95.2%]  (FALLTHRU)
;;              20 [4.8%] 

;; basic block 24, loop depth 1, count 0, freq 453, maybe hot
;;  prev block 23, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 [95.2%]  (FALLTHRU)
(note 197 196 35 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 35 197 36 24 (set (reg:SI 94 [ ivtmp.93 ])
        (const_int 1 [0x1])) tiles.cpp:56 -1
     (nil))
(insn 36 35 199 24 (set (reg:DI 85 [ ivtmp.87 ])
        (const_int 0 [0])) tiles.cpp:56 -1
     (nil))
(jump_insn 199 36 200 24 (set (pc)
        (label_ref 198)) tiles.cpp:56 -1
     (nil)
 -> 198)
;;  succ:       15 [100.0%] 

(barrier 200 199 203)
;; basic block 26, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 24, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 [9.0%] 
;;              8 [100.0%] 
(code_label 203 200 204 26 17 "" [2 uses])
(note 204 203 0 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function int hash(int*, int, collision_table*) (_Z4hashPiiP15collision_table, funcdef_no=1064, decl_uid=23703, cgraph_uid=308)

int hash(int*, int, collision_table*) (int * ints, int num_ints, struct collision_table * ct)
{
  unsigned long ivtmp.112;
  long int h2;
  long int ccheck;
  int j;
  long int _8;
  long int _9;
  long int _11;
  int _17;
  long int * _19;
  long unsigned int _20;
  long unsigned int _21;
  long int * _22;
  long int _23;
  long int _24;
  long int _25;
  long int _27;
  long int _28;
  int _31;
  long int _32;
  long int _33;
  int _36;
  int _37;
  int _38;
  long int _42;
  long int _44;
  long int _45;
  long int _47;
  long int * _52;
  long unsigned int _53;
  long unsigned int _54;
  long int * _55;
  long int _56;
  long int pretmp_61;
  long int pretmp_66;
  long int _73;
  unsigned long _74;
  unsigned long _75;
  long int _76;
  long int * _78;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _8 = ct_7(D)->calls;
  _9 = _8 + 1;
  ct_7(D)->calls = _9;
  _11 = ct_7(D)->m;
  j_15 = hash_UNH (ints_12(D), num_ints_13(D), _11, 449);
  # DEBUG j => j_15
  _17 = hash_UNH (ints_12(D), num_ints_13(D), 2147483647, 457);
  ccheck_18 = (long int) _17;
  # DEBUG ccheck => ccheck_18
  _19 = ct_7(D)->data;
  _20 = (long unsigned int) j_15;
  _21 = _20 * 8;
  _22 = _19 + _21;
  _23 = *_22;
  if (_23 == ccheck_18)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _24 = ct_7(D)->clearhits;
  _25 = _24 + 1;
  ct_7(D)->clearhits = _25;
  goto <bb 15>;
;;    succ:       15

;;   basic block 4, loop depth 0
;;    pred:       2
  if (_23 == -1)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _27 = ct_7(D)->clearhits;
  _28 = _27 + 1;
  ct_7(D)->clearhits = _28;
  *_22 = ccheck_18;
  goto <bb 15>;
;;    succ:       15

;;   basic block 6, loop depth 0
;;    pred:       4
  _31 = ct_7(D)->safe;
  if (_31 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _32 = ct_7(D)->collisions;
  _33 = _32 + 1;
  ct_7(D)->collisions = _33;
  goto <bb 15>;
;;    succ:       15

;;   basic block 8, loop depth 0
;;    pred:       6
  _36 = hash_UNH (ints_12(D), num_ints_13(D), 536870911, 449);
  _37 = _36 * 2;
  _38 = _37 + 1;
  h2_39 = (long int) _38;
  # DEBUG h2 => h2_39
  # DEBUG i => 0
  pretmp_66 = ct_7(D)->collisions;
  pretmp_61 = ct_7(D)->m;
  _76 = pretmp_66 + 1;
  ivtmp.112_77 = (unsigned long) _76;
  goto <bb 14>;
;;    succ:       14

;;   basic block 9, loop depth 0
;;    pred:       14
  # DEBUG __fmt => "\nTiles: Collision table out of Memory"
  __printf_chk (1, "\nTiles: Collision table out of Memory");
  exit (0);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       14
  _52 = ct_7(D)->data;
  _53 = (long unsigned int) j_48;
  _54 = _53 * 8;
  _55 = _52 + _54;
  _56 = *_55;
  if (_56 == ccheck_18)
    goto <bb 15>;
  else
    goto <bb 11>;
;;    succ:       15
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  ivtmp.112_46 = ivtmp.112_41 + 1;
  if (_56 == -1)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  # _78 = PHI <_55(11)>
  *_78 = ccheck_18;
  goto <bb 15>;
;;    succ:       15

;;   basic block 13, loop depth 1
;;    pred:       11
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       8
;;                13
  # j_1 = PHI <j_15(8), j_48(13)>
  # ivtmp.112_41 = PHI <ivtmp.112_77(8), ivtmp.112_46(13)>
  # DEBUG i => (int) ((unsigned int) ivtmp.112_41 - (unsigned int) (pretmp_66 + 1))
  # DEBUG j => j_1
  # DEBUG i => (int) (((unsigned int) ivtmp.112_41 - (unsigned int) (pretmp_66 + 1)) + 1)
  _42 = (long int) ivtmp.112_41;
  ct_7(D)->collisions = _42;
  _44 = (long int) j_1;
  _45 = _44 + h2_39;
  _47 = _45 % pretmp_61;
  j_48 = (int) _47;
  # DEBUG j => j_48
  _75 = (unsigned long) pretmp_66;
  _74 = ivtmp.112_41 - _75;
  _73 = (long int) _74;
  if (pretmp_61 < _73)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 15, loop depth 0
;;    pred:       3
;;                5
;;                7
;;                10
;;                12
  # j_2 = PHI <j_15(3), j_15(5), j_15(7), j_48(10), j_48(12)>
  # DEBUG j => j_2
  return j_2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (j_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 7 (ct_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 11 (_11 - 11 )
Partition 12 (ints_12(D) - 12 )
Partition 13 (num_ints_13(D) - 13 )
Partition 15 (j_15 - 15 )
Partition 17 (_17 - 17 )
Partition 18 (ccheck_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (h2_39 - 39 )
Partition 41 (ivtmp.112_41 - 41 )
Partition 42 (_42 - 42 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (ivtmp.112_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (j_48 - 48 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 61 (pretmp_61 - 61 )
Partition 66 (pretmp_66 - 66 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (ivtmp.112_77 - 77 )
Partition 78 (_78 - 78 )


Partition map 

Partition 0 (j_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (ct_7(D) - 7 )
Partition 3 (ints_12(D) - 12 )
Partition 4 (num_ints_13(D) - 13 )
Partition 5 (j_15 - 15 )
Partition 6 (ivtmp.112_41 - 41 )
Partition 7 (ivtmp.112_46 - 46 )
Partition 8 (j_48 - 48 )
Partition 9 (_55 - 55 )
Partition 10 (ivtmp.112_77 - 77 )
Partition 11 (_78 - 78 )


Live on entry to BB2 : ct_7(D)  ints_12(D)  num_ints_13(D)  

Live on entry to BB3 : ct_7(D)  j_15  

Live on entry to BB4 : ct_7(D)  ints_12(D)  num_ints_13(D)  j_15  

Live on entry to BB5 : ct_7(D)  j_15  

Live on entry to BB6 : ct_7(D)  ints_12(D)  num_ints_13(D)  j_15  

Live on entry to BB7 : ct_7(D)  j_15  

Live on entry to BB8 : ct_7(D)  ints_12(D)  num_ints_13(D)  j_15  

Live on entry to BB9 : 

Live on entry to BB10 : ct_7(D)  ivtmp.112_41  j_48  

Live on entry to BB11 : ct_7(D)  ivtmp.112_41  j_48  _55  

Live on entry to BB12 : j_48  

Live on entry to BB13 : ct_7(D)  ivtmp.112_46  j_48  

Live on entry to BB14 : ct_7(D)  

Live on entry to BB15 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(9455) j_1 <-> j_48
(9455) ivtmp.112_41 <-> ivtmp.112_46
(1632) j_2 <-> j_15
(664) j_2 <-> j_48
(544) j_1 <-> j_15
(544) ivtmp.112_41 <-> ivtmp.112_77
(218) _55 <-> _78

Partition map 

Partition 0 (j_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (ct_7(D) - 7 )
Partition 3 (ints_12(D) - 12 )
Partition 4 (num_ints_13(D) - 13 )
Partition 5 (j_15 - 15 )
Partition 6 (ivtmp.112_41 - 41 )
Partition 7 (ivtmp.112_46 - 46 )
Partition 8 (j_48 - 48 )
Partition 9 (_55 - 55 )
Partition 10 (ivtmp.112_77 - 77 )
Partition 11 (_78 - 78 )

Coalesce list: (1)j_1 & (48)j_48 [map: 0, 8] : Success -> 0
Coalesce list: (41)ivtmp.112_41 & (46)ivtmp.112_46 [map: 6, 7] : Success -> 6
Coalesce list: (2)j_2 & (15)j_15 [map: 1, 5] : Success -> 1
Coalesce list: (2)j_2 & (48)j_1 [map: 1, 0] : Success -> 1
Coalesce list: (1)j_2 & (15)j_2: Already Coalesced.
Coalesce list: (41)ivtmp.112_41 & (77)ivtmp.112_77 [map: 6, 10] : Success -> 6
Coalesce list: (55)_55 & (78)_78 [map: 9, 11] : Success -> 9
After Coalescing:

Partition map 

Partition 0 (j_2 - 1 2 15 48 )
Partition 1 (ct_7(D) - 7 )
Partition 2 (_8 - 8 )
Partition 3 (_9 - 9 )
Partition 4 (_11 - 11 )
Partition 5 (ints_12(D) - 12 )
Partition 6 (num_ints_13(D) - 13 )
Partition 7 (_17 - 17 )
Partition 8 (ccheck_18 - 18 )
Partition 9 (_19 - 19 )
Partition 10 (_20 - 20 )
Partition 11 (_21 - 21 )
Partition 12 (_22 - 22 )
Partition 13 (_23 - 23 )
Partition 14 (_24 - 24 )
Partition 15 (_25 - 25 )
Partition 16 (_27 - 27 )
Partition 17 (_28 - 28 )
Partition 18 (_31 - 31 )
Partition 19 (_32 - 32 )
Partition 20 (_33 - 33 )
Partition 21 (_36 - 36 )
Partition 22 (_37 - 37 )
Partition 23 (_38 - 38 )
Partition 24 (h2_39 - 39 )
Partition 25 (ivtmp.112_41 - 41 46 77 )
Partition 26 (_42 - 42 )
Partition 27 (_44 - 44 )
Partition 28 (_45 - 45 )
Partition 29 (_47 - 47 )
Partition 30 (_52 - 52 )
Partition 31 (_53 - 53 )
Partition 32 (_54 - 54 )
Partition 33 (_55 - 55 78 )
Partition 34 (_56 - 56 )
Partition 35 (pretmp_61 - 61 )
Partition 36 (pretmp_66 - 66 )
Partition 37 (_73 - 73 )
Partition 38 (_74 - 74 )
Partition 39 (_75 - 75 )
Partition 40 (_76 - 76 )


Replacing Expressions
_8 replace with --> _8 = ct_7(D)->calls;

_9 replace with --> _9 = _8 + 1;

_11 replace with --> _11 = ct_7(D)->m;

_19 replace with --> _19 = ct_7(D)->data;

_20 replace with --> _20 = (long unsigned int) j_15;

_21 replace with --> _21 = _20 * 8;

_24 replace with --> _24 = ct_7(D)->clearhits;

_25 replace with --> _25 = _24 + 1;

_27 replace with --> _27 = ct_7(D)->clearhits;

_28 replace with --> _28 = _27 + 1;

_31 replace with --> _31 = ct_7(D)->safe;

_32 replace with --> _32 = ct_7(D)->collisions;

_33 replace with --> _33 = _32 + 1;

_37 replace with --> _37 = _36 * 2;

_38 replace with --> _38 = _37 + 1;

_42 replace with --> _42 = (long int) ivtmp.112_41;

_44 replace with --> _44 = (long int) j_1;

_45 replace with --> _45 = _44 + h2_39;

_52 replace with --> _52 = ct_7(D)->data;

_53 replace with --> _53 = (long unsigned int) j_48;

_54 replace with --> _54 = _53 * 8;

_73 replace with --> _73 = (long int) _74;

_74 replace with --> _74 = ivtmp.112_41 - _75;

_75 replace with --> _75 = (unsigned long) pretmp_66;

_76 replace with --> _76 = pretmp_66 + 1;


int hash(int*, int, collision_table*) (int * ints, int num_ints, struct collision_table * ct)
{
  unsigned long ivtmp.112;
  long int h2;
  long int ccheck;
  int j;
  long int _8;
  long int _9;
  long int _11;
  int _17;
  long int * _19;
  long unsigned int _20;
  long unsigned int _21;
  long int * _22;
  long int _23;
  long int _24;
  long int _25;
  long int _27;
  long int _28;
  int _31;
  long int _32;
  long int _33;
  int _36;
  int _37;
  int _38;
  long int _42;
  long int _44;
  long int _45;
  long int _47;
  long int * _52;
  long unsigned int _53;
  long unsigned int _54;
  long int * _55;
  long int _56;
  long int pretmp_61;
  long int pretmp_66;
  long int _73;
  unsigned long _74;
  unsigned long _75;
  long int _76;
  long int * _78;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _8 = ct_7(D)->calls;
  _9 = _8 + 1;
  ct_7(D)->calls = _9;
  _11 = ct_7(D)->m;
  j_15 = hash_UNH (ints_12(D), num_ints_13(D), _11, 449);
  # DEBUG j => j_15
  _17 = hash_UNH (ints_12(D), num_ints_13(D), 2147483647, 457);
  ccheck_18 = (long int) _17;
  # DEBUG ccheck => ccheck_18
  _19 = ct_7(D)->data;
  _20 = (long unsigned int) j_15;
  _21 = _20 * 8;
  _22 = _19 + _21;
  _23 = *_22;
  if (_23 == ccheck_18)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _24 = ct_7(D)->clearhits;
  _25 = _24 + 1;
  ct_7(D)->clearhits = _25;
  goto <bb 15>;
;;    succ:       15

;;   basic block 4, loop depth 0
;;    pred:       2
  if (_23 == -1)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _27 = ct_7(D)->clearhits;
  _28 = _27 + 1;
  ct_7(D)->clearhits = _28;
  *_22 = ccheck_18;
  goto <bb 15>;
;;    succ:       15

;;   basic block 6, loop depth 0
;;    pred:       4
  _31 = ct_7(D)->safe;
  if (_31 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _32 = ct_7(D)->collisions;
  _33 = _32 + 1;
  ct_7(D)->collisions = _33;
  goto <bb 15>;
;;    succ:       15

;;   basic block 8, loop depth 0
;;    pred:       6
  _36 = hash_UNH (ints_12(D), num_ints_13(D), 536870911, 449);
  _37 = _36 * 2;
  _38 = _37 + 1;
  h2_39 = (long int) _38;
  # DEBUG h2 => h2_39
  # DEBUG i => 0
  pretmp_66 = ct_7(D)->collisions;
  pretmp_61 = ct_7(D)->m;
  _76 = pretmp_66 + 1;
  ivtmp.112_77 = (unsigned long) _76;
  goto <bb 14>;
;;    succ:       14

;;   basic block 9, loop depth 0
;;    pred:       14
  # DEBUG __fmt => "\nTiles: Collision table out of Memory"
  __printf_chk (1, "\nTiles: Collision table out of Memory");
  exit (0);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       14
  _52 = ct_7(D)->data;
  _53 = (long unsigned int) j_48;
  _54 = _53 * 8;
  _55 = _52 + _54;
  _56 = *_55;
  if (_56 == ccheck_18)
    goto <bb 15>;
  else
    goto <bb 11>;
;;    succ:       15
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  ivtmp.112_46 = ivtmp.112_41 + 1;
  if (_56 == -1)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  # _78 = PHI <_55(11)>
  *_78 = ccheck_18;
  goto <bb 15>;
;;    succ:       15

;;   basic block 13, loop depth 1
;;    pred:       11
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       8
;;                13
  # j_1 = PHI <j_15(8), j_48(13)>
  # ivtmp.112_41 = PHI <ivtmp.112_77(8), ivtmp.112_46(13)>
  # DEBUG i => (int) ((unsigned int) ivtmp.112_41 - (unsigned int) (pretmp_66 + 1))
  # DEBUG j => j_1
  # DEBUG i => (int) (((unsigned int) ivtmp.112_41 - (unsigned int) (pretmp_66 + 1)) + 1)
  _42 = (long int) ivtmp.112_41;
  ct_7(D)->collisions = _42;
  _44 = (long int) j_1;
  _45 = _44 + h2_39;
  _47 = _45 % pretmp_61;
  j_48 = (int) _47;
  # DEBUG j => j_48
  _75 = (unsigned long) pretmp_66;
  _74 = ivtmp.112_41 - _75;
  _73 = (long int) _74;
  if (pretmp_61 < _73)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 15, loop depth 0
;;    pred:       3
;;                5
;;                7
;;                10
;;                12
  # j_2 = PHI <j_15(3), j_15(5), j_15(7), j_48(10), j_48(12)>
  # DEBUG j => j_2
  return j_2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; ct_7(D)->calls = _9;

(insn 8 7 0 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:176 -1
     (nil))

;; j_15 = hash_UNH (ints_12(D), num_ints_13(D), _11, 449);

(insn 9 8 10 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:177 -1
     (nil))

(insn 10 9 11 (set (reg:DI 1 dx)
        (mem/j:DI (reg/v/f:DI 100 [ ct ]) [0 ct_7(D)->m+0 S8 A64])) tiles.cpp:177 -1
     (nil))

(insn 11 10 12 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:177 -1
     (nil))

(insn 12 11 13 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:177 -1
     (nil))

(call_insn 13 12 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:177 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))

(insn 14 13 0 (set (reg/v:SI 59 [ j ])
        (reg:SI 0 ax)) tiles.cpp:177 -1
     (nil))

;; # DEBUG j => j_15

(debug_insn 15 14 0 (var_location:SI j (const_int 0 [0])) tiles.cpp:177 -1
     (nil))
;; _17 = hash_UNH (ints_12(D), num_ints_13(D), 2147483647, 457);

(insn 16 15 17 (set (reg:SI 2 cx)
        (const_int 457 [0x1c9])) tiles.cpp:178 -1
     (nil))

(insn 17 16 18 (set (reg:DI 1 dx)
        (const_int 2147483647 [0x7fffffff])) tiles.cpp:178 -1
     (nil))

(insn 18 17 19 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:178 -1
     (nil))

(insn 19 18 20 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:178 -1
     (nil))

(call_insn 20 19 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:178 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))

(insn 21 20 0 (set (reg:SI 63 [ D.26025 ])
        (reg:SI 0 ax)) tiles.cpp:178 -1
     (nil))

;; ccheck_18 = (long int) _17;

(insn 22 21 0 (set (reg/v:DI 64 [ ccheck ])
        (sign_extend:DI (reg:SI 63 [ D.26025 ]))) tiles.cpp:178 -1
     (nil))

;; # DEBUG ccheck => ccheck_18

(debug_insn 23 22 0 (var_location:DI ccheck (const_int 0 [0])) tiles.cpp:178 -1
     (nil))
;; _22 = _19 + _21;

(insn 24 23 25 (set (reg:DI 101 [ D.26027 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) tiles.cpp:179 -1
     (nil))

(insn 25 24 26 (parallel [
            (set (reg:DI 102 [ D.26027 ])
                (ashift:DI (reg:DI 101 [ D.26027 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:179 -1
     (nil))

(insn 26 25 27 (set (reg/f:DI 103)
        (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:179 -1
     (nil))

(insn 27 26 0 (parallel [
            (set (reg/f:DI 68 [ D.26026 ])
                (plus:DI (reg:DI 102 [ D.26027 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:179 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                    (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])
            (reg:DI 102 [ D.26027 ]))
        (nil)))

;; _23 = *_22;

(insn 28 27 0 (set (reg:DI 69 [ D.26024 ])
        (mem:DI (reg/f:DI 68 [ D.26026 ]) [0 *_22+0 S8 A64])) tiles.cpp:179 -1
     (nil))

;; if (_23 == ccheck_18)

(insn 29 28 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 69 [ D.26024 ])
            (reg/v:DI 64 [ ccheck ]))) tiles.cpp:179 -1
     (nil))

(jump_insn 30 29 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:179 -1
     (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil)))

;; Generating RTL for gimple basic block 3

;; ct_7(D)->clearhits = _25;

(insn 32 31 0 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:180 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 35 34 36 37 "" [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)

;; if (_23 == -1)

(insn 37 36 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 69 [ D.26024 ])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:181 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:181 -1
     (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil)))

;; Generating RTL for gimple basic block 5

;; ct_7(D)->clearhits = _28;

(insn 40 39 0 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:182 -1
     (nil))

;; *_22 = ccheck_18;

(insn 41 40 0 (set (mem:DI (reg/f:DI 68 [ D.26026 ]) [0 *_22+0 S8 A64])
        (reg/v:DI 64 [ ccheck ])) tiles.cpp:183 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 44 43 45 39 "" [0 uses])

(note 45 44 0 NOTE_INSN_BASIC_BLOCK)

;; if (_31 == 0)

(insn 46 45 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:SI (plus:DI (reg/v/f:DI 100 [ ct ])
                    (const_int 16 [0x10])) [0 ct_7(D)->safe+0 S4 A64])
            (const_int 0 [0]))) tiles.cpp:184 -1
     (nil))

(jump_insn 47 46 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:184 -1
     (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil)))

;; Generating RTL for gimple basic block 7

;; ct_7(D)->collisions = _33;

(insn 49 48 0 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:185 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 52 51 53 40 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; _36 = hash_UNH (ints_12(D), num_ints_13(D), 536870911, 449);

(insn 54 53 55 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:187 -1
     (nil))

(insn 55 54 56 (set (reg:DI 1 dx)
        (const_int 536870911 [0x1fffffff])) tiles.cpp:187 -1
     (nil))

(insn 56 55 57 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:187 -1
     (nil))

(insn 57 56 58 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:187 -1
     (nil))

(call_insn 58 57 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:187 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))

(insn 59 58 0 (set (reg:SI 77 [ D.26025 ])
        (reg:SI 0 ax)) tiles.cpp:187 -1
     (nil))

;; h2_39 = (long int) _38;

(insn 60 59 61 (parallel [
            (set (reg:SI 104 [ D.26025 ])
                (ashift:SI (reg:SI 77 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:187 -1
     (nil))

(insn 61 60 62 (parallel [
            (set (reg:SI 105 [ D.26025 ])
                (plus:SI (reg:SI 104 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:187 -1
     (nil))

(insn 62 61 0 (set (reg/v:DI 80 [ h2 ])
        (sign_extend:DI (reg:SI 105 [ D.26025 ]))) tiles.cpp:187 -1
     (nil))

;; # DEBUG h2 => h2_39

(debug_insn 63 62 0 (var_location:DI h2 (const_int 0 [0])) tiles.cpp:187 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 64 63 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:188 -1
     (nil))
;; _66 = ct_7(D)->collisions;

(insn 65 64 0 (set (reg:DI 92 [ D.26024 ])
        (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])) -1
     (nil))

;; _61 = ct_7(D)->m;

(insn 66 65 0 (set (reg:DI 91 [ D.26024 ])
        (mem/j:DI (reg/v/f:DI 100 [ ct ]) [0 ct_7(D)->m+0 S8 A64])) -1
     (nil))

;; ivtmp.112_77 = (unsigned long) _76;

(insn 67 66 0 (parallel [
            (set (reg:DI 81 [ ivtmp.112 ])
                (plus:DI (reg:DI 92 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 9

;; # DEBUG __fmt => "\nTiles: Collision table out of Memory"

(debug_insn 71 70 0 (var_location:DI __fmt (const_int 0 [0])) -1
     (nil))
;; __printf_chk (1, "\nTiles: Collision table out of Memory");

(insn 72 71 73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b82f8519da8 *.LC0>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 73 72 74 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 74 73 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(call_insn 75 74 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))

;; exit (0);

(insn 76 75 77 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:193 -1
     (nil))

(call_insn 77 76 78 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b82f08ee700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:193 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(barrier 78 77 0)

;; Generating RTL for gimple basic block 10

;; _55 = _52 + _54;

(insn 80 79 81 (set (reg:DI 106 [ D.26027 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) tiles.cpp:194 -1
     (nil))

(insn 81 80 82 (parallel [
            (set (reg:DI 107 [ D.26027 ])
                (ashift:DI (reg:DI 106 [ D.26027 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:194 -1
     (nil))

(insn 82 81 83 (set (reg/f:DI 108)
        (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:194 -1
     (nil))

(insn 83 82 0 (parallel [
            (set (reg/f:DI 89 [ D.26026 ])
                (plus:DI (reg:DI 107 [ D.26027 ])
                    (reg/f:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:194 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                    (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])
            (reg:DI 107 [ D.26027 ]))
        (nil)))

;; _56 = *_55;

(insn 84 83 0 (set (reg:DI 90 [ D.26024 ])
        (mem:DI (reg/f:DI 89 [ D.26026 ]) [0 *_55+0 S8 A64])) tiles.cpp:194 -1
     (nil))

;; if (_56 == ccheck_18)

(insn 85 84 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 90 [ D.26024 ])
            (reg/v:DI 64 [ ccheck ]))) tiles.cpp:194 -1
     (nil))

(jump_insn 86 85 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:194 -1
     (expr_list:REG_BR_PROB (const_int 225 [0xe1])
        (nil)))

;; Generating RTL for gimple basic block 11

;; ivtmp.112_46 = ivtmp.112_41 + 1;

(insn 88 87 0 (parallel [
            (set (reg:DI 81 [ ivtmp.112 ])
                (plus:DI (reg:DI 81 [ ivtmp.112 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (_56 == -1)

(insn 89 88 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 90 [ D.26024 ])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:195 -1
     (nil))

(jump_insn 90 89 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:195 -1
     (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil)))

;; Generating RTL for gimple basic block 12

;; *_78 = ccheck_18;

(insn 92 91 0 (set (mem:DI (reg/f:DI 89 [ D.26026 ]) [0 *_78+0 S8 A64])
        (reg/v:DI 64 [ ccheck ])) tiles.cpp:195 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 95 94 96 42 "" [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 14

;; 

(code_label 97 96 98 41 "" [0 uses])

(note 98 97 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG i => (int) ((unsigned int) ivtmp.112_41 - (unsigned int) (_66 + 1))

(debug_insn 99 98 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG j => j_1

(debug_insn 100 99 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => (int) (((unsigned int) ivtmp.112_41 - (unsigned int) (_66 + 1)) + 1)

(debug_insn 101 100 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:189 -1
     (nil))
;; ct_7(D)->collisions = _42;

(insn 102 101 0 (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
        (reg:DI 81 [ ivtmp.112 ])) tiles.cpp:190 -1
     (nil))

;; _47 = _45 % _61;

(insn 103 102 104 (set (reg:DI 109 [ D.26024 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) tiles.cpp:191 -1
     (nil))

(insn 104 103 105 (parallel [
            (set (reg:DI 110 [ D.26024 ])
                (plus:DI (reg:DI 109 [ D.26024 ])
                    (reg/v:DI 80 [ h2 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 -1
     (nil))

(insn 105 104 106 (parallel [
            (set (reg:DI 112)
                (div:DI (reg:DI 110 [ D.26024 ])
                    (reg:DI 91 [ D.26024 ])))
            (set (reg:DI 111)
                (mod:DI (reg:DI 110 [ D.26024 ])
                    (reg:DI 91 [ D.26024 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 -1
     (nil))

(insn 106 105 0 (set (reg:DI 85 [ D.26024 ])
        (reg:DI 111)) tiles.cpp:191 -1
     (nil))

;; j_48 = (int) _47;

(insn 107 106 0 (set (reg/v:SI 59 [ j ])
        (subreg:SI (reg:DI 85 [ D.26024 ]) 0)) tiles.cpp:191 -1
     (nil))

;; # DEBUG j => j_48

(debug_insn 108 107 0 (var_location:SI j (const_int 0 [0])) tiles.cpp:191 -1
     (nil))
;; if (_61 < _73)

(insn 110 108 111 14 (parallel [
            (set (reg:DI 113 [ D.26028 ])
                (minus:DI (reg:DI 81 [ ivtmp.112 ])
                    (reg:DI 92 [ D.26024 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 111 110 112 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 91 [ D.26024 ])
            (reg:DI 113 [ D.26028 ]))) tiles.cpp:193 -1
     (nil))

(jump_insn 112 111 116 14 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) tiles.cpp:193 -1
     (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

(note 116 112 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 114 116 115 17 (set (pc)
        (label_ref 113)) -1
     (nil))

(barrier 115 114 0)

;; Generating RTL for gimple basic block 15

;; 

(code_label 117 115 118 38 "" [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => j_2

(debug_insn 119 118 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; return j_2;

(insn 120 119 121 (set (reg:SI 97 [ <retval> ])
        (reg/v:SI 59 [ j ])) tiles.cpp:198 -1
     (nil))

(jump_insn 121 120 122 (set (pc)
        (label_ref 0)) tiles.cpp:198 -1
     (nil))

(barrier 122 121 0)
deleting block 18


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 15->16 to 11 failed.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.


try_optimize_cfg iteration 2

Forwarding edge 15->16 to 11 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 2177, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 98 [ ints ])
        (reg:DI 5 di [ ints ])) tiles.cpp:172 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 99 [ num_ints ])
        (reg:SI 4 si [ num_ints ])) tiles.cpp:172 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 100 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:172 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:176 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:177 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (mem/j:DI (reg/v/f:DI 100 [ ct ]) [0 ct_7(D)->m+0 S8 A64])) tiles.cpp:177 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:177 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:177 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:177 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 14 13 15 2 (set (reg/v:SI 59 [ j ])
        (reg:SI 0 ax)) tiles.cpp:177 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:SI j (reg/v:SI 59 [ j ])) tiles.cpp:177 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 2 cx)
        (const_int 457 [0x1c9])) tiles.cpp:178 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (const_int 2147483647 [0x7fffffff])) tiles.cpp:178 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:178 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:178 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:178 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 21 20 22 2 (set (reg:SI 63 [ D.26025 ])
        (reg:SI 0 ax)) tiles.cpp:178 -1
     (nil))
(insn 22 21 23 2 (set (reg/v:DI 64 [ ccheck ])
        (sign_extend:DI (reg:SI 63 [ D.26025 ]))) tiles.cpp:178 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:DI ccheck (reg/v:DI 64 [ ccheck ])) tiles.cpp:178 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 101 [ D.26027 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) tiles.cpp:179 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 102 [ D.26027 ])
                (ashift:DI (reg:DI 101 [ D.26027 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:179 -1
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 103)
        (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:179 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 68 [ D.26026 ])
                (plus:DI (reg:DI 102 [ D.26027 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:179 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                    (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])
            (reg:DI 102 [ D.26027 ]))
        (nil)))
(insn 28 27 29 2 (set (reg:DI 69 [ D.26024 ])
        (mem:DI (reg/f:DI 68 [ D.26026 ]) [0 *_22+0 S8 A64])) tiles.cpp:179 -1
     (nil))
(insn 29 28 30 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 69 [ D.26024 ])
            (reg/v:DI 64 [ ccheck ]))) tiles.cpp:179 -1
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) tiles.cpp:179 -1
     (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil))
 -> 35)
;;  succ:       4 [19.9%]  (FALLTHRU)
;;              5 [80.1%] 

;; basic block 4, loop depth 0, count 0, freq 433, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [19.9%]  (FALLTHRU)
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:180 -1
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
;;  succ:       17 [100.0%] 

(barrier 34 33 35)
;; basic block 5, loop depth 0, count 0, freq 1743, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [80.1%] 
(code_label 35 34 36 5 37 "" [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 69 [ D.26024 ])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:181 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) tiles.cpp:181 -1
     (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil))
 -> 44)
;;  succ:       6 [19.9%]  (FALLTHRU)
;;              7 [80.1%] 

;; basic block 6, loop depth 0, count 0, freq 347, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [19.9%]  (FALLTHRU)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:182 -1
     (nil))
(insn 41 40 42 6 (set (mem:DI (reg/f:DI 68 [ D.26026 ]) [0 *_22+0 S8 A64])
        (reg/v:DI 64 [ ccheck ])) tiles.cpp:183 -1
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
;;  succ:       17 [100.0%] 

(barrier 43 42 44)
;; basic block 7, loop depth 0, count 0, freq 1396, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [80.1%] 
(code_label 44 43 45 7 39 "" [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:SI (plus:DI (reg/v/f:DI 100 [ ct ])
                    (const_int 16 [0x10])) [0 ct_7(D)->safe+0 S4 A64])
            (const_int 0 [0]))) tiles.cpp:184 -1
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) tiles.cpp:184 -1
     (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil))
 -> 52)
;;  succ:       8 [61.0%]  (FALLTHRU)
;;              9 [39.0%] 

;; basic block 8, loop depth 0, count 0, freq 852, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [61.0%]  (FALLTHRU)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:185 -1
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
;;  succ:       17 [100.0%] 

(barrier 51 50 52)
;; basic block 9, loop depth 0, count 0, freq 544, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [39.0%] 
(code_label 52 51 53 9 40 "" [1 uses])
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:187 -1
     (nil))
(insn 55 54 56 9 (set (reg:DI 1 dx)
        (const_int 536870911 [0x1fffffff])) tiles.cpp:187 -1
     (nil))
(insn 56 55 57 9 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:187 -1
     (nil))
(insn 57 56 58 9 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:187 -1
     (nil))
(call_insn 58 57 59 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:187 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 59 58 60 9 (set (reg:SI 77 [ D.26025 ])
        (reg:SI 0 ax)) tiles.cpp:187 -1
     (nil))
(insn 60 59 61 9 (parallel [
            (set (reg:SI 104 [ D.26025 ])
                (ashift:SI (reg:SI 77 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:187 -1
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:SI 105 [ D.26025 ])
                (plus:SI (reg:SI 104 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:187 -1
     (nil))
(insn 62 61 63 9 (set (reg/v:DI 80 [ h2 ])
        (sign_extend:DI (reg:SI 105 [ D.26025 ]))) tiles.cpp:187 -1
     (nil))
(debug_insn 63 62 64 9 (var_location:DI h2 (reg/v:DI 80 [ h2 ])) tiles.cpp:187 -1
     (nil))
(debug_insn 64 63 65 9 (var_location:SI i (const_int 0 [0])) tiles.cpp:188 -1
     (nil))
(insn 65 64 66 9 (set (reg:DI 92 [ D.26024 ])
        (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])) -1
     (nil))
(insn 66 65 67 9 (set (reg:DI 91 [ D.26024 ])
        (mem/j:DI (reg/v/f:DI 100 [ ct ]) [0 ct_7(D)->m+0 S8 A64])) -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:DI 81 [ ivtmp.112 ])
                (plus:DI (reg:DI 92 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (label_ref 97)) tiles.cpp:189 -1
     (nil)
 -> 97)
;;  succ:       15 [100.0%] 

(barrier 69 68 109)
;; basic block 10, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [0.0%] 
(code_label 109 69 70 10 43 "" [1 uses])
(note 70 109 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 10 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b82f8519da8 *.LC0>)) -1
     (nil))
(insn 72 71 73 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b82f8519da8 *.LC0>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 73 72 74 10 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 74 73 75 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(call_insn 75 74 76 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 76 75 77 10 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:193 -1
     (nil))
(call_insn 77 76 78 10 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b82f08ee700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:193 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 78 77 113)
;; basic block 11, loop depth 1, count 0, freq 9896, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [100.0%] 
(code_label 113 78 79 11 44 "" [1 uses])
(note 79 113 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 11 (set (reg:DI 106 [ D.26027 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) tiles.cpp:194 -1
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg:DI 107 [ D.26027 ])
                (ashift:DI (reg:DI 106 [ D.26027 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:194 -1
     (nil))
(insn 82 81 83 11 (set (reg/f:DI 108)
        (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:194 -1
     (nil))
(insn 83 82 84 11 (parallel [
            (set (reg/f:DI 89 [ D.26026 ])
                (plus:DI (reg:DI 107 [ D.26027 ])
                    (reg/f:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:194 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                    (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])
            (reg:DI 107 [ D.26027 ]))
        (nil)))
(insn 84 83 85 11 (set (reg:DI 90 [ D.26024 ])
        (mem:DI (reg/f:DI 89 [ D.26026 ]) [0 *_55+0 S8 A64])) tiles.cpp:194 -1
     (nil))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 90 [ D.26024 ])
            (reg/v:DI 64 [ ccheck ]))) tiles.cpp:194 -1
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) tiles.cpp:194 -1
     (expr_list:REG_BR_PROB (const_int 225 [0xe1])
        (nil))
 -> 117)
;;  succ:       17 [2.2%] 
;;              12 [97.8%]  (FALLTHRU)

;; basic block 12, loop depth 1, count 0, freq 9673, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [97.8%]  (FALLTHRU)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (parallel [
            (set (reg:DI 81 [ ivtmp.112 ])
                (plus:DI (reg:DI 81 [ ivtmp.112 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 89 88 90 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 90 [ D.26024 ])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:195 -1
     (nil))
(jump_insn 90 89 91 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) tiles.cpp:195 -1
     (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil))
 -> 95)
;;  succ:       13 [2.2%]  (FALLTHRU)
;;              14 [97.8%] 

;; basic block 13, loop depth 0, count 0, freq 218, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [2.2%]  (FALLTHRU)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 13 (set (mem:DI (reg/f:DI 89 [ D.26026 ]) [0 *_78+0 S8 A64])
        (reg/v:DI 64 [ ccheck ])) tiles.cpp:195 -1
     (nil))
(jump_insn 93 92 94 13 (set (pc)
        (label_ref 117)) tiles.cpp:195 -1
     (nil)
 -> 117)
;;  succ:       17 [100.0%] 

(barrier 94 93 95)
;; basic block 14, loop depth 1, count 0, freq 9455, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [97.8%] 
(code_label 95 94 96 14 42 "" [1 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;  succ:       15 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 15, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [100.0%] 
;;              14 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 97 96 98 15 41 "" [1 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 99 98 100 15 (var_location:SI i (plus:SI (not:SI (subreg:SI (reg:DI 92 [ D.26024 ]) 0))
        (subreg:SI (reg:DI 81 [ ivtmp.112 ]) 0))) -1
     (nil))
(debug_insn 100 99 101 15 (var_location:SI j (reg/v:SI 59 [ j ])) -1
     (nil))
(debug_insn 101 100 102 15 (var_location:SI i (minus:SI (subreg:SI (reg:DI 81 [ ivtmp.112 ]) 0)
        (subreg:SI (reg:DI 92 [ D.26024 ]) 0))) tiles.cpp:189 -1
     (nil))
(insn 102 101 103 15 (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
        (reg:DI 81 [ ivtmp.112 ])) tiles.cpp:190 -1
     (nil))
(insn 103 102 104 15 (set (reg:DI 109 [ D.26024 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) tiles.cpp:191 -1
     (nil))
(insn 104 103 105 15 (parallel [
            (set (reg:DI 110 [ D.26024 ])
                (plus:DI (reg:DI 109 [ D.26024 ])
                    (reg/v:DI 80 [ h2 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 -1
     (nil))
(insn 105 104 106 15 (parallel [
            (set (reg:DI 112)
                (div:DI (reg:DI 110 [ D.26024 ])
                    (reg:DI 91 [ D.26024 ])))
            (set (reg:DI 111)
                (mod:DI (reg:DI 110 [ D.26024 ])
                    (reg:DI 91 [ D.26024 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 -1
     (nil))
(insn 106 105 107 15 (set (reg:DI 85 [ D.26024 ])
        (reg:DI 111)) tiles.cpp:191 -1
     (nil))
(insn 107 106 108 15 (set (reg/v:SI 59 [ j ])
        (subreg:SI (reg:DI 85 [ D.26024 ]) 0)) tiles.cpp:191 -1
     (nil))
(debug_insn 108 107 110 15 (var_location:SI j (reg/v:SI 59 [ j ])) tiles.cpp:191 -1
     (nil))
(insn 110 108 111 15 (parallel [
            (set (reg:DI 113 [ D.26028 ])
                (minus:DI (reg:DI 81 [ ivtmp.112 ])
                    (reg:DI 92 [ D.26024 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 111 110 112 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 91 [ D.26024 ])
            (reg:DI 113 [ D.26028 ]))) tiles.cpp:193 -1
     (nil))
(jump_insn 112 111 116 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) tiles.cpp:193 -1
     (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil))
 -> 109)
;;  succ:       10 [0.0%] 
;;              16 [100.0%]  (FALLTHRU)

;; basic block 16, loop depth 1, count 0, freq 9996, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [100.0%]  (FALLTHRU)
(note 116 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 114 116 115 16 (set (pc)
        (label_ref 113)) -1
     (nil)
 -> 113)
;;  succ:       11 [100.0%] 

(barrier 115 114 117)
;; basic block 17, loop depth 0, count 0, freq 2173, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;;              6 [100.0%] 
;;              8 [100.0%] 
;;              11 [2.2%] 
;;              13 [100.0%] 
(code_label 117 115 118 17 38 "" [5 uses])
(note 118 117 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 119 118 120 17 (var_location:SI j (reg/v:SI 59 [ j ])) -1
     (nil))
(insn 120 119 124 17 (set (reg:SI 97 [ <retval> ])
        (reg/v:SI 59 [ j ])) tiles.cpp:198 -1
     (nil))
(insn 124 120 127 17 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) tiles.cpp:199 -1
     (nil))
(insn 127 124 0 17 (use (reg/i:SI 0 ax)) tiles.cpp:199 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles(int*, int, collision_table*, float*, int, int*, int) (_Z5tilesPiiP15collision_tablePfiS_i, funcdef_no=1062, decl_uid=23694, cgraph_uid=306)

void tiles(int*, int, collision_table*, float*, int, int*, int) (int * the_tiles, int num_tilings, struct collision_table * ctable, float * floats, int num_floats, int * ints, int num_ints)
{
  sizetype ivtmp.138;
  unsigned long ivtmp.132;
  unsigned int ivtmp.127;
  sizetype ivtmp.121;
  int num_coordinates;
  int coordinates[41];
  int base[20];
  int qstate[20];
  int j;
  int _12;
  float _20;
  float _21;
  float _22;
  int _23;
  unsigned int _24;
  sizetype _25;
  sizetype _27;
  sizetype _28;
  void * _31;
  unsigned int _32;
  sizetype _33;
  sizetype _34;
  sizetype _35;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  sizetype _43;
  int _44;
  int _46;
  int _47;
  int _48;
  int _49;
  int _50;
  int cstore_51;
  int _53;
  int _54;
  unsigned int _61;
  int _64;
  unsigned int _91;
  sizetype _103;
  sizetype _104;
  int[41] * _108;
  sizetype _109;
  float pretmp_112;
  ssizetype _114;
  ssizetype _115;
  sizetype _116;
  sizetype _117;
  sizetype _118;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _12 = num_floats_10(D) + num_ints_11(D);
  num_coordinates_13 = _12 + 1;
  # DEBUG num_coordinates => num_coordinates_13
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_11(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 4, loop depth 0
;;    pred:       2
  _43 = (sizetype) num_ints_11(D);
  _118 = _43 * 4;
  _117 = (sizetype) num_floats_10(D);
  _116 = _117 * 4;
  _115 = (ssizetype) _116;
  _114 = _115 + 4;
  _109 = (sizetype) _114;
  _108 = &coordinates + _109;
  __builtin_memcpy (_108, ints_19(D), _118);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
;;                9
  # DEBUG j => 0
  if (num_tilings_29(D) > 0)
    goto <bb 10>;
  else
    goto <bb 20>;
;;    succ:       10
;;                20

;;   basic block 6, loop depth 0
;;    pred:       3
  pretmp_112 = (float) num_tilings_29(D);
  _61 = (unsigned int) num_floats_10(D);
  _32 = _61 + 4294967295;
  _33 = (sizetype) _32;
  _34 = _33 + 1;
  _35 = _34 * 4;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       8
;;                6
  # ivtmp.138_58 = PHI <ivtmp.138_59(8), 0(6)>
  # DEBUG i => NULL
  _20 = MEM[base: floats_26(D), index: ivtmp.138_58, offset: 0B];
  _21 = _20 * pretmp_112;
  _22 = __builtin_floorf (_21);
  _23 = (int) _22;
  MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B] = _23;
  # DEBUG i => D#9
  # DEBUG i => D#9
  ivtmp.138_59 = ivtmp.138_58 + 4;
  if (ivtmp.138_59 != _35)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 1
;;    pred:       7
  goto <bb 7>;
;;    succ:       7

;;   basic block 9, loop depth 0
;;    pred:       7
  _104 = (sizetype) num_floats_10(D);
  _103 = _104 * 4;
  __builtin_memset (&base, 0, _103);
  goto <bb 5>;
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       5
  ivtmp.132_52 = (unsigned long) the_tiles_60(D);
  _91 = (unsigned int) num_floats_10(D);
  _24 = _91 + 4294967295;
  _25 = (sizetype) _24;
  _27 = _25 + 1;
  _28 = _27 * 4;
  goto <bb 18>;
;;    succ:       18

;;   basic block 11, loop depth 2
;;    pred:       15
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       11
;;                19
  # ivtmp.121_15 = PHI <ivtmp.121_120(11), 0(19)>
  # ivtmp.127_119 = PHI <ivtmp.127_30(11), 1(19)>
  # DEBUG i => NULL
  _37 = MEM[symbol: qstate, index: ivtmp.121_15, offset: 0B];
  _38 = MEM[symbol: base, index: ivtmp.121_15, offset: 0B];
  if (_37 >= _38)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 2
;;    pred:       12
  _39 = _37 - _38;
  _40 = _39 % num_tilings_29(D);
  _41 = _37 - _40;
  goto <bb 15>;
;;    succ:       15

;;   basic block 14, loop depth 2
;;    pred:       12
  _44 = _37 + 1;
  _46 = _38 - _37;
  _47 = _46 + -1;
  _48 = _47 % num_tilings_29(D);
  _49 = _44 + _48;
  _50 = _49 - num_tilings_29(D);
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       13
;;                14
  # cstore_51 = PHI <_41(13), _50(14)>
  MEM[symbol: coordinates, index: ivtmp.121_15, offset: 0B] = cstore_51;
  _53 = (int) ivtmp.127_119;
  _54 = _38 + _53;
  MEM[symbol: base, index: ivtmp.121_15, offset: 0B] = _54;
  # DEBUG i => D#8
  # DEBUG i => D#8
  ivtmp.121_120 = ivtmp.121_15 + 4;
  ivtmp.127_30 = ivtmp.127_119 + 2;
  if (ivtmp.121_120 != _28)
    goto <bb 11>;
  else
    goto <bb 16>;
;;    succ:       11
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
;;                18
  # num_floats_74 = PHI <num_floats_10(D)(15), 0(18)>
  coordinates[num_floats_74] = j_79;
  _64 = hash (&coordinates, num_coordinates_13, ctable_62(D));
  _31 = (void *) ivtmp.132_75;
  MEM[base: _31, offset: 0B] = _64;
  j_67 = j_79 + 1;
  # DEBUG j => j_67
  # DEBUG j => j_67
  ivtmp.132_56 = ivtmp.132_75 + 4;
  if (j_67 != num_tilings_29(D))
    goto <bb 17>;
  else
    goto <bb 20>;
;;    succ:       17
;;                20

;;   basic block 17, loop depth 1
;;    pred:       16
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       17
;;                10
  # j_79 = PHI <j_67(17), 0(10)>
  # ivtmp.132_75 = PHI <ivtmp.132_56(17), ivtmp.132_52(10)>
  # DEBUG j => j_79
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 19>;
  else
    goto <bb 16>;
;;    succ:       19
;;                16

;;   basic block 19, loop depth 1
;;    pred:       18
  goto <bb 12>;
;;    succ:       12

;;   basic block 20, loop depth 0
;;    pred:       5
;;                16
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 10 (num_floats_10(D) - 10 )
Partition 11 (num_ints_11(D) - 11 )
Partition 12 (_12 - 12 )
Partition 13 (num_coordinates_13 - 13 )
Partition 15 (ivtmp.121_15 - 15 )
Partition 19 (ints_19(D) - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (floats_26(D) - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (num_tilings_29(D) - 29 )
Partition 30 (ivtmp.127_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (cstore_51 - 51 )
Partition 52 (ivtmp.132_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 56 (ivtmp.132_56 - 56 )
Partition 58 (ivtmp.138_58 - 58 )
Partition 59 (ivtmp.138_59 - 59 )
Partition 60 (the_tiles_60(D) - 60 )
Partition 61 (_61 - 61 )
Partition 62 (ctable_62(D) - 62 )
Partition 64 (_64 - 64 )
Partition 67 (j_67 - 67 )
Partition 74 (num_floats_74 - 74 )
Partition 75 (ivtmp.132_75 - 75 )
Partition 79 (j_79 - 79 )
Partition 91 (_91 - 91 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 112 (pretmp_112 - 112 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (ivtmp.127_119 - 119 )
Partition 120 (ivtmp.121_120 - 120 )


Partition map 

Partition 0 (num_floats_10(D) - 10 )
Partition 1 (num_ints_11(D) - 11 )
Partition 2 (ivtmp.121_15 - 15 )
Partition 3 (ints_19(D) - 19 )
Partition 4 (floats_26(D) - 26 )
Partition 5 (num_tilings_29(D) - 29 )
Partition 6 (ivtmp.127_30 - 30 )
Partition 7 (_41 - 41 )
Partition 8 (_50 - 50 )
Partition 9 (cstore_51 - 51 )
Partition 10 (ivtmp.132_52 - 52 )
Partition 11 (ivtmp.132_56 - 56 )
Partition 12 (ivtmp.138_58 - 58 )
Partition 13 (ivtmp.138_59 - 59 )
Partition 14 (the_tiles_60(D) - 60 )
Partition 15 (ctable_62(D) - 62 )
Partition 16 (j_67 - 67 )
Partition 17 (num_floats_74 - 74 )
Partition 18 (ivtmp.132_75 - 75 )
Partition 19 (j_79 - 79 )
Partition 20 (ivtmp.127_119 - 119 )
Partition 21 (ivtmp.121_120 - 120 )


Live on entry to BB2 : num_floats_10(D)  num_ints_11(D)  ints_19(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB3 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB4 : num_floats_10(D)  num_ints_11(D)  ints_19(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB5 : num_floats_10(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB6 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB7 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB8 : num_floats_10(D)  floats_26(D)  num_tilings_29(D)  ivtmp.138_59  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB9 : num_floats_10(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB10 : num_floats_10(D)  num_tilings_29(D)  the_tiles_60(D)  ctable_62(D)  

Live on entry to BB11 : num_floats_10(D)  num_tilings_29(D)  ivtmp.127_30  ctable_62(D)  ivtmp.132_75  j_79  ivtmp.121_120  

Live on entry to BB12 : num_floats_10(D)  num_tilings_29(D)  ctable_62(D)  ivtmp.132_75  j_79  

Live on entry to BB13 : num_floats_10(D)  ivtmp.121_15  num_tilings_29(D)  ctable_62(D)  ivtmp.132_75  j_79  ivtmp.127_119  

Live on entry to BB14 : num_floats_10(D)  ivtmp.121_15  num_tilings_29(D)  ctable_62(D)  ivtmp.132_75  j_79  ivtmp.127_119  

Live on entry to BB15 : num_floats_10(D)  ivtmp.121_15  num_tilings_29(D)  ctable_62(D)  ivtmp.132_75  j_79  ivtmp.127_119  

Live on entry to BB16 : num_floats_10(D)  num_tilings_29(D)  ctable_62(D)  ivtmp.132_75  j_79  

Live on entry to BB17 : num_floats_10(D)  num_tilings_29(D)  ivtmp.132_56  ctable_62(D)  j_67  

Live on entry to BB18 : num_floats_10(D)  num_tilings_29(D)  ctable_62(D)  

Live on entry to BB19 : num_floats_10(D)  num_tilings_29(D)  ctable_62(D)  ivtmp.132_75  j_79  

Live on entry to BB20 : 

Conflict graph:
0: 17
17: 0

After sorting:
Sorted Coalesce list:
(9071) ivtmp.121_15 <-> ivtmp.121_120
(9071) ivtmp.127_30 <-> ivtmp.127_119
(4762) _41 <-> cstore_51
(4762) _50 <-> cstore_51
(906) num_floats_10(D) <-> num_floats_74
(897) ivtmp.138_58 <-> ivtmp.138_59
(433) ivtmp.132_56 <-> ivtmp.132_75
(433) j_67 <-> j_79
(43) ivtmp.132_52 <-> ivtmp.132_75

Partition map 

Partition 0 (num_floats_10(D) - 10 )
Partition 1 (num_ints_11(D) - 11 )
Partition 2 (ivtmp.121_15 - 15 )
Partition 3 (ints_19(D) - 19 )
Partition 4 (floats_26(D) - 26 )
Partition 5 (num_tilings_29(D) - 29 )
Partition 6 (ivtmp.127_30 - 30 )
Partition 7 (_41 - 41 )
Partition 8 (_50 - 50 )
Partition 9 (cstore_51 - 51 )
Partition 10 (ivtmp.132_52 - 52 )
Partition 11 (ivtmp.132_56 - 56 )
Partition 12 (ivtmp.138_58 - 58 )
Partition 13 (ivtmp.138_59 - 59 )
Partition 14 (the_tiles_60(D) - 60 )
Partition 15 (ctable_62(D) - 62 )
Partition 16 (j_67 - 67 )
Partition 17 (num_floats_74 - 74 )
Partition 18 (ivtmp.132_75 - 75 )
Partition 19 (j_79 - 79 )
Partition 20 (ivtmp.127_119 - 119 )
Partition 21 (ivtmp.121_120 - 120 )

Coalesce list: (15)ivtmp.121_15 & (120)ivtmp.121_120 [map: 2, 21] : Success -> 2
Coalesce list: (30)ivtmp.127_30 & (119)ivtmp.127_119 [map: 6, 20] : Success -> 6
Coalesce list: (41)_41 & (51)cstore_51 [map: 7, 9] : Success -> 7
Coalesce list: (50)_50 & (51)_41 [map: 8, 7] : Success -> 7
Coalesce list: (10)num_floats_10(D) & (74)num_floats_74 [map: 0, 17] : Fail due to conflict
Coalesce list: (58)ivtmp.138_58 & (59)ivtmp.138_59 [map: 12, 13] : Success -> 12
Coalesce list: (56)ivtmp.132_56 & (75)ivtmp.132_75 [map: 11, 18] : Success -> 11
Coalesce list: (67)j_67 & (79)j_79 [map: 16, 19] : Success -> 16
Coalesce list: (52)ivtmp.132_52 & (75)ivtmp.132_56 [map: 10, 11] : Success -> 11
After Coalescing:

Partition map 

Partition 0 (num_floats_10(D) - 10 )
Partition 1 (num_ints_11(D) - 11 )
Partition 2 (_12 - 12 )
Partition 3 (num_coordinates_13 - 13 )
Partition 4 (ivtmp.121_15 - 15 120 )
Partition 5 (ints_19(D) - 19 )
Partition 6 (_20 - 20 )
Partition 7 (_21 - 21 )
Partition 8 (_22 - 22 )
Partition 9 (_23 - 23 )
Partition 10 (_24 - 24 )
Partition 11 (_25 - 25 )
Partition 12 (floats_26(D) - 26 )
Partition 13 (_27 - 27 )
Partition 14 (_28 - 28 )
Partition 15 (num_tilings_29(D) - 29 )
Partition 16 (ivtmp.127_30 - 30 119 )
Partition 17 (_31 - 31 )
Partition 18 (_32 - 32 )
Partition 19 (_33 - 33 )
Partition 20 (_34 - 34 )
Partition 21 (_35 - 35 )
Partition 22 (_37 - 37 )
Partition 23 (_38 - 38 )
Partition 24 (_39 - 39 )
Partition 25 (_40 - 40 )
Partition 26 (_41 - 41 50 51 )
Partition 27 (_43 - 43 )
Partition 28 (_44 - 44 )
Partition 29 (_46 - 46 )
Partition 30 (_47 - 47 )
Partition 31 (_48 - 48 )
Partition 32 (_49 - 49 )
Partition 33 (_53 - 53 )
Partition 34 (_54 - 54 )
Partition 35 (ivtmp.132_56 - 52 56 75 )
Partition 36 (ivtmp.138_58 - 58 59 )
Partition 37 (the_tiles_60(D) - 60 )
Partition 38 (_61 - 61 )
Partition 39 (ctable_62(D) - 62 )
Partition 40 (_64 - 64 )
Partition 41 (j_67 - 67 79 )
Partition 42 (num_floats_74 - 74 )
Partition 43 (_91 - 91 )
Partition 44 (_103 - 103 )
Partition 45 (_104 - 104 )
Partition 46 (_108 - 108 )
Partition 47 (_109 - 109 )
Partition 48 (pretmp_112 - 112 )
Partition 49 (_114 - 114 )
Partition 50 (_115 - 115 )
Partition 51 (_116 - 116 )
Partition 52 (_117 - 117 )
Partition 53 (_118 - 118 )


Replacing Expressions
_12 replace with --> _12 = num_floats_10(D) + num_ints_11(D);

_20 replace with --> _20 = MEM[base: floats_26(D), index: ivtmp.138_58, offset: 0B];

_21 replace with --> _21 = _20 * pretmp_112;

_23 replace with --> _23 = (int) _22;

_24 replace with --> _24 = _91 + 4294967295;

_25 replace with --> _25 = (sizetype) _24;

_27 replace with --> _27 = _25 + 1;

_31 replace with --> _31 = (void *) ivtmp.132_75;

_32 replace with --> _32 = _61 + 4294967295;

_33 replace with --> _33 = (sizetype) _32;

_34 replace with --> _34 = _33 + 1;

_39 replace with --> _39 = _37 - _38;

_40 replace with --> _40 = _39 % num_tilings_29(D);

_43 replace with --> _43 = (sizetype) num_ints_11(D);

_44 replace with --> _44 = _37 + 1;

_46 replace with --> _46 = _38 - _37;

_47 replace with --> _47 = _46 + -1;

_48 replace with --> _48 = _47 % num_tilings_29(D);

_49 replace with --> _49 = _44 + _48;

_53 replace with --> _53 = (int) ivtmp.127_119;

_54 replace with --> _54 = _38 + _53;

_61 replace with --> _61 = (unsigned int) num_floats_10(D);

_91 replace with --> _91 = (unsigned int) num_floats_10(D);

_103 replace with --> _103 = _104 * 4;

_104 replace with --> _104 = (sizetype) num_floats_10(D);

_108 replace with --> _108 = &coordinates + _109;

_109 replace with --> _109 = (sizetype) _114;

_114 replace with --> _114 = _115 + 4;

_115 replace with --> _115 = (ssizetype) _116;

_116 replace with --> _116 = _117 * 4;

_117 replace with --> _117 = (sizetype) num_floats_10(D);

_118 replace with --> _118 = _43 * 4;


void tiles(int*, int, collision_table*, float*, int, int*, int) (int * the_tiles, int num_tilings, struct collision_table * ctable, float * floats, int num_floats, int * ints, int num_ints)
{
  sizetype ivtmp.138;
  unsigned long ivtmp.132;
  unsigned int ivtmp.127;
  sizetype ivtmp.121;
  int num_coordinates;
  int coordinates[41];
  int base[20];
  int qstate[20];
  int j;
  int _12;
  float _20;
  float _21;
  float _22;
  int _23;
  unsigned int _24;
  sizetype _25;
  sizetype _27;
  sizetype _28;
  void * _31;
  unsigned int _32;
  sizetype _33;
  sizetype _34;
  sizetype _35;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  sizetype _43;
  int _44;
  int _46;
  int _47;
  int _48;
  int _49;
  int _50;
  int cstore_51;
  int _53;
  int _54;
  unsigned int _61;
  int _64;
  unsigned int _91;
  sizetype _103;
  sizetype _104;
  int[41] * _108;
  sizetype _109;
  float pretmp_112;
  ssizetype _114;
  ssizetype _115;
  sizetype _116;
  sizetype _117;
  sizetype _118;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _12 = num_floats_10(D) + num_ints_11(D);
  num_coordinates_13 = _12 + 1;
  # DEBUG num_coordinates => num_coordinates_13
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_11(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 4, loop depth 0
;;    pred:       2
  _43 = (sizetype) num_ints_11(D);
  _118 = _43 * 4;
  _117 = (sizetype) num_floats_10(D);
  _116 = _117 * 4;
  _115 = (ssizetype) _116;
  _114 = _115 + 4;
  _109 = (sizetype) _114;
  _108 = &coordinates + _109;
  __builtin_memcpy (_108, ints_19(D), _118);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
;;                9
  # DEBUG j => 0
  if (num_tilings_29(D) > 0)
    goto <bb 10>;
  else
    goto <bb 20>;
;;    succ:       10
;;                20

;;   basic block 6, loop depth 0
;;    pred:       3
  pretmp_112 = (float) num_tilings_29(D);
  _61 = (unsigned int) num_floats_10(D);
  _32 = _61 + 4294967295;
  _33 = (sizetype) _32;
  _34 = _33 + 1;
  _35 = _34 * 4;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       8
;;                6
  # ivtmp.138_58 = PHI <ivtmp.138_59(8), 0(6)>
  # DEBUG i => NULL
  _20 = MEM[base: floats_26(D), index: ivtmp.138_58, offset: 0B];
  _21 = _20 * pretmp_112;
  _22 = __builtin_floorf (_21);
  _23 = (int) _22;
  MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B] = _23;
  # DEBUG i => D#9
  # DEBUG i => D#9
  ivtmp.138_59 = ivtmp.138_58 + 4;
  if (ivtmp.138_59 != _35)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 8, loop depth 1
;;    pred:       7
  goto <bb 7>;
;;    succ:       7

;;   basic block 9, loop depth 0
;;    pred:       7
  _104 = (sizetype) num_floats_10(D);
  _103 = _104 * 4;
  __builtin_memset (&base, 0, _103);
  goto <bb 5>;
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       5
  ivtmp.132_52 = (unsigned long) the_tiles_60(D);
  _91 = (unsigned int) num_floats_10(D);
  _24 = _91 + 4294967295;
  _25 = (sizetype) _24;
  _27 = _25 + 1;
  _28 = _27 * 4;
  goto <bb 18>;
;;    succ:       18

;;   basic block 11, loop depth 2
;;    pred:       15
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       11
;;                19
  # ivtmp.121_15 = PHI <ivtmp.121_120(11), 0(19)>
  # ivtmp.127_119 = PHI <ivtmp.127_30(11), 1(19)>
  # DEBUG i => NULL
  _37 = MEM[symbol: qstate, index: ivtmp.121_15, offset: 0B];
  _38 = MEM[symbol: base, index: ivtmp.121_15, offset: 0B];
  if (_37 >= _38)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13
;;                14

;;   basic block 13, loop depth 2
;;    pred:       12
  _39 = _37 - _38;
  _40 = _39 % num_tilings_29(D);
  _41 = _37 - _40;
  goto <bb 15>;
;;    succ:       15

;;   basic block 14, loop depth 2
;;    pred:       12
  _44 = _37 + 1;
  _46 = _38 - _37;
  _47 = _46 + -1;
  _48 = _47 % num_tilings_29(D);
  _49 = _44 + _48;
  _50 = _49 - num_tilings_29(D);
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       13
;;                14
  # cstore_51 = PHI <_41(13), _50(14)>
  MEM[symbol: coordinates, index: ivtmp.121_15, offset: 0B] = cstore_51;
  _53 = (int) ivtmp.127_119;
  _54 = _38 + _53;
  MEM[symbol: base, index: ivtmp.121_15, offset: 0B] = _54;
  # DEBUG i => D#8
  # DEBUG i => D#8
  ivtmp.121_120 = ivtmp.121_15 + 4;
  ivtmp.127_30 = ivtmp.127_119 + 2;
  if (ivtmp.121_120 != _28)
    goto <bb 11>;
  else
    goto <bb 16>;
;;    succ:       11
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
;;                18
  # num_floats_74 = PHI <num_floats_10(D)(15), 0(18)>
  coordinates[num_floats_74] = j_79;
  _64 = hash (&coordinates, num_coordinates_13, ctable_62(D));
  _31 = (void *) ivtmp.132_75;
  MEM[base: _31, offset: 0B] = _64;
  j_67 = j_79 + 1;
  # DEBUG j => j_67
  # DEBUG j => j_67
  ivtmp.132_56 = ivtmp.132_75 + 4;
  if (j_67 != num_tilings_29(D))
    goto <bb 17>;
  else
    goto <bb 20>;
;;    succ:       17
;;                20

;;   basic block 17, loop depth 1
;;    pred:       16
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       17
;;                10
  # j_79 = PHI <j_67(17), 0(10)>
  # ivtmp.132_75 = PHI <ivtmp.132_56(17), ivtmp.132_52(10)>
  # DEBUG j => j_79
  # DEBUG i => 0
  if (num_floats_10(D) > 0)
    goto <bb 19>;
  else
    goto <bb 16>;
;;    succ:       19
;;                16

;;   basic block 19, loop depth 1
;;    pred:       18
  goto <bb 12>;
;;    succ:       12

;;   basic block 20, loop depth 0
;;    pred:       5
;;                16
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}


Partition 2: size 164 align 16
	coordinates
Partition 1: size 80 align 16
	base
Partition 0: size 80 align 16
	qstate
Inserting a value copy on edge BB6->BB7 : PART.36 = 0
Inserting a value copy on edge BB19->BB12 : PART.16 = 1
Inserting a value copy on edge BB19->BB12 : PART.4 = 0
Inserting a partition copy on edge BB15->BB16 :PART.42 = PART.0
Inserting a value copy on edge BB18->BB16 : PART.42 = 0
Inserting a value copy on edge BB10->BB18 : PART.41 = 0

;; Generating RTL for gimple basic block 2

;; num_coordinates_13 = _12 + 1;

(insn 20 19 21 (parallel [
            (set (reg:SI 115 [ D.26056 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (reg/v:SI 114 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:89 -1
     (nil))

(insn 21 20 0 (parallel [
            (set (reg/v:SI 62 [ num_coordinates ])
                (plus:SI (reg:SI 115 [ D.26056 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:89 -1
     (nil))

;; # DEBUG num_coordinates => num_coordinates_13

(debug_insn 22 21 0 (var_location:SI num_coordinates (const_int 0 [0])) tiles.cpp:89 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 23 22 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:91 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 24 23 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_ints_11(D) > 0)

(insn 25 24 26 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 114 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:91 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:91 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil)))

;; Generating RTL for gimple basic block 3

;; # DEBUG i => 0

(debug_insn 28 27 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_10(D) > 0)

(insn 29 28 30 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 112 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:94 -1
     (nil))

(jump_insn 30 29 33 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:94 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

(note 33 30 31 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 31 33 32 22 (set (pc)
        (label_ref 0)) tiles.cpp:94 -1
     (nil))

(barrier 32 31 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 34 32 35 51 "" [0 uses])

(note 35 34 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memcpy (_108, ints_19(D), _118);

(insn 36 35 37 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))

(insn 37 36 38 (set (reg:DI 117 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 112 [ num_floats ]))) tiles.cpp:91 -1
     (nil))

(insn 38 37 39 (parallel [
            (set (reg:DI 118 [ D.26059 ])
                (ashift:DI (reg:DI 117 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))

(insn 39 38 40 (parallel [
            (set (reg:DI 119 [ D.26062 ])
                (plus:DI (reg:DI 118 [ D.26059 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))

(insn 40 39 41 (parallel [
            (set (reg:DI 120 [ D.26061 ])
                (plus:DI (reg:DI 116)
                    (reg:DI 119 [ D.26062 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))

(insn 41 40 42 (set (reg:DI 121 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 114 [ num_ints ]))) tiles.cpp:91 -1
     (nil))

(insn 42 41 43 (parallel [
            (set (reg:DI 122 [ D.26059 ])
                (ashift:DI (reg:DI 121 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))

(insn 43 42 44 (set (reg:DI 123)
        (reg:DI 120 [ D.26061 ])) -1
     (nil))

(insn 44 43 45 (set (reg:DI 124)
        (reg/v/f:DI 113 [ ints ])) -1
     (nil))

(insn 45 44 46 (set (reg:DI 125)
        (reg:DI 122 [ D.26059 ])) -1
     (nil))

(insn 46 45 47 (set (reg:DI 1 dx)
        (reg:DI 125)) -1
     (nil))

(insn 47 46 48 (set (reg:DI 4 si)
        (reg:DI 124)) -1
     (nil))

(insn 48 47 49 (set (reg:DI 5 di)
        (reg:DI 123)) -1
     (nil))

(call_insn 49 48 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))

(insn 50 49 51 (set (reg:DI 126)
        (reg:DI 0 ax)) -1
     (nil))

(insn 51 50 0 (set (reg:DI 127)
        (reg:DI 126)) -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 55 54 56 53 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => 0

(debug_insn 57 56 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; if (num_tilings_29(D) > 0)

(insn 58 57 59 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 109 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:100 -1
     (nil))

(jump_insn 59 58 62 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:100 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

(note 62 59 60 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn 60 62 61 23 (set (pc)
        (label_ref 0)) tiles.cpp:100 -1
     (nil))

(barrier 61 60 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 63 61 64 52 "" [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; _112 = (float) num_tilings_29(D);

(insn 65 64 0 (set (reg:SF 102 [ D.26057 ])
        (float:SF (reg/v:SI 109 [ num_tilings ]))) -1
     (nil))

;; _35 = _34 * 4;

(insn 66 65 67 (parallel [
            (set (reg:SI 128 [ D.26058 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 67 66 68 (set (reg:DI 129 [ D.26059 ])
        (zero_extend:DI (reg:SI 128 [ D.26058 ]))) -1
     (nil))

(insn 68 67 69 (parallel [
            (set (reg:DI 130 [ D.26059 ])
                (plus:DI (reg:DI 129 [ D.26059 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 69 68 0 (parallel [
            (set (reg:DI 77 [ D.26059 ])
                (ashift:DI (reg:DI 130 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 7

;; # DEBUG i => NULL

(debug_insn 71 70 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _22 = __builtin_floorf (_21);

(insn 72 71 73 (set (reg:SF 131 [ D.26057 ])
        (mult:SF (reg:SF 102 [ D.26057 ])
            (mem:SF (plus:DI (reg/v/f:DI 111 [ floats ])
                    (reg:DI 92 [ ivtmp.138 ])) [0 MEM[base: floats_26(D), index: ivtmp.138_58, offset: 0B]+0 S4 A32]))) tiles.cpp:95 -1
     (nil))

(insn 73 72 74 (set (reg:SF 21 xmm0)
        (reg:SF 131 [ D.26057 ])) tiles.cpp:95 -1
     (nil))

(call_insn/u 74 73 75 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 75 74 0 (set (reg:SF 66 [ D.26057 ])
        (reg:SF 21 xmm0)) tiles.cpp:95 -1
     (nil))

;; MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B] = _23;

(insn 76 75 77 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:95 -1
     (nil))

(insn 77 76 78 (set (reg:SI 133)
        (fix:SI (reg:SF 66 [ D.26057 ]))) tiles.cpp:95 -1
     (nil))

(insn 78 77 0 (set (mem:SI (plus:DI (reg:DI 92 [ ivtmp.138 ])
                (reg:DI 132)) [0 MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B]+0 S4 A32])
        (reg:SI 133)) tiles.cpp:95 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 66 [ D.26057 ]))
        (nil)))

;; # DEBUG i => D#9

(debug_insn 79 78 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:94 -1
     (nil))
;; # DEBUG i => D#9

(debug_insn 80 79 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.138_59 = ivtmp.138_58 + 4;

(insn 81 80 0 (parallel [
            (set (reg:DI 92 [ ivtmp.138 ])
                (plus:DI (reg:DI 92 [ ivtmp.138 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.138_59 != _35)

(insn 82 81 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ ivtmp.138 ])
            (reg:DI 77 [ D.26059 ]))) tiles.cpp:94 -1
     (nil))

(jump_insn 83 82 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:94 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; 

(code_label 88 87 89 57 "" [0 uses])

(note 89 88 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memset (&base, 0, _103);

(insn 90 89 91 (set (reg:DI 134 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 112 [ num_floats ]))) tiles.cpp:96 -1
     (nil))

(insn 91 90 92 (parallel [
            (set (reg:DI 135 [ D.26059 ])
                (ashift:DI (reg:DI 134 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:96 -1
     (nil))

(insn 92 91 93 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 93 92 94 (set (reg:DI 137)
        (reg:DI 136)) -1
     (nil))

(insn 94 93 95 (set (reg:DI 138)
        (reg:DI 135 [ D.26059 ])) -1
     (nil))

(insn 95 94 96 (set (reg:DI 1 dx)
        (reg:DI 138)) -1
     (nil))

(insn 96 95 97 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))

(insn 97 96 98 (set (reg:DI 5 di)
        (reg:DI 137)) -1
     (nil))

(call_insn 98 97 99 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 99 98 100 (set (reg:DI 139)
        (reg:DI 0 ax)) -1
     (nil))

(insn 100 99 0 (set (reg:DI 140)
        (reg:DI 139)) -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 103 102 104 55 "" [0 uses])

(note 104 103 0 NOTE_INSN_BASIC_BLOCK)

;; ivtmp.132_52 = (unsigned long) the_tiles_60(D);

(insn 105 104 0 (set (reg:DI 91 [ ivtmp.132 ])
        (reg/v/f:DI 108 [ the_tiles ])) -1
     (nil))

;; _28 = _27 * 4;

(insn 106 105 107 (parallel [
            (set (reg:SI 141 [ D.26058 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 107 106 108 (set (reg:DI 142 [ D.26059 ])
        (zero_extend:DI (reg:SI 141 [ D.26058 ]))) -1
     (nil))

(insn 108 107 109 (parallel [
            (set (reg:DI 143 [ D.26059 ])
                (plus:DI (reg:DI 142 [ D.26059 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 109 108 0 (parallel [
            (set (reg:DI 71 [ D.26059 ])
                (ashift:DI (reg:DI 143 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; # DEBUG i => NULL

(debug_insn 114 113 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _37 = MEM[symbol: qstate, index: ivtmp.121_15, offset: 0B];

(insn 115 114 116 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:106 -1
     (nil))

(insn 116 115 0 (set (reg:SI 78 [ D.26056 ])
        (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 144)) [0 MEM[symbol: qstate, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 -1
     (nil))

;; _38 = MEM[symbol: base, index: ivtmp.121_15, offset: 0B];

(insn 117 116 118 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:106 -1
     (nil))

(insn 118 117 0 (set (reg:SI 79 [ D.26056 ])
        (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 145)) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 -1
     (nil))

;; if (_37 >= _38)

(insn 119 118 120 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 78 [ D.26056 ])
            (reg:SI 79 [ D.26056 ]))) tiles.cpp:106 -1
     (nil))

(jump_insn 120 119 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:106 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 13

;; _41 = _37 - _40;

(insn 122 121 123 (parallel [
            (set (reg:SI 146 [ D.26056 ])
                (minus:SI (reg:SI 78 [ D.26056 ])
                    (reg:SI 79 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 -1
     (nil))

(insn 123 122 124 (parallel [
            (set (reg:SI 149)
                (div:SI (reg:SI 146 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (set (reg:SI 148 [ D.26056 ])
                (mod:SI (reg:SI 146 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 -1
     (nil))

(insn 124 123 0 (parallel [
            (set (reg:SI 82 [ D.26056 ])
                (minus:SI (reg:SI 78 [ D.26056 ])
                    (reg:SI 148 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 127 126 128 60 "" [0 uses])

(note 128 127 0 NOTE_INSN_BASIC_BLOCK)

;; _50 = _49 - num_tilings_29(D);

(insn 129 128 130 (parallel [
            (set (reg:SI 150 [ D.26056 ])
                (plus:SI (reg:SI 78 [ D.26056 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))

(insn 130 129 131 (parallel [
            (set (reg:SI 151 [ D.26056 ])
                (minus:SI (reg:SI 79 [ D.26056 ])
                    (reg:SI 78 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))

(insn 131 130 132 (parallel [
            (set (reg:SI 152 [ D.26056 ])
                (plus:SI (reg:SI 151 [ D.26056 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))

(insn 132 131 133 (parallel [
            (set (reg:SI 155)
                (div:SI (reg:SI 152 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (set (reg:SI 154 [ D.26056 ])
                (mod:SI (reg:SI 152 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))

(insn 133 132 134 (parallel [
            (set (reg:SI 156 [ D.26056 ])
                (plus:SI (reg:SI 150 [ D.26056 ])
                    (reg:SI 154 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))

(insn 134 133 0 (parallel [
            (set (reg:SI 82 [ D.26056 ])
                (minus:SI (reg:SI 156 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 135 134 136 61 "" [0 uses])

(note 136 135 0 NOTE_INSN_BASIC_BLOCK)

;; MEM[symbol: coordinates, index: ivtmp.121_15, offset: 0B] = _51;

(insn 137 136 138 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 138 137 0 (set (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 157)) [0 MEM[symbol: coordinates, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 82 [ D.26056 ])) -1
     (nil))

;; MEM[symbol: base, index: ivtmp.121_15, offset: 0B] = _54;

(insn 139 138 140 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:112 -1
     (nil))

(insn 140 139 141 (parallel [
            (set (reg:SI 159)
                (plus:SI (reg:SI 79 [ D.26056 ])
                    (reg:SI 72 [ ivtmp.127 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:112 -1
     (nil))

(insn 141 140 0 (set (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 158)) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 159)) tiles.cpp:112 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 79 [ D.26056 ])
            (reg:SI 72 [ ivtmp.127 ]))
        (nil)))

;; # DEBUG i => D#8

(debug_insn 142 141 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:103 -1
     (nil))
;; # DEBUG i => D#8

(debug_insn 143 142 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.121_120 = ivtmp.121_15 + 4;

(insn 144 143 0 (parallel [
            (set (reg:DI 63 [ ivtmp.121 ])
                (plus:DI (reg:DI 63 [ ivtmp.121 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; ivtmp.127_30 = ivtmp.127_119 + 2;

(insn 145 144 0 (parallel [
            (set (reg:SI 72 [ ivtmp.127 ])
                (plus:SI (reg:SI 72 [ ivtmp.127 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.121_120 != _28)

(insn 147 145 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 63 [ ivtmp.121 ])
            (reg:DI 71 [ D.26059 ]))) tiles.cpp:103 -1
     (nil))

(jump_insn 148 147 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) tiles.cpp:103 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

;; Generating RTL for gimple basic block 16

;; coordinates[num_floats_74] = j_79;

(insn 150 149 151 (set (reg:DI 160)
        (sign_extend:DI (reg/v:SI 96 [ num_floats ]))) tiles.cpp:115 -1
     (nil))

(insn 151 150 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 160)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 95 [ j ])) tiles.cpp:115 -1
     (nil))

;; _64 = hash (&coordinates, num_coordinates_13, ctable_62(D));

(insn 152 151 153 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:117 -1
     (nil))

(insn 153 152 154 (set (reg:DI 1 dx)
        (reg/v/f:DI 110 [ ctable ])) tiles.cpp:117 -1
     (nil))

(insn 154 153 155 (set (reg:SI 4 si)
        (reg/v:SI 62 [ num_coordinates ])) tiles.cpp:117 -1
     (nil))

(insn 155 154 156 (set (reg:DI 5 di)
        (reg:DI 161)) tiles.cpp:117 -1
     (nil))

(call_insn 156 155 157 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b82f1f16800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:117 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 157 156 0 (set (reg:SI 94 [ D.26056 ])
        (reg:SI 0 ax)) tiles.cpp:117 -1
     (nil))

;; MEM[base: _31, offset: 0B] = _64;

(insn 158 157 0 (set (mem:SI (reg:DI 91 [ ivtmp.132 ]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 94 [ D.26056 ])) tiles.cpp:117 -1
     (nil))

;; j_67 = j_79 + 1;

(insn 159 158 0 (parallel [
            (set (reg/v:SI 95 [ j ])
                (plus:SI (reg/v:SI 95 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:100 -1
     (nil))

;; # DEBUG j => j_67

(debug_insn 160 159 0 (var_location:SI j (const_int 0 [0])) tiles.cpp:100 -1
     (nil))
;; # DEBUG j => j_67

(debug_insn 161 160 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; ivtmp.132_56 = ivtmp.132_75 + 4;

(insn 162 161 0 (parallel [
            (set (reg:DI 91 [ ivtmp.132 ])
                (plus:DI (reg:DI 91 [ ivtmp.132 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (j_67 != num_tilings_29(D))

(insn 163 162 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ j ])
            (reg/v:SI 109 [ num_tilings ]))) tiles.cpp:100 -1
     (nil))

(jump_insn 164 163 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:100 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; 

(code_label 166 165 167 59 "" [0 uses])

(note 167 166 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => j_79

(debug_insn 168 167 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => 0

(debug_insn 169 168 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_10(D) > 0)

(insn 171 169 172 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 112 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:103 -1
     (nil))

(jump_insn 172 171 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) tiles.cpp:103 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; 

(code_label 177 176 178 56 "" [0 uses])

(note 178 177 0 NOTE_INSN_BASIC_BLOCK)

;; qstate ={v} {CLOBBER};

(nil)

;; base ={v} {CLOBBER};

(nil)

;; coordinates ={v} {CLOBBER};

(nil)
Edge 18->16 redirected to 26


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 7 failed.
Forwarding edge 7->8 to 26 failed.
Redirecting jump 60 from 25 to 26.
Edge 21->25 redirected to 26
deleting block 25


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 7 failed.
Forwarding edge 7->8 to 26 failed.


;;
;; Full RTL generated for this function:
;;
(note 3 0 18 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 18 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 18 5 2 (set (reg/v/f:DI 108 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:84 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 109 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:84 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 110 [ ctable ])
        (reg:DI 1 dx [ ctable ])) tiles.cpp:84 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 111 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:84 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 112 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:84 -1
     (nil))
(insn 9 8 10 2 (set (reg/v/f:DI 113 [ ints ])
        (reg:DI 38 r9 [ ints ])) tiles.cpp:84 -1
     (nil))
(insn 10 9 11 2 (set (reg/v:SI 114 [ num_ints ])
        (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 num_ints+0 S4 A64])) tiles.cpp:84 -1
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 num_ints+0 S4 A64])
        (nil)))
(note 11 10 20 2 NOTE_INSN_FUNCTION_BEG)
(insn 20 11 21 2 (parallel [
            (set (reg:SI 115 [ D.26056 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (reg/v:SI 114 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:89 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/v:SI 62 [ num_coordinates ])
                (plus:SI (reg:SI 115 [ D.26056 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:89 -1
     (nil))
(debug_insn 22 21 23 2 (var_location:SI num_coordinates (reg/v:SI 62 [ num_coordinates ])) tiles.cpp:89 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI i (const_int 0 [0])) tiles.cpp:91 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 25 24 26 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 114 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:91 -1
     (nil))
(jump_insn 26 25 52 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) tiles.cpp:91 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 34)
;;  succ:       6 [97.6%] 
;;              4 [2.4%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              6 [100.0%] 
(code_label 52 26 27 4 54 "" [1 uses])
(note 27 52 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 28 27 29 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 29 28 30 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 112 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:94 -1
     (nil))
(jump_insn 30 29 33 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) tiles.cpp:94 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 63)
;;  succ:       9 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [4.8%]  (FALLTHRU)
(note 33 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 31 33 32 5 (set (pc)
        (label_ref 55)) tiles.cpp:94 -1
     (nil)
 -> 55)
;;  succ:       7 [100.0%] 

(barrier 32 31 34)
;; basic block 6, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [97.6%] 
(code_label 34 32 35 6 51 "" [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 117 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 112 [ num_floats ]))) tiles.cpp:91 -1
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg:DI 118 [ D.26059 ])
                (ashift:DI (reg:DI 117 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 119 [ D.26062 ])
                (plus:DI (reg:DI 118 [ D.26059 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg:DI 120 [ D.26061 ])
                (plus:DI (reg:DI 116)
                    (reg:DI 119 [ D.26062 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 121 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 114 [ num_ints ]))) tiles.cpp:91 -1
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 122 [ D.26059 ])
                (ashift:DI (reg:DI 121 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 123)
        (reg:DI 120 [ D.26061 ])) -1
     (nil))
(insn 44 43 45 6 (set (reg:DI 124)
        (reg/v/f:DI 113 [ ints ])) -1
     (nil))
(insn 45 44 46 6 (set (reg:DI 125)
        (reg:DI 122 [ D.26059 ])) -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 1 dx)
        (reg:DI 125)) -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 4 si)
        (reg:DI 124)) -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 5 di)
        (reg:DI 123)) -1
     (nil))
(call_insn 49 48 50 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 50 49 51 6 (set (reg:DI 126)
        (reg:DI 0 ax)) -1
     (nil))
(insn 51 50 53 6 (set (reg:DI 127)
        (reg:DI 126)) -1
     (nil))
(jump_insn 53 51 54 6 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
;;  succ:       4 [100.0%] 

(barrier 54 53 55)
;; basic block 7, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0%] 
;;              5 [100.0%] 
(code_label 55 54 56 7 53 "" [2 uses])
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 57 56 58 7 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 58 57 59 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 109 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:100 -1
     (nil))
(jump_insn 59 58 62 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) tiles.cpp:100 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 103)
;;  succ:       13 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
(note 62 59 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 60 62 61 8 (set (pc)
        (label_ref:DI 179)) tiles.cpp:100 650 {jump}
     (nil)
 -> 179)
;;  succ:       26 [100.0%] 

(barrier 61 60 63)
;; basic block 9, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [95.2%] 
(code_label 63 61 64 9 52 "" [1 uses])
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg:SF 102 [ D.26057 ])
        (float:SF (reg/v:SI 109 [ num_tilings ]))) -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:SI 128 [ D.26058 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 129 [ D.26059 ])
        (zero_extend:DI (reg:SI 128 [ D.26058 ]))) -1
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:DI 130 [ D.26059 ])
                (plus:DI (reg:DI 129 [ D.26059 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 69 68 12 9 (parallel [
            (set (reg:DI 77 [ D.26059 ])
                (ashift:DI (reg:DI 130 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 12 69 85 9 (set (reg:DI 92 [ ivtmp.138 ])
        (const_int 0 [0])) tiles.cpp:94 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 942, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [100.0%]  (DFS_BACK)
;;              9 [100.0%]  (FALLTHRU)
(code_label 85 12 70 10 58 "" [1 uses])
(note 70 85 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 10 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 72 71 73 10 (set (reg:SF 131 [ D.26057 ])
        (mult:SF (reg:SF 102 [ D.26057 ])
            (mem:SF (plus:DI (reg/v/f:DI 111 [ floats ])
                    (reg:DI 92 [ ivtmp.138 ])) [0 MEM[base: floats_26(D), index: ivtmp.138_58, offset: 0B]+0 S4 A32]))) tiles.cpp:95 -1
     (nil))
(insn 73 72 74 10 (set (reg:SF 21 xmm0)
        (reg:SF 131 [ D.26057 ])) tiles.cpp:95 -1
     (nil))
(call_insn/u 74 73 75 10 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 75 74 76 10 (set (reg:SF 66 [ D.26057 ])
        (reg:SF 21 xmm0)) tiles.cpp:95 -1
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:95 -1
     (nil))
(insn 77 76 78 10 (set (reg:SI 133)
        (fix:SI (reg:SF 66 [ D.26057 ]))) tiles.cpp:95 -1
     (nil))
(insn 78 77 79 10 (set (mem:SI (plus:DI (reg:DI 92 [ ivtmp.138 ])
                (reg:DI 132)) [0 MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B]+0 S4 A32])
        (reg:SI 133)) tiles.cpp:95 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 66 [ D.26057 ]))
        (nil)))
(debug_insn 79 78 80 10 (var_location:SI i (debug_expr:SI D#9)) tiles.cpp:94 -1
     (nil))
(debug_insn 80 79 81 10 (var_location:SI i (debug_expr:SI D#9)) -1
     (nil))
(insn 81 80 82 10 (parallel [
            (set (reg:DI 92 [ ivtmp.138 ])
                (plus:DI (reg:DI 92 [ ivtmp.138 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 82 81 83 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ ivtmp.138 ])
            (reg:DI 77 [ D.26059 ]))) tiles.cpp:94 -1
     (nil))
(jump_insn 83 82 84 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) tiles.cpp:94 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 88)
;;  succ:       11 [95.2%]  (FALLTHRU)
;;              12 [4.8%] 

;; basic block 11, loop depth 1, count 0, freq 897, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [95.2%]  (FALLTHRU)
(note 84 83 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 86 84 87 11 (set (pc)
        (label_ref 85)) tiles.cpp:94 -1
     (nil)
 -> 85)
;;  succ:       10 [100.0%]  (DFS_BACK)

(barrier 87 86 88)
;; basic block 12, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [4.8%] 
(code_label 88 87 89 12 57 "" [1 uses])
(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 12 (set (reg:DI 134 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 112 [ num_floats ]))) tiles.cpp:96 -1
     (nil))
(insn 91 90 92 12 (parallel [
            (set (reg:DI 135 [ D.26059 ])
                (ashift:DI (reg:DI 134 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:96 -1
     (nil))
(insn 92 91 93 12 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 93 92 94 12 (set (reg:DI 137)
        (reg:DI 136)) -1
     (nil))
(insn 94 93 95 12 (set (reg:DI 138)
        (reg:DI 135 [ D.26059 ])) -1
     (nil))
(insn 95 94 96 12 (set (reg:DI 1 dx)
        (reg:DI 138)) -1
     (nil))
(insn 96 95 97 12 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))
(insn 97 96 98 12 (set (reg:DI 5 di)
        (reg:DI 137)) -1
     (nil))
(call_insn 98 97 99 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 99 98 100 12 (set (reg:DI 139)
        (reg:DI 0 ax)) -1
     (nil))
(insn 100 99 101 12 (set (reg:DI 140)
        (reg:DI 139)) -1
     (nil))
(jump_insn 101 100 102 12 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
;;  succ:       7 [100.0%] 

(barrier 102 101 103)
;; basic block 13, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [91.0%] 
(code_label 103 102 104 13 55 "" [1 uses])
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 13 (set (reg:DI 91 [ ivtmp.132 ])
        (reg/v/f:DI 108 [ the_tiles ])) -1
     (nil))
(insn 106 105 107 13 (parallel [
            (set (reg:SI 141 [ D.26058 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 107 106 108 13 (set (reg:DI 142 [ D.26059 ])
        (zero_extend:DI (reg:SI 141 [ D.26058 ]))) -1
     (nil))
(insn 108 107 109 13 (parallel [
            (set (reg:DI 143 [ D.26059 ])
                (plus:DI (reg:DI 142 [ D.26059 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 109 108 17 13 (parallel [
            (set (reg:DI 71 [ D.26059 ])
                (ashift:DI (reg:DI 143 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 17 109 110 13 (set (reg/v:SI 95 [ j ])
        (const_int 0 [0])) tiles.cpp:100 -1
     (nil))
(jump_insn 110 17 111 13 (set (pc)
        (label_ref 166)) -1
     (nil)
 -> 166)
;;  succ:       23 [100.0%] 

(barrier 111 110 146)
;; basic block 14, loop depth 2, count 0, freq 9071, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [95.2%] 
(code_label 146 111 112 14 62 "" [1 uses])
(note 112 146 174 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;  succ:       15 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 15, loop depth 2, count 0, freq 9524, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0%]  (FALLTHRU,DFS_BACK)
;;              24 [100.0%] 
(code_label 174 112 113 15 64 "" [1 uses])
(note 113 174 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 114 113 115 15 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 115 114 116 15 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:106 -1
     (nil))
(insn 116 115 117 15 (set (reg:SI 78 [ D.26056 ])
        (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 144)) [0 MEM[symbol: qstate, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 -1
     (nil))
(insn 117 116 118 15 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:106 -1
     (nil))
(insn 118 117 119 15 (set (reg:SI 79 [ D.26056 ])
        (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 145)) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 -1
     (nil))
(insn 119 118 120 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 78 [ D.26056 ])
            (reg:SI 79 [ D.26056 ]))) tiles.cpp:106 -1
     (nil))
(jump_insn 120 119 121 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) tiles.cpp:106 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 127)
;;  succ:       16 [50.0%]  (FALLTHRU)
;;              17 [50.0%] 

;; basic block 16, loop depth 2, count 0, freq 4762, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [50.0%]  (FALLTHRU)
(note 121 120 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 16 (parallel [
            (set (reg:SI 146 [ D.26056 ])
                (minus:SI (reg:SI 78 [ D.26056 ])
                    (reg:SI 79 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 -1
     (nil))
(insn 123 122 124 16 (parallel [
            (set (reg:SI 149)
                (div:SI (reg:SI 146 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (set (reg:SI 148 [ D.26056 ])
                (mod:SI (reg:SI 146 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 -1
     (nil))
(insn 124 123 125 16 (parallel [
            (set (reg:SI 82 [ D.26056 ])
                (minus:SI (reg:SI 78 [ D.26056 ])
                    (reg:SI 148 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 -1
     (nil))
(jump_insn 125 124 126 16 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
;;  succ:       18 [100.0%] 

(barrier 126 125 127)
;; basic block 17, loop depth 2, count 0, freq 4762, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [50.0%] 
(code_label 127 126 128 17 60 "" [1 uses])
(note 128 127 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 17 (parallel [
            (set (reg:SI 150 [ D.26056 ])
                (plus:SI (reg:SI 78 [ D.26056 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))
(insn 130 129 131 17 (parallel [
            (set (reg:SI 151 [ D.26056 ])
                (minus:SI (reg:SI 79 [ D.26056 ])
                    (reg:SI 78 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))
(insn 131 130 132 17 (parallel [
            (set (reg:SI 152 [ D.26056 ])
                (plus:SI (reg:SI 151 [ D.26056 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))
(insn 132 131 133 17 (parallel [
            (set (reg:SI 155)
                (div:SI (reg:SI 152 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (set (reg:SI 154 [ D.26056 ])
                (mod:SI (reg:SI 152 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))
(insn 133 132 134 17 (parallel [
            (set (reg:SI 156 [ D.26056 ])
                (plus:SI (reg:SI 150 [ D.26056 ])
                    (reg:SI 154 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))
(insn 134 133 135 17 (parallel [
            (set (reg:SI 82 [ D.26056 ])
                (minus:SI (reg:SI 156 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 -1
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)

;; basic block 18, loop depth 2, count 0, freq 9524, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [100.0%] 
;;              17 [100.0%]  (FALLTHRU)
(code_label 135 134 136 18 61 "" [1 uses])
(note 136 135 137 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 18 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 138 137 139 18 (set (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 157)) [0 MEM[symbol: coordinates, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 82 [ D.26056 ])) -1
     (nil))
(insn 139 138 140 18 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:112 -1
     (nil))
(insn 140 139 141 18 (parallel [
            (set (reg:SI 159)
                (plus:SI (reg:SI 79 [ D.26056 ])
                    (reg:SI 72 [ ivtmp.127 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:112 -1
     (nil))
(insn 141 140 142 18 (set (mem:SI (plus:DI (reg:DI 63 [ ivtmp.121 ])
                (reg:DI 158)) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 159)) tiles.cpp:112 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 79 [ D.26056 ])
            (reg:SI 72 [ ivtmp.127 ]))
        (nil)))
(debug_insn 142 141 143 18 (var_location:SI i (debug_expr:SI D#8)) tiles.cpp:103 -1
     (nil))
(debug_insn 143 142 144 18 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))
(insn 144 143 145 18 (parallel [
            (set (reg:DI 63 [ ivtmp.121 ])
                (plus:DI (reg:DI 63 [ ivtmp.121 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 145 144 147 18 (parallel [
            (set (reg:SI 72 [ ivtmp.127 ])
                (plus:SI (reg:SI 72 [ ivtmp.127 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 147 145 148 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 63 [ ivtmp.121 ])
            (reg:DI 71 [ D.26059 ]))) tiles.cpp:103 -1
     (nil))
(jump_insn 148 147 181 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) tiles.cpp:103 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 146)
;;  succ:       14 [95.2%] 
;;              19 [4.8%]  (FALLTHRU)

;; basic block 19, loop depth 1, count 0, freq 453, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 [4.8%]  (FALLTHRU)
(note 181 148 15 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 15 181 182 19 (set (reg/v:SI 96 [ num_floats ])
        (reg/v:SI 112 [ num_floats ])) -1
     (nil))
(jump_insn 182 15 183 19 (set (pc)
        (label_ref 170)) -1
     (nil)
 -> 170)
;;  succ:       21 [100.0%] 

(barrier 183 182 185)
;; basic block 20, loop depth 1, count 0, freq 23, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 [4.8%] 
(code_label 185 183 184 20 65 "" [1 uses])
(note 184 185 16 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 16 184 170 20 (set (reg/v:SI 96 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:103 -1
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)

;; basic block 21, loop depth 1, count 0, freq 476, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              19 [100.0%] 
(code_label 170 16 149 21 63 "" [1 uses])
(note 149 170 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 21 (set (reg:DI 160)
        (sign_extend:DI (reg/v:SI 96 [ num_floats ]))) tiles.cpp:115 -1
     (nil))
(insn 151 150 152 21 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 160)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 95 [ j ])) tiles.cpp:115 -1
     (nil))
(insn 152 151 153 21 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:117 -1
     (nil))
(insn 153 152 154 21 (set (reg:DI 1 dx)
        (reg/v/f:DI 110 [ ctable ])) tiles.cpp:117 -1
     (nil))
(insn 154 153 155 21 (set (reg:SI 4 si)
        (reg/v:SI 62 [ num_coordinates ])) tiles.cpp:117 -1
     (nil))
(insn 155 154 156 21 (set (reg:DI 5 di)
        (reg:DI 161)) tiles.cpp:117 -1
     (nil))
(call_insn 156 155 157 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b82f1f16800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:117 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 157 156 158 21 (set (reg:SI 94 [ D.26056 ])
        (reg:SI 0 ax)) tiles.cpp:117 -1
     (nil))
(insn 158 157 159 21 (set (mem:SI (reg:DI 91 [ ivtmp.132 ]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 94 [ D.26056 ])) tiles.cpp:117 -1
     (nil))
(insn 159 158 160 21 (parallel [
            (set (reg/v:SI 95 [ j ])
                (plus:SI (reg/v:SI 95 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:100 -1
     (nil))
(debug_insn 160 159 161 21 (var_location:SI j (reg/v:SI 95 [ j ])) tiles.cpp:100 -1
     (nil))
(debug_insn 161 160 162 21 (var_location:SI j (reg/v:SI 95 [ j ])) -1
     (nil))
(insn 162 161 163 21 (parallel [
            (set (reg:DI 91 [ ivtmp.132 ])
                (plus:DI (reg:DI 91 [ ivtmp.132 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 163 162 164 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ j ])
            (reg/v:SI 109 [ num_tilings ]))) tiles.cpp:100 -1
     (nil))
(jump_insn 164 163 165 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 179)
            (pc))) tiles.cpp:100 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 179)
;;  succ:       22 [91.0%]  (FALLTHRU)
;;              26 [9.0%] 

;; basic block 22, loop depth 1, count 0, freq 433, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 [91.0%]  (FALLTHRU)
(note 165 164 166 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;;  succ:       23 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 23, loop depth 1, count 0, freq 476, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU,DFS_BACK)
;;              13 [100.0%] 
(code_label 166 165 167 23 59 "" [1 uses])
(note 167 166 168 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 168 167 169 23 (var_location:SI j (reg/v:SI 95 [ j ])) -1
     (nil))
(debug_insn 169 168 171 23 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 171 169 172 23 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 112 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:103 -1
     (nil))
(jump_insn 172 171 173 23 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 185)
            (pc))) tiles.cpp:103 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 185)
;;  succ:       24 [95.2%]  (FALLTHRU)
;;              20 [4.8%] 

;; basic block 24, loop depth 1, count 0, freq 453, maybe hot
;;  prev block 23, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 [95.2%]  (FALLTHRU)
(note 173 172 13 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 13 173 14 24 (set (reg:SI 72 [ ivtmp.127 ])
        (const_int 1 [0x1])) tiles.cpp:103 -1
     (nil))
(insn 14 13 175 24 (set (reg:DI 63 [ ivtmp.121 ])
        (const_int 0 [0])) tiles.cpp:103 -1
     (nil))
(jump_insn 175 14 176 24 (set (pc)
        (label_ref 174)) tiles.cpp:103 -1
     (nil)
 -> 174)
;;  succ:       15 [100.0%] 

(barrier 176 175 179)
;; basic block 26, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 24, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 [9.0%] 
;;              8 [100.0%] 
(code_label 179 176 180 26 50 "" [2 uses])
(note 180 179 0 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void collision_table::reset() (_ZN15collision_table5resetEv, funcdef_no=1065, decl_uid=23655, cgraph_uid=309)

void collision_table::reset() (struct collision_table * const this)
{
  unsigned long ivtmp.147;
  long unsigned int ivtmp.146;
  long int _4;
  long int _6;
  long int * _7;
  long int * _10;
  long int _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG i => 0
  # DEBUG i => 0
  _19 = this_5(D)->m;
  if (_19 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                5
  this_5(D)->calls = 0;
  this_5(D)->clearhits = 0;
  this_5(D)->collisions = 0;
  return;
;;    succ:       EXIT

;;   basic block 4, loop depth 0
;;    pred:       2
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       6
;;                4
  # ivtmp.146_22 = PHI <ivtmp.146_27(6), 0(4)>
  # ivtmp.147_18 = PHI <ivtmp.147_17(6), 1(4)>
  # DEBUG i => (int) ((unsigned int) ivtmp.147_18 + 4294967295)
  _7 = this_5(D)->data;
  _10 = _7 + ivtmp.146_22;
  *_10 = -1;
  # DEBUG D#10 => (int) ivtmp.147_18
  # DEBUG i => D#10
  # DEBUG i => D#10
  _4 = (long int) ivtmp.147_18;
  _6 = this_5(D)->m;
  ivtmp.146_27 = ivtmp.146_22 + 8;
  ivtmp.147_17 = ivtmp.147_18 + 1;
  if (_4 < _6)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 6, loop depth 1
;;    pred:       5
  goto <bb 5>;
;;    succ:       5

}



Partition map 

Partition 4 (_4 - 4 )
Partition 5 (this_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 10 (_10 - 10 )
Partition 17 (ivtmp.147_17 - 17 )
Partition 18 (ivtmp.147_18 - 18 )
Partition 19 (_19 - 19 )
Partition 22 (ivtmp.146_22 - 22 )
Partition 27 (ivtmp.146_27 - 27 )


Partition map 

Partition 0 (this_5(D) - 5 )
Partition 1 (ivtmp.147_17 - 17 )
Partition 2 (ivtmp.147_18 - 18 )
Partition 3 (ivtmp.146_22 - 22 )
Partition 4 (ivtmp.146_27 - 27 )


Live on entry to BB2 : this_5(D)  

Live on entry to BB3 : this_5(D)  

Live on entry to BB4 : this_5(D)  

Live on entry to BB5 : this_5(D)  

Live on entry to BB6 : this_5(D)  ivtmp.147_17  ivtmp.146_27  

Conflict graph:

After sorting:
Sorted Coalesce list:
(8281) ivtmp.146_22 <-> ivtmp.146_27
(8281) ivtmp.147_17 <-> ivtmp.147_18

Partition map 

Partition 0 (this_5(D) - 5 )
Partition 1 (ivtmp.147_17 - 17 )
Partition 2 (ivtmp.147_18 - 18 )
Partition 3 (ivtmp.146_22 - 22 )
Partition 4 (ivtmp.146_27 - 27 )

Coalesce list: (22)ivtmp.146_22 & (27)ivtmp.146_27 [map: 3, 4] : Success -> 3
Coalesce list: (17)ivtmp.147_17 & (18)ivtmp.147_18 [map: 1, 2] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_4 - 4 )
Partition 1 (this_5(D) - 5 )
Partition 2 (_6 - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_10 - 10 )
Partition 5 (ivtmp.147_17 - 17 18 )
Partition 6 (_19 - 19 )
Partition 7 (ivtmp.146_22 - 22 27 )


Replacing Expressions
_6 replace with --> _6 = this_5(D)->m;

_7 replace with --> _7 = this_5(D)->data;

_10 replace with --> _10 = _7 + ivtmp.146_22;

_19 replace with --> _19 = this_5(D)->m;


void collision_table::reset() (struct collision_table * const this)
{
  unsigned long ivtmp.147;
  long unsigned int ivtmp.146;
  long int _4;
  long int _6;
  long int * _7;
  long int * _10;
  long int _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG i => 0
  # DEBUG i => 0
  _19 = this_5(D)->m;
  if (_19 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                5
  this_5(D)->calls = 0;
  this_5(D)->clearhits = 0;
  this_5(D)->collisions = 0;
  return;
;;    succ:       EXIT

;;   basic block 4, loop depth 0
;;    pred:       2
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       6
;;                4
  # ivtmp.146_22 = PHI <ivtmp.146_27(6), 0(4)>
  # ivtmp.147_18 = PHI <ivtmp.147_17(6), 1(4)>
  # DEBUG i => (int) ((unsigned int) ivtmp.147_18 + 4294967295)
  _7 = this_5(D)->data;
  _10 = _7 + ivtmp.146_22;
  *_10 = -1;
  # DEBUG D#10 => (int) ivtmp.147_18
  # DEBUG i => D#10
  # DEBUG i => D#10
  _4 = (long int) ivtmp.147_18;
  _6 = this_5(D)->m;
  ivtmp.146_27 = ivtmp.146_22 + 8;
  ivtmp.147_17 = ivtmp.147_18 + 1;
  if (_4 < _6)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 6, loop depth 1
;;    pred:       5
  goto <bb 5>;
;;    succ:       5

}


Inserting a value copy on edge BB4->BB5 : PART.5 = 1
Inserting a value copy on edge BB4->BB5 : PART.7 = 0

;; Generating RTL for gimple basic block 2

;; # DEBUG i => 0

(debug_insn 8 7 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:202 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 9 8 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (_19 > 0)

(insn 10 9 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/j:DI (reg/f:DI 66 [ this ]) [0 this_5(D)->m+0 S8 A64])
            (const_int 0 [0]))) tiles.cpp:202 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:202 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; this_5(D)->calls = 0;

(insn 13 12 0 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 24 [0x18])) [0 this_5(D)->calls+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:203 -1
     (nil))

;; this_5(D)->clearhits = 0;

(insn 14 13 0 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 32 [0x20])) [0 this_5(D)->clearhits+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:204 -1
     (nil))

;; this_5(D)->collisions = 0;

(insn 15 14 0 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 40 [0x28])) [0 this_5(D)->collisions+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:205 -1
     (nil))

;; return;

(jump_insn 16 15 17 (set (pc)
        (label_ref 0)) tiles.cpp:206 -1
     (nil))

(barrier 17 16 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 18 17 19 70 "" [0 uses])

(note 19 18 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 5

;; # DEBUG i => (int) ((unsigned int) ivtmp.147_18 + 4294967295)

(debug_insn 21 20 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; *_10 = -1;

(insn 22 21 23 (set (reg/f:DI 67)
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 8 [0x8])) [0 this_5(D)->data+0 S8 A64])) tiles.cpp:202 -1
     (nil))

(insn 23 22 24 (set (reg:DI 68)
        (const_int -1 [0xffffffffffffffff])) tiles.cpp:202 -1
     (nil))

(insn 24 23 0 (set (mem:DI (plus:DI (reg/f:DI 67)
                (reg:DI 65 [ ivtmp.146 ])) [0 *_10+0 S8 A64])
        (reg:DI 68)) tiles.cpp:202 -1
     (nil))

;; # DEBUG D#10 => (int) ivtmp.147_18

(debug_insn 25 24 0 (var_location:SI D#10 (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => D#10

(debug_insn 26 25 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:202 -1
     (nil))
;; # DEBUG i => D#10

(debug_insn 27 26 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _4 = (long int) ivtmp.147_18;

(insn 28 27 0 (set (reg:DI 59 [ D.26075 ])
        (reg:DI 63 [ ivtmp.147 ])) tiles.cpp:202 -1
     (nil))

;; ivtmp.146_27 = ivtmp.146_22 + 8;

(insn 29 28 0 (parallel [
            (set (reg:DI 65 [ ivtmp.146 ])
                (plus:DI (reg:DI 65 [ ivtmp.146 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; ivtmp.147_17 = ivtmp.147_18 + 1;

(insn 30 29 0 (parallel [
            (set (reg:DI 63 [ ivtmp.147 ])
                (plus:DI (reg:DI 63 [ ivtmp.147 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (_4 < _6)

(insn 32 30 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 59 [ D.26075 ])
            (mem/j:DI (reg/f:DI 66 [ this ]) [0 this_5(D)->m+0 S8 A64]))) tiles.cpp:202 -1
     (nil))

(jump_insn 33 32 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) tiles.cpp:202 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 66 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:201 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 3 9 2 (var_location:SI i (const_int 0 [0])) tiles.cpp:202 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 10 9 11 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/j:DI (reg/f:DI 66 [ this ]) [0 this_5(D)->m+0 S8 A64])
            (const_int 0 [0]))) tiles.cpp:202 -1
     (nil))
(jump_insn 11 10 31 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) tiles.cpp:202 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 18)
;;  succ:       5 [91.0%] 
;;              4 [9.0%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [9.0%]  (FALLTHRU)
;;              6 [9.0%] 
(code_label 31 11 12 4 71 "" [1 uses])
(note 12 31 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 24 [0x18])) [0 this_5(D)->calls+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:203 -1
     (nil))
(insn 14 13 15 4 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 32 [0x20])) [0 this_5(D)->clearhits+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:204 -1
     (nil))
(insn 15 14 16 4 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 40 [0x28])) [0 this_5(D)->collisions+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:205 -1
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (label_ref 38)) tiles.cpp:206 -1
     (nil)
 -> 38)
;;  succ:       8 [100.0%] 

(barrier 17 16 18)
;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%] 
(code_label 18 17 19 5 70 "" [1 uses])
(note 19 18 4 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 4 19 5 5 (set (reg:DI 63 [ ivtmp.147 ])
        (const_int 1 [0x1])) tiles.cpp:202 -1
     (nil))
(insn 5 4 35 5 (set (reg:DI 65 [ ivtmp.146 ])
        (const_int 0 [0])) tiles.cpp:202 -1
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%]  (DFS_BACK)
;;              5 [100.0%]  (FALLTHRU)
(code_label 35 5 20 6 72 "" [1 uses])
(note 20 35 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 20 22 6 (var_location:SI i (plus:SI (subreg:SI (reg:DI 63 [ ivtmp.147 ]) 0)
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 22 21 23 6 (set (reg/f:DI 67)
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 8 [0x8])) [0 this_5(D)->data+0 S8 A64])) tiles.cpp:202 -1
     (nil))
(insn 23 22 24 6 (set (reg:DI 68)
        (const_int -1 [0xffffffffffffffff])) tiles.cpp:202 -1
     (nil))
(insn 24 23 25 6 (set (mem:DI (plus:DI (reg/f:DI 67)
                (reg:DI 65 [ ivtmp.146 ])) [0 *_10+0 S8 A64])
        (reg:DI 68)) tiles.cpp:202 -1
     (nil))
(debug_insn 25 24 26 6 (var_location:SI D#10 (subreg:SI (reg:DI 63 [ ivtmp.147 ]) 0)) -1
     (nil))
(debug_insn 26 25 27 6 (var_location:SI i (debug_expr:SI D#10)) tiles.cpp:202 -1
     (nil))
(debug_insn 27 26 28 6 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 59 [ D.26075 ])
        (reg:DI 63 [ ivtmp.147 ])) tiles.cpp:202 -1
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg:DI 65 [ ivtmp.146 ])
                (plus:DI (reg:DI 65 [ ivtmp.146 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 30 29 32 6 (parallel [
            (set (reg:DI 63 [ ivtmp.147 ])
                (plus:DI (reg:DI 63 [ ivtmp.147 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 32 30 33 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 59 [ D.26075 ])
            (mem/j:DI (reg/f:DI 66 [ this ]) [0 this_5(D)->m+0 S8 A64]))) tiles.cpp:202 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) tiles.cpp:202 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 31)
;;  succ:       7 [91.0%]  (FALLTHRU)
;;              4 [9.0%] 

;; basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [91.0%]  (FALLTHRU)
(note 34 33 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 36 34 37 7 (set (pc)
        (label_ref 35)) -1
     (nil)
 -> 35)
;;  succ:       6 [100.0%]  (DFS_BACK)

(barrier 37 36 38)
;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [100.0%] 
(code_label 38 37 39 8 69 "" [1 uses])
(note 39 38 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function collision_table::collision_table(int, int) (_ZN15collision_tableC2Eii, funcdef_no=1067, decl_uid=23671, cgraph_uid=311)

collision_table::collision_table(int, int) (struct collision_table * const this, int size, int safety)
{
  size_t iftmp.7;
  unsigned int tmp.6;
  unsigned int _5;
  sizetype _10;
  void * _13;
  long int _16;
  unsigned int _23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG tmp => size_3(D)
  # DEBUG tmp => size_3(D)
  if (size_3(D) > 2)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  tmp.6_25 = (unsigned int) size_3(D);
  _23 = tmp.6_25 & 1;
  if (_23 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 4, loop depth 1
;;    pred:       8
  tmp.6_4 = (unsigned int) size_9;
  _5 = tmp.6_4 & 1;
  if (_5 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  goto <bb 8>;
;;    succ:       8

;;   basic block 6, loop depth 0
;;    pred:       4
;;                3
  # DEBUG __fmt => "\nSize of collision table must be power of 2 %d"
  __printf_chk (1, "\nSize of collision table must be power of 2 %d", size_3(D));
  exit (0);
;;    succ:      

;;   basic block 7, loop depth 0
;;    pred:       3
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       5
;;                7
  # size_22 = PHI <size_9(5), size_3(D)(7)>
  # DEBUG tmp => size_22
  size_9 = size_22 >> 1;
  # DEBUG tmp => size_9
  # DEBUG tmp => size_9
  if (size_9 > 2)
    goto <bb 4>;
  else
    goto <bb 9>;
;;    succ:       4
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
;;                2
  _10 = (sizetype) size_3(D);
  if (_10 <= 1143914305352105984)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  iftmp.7_11 = _10 * 8;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
;;                9
  # iftmp.7_2 = PHI <iftmp.7_11(10), 18446744073709551615(9)>
  _13 = operator new [] (iftmp.7_2);
  this_14(D)->data = _13;
  _16 = (long int) size_3(D);
  this_14(D)->m = _16;
  this_14(D)->safe = safety_18(D);
  collision_table::reset (this_14(D)); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (iftmp.7_2 - 2 )
Partition 3 (size_3(D) - 3 )
Partition 4 (tmp.6_4 - 4 )
Partition 5 (_5 - 5 )
Partition 9 (size_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (iftmp.7_11 - 11 )
Partition 13 (_13 - 13 )
Partition 14 (this_14(D) - 14 )
Partition 16 (_16 - 16 )
Partition 18 (safety_18(D) - 18 )
Partition 22 (size_22 - 22 )
Partition 23 (_23 - 23 )
Partition 25 (tmp.6_25 - 25 )


Partition map 

Partition 0 (iftmp.7_2 - 2 )
Partition 1 (size_3(D) - 3 )
Partition 2 (size_9 - 9 )
Partition 3 (iftmp.7_11 - 11 )
Partition 4 (this_14(D) - 14 )
Partition 5 (safety_18(D) - 18 )
Partition 6 (size_22 - 22 )


Live on entry to BB2 : size_3(D)  this_14(D)  safety_18(D)  

Live on entry to BB3 : size_3(D)  this_14(D)  safety_18(D)  

Live on entry to BB4 : size_3(D)  size_9  this_14(D)  safety_18(D)  

Live on entry to BB5 : size_3(D)  size_9  this_14(D)  safety_18(D)  

Live on entry to BB6 : size_3(D)  

Live on entry to BB7 : size_3(D)  this_14(D)  safety_18(D)  

Live on entry to BB8 : size_3(D)  this_14(D)  safety_18(D)  

Live on entry to BB9 : size_3(D)  this_14(D)  safety_18(D)  

Live on entry to BB10 : size_3(D)  this_14(D)  safety_18(D)  

Live on entry to BB11 : size_3(D)  this_14(D)  safety_18(D)  

Conflict graph:
1: 2, 6
2: 1
6: 1

After sorting:
Sorted Coalesce list:
(9116) size_9 <-> size_22
(430) size_3(D) <-> size_22
(274) iftmp.7_2 <-> iftmp.7_11

Partition map 

Partition 0 (iftmp.7_2 - 2 )
Partition 1 (size_3(D) - 3 )
Partition 2 (size_9 - 9 )
Partition 3 (iftmp.7_11 - 11 )
Partition 4 (this_14(D) - 14 )
Partition 5 (safety_18(D) - 18 )
Partition 6 (size_22 - 22 )

Coalesce list: (9)size_9 & (22)size_22 [map: 2, 6] : Success -> 2
Coalesce list: (3)size_3(D) & (22)size_9 [map: 1, 2] : Fail due to conflict
Coalesce list: (2)iftmp.7_2 & (11)iftmp.7_11 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (iftmp.7_2 - 2 11 )
Partition 1 (size_3(D) - 3 )
Partition 2 (tmp.6_4 - 4 )
Partition 3 (_5 - 5 )
Partition 4 (size_9 - 9 22 )
Partition 5 (_10 - 10 )
Partition 6 (_13 - 13 )
Partition 7 (this_14(D) - 14 )
Partition 8 (_16 - 16 )
Partition 9 (safety_18(D) - 18 )
Partition 10 (_23 - 23 )
Partition 11 (tmp.6_25 - 25 )


Replacing Expressions
tmp.6_4 replace with --> tmp.6_4 = (unsigned int) size_9;

_5 replace with --> _5 = tmp.6_4 & 1;

_16 replace with --> _16 = (long int) size_3(D);

_23 replace with --> _23 = tmp.6_25 & 1;

tmp.6_25 replace with --> tmp.6_25 = (unsigned int) size_3(D);


collision_table::collision_table(int, int) (struct collision_table * const this, int size, int safety)
{
  size_t iftmp.7;
  unsigned int tmp.6;
  unsigned int _5;
  sizetype _10;
  void * _13;
  long int _16;
  unsigned int _23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG tmp => size_3(D)
  # DEBUG tmp => size_3(D)
  if (size_3(D) > 2)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3
;;                9

;;   basic block 3, loop depth 0
;;    pred:       2
  tmp.6_25 = (unsigned int) size_3(D);
  _23 = tmp.6_25 & 1;
  if (_23 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 4, loop depth 1
;;    pred:       8
  tmp.6_4 = (unsigned int) size_9;
  _5 = tmp.6_4 & 1;
  if (_5 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  goto <bb 8>;
;;    succ:       8

;;   basic block 6, loop depth 0
;;    pred:       4
;;                3
  # DEBUG __fmt => "\nSize of collision table must be power of 2 %d"
  __printf_chk (1, "\nSize of collision table must be power of 2 %d", size_3(D));
  exit (0);
;;    succ:      

;;   basic block 7, loop depth 0
;;    pred:       3
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       5
;;                7
  # size_22 = PHI <size_9(5), size_3(D)(7)>
  # DEBUG tmp => size_22
  size_9 = size_22 >> 1;
  # DEBUG tmp => size_9
  # DEBUG tmp => size_9
  if (size_9 > 2)
    goto <bb 4>;
  else
    goto <bb 9>;
;;    succ:       4
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
;;                2
  _10 = (sizetype) size_3(D);
  if (_10 <= 1143914305352105984)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  iftmp.7_11 = _10 * 8;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
;;                9
  # iftmp.7_2 = PHI <iftmp.7_11(10), 18446744073709551615(9)>
  _13 = operator new [] (iftmp.7_2);
  this_14(D)->data = _13;
  _16 = (long int) size_3(D);
  this_14(D)->m = _16;
  this_14(D)->safe = safety_18(D);
  collision_table::reset (this_14(D)); [tail call]
  return;
;;    succ:       EXIT

}


Inserting a partition copy on edge BB7->BB8 :PART.4 = PART.1
Inserting a value copy on edge BB9->BB11 : PART.0 = 18446744073709551615

;; Generating RTL for gimple basic block 2

;; # DEBUG tmp => size_3(D)

(debug_insn 10 9 0 (var_location:SI tmp (const_int 0 [0])) tiles.cpp:209 -1
     (nil))
;; # DEBUG tmp => size_3(D)

(debug_insn 11 10 0 (var_location:SI tmp (const_int 0 [0])) -1
     (nil))
;; if (size_3(D) > 2)

(insn 12 11 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 69 [ size ])
            (const_int 2 [0x2]))) tiles.cpp:210 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:210 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (_23 != 0)

(insn 15 14 16 3 (parallel [
            (set (reg:SI 71 [ D.26079 ])
                (and:SI (reg/v:SI 69 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:211 -1
     (nil))

(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71 [ D.26079 ])
            (const_int 0 [0]))) tiles.cpp:211 -1
     (nil))

(jump_insn 17 16 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:211 -1
     (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

(note 20 17 18 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(jump_insn 18 20 19 13 (set (pc)
        (label_ref 0)) tiles.cpp:211 -1
     (nil))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 4

;; if (_5 != 0)

(insn 22 21 23 (parallel [
            (set (reg:SI 72 [ D.26079 ])
                (and:SI (reg/v:SI 62 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:211 -1
     (nil))

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72 [ D.26079 ])
            (const_int 0 [0]))) tiles.cpp:211 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:211 -1
     (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; 

(code_label 28 27 29 77 "" [0 uses])

(note 29 28 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __fmt => "\nSize of collision table must be power of 2 %d"

(debug_insn 30 29 0 (var_location:DI __fmt (const_int 0 [0])) -1
     (nil))
;; __printf_chk (1, "\nSize of collision table must be power of 2 %d", size_3(D));

(insn 31 30 32 (set (reg:SI 1 dx)
        (reg/v:SI 69 [ size ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 32 31 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b82f85a0130 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 33 32 34 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 34 33 35 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(call_insn 35 34 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))

;; exit (0);

(insn 36 35 37 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:213 -1
     (nil))

(call_insn 37 36 38 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b82f08ee700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:213 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(barrier 38 37 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 39 38 40 78 "" [0 uses])

(note 40 39 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 8

;; 

(code_label 41 40 42 79 "" [0 uses])

(note 42 41 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG tmp => size_22

(debug_insn 43 42 0 (var_location:SI tmp (const_int 0 [0])) -1
     (nil))
;; size_9 = size_22 >> 1;

(insn 44 43 0 (parallel [
            (set (reg/v:SI 62 [ size ])
                (ashiftrt:SI (reg/v:SI 62 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:215 -1
     (nil))

;; # DEBUG tmp => size_9

(debug_insn 45 44 0 (var_location:SI tmp (const_int 0 [0])) tiles.cpp:215 -1
     (nil))
;; # DEBUG tmp => size_9

(debug_insn 46 45 0 (var_location:SI tmp (const_int 0 [0])) -1
     (nil))
;; if (size_9 > 2)

(insn 48 46 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ size ])
            (const_int 2 [0x2]))) tiles.cpp:210 -1
     (nil))

(jump_insn 49 48 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) tiles.cpp:210 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 9

;; 

(code_label 50 49 51 76 "" [0 uses])

(note 51 50 0 NOTE_INSN_BASIC_BLOCK)

;; _10 = (sizetype) size_3(D);

(insn 52 51 0 (set (reg:DI 63 [ D.26080 ])
        (sign_extend:DI (reg/v:SI 69 [ size ]))) tiles.cpp:217 -1
     (nil))

;; if (_10 <= 1143914305352105984)

(insn 53 52 54 (set (reg:DI 73)
        (const_int 1143914305352105984 [0xfe0000000000000])) tiles.cpp:217 -1
     (nil))

(insn 54 53 55 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 63 [ D.26080 ])
            (reg:DI 73))) tiles.cpp:217 -1
     (nil))

(jump_insn 55 54 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:217 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 10

;; iftmp.7_11 = _10 * 8;

(insn 57 56 0 (parallel [
            (set (reg:DI 59 [ iftmp.7 ])
                (ashift:DI (reg:DI 63 [ D.26080 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:217 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 58 57 59 81 "" [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; _13 = operator new [] (iftmp.7_2);

(insn 60 59 61 (set (reg:DI 5 di)
        (reg:DI 59 [ iftmp.7 ])) tiles.cpp:217 -1
     (nil))

(call_insn 61 60 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x2b82f096c800 operator new []>) [0 operator new [] S1 A8])
            (const_int 0 [0]))) tiles.cpp:217 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 62 61 0 (set (reg/f:DI 64 [ D.26081 ])
        (reg:DI 0 ax)) tiles.cpp:217 -1
     (nil))

;; this_14(D)->data = _13;

(insn 63 62 0 (set (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_14(D)->data+0 S8 A64])
        (reg/f:DI 64 [ D.26081 ])) tiles.cpp:217 -1
     (nil))

;; this_14(D)->m = _16;

(insn 64 63 65 (set (reg:DI 74)
        (sign_extend:DI (reg/v:SI 69 [ size ]))) tiles.cpp:218 -1
     (nil))

(insn 65 64 0 (set (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_14(D)->m+0 S8 A64])
        (reg:DI 74)) tiles.cpp:218 -1
     (nil))

;; this_14(D)->safe = safety_18(D);

(insn 66 65 0 (set (mem/j:SI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 16 [0x10])) [0 this_14(D)->safe+0 S4 A64])
        (reg/v:SI 70 [ safety ])) tiles.cpp:219 -1
     (nil))

;; collision_table::reset (this_14(D)); [tail call]

(insn 67 66 68 11 (set (reg:DI 5 di)
        (reg/f:DI 68 [ this ])) tiles.cpp:220 -1
     (nil))

(call_insn/j 68 67 69 11 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x1]  <function_decl 0x2b82f1f05500 reset>) [0 reset S1 A8])
        (const_int 0 [0])) tiles.cpp:220 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(barrier 69 68 0)
Edge 9->11 redirected to 15
deleting block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 9 failed.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 454, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 68 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:208 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 69 [ size ])
        (reg:SI 4 si [ size ])) tiles.cpp:208 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 70 [ safety ])
        (reg:SI 1 dx [ safety ])) tiles.cpp:208 -1
     (nil))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 10 5 11 2 (var_location:SI tmp (reg/v:SI 69 [ size ])) tiles.cpp:209 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI tmp (reg/v:SI 69 [ size ])) -1
     (nil))
(insn 12 11 13 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 69 [ size ])
            (const_int 2 [0x2]))) tiles.cpp:210 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) tiles.cpp:210 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 50)
;;  succ:       4 [95.5%]  (FALLTHRU)
;;              11 [4.5%] 

;; basic block 4, loop depth 0, count 0, freq 430, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [95.5%]  (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (parallel [
            (set (reg:SI 71 [ D.26079 ])
                (and:SI (reg/v:SI 69 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:211 -1
     (nil))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71 [ D.26079 ])
            (const_int 0 [0]))) tiles.cpp:211 -1
     (nil))
(jump_insn 17 16 20 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) tiles.cpp:211 -1
     (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil))
 -> 28)
;;  succ:       8 [0.0%] 
;;              5 [100.0%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 430, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
(note 20 17 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 20 19 5 (set (pc)
        (label_ref 39)) tiles.cpp:211 -1
     (nil)
 -> 39)
;;  succ:       9 [100.0%] 

(barrier 19 18 47)
;; basic block 6, loop depth 1, count 0, freq 9120, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [95.5%] 
(code_label 47 19 21 6 80 "" [1 uses])
(note 21 47 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (parallel [
            (set (reg:SI 72 [ D.26079 ])
                (and:SI (reg/v:SI 62 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:211 -1
     (nil))
(insn 23 22 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72 [ D.26079 ])
            (const_int 0 [0]))) tiles.cpp:211 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) tiles.cpp:211 -1
     (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil))
 -> 28)
;;  succ:       8 [0.0%] 
;;              7 [100.0%]  (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 9116, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 26 25 27 7 (set (pc)
        (label_ref 41)) -1
     (nil)
 -> 41)
;;  succ:       10 [100.0%]  (DFS_BACK)

(barrier 27 26 28)
;; basic block 8, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [0.0%] 
;;              4 [0.0%] 
(code_label 28 27 29 8 77 "" [2 uses])
(note 29 28 30 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 30 29 31 8 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b82f85a0130 *.LC1>)) -1
     (nil))
(insn 31 30 32 8 (set (reg:SI 1 dx)
        (reg/v:SI 69 [ size ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 32 31 33 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b82f85a0130 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 33 32 34 8 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 34 33 35 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(call_insn 35 34 36 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
(insn 36 35 37 8 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:213 -1
     (nil))
(call_insn 37 36 38 8 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b82f08ee700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:213 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 38 37 39)
;; basic block 9, loop depth 0, count 0, freq 430, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
(code_label 39 38 40 9 78 "" [1 uses])
(note 40 39 6 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 6 40 41 9 (set (reg/v:SI 62 [ size ])
        (reg/v:SI 69 [ size ])) tiles.cpp:211 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 9546, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%]  (DFS_BACK)
;;              9 [100.0%]  (FALLTHRU)
(code_label 41 6 42 10 79 "" [1 uses])
(note 42 41 43 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 10 (var_location:SI tmp (reg/v:SI 62 [ size ])) -1
     (nil))
(insn 44 43 45 10 (parallel [
            (set (reg/v:SI 62 [ size ])
                (ashiftrt:SI (reg/v:SI 62 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:215 -1
     (nil))
(debug_insn 45 44 46 10 (var_location:SI tmp (reg/v:SI 62 [ size ])) tiles.cpp:215 -1
     (nil))
(debug_insn 46 45 48 10 (var_location:SI tmp (reg/v:SI 62 [ size ])) -1
     (nil))
(insn 48 46 49 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ size ])
            (const_int 2 [0x2]))) tiles.cpp:210 -1
     (nil))
(jump_insn 49 48 50 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) tiles.cpp:210 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 47)
;;  succ:       6 [95.5%] 
;;              11 [4.5%]  (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [4.5%]  (FALLTHRU)
;;              2 [4.5%] 
(code_label 50 49 51 11 76 "" [1 uses])
(note 51 50 52 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 11 (set (reg:DI 63 [ D.26080 ])
        (sign_extend:DI (reg/v:SI 69 [ size ]))) tiles.cpp:217 -1
     (nil))
(insn 53 52 54 11 (set (reg:DI 73)
        (const_int 1143914305352105984 [0xfe0000000000000])) tiles.cpp:217 -1
     (nil))
(insn 54 53 55 11 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 63 [ D.26080 ])
            (reg:DI 73))) tiles.cpp:217 -1
     (nil))
(jump_insn 55 54 56 11 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) tiles.cpp:217 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 75)
;;  succ:       12 [61.0%]  (FALLTHRU)
;;              13 [39.0%] 

;; basic block 12, loop depth 0, count 0, freq 274, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [61.0%]  (FALLTHRU)
(note 56 55 57 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 72 12 (parallel [
            (set (reg:DI 59 [ iftmp.7 ])
                (ashift:DI (reg:DI 63 [ D.26080 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:217 -1
     (nil))
(jump_insn 72 57 73 12 (set (pc)
        (label_ref 58)) -1
     (nil)
 -> 58)
;;  succ:       14 [100.0%] 

(barrier 73 72 75)
;; basic block 13, loop depth 0, count 0, freq 176, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [39.0%] 
(code_label 75 73 74 13 82 "" [1 uses])
(note 74 75 7 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 7 74 58 13 (set (reg:DI 59 [ iftmp.7 ])
        (const_int -1 [0xffffffffffffffff])) tiles.cpp:217 -1
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
(code_label 58 7 59 14 81 "" [1 uses])
(note 59 58 60 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 14 (set (reg:DI 5 di)
        (reg:DI 59 [ iftmp.7 ])) tiles.cpp:217 -1
     (nil))
(call_insn 61 60 62 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x2b82f096c800 operator new []>) [0 operator new [] S1 A8])
            (const_int 0 [0]))) tiles.cpp:217 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 62 61 63 14 (set (reg/f:DI 64 [ D.26081 ])
        (reg:DI 0 ax)) tiles.cpp:217 -1
     (nil))
(insn 63 62 64 14 (set (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_14(D)->data+0 S8 A64])
        (reg/f:DI 64 [ D.26081 ])) tiles.cpp:217 -1
     (nil))
(insn 64 63 65 14 (set (reg:DI 74)
        (sign_extend:DI (reg/v:SI 69 [ size ]))) tiles.cpp:218 -1
     (nil))
(insn 65 64 66 14 (set (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_14(D)->m+0 S8 A64])
        (reg:DI 74)) tiles.cpp:218 -1
     (nil))
(insn 66 65 67 14 (set (mem/j:SI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 16 [0x10])) [0 this_14(D)->safe+0 S4 A64])
        (reg/v:SI 70 [ safety ])) tiles.cpp:219 -1
     (nil))
(insn 67 66 68 14 (set (reg:DI 5 di)
        (reg/f:DI 68 [ this ])) tiles.cpp:220 -1
     (nil))
(call_insn/j 68 67 69 14 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x1]  <function_decl 0x2b82f1f05500 reset>) [0 reset S1 A8])
        (const_int 0 [0])) tiles.cpp:220 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 69 68 0)

;; Function collision_table::~collision_table() (_ZN15collision_tableD2Ev, funcdef_no=1070, decl_uid=23678, cgraph_uid=314)

collision_table::~collision_table() (struct collision_table * const this)
{
  long int * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4> (<L3>);
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  operator delete [] (_4); [tail call]
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
<L3>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 3 (this_3(D) - 3 )
Partition 4 (_4 - 4 )


Partition map 

Partition 0 (this_3(D) - 3 )


Live on entry to BB2 : this_3(D)  

Live on entry to BB3 : 

Live on entry to BB4 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (this_3(D) - 3 )
Partition 1 (_4 - 4 )

collision_table::~collision_table() (struct collision_table * const this)
{
  long int * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4> (<L3>);
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  operator delete [] (_4); [tail call]
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
<L3>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _4 = this_3(D)->data;

(insn 6 5 0 (set (reg/f:DI 59 [ D.26086 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 60 [ this ])
                (const_int 8 [0x8])) [0 this_3(D)->data+0 S8 A64])) tiles.cpp:224 -1
     (nil))

;; if (_4 != 0B)

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.26086 ])
            (const_int 0 [0]))) tiles.cpp:224 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:224 -1
     (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))

;; Generating RTL for gimple basic block 3

;; operator delete [] (_4); [tail call]

(insn 10 9 11 3 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.26086 ])) tiles.cpp:224 -1
     (nil))

(call_insn/j 11 10 12 3 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x2b82f096ca00 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) tiles.cpp:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(barrier 12 11 0)

;; Generating RTL for gimple basic block 4

;; <L3>:

(code_label 13 12 14 86 "" [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
deleting block 5


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 60 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:223 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 59 [ D.26086 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 60 [ this ])
                (const_int 8 [0x8])) [0 this_3(D)->data+0 S8 A64])) tiles.cpp:224 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.26086 ])
            (const_int 0 [0]))) tiles.cpp:224 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) tiles.cpp:224 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil))
 -> 15)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              6 [21.6%] 

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [78.3%]  (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.26086 ])) tiles.cpp:224 -1
     (nil))
(call_insn/j 11 10 12 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x2b82f096ca00 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) tiles.cpp:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 12 11 15)
;; basic block 6, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [21.6%] 
(code_label 15 12 16 6 85 "" [1 uses])
(note 16 15 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function int collision_table::usage() (_ZN15collision_table5usageEv, funcdef_no=1072, decl_uid=23657, cgraph_uid=316)

int collision_table::usage() (struct collision_table * const this)
{
  unsigned long ivtmp.157;
  int count;
  unsigned long _2;
  void * _3;
  long int _12;
  long int _19;
  unsigned long _22;
  long int * pretmp_23;
  unsigned long _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG count => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG count => 0
  _19 = this_6(D)->m;
  if (_19 > 0)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  pretmp_23 = this_6(D)->data;
  ivtmp.157_7 = (unsigned long) pretmp_23;
  _2 = (unsigned long) _19;
  _26 = _2 * 8;
  _22 = ivtmp.157_7 + _26;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       5
;;                3
  # count_20 = PHI <count_1(5), 0(3)>
  # ivtmp.157_8 = PHI <ivtmp.157_17(5), ivtmp.157_7(3)>
  # DEBUG i => NULL
  # DEBUG count => NULL
  _3 = (void *) ivtmp.157_8;
  _12 = MEM[base: _3, offset: 0B];
  count_13 = count_20 + 1;
  # DEBUG count => NULL
  count_1 = _12 != -1 ? count_13 : count_20;
  # DEBUG count => count_1
  # DEBUG i => D#11
  # DEBUG i => D#11
  # DEBUG count => count_1
  ivtmp.157_17 = ivtmp.157_8 + 8;
  if (ivtmp.157_17 != _22)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       4
  goto <bb 4>;
;;    succ:       4

;;   basic block 6, loop depth 0
;;    pred:       4
;;                2
  # count_15 = PHI <count_1(4), 0(2)>
  return count_15;
;;    succ:       EXIT

}



Partition map 

Partition 1 (count_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 6 (this_6(D) - 6 )
Partition 7 (ivtmp.157_7 - 7 )
Partition 8 (ivtmp.157_8 - 8 )
Partition 12 (_12 - 12 )
Partition 13 (count_13 - 13 )
Partition 15 (count_15 - 15 )
Partition 17 (ivtmp.157_17 - 17 )
Partition 19 (_19 - 19 )
Partition 20 (count_20 - 20 )
Partition 22 (_22 - 22 )
Partition 23 (pretmp_23 - 23 )
Partition 26 (_26 - 26 )


Partition map 

Partition 0 (count_1 - 1 )
Partition 1 (this_6(D) - 6 )
Partition 2 (ivtmp.157_7 - 7 )
Partition 3 (ivtmp.157_8 - 8 )
Partition 4 (count_15 - 15 )
Partition 5 (ivtmp.157_17 - 17 )
Partition 6 (count_20 - 20 )


Live on entry to BB2 : this_6(D)  

Live on entry to BB3 : this_6(D)  

Live on entry to BB4 : 

Live on entry to BB5 : count_1  ivtmp.157_17  

Live on entry to BB6 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(8281) count_1 <-> count_20
(8281) ivtmp.157_8 <-> ivtmp.157_17
(1638) count_1 <-> count_15
(819) ivtmp.157_7 <-> ivtmp.157_8

Partition map 

Partition 0 (count_1 - 1 )
Partition 1 (this_6(D) - 6 )
Partition 2 (ivtmp.157_7 - 7 )
Partition 3 (ivtmp.157_8 - 8 )
Partition 4 (count_15 - 15 )
Partition 5 (ivtmp.157_17 - 17 )
Partition 6 (count_20 - 20 )

Coalesce list: (1)count_1 & (20)count_20 [map: 0, 6] : Success -> 0
Coalesce list: (8)ivtmp.157_8 & (17)ivtmp.157_17 [map: 3, 5] : Success -> 3
Coalesce list: (1)count_1 & (15)count_15 [map: 0, 4] : Success -> 0
Coalesce list: (7)ivtmp.157_7 & (8)ivtmp.157_8 [map: 2, 3] : Success -> 3
After Coalescing:

Partition map 

Partition 0 (count_1 - 1 15 20 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (this_6(D) - 6 )
Partition 4 (ivtmp.157_8 - 7 8 17 )
Partition 5 (_12 - 12 )
Partition 6 (count_13 - 13 )
Partition 7 (_19 - 19 )
Partition 8 (_22 - 22 )
Partition 9 (pretmp_23 - 23 )
Partition 10 (_26 - 26 )


Replacing Expressions
_2 replace with --> _2 = (unsigned long) _19;

_3 replace with --> _3 = (void *) ivtmp.157_8;

_12 replace with --> _12 = MEM[base: _3, offset: 0B];

pretmp_23 replace with --> pretmp_23 = this_6(D)->data;

_26 replace with --> _26 = _2 * 8;


int collision_table::usage() (struct collision_table * const this)
{
  unsigned long ivtmp.157;
  int count;
  unsigned long _2;
  void * _3;
  long int _12;
  long int _19;
  unsigned long _22;
  long int * pretmp_23;
  unsigned long _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG count => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG count => 0
  _19 = this_6(D)->m;
  if (_19 > 0)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  pretmp_23 = this_6(D)->data;
  ivtmp.157_7 = (unsigned long) pretmp_23;
  _2 = (unsigned long) _19;
  _26 = _2 * 8;
  _22 = ivtmp.157_7 + _26;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       5
;;                3
  # count_20 = PHI <count_1(5), 0(3)>
  # ivtmp.157_8 = PHI <ivtmp.157_17(5), ivtmp.157_7(3)>
  # DEBUG i => NULL
  # DEBUG count => NULL
  _3 = (void *) ivtmp.157_8;
  _12 = MEM[base: _3, offset: 0B];
  count_13 = count_20 + 1;
  # DEBUG count => NULL
  count_1 = _12 != -1 ? count_13 : count_20;
  # DEBUG count => count_1
  # DEBUG i => D#11
  # DEBUG i => D#11
  # DEBUG count => count_1
  ivtmp.157_17 = ivtmp.157_8 + 8;
  if (ivtmp.157_17 != _22)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       4
  goto <bb 4>;
;;    succ:       4

;;   basic block 6, loop depth 0
;;    pred:       4
;;                2
  # count_15 = PHI <count_1(4), 0(2)>
  return count_15;
;;    succ:       EXIT

}


Inserting a value copy on edge BB3->BB4 : PART.0 = 0
Inserting a value copy on edge BB2->BB6 : PART.0 = 0

;; Generating RTL for gimple basic block 2

;; # DEBUG count => 0

(debug_insn 30 29 0 (var_location:SI count (const_int 0 [0])) tiles.cpp:228 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 31 30 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:229 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 32 31 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG count => 0

(debug_insn 33 32 0 (var_location:SI count (const_int 0 [0])) -1
     (nil))
;; _19 = this_6(D)->m;

(insn 34 33 0 (set (reg:DI 87 [ D.26097 ])
        (mem/j:DI (reg/f:DI 92 [ this ]) [0 this_6(D)->m+0 S8 A64])) tiles.cpp:229 -1
     (nil))

;; if (_19 > 0)

(insn 35 34 36 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 87 [ D.26097 ])
            (const_int 0 [0]))) tiles.cpp:229 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:229 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 3

;; ivtmp.157_7 = (unsigned long) _23;

(insn 38 37 0 (set (reg:DI 84 [ ivtmp.157 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 8 [0x8])) [0 this_6(D)->data+0 S8 A64])) -1
     (nil))

;; _22 = ivtmp.157_7 + _26;

(insn 39 38 40 (parallel [
            (set (reg:DI 93 [ D.26095 ])
                (ashift:DI (reg:DI 87 [ D.26097 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 40 39 0 (parallel [
            (set (reg:DI 88 [ D.26095 ])
                (plus:DI (reg:DI 84 [ ivtmp.157 ])
                    (reg:DI 93 [ D.26095 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 4

;; # DEBUG i => NULL

(debug_insn 42 41 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG count => NULL

(debug_insn 43 42 0 (var_location:SI count (const_int 0 [0])) -1
     (nil))
;; count_13 = count_20 + 1;

(insn 44 43 0 (parallel [
            (set (reg/v:SI 86 [ count ])
                (plus:SI (reg/v:SI 81 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:232 -1
     (nil))

;; # DEBUG count => NULL

(debug_insn 45 44 0 (var_location:SI count (const_int 0 [0])) tiles.cpp:232 -1
     (nil))
;; count_1 = _12 != -1 ? count_13 : count_20;

(insn 46 45 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (reg:DI 84 [ ivtmp.157 ]) [0 MEM[base: _3, offset: 0B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) -1
     (nil))

(insn 47 46 48 (set (reg:SI 94)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 86 [ count ])
            (reg/v:SI 81 [ count ]))) -1
     (nil))

(insn 48 47 0 (set (reg/v:SI 81 [ count ])
        (reg:SI 94)) -1
     (nil))

;; # DEBUG count => count_1

(debug_insn 49 48 0 (var_location:SI count (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => D#11

(debug_insn 50 49 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:229 -1
     (nil))
;; # DEBUG i => D#11

(debug_insn 51 50 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG count => count_1

(debug_insn 52 51 0 (var_location:SI count (const_int 0 [0])) -1
     (nil))
;; ivtmp.157_17 = ivtmp.157_8 + 8;

(insn 53 52 0 (parallel [
            (set (reg:DI 84 [ ivtmp.157 ])
                (plus:DI (reg:DI 84 [ ivtmp.157 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.157_17 != _22)

(insn 54 53 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ ivtmp.157 ])
            (reg:DI 88 [ D.26095 ]))) tiles.cpp:229 -1
     (nil))

(jump_insn 55 54 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:229 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; 

(code_label 60 59 61 88 "" [0 uses])

(note 61 60 0 NOTE_INSN_BASIC_BLOCK)

;; return count_15;

(insn 62 61 63 (set (reg:SI 91 [ <retval> ])
        (reg/v:SI 81 [ count ])) tiles.cpp:235 -1
     (nil))

(jump_insn 63 62 64 (set (pc)
        (label_ref 0)) tiles.cpp:235 -1
     (nil))

(barrier 64 63 0)
Edge 2->6 redirected to 9
deleting block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 23 0 28 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 28 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 28 25 2 (set (reg/f:DI 92 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:227 -1
     (nil))
(note 25 24 30 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 30 25 31 2 (var_location:SI count (const_int 0 [0])) tiles.cpp:228 -1
     (nil))
(debug_insn 31 30 32 2 (var_location:SI i (const_int 0 [0])) tiles.cpp:229 -1
     (nil))
(debug_insn 32 31 33 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 33 32 34 2 (var_location:SI count (const_int 0 [0])) -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 87 [ D.26097 ])
        (mem/j:DI (reg/f:DI 92 [ this ]) [0 this_6(D)->m+0 S8 A64])) tiles.cpp:229 -1
     (nil))
(insn 35 34 36 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 87 [ D.26097 ])
            (const_int 0 [0]))) tiles.cpp:229 -1
     (nil))
(jump_insn 36 35 37 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 72)
            (pc))) tiles.cpp:229 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 72)
;;  succ:       4 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 

;; basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%]  (FALLTHRU)
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (set (reg:DI 84 [ ivtmp.157 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 8 [0x8])) [0 this_6(D)->data+0 S8 A64])) -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 93 [ D.26095 ])
                (ashift:DI (reg:DI 87 [ D.26097 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 40 39 26 4 (parallel [
            (set (reg:DI 88 [ D.26095 ])
                (plus:DI (reg:DI 84 [ ivtmp.157 ])
                    (reg:DI 93 [ D.26095 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 26 40 57 4 (set (reg/v:SI 81 [ count ])
        (const_int 0 [0])) tiles.cpp:228 -1
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0%]  (DFS_BACK)
;;              4 [100.0%]  (FALLTHRU)
(code_label 57 26 41 5 89 "" [1 uses])
(note 41 57 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 42 41 43 5 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 43 42 44 5 (var_location:SI count (clobber (const_int 0 [0]))) -1
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg/v:SI 86 [ count ])
                (plus:SI (reg/v:SI 81 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:232 -1
     (nil))
(debug_insn 45 44 46 5 (var_location:SI count (clobber (const_int 0 [0]))) tiles.cpp:232 -1
     (nil))
(insn 46 45 47 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (reg:DI 84 [ ivtmp.157 ]) [0 MEM[base: _3, offset: 0B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 47 46 48 5 (set (reg:SI 94)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 86 [ count ])
            (reg/v:SI 81 [ count ]))) -1
     (nil))
(insn 48 47 49 5 (set (reg/v:SI 81 [ count ])
        (reg:SI 94)) -1
     (nil))
(debug_insn 49 48 50 5 (var_location:SI count (reg/v:SI 81 [ count ])) -1
     (nil))
(debug_insn 50 49 51 5 (var_location:SI i (debug_expr:SI D#11)) tiles.cpp:229 -1
     (nil))
(debug_insn 51 50 52 5 (var_location:SI i (debug_expr:SI D#11)) -1
     (nil))
(debug_insn 52 51 53 5 (var_location:SI count (reg/v:SI 81 [ count ])) -1
     (nil))
(insn 53 52 54 5 (parallel [
            (set (reg:DI 84 [ ivtmp.157 ])
                (plus:DI (reg:DI 84 [ ivtmp.157 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 54 53 55 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ ivtmp.157 ])
            (reg:DI 88 [ D.26095 ]))) tiles.cpp:229 -1
     (nil))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) tiles.cpp:229 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 60)
;;  succ:       6 [91.0%]  (FALLTHRU)
;;              8 [9.0%] 

;; basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [91.0%]  (FALLTHRU)
(note 56 55 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 58 56 59 6 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
;;  succ:       5 [100.0%]  (DFS_BACK)

(barrier 59 58 72)
;; basic block 7, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%] 
(code_label 72 59 71 7 90 "" [1 uses])
(note 71 72 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 71 60 7 (set (reg/v:SI 81 [ count ])
        (const_int 0 [0])) tiles.cpp:228 -1
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [9.0%] 
;;              7 [100.0%]  (FALLTHRU)
(code_label 60 27 61 8 88 "" [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 66 8 (set (reg:SI 91 [ <retval> ])
        (reg/v:SI 81 [ count ])) tiles.cpp:235 -1
     (nil))
(insn 66 62 69 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) tiles.cpp:236 -1
     (nil))
(insn 69 66 0 8 (use (reg/i:SI 0 ax)) tiles.cpp:236 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void collision_table::print() (_ZN15collision_table5printEv, funcdef_no=1073, decl_uid=23659, cgraph_uid=317)

void collision_table::print() (struct collision_table * const this)
{
  long int _3;
  long int _4;
  long int _5;
  int _7;
  int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->collisions;
  _4 = this_2(D)->calls;
  _5 = this_2(D)->m;
  _7 = collision_table::usage (this_2(D));
  _8 = this_2(D)->safe;
  # DEBUG __fmt => "Collision table: Safety : %d Usage : %d Size : %ld Calls : %ld Collisions : %ld\n"
  __printf_chk (1, "Collision table: Safety : %d Usage : %d Size : %ld Calls : %ld Collisions : %ld\n", _8, _7, _5, _4, _3); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )


Partition map 

Partition 0 (this_2(D) - 2 )


Live on entry to BB2 : this_2(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (_3 - 3 )
Partition 2 (_4 - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_7 - 7 )
Partition 5 (_8 - 8 )


Replacing Expressions
_8 replace with --> _8 = this_2(D)->safe;


void collision_table::print() (struct collision_table * const this)
{
  long int _3;
  long int _4;
  long int _5;
  int _7;
  int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->collisions;
  _4 = this_2(D)->calls;
  _5 = this_2(D)->m;
  _7 = collision_table::usage (this_2(D));
  _8 = this_2(D)->safe;
  # DEBUG __fmt => "Collision table: Safety : %d Usage : %d Size : %ld Calls : %ld Collisions : %ld\n"
  __printf_chk (1, "Collision table: Safety : %d Usage : %d Size : %ld Calls : %ld Collisions : %ld\n", _8, _7, _5, _4, _3); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = this_2(D)->collisions;

(insn 6 5 0 (set (reg:DI 59 [ D.26101 ])
        (mem/j:DI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 40 [0x28])) [0 this_2(D)->collisions+0 S8 A64])) tiles.cpp:239 -1
     (nil))

;; _4 = this_2(D)->calls;

(insn 7 6 0 (set (reg:DI 60 [ D.26101 ])
        (mem/j:DI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 24 [0x18])) [0 this_2(D)->calls+0 S8 A64])) tiles.cpp:239 -1
     (nil))

;; _5 = this_2(D)->m;

(insn 8 7 0 (set (reg:DI 61 [ D.26101 ])
        (mem/j:DI (reg/f:DI 64 [ this ]) [0 this_2(D)->m+0 S8 A64])) tiles.cpp:239 -1
     (nil))

;; _7 = collision_table::usage (this_2(D));

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 64 [ this ])) tiles.cpp:239 -1
     (nil))

(call_insn 10 9 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x1]  <function_decl 0x2b82f1f05900 usage>) [0 usage S1 A8])
            (const_int 0 [0]))) tiles.cpp:239 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 11 10 0 (set (reg:SI 62 [ D.26102 ])
        (reg:SI 0 ax)) tiles.cpp:239 -1
     (nil))

;; # DEBUG __fmt => "Collision table: Safety : %d Usage : %d Size : %ld Calls : %ld Collisions : %ld\n"

(debug_insn 12 11 0 (var_location:DI __fmt (const_int 0 [0])) tiles.cpp:239 -1
     (nil))
;; __printf_chk (1, "Collision table: Safety : %d Usage : %d Size : %ld Calls : %ld Collisions : %ld\n", _8, _7, _5, _4, _3); [tail call]

(insn 13 12 14 (set (reg:SI 65)
        (mem/j:SI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 16 [0x10])) [0 this_2(D)->safe+0 S4 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 14 13 15 (set (mem:DI (reg/f:DI 56 virtual-outgoing-args) [0  S8 A64])
        (reg:DI 59 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 15 14 16 (set (reg:DI 38 r9)
        (reg:DI 60 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 16 15 17 (set (reg:DI 37 r8)
        (reg:DI 61 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 17 16 18 (set (reg:SI 2 cx)
        (reg:SI 62 [ D.26102 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 18 17 19 (set (reg:SI 1 dx)
        (reg:SI 65)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 19 18 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b82f85b8c78 *.LC2>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 20 19 21 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(insn 21 20 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))

(call_insn 22 21 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 8 [0x8]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem:DI (reg/f:DI 56 virtual-outgoing-args) [0  S8 A64]))
                                    (nil))))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 64 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:238 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 59 [ D.26101 ])
        (mem/j:DI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 40 [0x28])) [0 this_2(D)->collisions+0 S8 A64])) tiles.cpp:239 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 60 [ D.26101 ])
        (mem/j:DI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 24 [0x18])) [0 this_2(D)->calls+0 S8 A64])) tiles.cpp:239 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 61 [ D.26101 ])
        (mem/j:DI (reg/f:DI 64 [ this ]) [0 this_2(D)->m+0 S8 A64])) tiles.cpp:239 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 64 [ this ])) tiles.cpp:239 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x1]  <function_decl 0x2b82f1f05900 usage>) [0 usage S1 A8])
            (const_int 0 [0]))) tiles.cpp:239 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 62 [ D.26102 ])
        (reg:SI 0 ax)) tiles.cpp:239 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b82f85b8c78 *.LC2>)) tiles.cpp:239 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 65)
        (mem/j:SI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 16 [0x10])) [0 this_2(D)->safe+0 S4 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 14 13 15 2 (set (mem:DI (reg/f:DI 56 virtual-outgoing-args) [0  S8 A64])
        (reg:DI 59 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 38 r9)
        (reg:DI 60 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 37 r8)
        (reg:DI 61 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 cx)
        (reg:SI 62 [ D.26102 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (reg:SI 65)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b82f85b8c78 *.LC2>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(insn 21 20 22 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil))
(call_insn 22 21 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 8 [0x8]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem:DI (reg/f:DI 56 virtual-outgoing-args) [0  S8 A64]))
                                    (nil))))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void collision_table::save(int) (_ZN15collision_table4saveEi, funcdef_no=1074, decl_uid=23662, cgraph_uid=318)

void collision_table::save(int) (struct collision_table * const this, int file)
{
  long int * _2;
  int * _6;
  long int * _8;
  long int * _10;
  long int * _12;
  long int _14;
  long unsigned int _15;
  long unsigned int _16;
  long int * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &this_1(D)->m;
  write (file_4(D), _2, 8);
  _6 = &this_1(D)->safe;
  write (file_4(D), _6, 4);
  _8 = &this_1(D)->calls;
  write (file_4(D), _8, 8);
  _10 = &this_1(D)->clearhits;
  write (file_4(D), _10, 8);
  _12 = &this_1(D)->collisions;
  write (file_4(D), _12, 8);
  _14 = this_1(D)->m;
  _15 = (long unsigned int) _14;
  _16 = _15 * 8;
  _17 = this_1(D)->data;
  write (file_4(D), _17, _16); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (this_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 4 (file_4(D) - 4 )
Partition 6 (_6 - 6 )
Partition 8 (_8 - 8 )
Partition 10 (_10 - 10 )
Partition 12 (_12 - 12 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )


Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (file_4(D) - 4 )


Live on entry to BB2 : this_1(D)  file_4(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (file_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (file_4(D) - 4 )
Partition 3 (_6 - 6 )
Partition 4 (_8 - 8 )
Partition 5 (_10 - 10 )
Partition 6 (_12 - 12 )
Partition 7 (_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (_16 - 16 )
Partition 10 (_17 - 17 )


Replacing Expressions
_2 replace with --> _2 = &this_1(D)->m;

_6 replace with --> _6 = &this_1(D)->safe;

_8 replace with --> _8 = &this_1(D)->calls;

_10 replace with --> _10 = &this_1(D)->clearhits;

_12 replace with --> _12 = &this_1(D)->collisions;

_14 replace with --> _14 = this_1(D)->m;

_15 replace with --> _15 = (long unsigned int) _14;

_16 replace with --> _16 = _15 * 8;

_17 replace with --> _17 = this_1(D)->data;


void collision_table::save(int) (struct collision_table * const this, int file)
{
  long int * _2;
  int * _6;
  long int * _8;
  long int * _10;
  long int * _12;
  long int _14;
  long unsigned int _15;
  long unsigned int _16;
  long int * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &this_1(D)->m;
  write (file_4(D), _2, 8);
  _6 = &this_1(D)->safe;
  write (file_4(D), _6, 4);
  _8 = &this_1(D)->calls;
  write (file_4(D), _8, 8);
  _10 = &this_1(D)->clearhits;
  write (file_4(D), _10, 8);
  _12 = &this_1(D)->collisions;
  write (file_4(D), _12, 8);
  _14 = this_1(D)->m;
  _15 = (long unsigned int) _14;
  _16 = _15 * 8;
  _17 = this_1(D)->data;
  write (file_4(D), _17, _16); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; write (file_4(D), _2, 8);

(insn 7 6 8 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:243 -1
     (nil))

(insn 8 7 9 (set (reg:DI 4 si)
        (reg/f:DI 68 [ this ])) tiles.cpp:243 -1
     (nil))

(insn 9 8 10 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:243 -1
     (nil))

(call_insn 10 9 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:243 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; write (file_4(D), _6, 4);

(insn 11 10 12 (parallel [
            (set (reg:DI 70 [ D.26107 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:244 -1
     (nil))

(insn 12 11 13 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tiles.cpp:244 -1
     (nil))

(insn 13 12 14 (set (reg:DI 4 si)
        (reg:DI 70 [ D.26107 ])) tiles.cpp:244 -1
     (nil))

(insn 14 13 15 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:244 -1
     (nil))

(call_insn 15 14 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:244 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; write (file_4(D), _8, 8);

(insn 16 15 17 (parallel [
            (set (reg:DI 71 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:245 -1
     (nil))

(insn 17 16 18 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:245 -1
     (nil))

(insn 18 17 19 (set (reg:DI 4 si)
        (reg:DI 71 [ D.26106 ])) tiles.cpp:245 -1
     (nil))

(insn 19 18 20 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:245 -1
     (nil))

(call_insn 20 19 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:245 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; write (file_4(D), _10, 8);

(insn 21 20 22 (parallel [
            (set (reg:DI 72 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:246 -1
     (nil))

(insn 22 21 23 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:246 -1
     (nil))

(insn 23 22 24 (set (reg:DI 4 si)
        (reg:DI 72 [ D.26106 ])) tiles.cpp:246 -1
     (nil))

(insn 24 23 25 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:246 -1
     (nil))

(call_insn 25 24 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:246 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; write (file_4(D), _12, 8);

(insn 26 25 27 (parallel [
            (set (reg:DI 73 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:247 -1
     (nil))

(insn 27 26 28 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:247 -1
     (nil))

(insn 28 27 29 (set (reg:DI 4 si)
        (reg:DI 73 [ D.26106 ])) tiles.cpp:247 -1
     (nil))

(insn 29 28 30 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:247 -1
     (nil))

(call_insn 30 29 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:247 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; write (file_4(D), _17, _16); [tail call]

(insn 31 30 32 2 (set (reg:DI 75)
        (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:248 -1
     (nil))

(insn 32 31 33 2 (parallel [
            (set (reg:DI 74 [ D.26109 ])
                (ashift:DI (reg:DI 75)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:248 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 33 32 34 2 (set (reg:DI 76)
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) tiles.cpp:248 -1
     (nil))

(insn 34 33 35 2 (set (reg:DI 1 dx)
        (reg:DI 74 [ D.26109 ])) tiles.cpp:248 -1
     (nil))

(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg:DI 76)) tiles.cpp:248 -1
     (nil))

(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:248 -1
     (nil))

(call_insn/j 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:248 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(barrier 38 37 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 68 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:242 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 69 [ file ])
        (reg:SI 4 si [ file ])) tiles.cpp:242 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:243 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/f:DI 68 [ this ])) tiles.cpp:243 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:243 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:243 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 70 [ D.26107 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:244 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tiles.cpp:244 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 70 [ D.26107 ])) tiles.cpp:244 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:244 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:244 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 71 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:245 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:245 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 71 [ D.26106 ])) tiles.cpp:245 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:245 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:245 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 72 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:246 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:246 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg:DI 72 [ D.26106 ])) tiles.cpp:246 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:246 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:246 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 73 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:247 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:247 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg:DI 73 [ D.26106 ])) tiles.cpp:247 -1
     (nil))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:247 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:247 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 2 (set (reg:DI 75)
        (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:248 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:DI 74 [ D.26109 ])
                (ashift:DI (reg:DI 75)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:248 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 33 32 34 2 (set (reg:DI 76)
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) tiles.cpp:248 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 1 dx)
        (reg:DI 74 [ D.26109 ])) tiles.cpp:248 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg:DI 76)) tiles.cpp:248 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:248 -1
     (nil))
(call_insn/j 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:248 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 38 37 0)

;; Function void collision_table::restore(int) (_ZN15collision_table7restoreEi, funcdef_no=1075, decl_uid=23665, cgraph_uid=319)

void collision_table::restore(int) (struct collision_table * const this, int file)
{
  long int * _2;
  int * _6;
  long int * _8;
  long int * _10;
  long int * _12;
  long int _14;
  long unsigned int _15;
  long unsigned int _16;
  long int * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &this_1(D)->m;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _2
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _2, 8);
  _6 = &this_1(D)->safe;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _6
  # DEBUG __nbytes => 4
  __read_alias (file_4(D), _6, 4);
  _8 = &this_1(D)->calls;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _8
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _8, 8);
  _10 = &this_1(D)->clearhits;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _10
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _10, 8);
  _12 = &this_1(D)->collisions;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _12
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _12, 8);
  _14 = this_1(D)->m;
  _15 = (long unsigned int) _14;
  _16 = _15 * 8;
  _17 = this_1(D)->data;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _17
  # DEBUG __nbytes => _16
  __read_alias (file_4(D), _17, _16); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (this_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 4 (file_4(D) - 4 )
Partition 6 (_6 - 6 )
Partition 8 (_8 - 8 )
Partition 10 (_10 - 10 )
Partition 12 (_12 - 12 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )


Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (file_4(D) - 4 )


Live on entry to BB2 : this_1(D)  file_4(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (file_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (file_4(D) - 4 )
Partition 3 (_6 - 6 )
Partition 4 (_8 - 8 )
Partition 5 (_10 - 10 )
Partition 6 (_12 - 12 )
Partition 7 (_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (_16 - 16 )
Partition 10 (_17 - 17 )


Replacing Expressions
_2 replace with --> _2 = &this_1(D)->m;

_6 replace with --> _6 = &this_1(D)->safe;

_8 replace with --> _8 = &this_1(D)->calls;

_10 replace with --> _10 = &this_1(D)->clearhits;

_12 replace with --> _12 = &this_1(D)->collisions;

_14 replace with --> _14 = this_1(D)->m;

_15 replace with --> _15 = (long unsigned int) _14;

_16 replace with --> _16 = _15 * 8;

_17 replace with --> _17 = this_1(D)->data;


void collision_table::restore(int) (struct collision_table * const this, int file)
{
  long int * _2;
  int * _6;
  long int * _8;
  long int * _10;
  long int * _12;
  long int _14;
  long unsigned int _15;
  long unsigned int _16;
  long int * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &this_1(D)->m;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _2
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _2, 8);
  _6 = &this_1(D)->safe;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _6
  # DEBUG __nbytes => 4
  __read_alias (file_4(D), _6, 4);
  _8 = &this_1(D)->calls;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _8
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _8, 8);
  _10 = &this_1(D)->clearhits;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _10
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _10, 8);
  _12 = &this_1(D)->collisions;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _12
  # DEBUG __nbytes => 8
  __read_alias (file_4(D), _12, 8);
  _14 = this_1(D)->m;
  _15 = (long unsigned int) _14;
  _16 = _15 * 8;
  _17 = this_1(D)->data;
  # DEBUG __fd => file_4(D)
  # DEBUG __buf => _17
  # DEBUG __nbytes => _16
  __read_alias (file_4(D), _17, _16); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; # DEBUG __fd => file_4(D)

(debug_insn 7 6 0 (var_location:SI __fd (const_int 0 [0])) tiles.cpp:252 -1
     (nil))
;; # DEBUG __buf => _2

(debug_insn 8 7 0 (var_location:DI __buf (const_int 0 [0])) tiles.cpp:252 -1
     (nil))
;; # DEBUG __nbytes => 8

(debug_insn 9 8 0 (var_location:DI __nbytes (const_int 0 [0])) tiles.cpp:252 -1
     (nil))
;; __read_alias (file_4(D), _2, 8);

(insn 10 9 11 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 11 10 12 (set (reg:DI 4 si)
        (reg/f:DI 68 [ this ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 12 11 13 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(call_insn 13 12 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; # DEBUG __fd => file_4(D)

(debug_insn 14 13 0 (var_location:SI __fd (const_int 0 [0])) tiles.cpp:253 -1
     (nil))
;; # DEBUG __buf => _6

(debug_insn 15 14 0 (var_location:DI __buf (const_int 0 [0])) tiles.cpp:253 -1
     (nil))
;; # DEBUG __nbytes => 4

(debug_insn 16 15 0 (var_location:DI __nbytes (const_int 0 [0])) tiles.cpp:253 -1
     (nil))
;; __read_alias (file_4(D), _6, 4);

(insn 17 16 18 (parallel [
            (set (reg:DI 70 [ D.26113 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:253 -1
     (nil))

(insn 18 17 19 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 19 18 20 (set (reg:DI 4 si)
        (reg:DI 70 [ D.26113 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 20 19 21 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(call_insn 21 20 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; # DEBUG __fd => file_4(D)

(debug_insn 22 21 0 (var_location:SI __fd (const_int 0 [0])) tiles.cpp:254 -1
     (nil))
;; # DEBUG __buf => _8

(debug_insn 23 22 0 (var_location:DI __buf (const_int 0 [0])) tiles.cpp:254 -1
     (nil))
;; # DEBUG __nbytes => 8

(debug_insn 24 23 0 (var_location:DI __nbytes (const_int 0 [0])) tiles.cpp:254 -1
     (nil))
;; __read_alias (file_4(D), _8, 8);

(insn 25 24 26 (parallel [
            (set (reg:DI 71 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:254 -1
     (nil))

(insn 26 25 27 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 27 26 28 (set (reg:DI 4 si)
        (reg:DI 71 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 28 27 29 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(call_insn 29 28 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; # DEBUG __fd => file_4(D)

(debug_insn 30 29 0 (var_location:SI __fd (const_int 0 [0])) tiles.cpp:255 -1
     (nil))
;; # DEBUG __buf => _10

(debug_insn 31 30 0 (var_location:DI __buf (const_int 0 [0])) tiles.cpp:255 -1
     (nil))
;; # DEBUG __nbytes => 8

(debug_insn 32 31 0 (var_location:DI __nbytes (const_int 0 [0])) tiles.cpp:255 -1
     (nil))
;; __read_alias (file_4(D), _10, 8);

(insn 33 32 34 (parallel [
            (set (reg:DI 72 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:255 -1
     (nil))

(insn 34 33 35 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 35 34 36 (set (reg:DI 4 si)
        (reg:DI 72 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 36 35 37 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(call_insn 37 36 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; # DEBUG __fd => file_4(D)

(debug_insn 38 37 0 (var_location:SI __fd (const_int 0 [0])) tiles.cpp:256 -1
     (nil))
;; # DEBUG __buf => _12

(debug_insn 39 38 0 (var_location:DI __buf (const_int 0 [0])) tiles.cpp:256 -1
     (nil))
;; # DEBUG __nbytes => 8

(debug_insn 40 39 0 (var_location:DI __nbytes (const_int 0 [0])) tiles.cpp:256 -1
     (nil))
;; __read_alias (file_4(D), _12, 8);

(insn 41 40 42 (parallel [
            (set (reg:DI 73 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:256 -1
     (nil))

(insn 42 41 43 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 43 42 44 (set (reg:DI 4 si)
        (reg:DI 73 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 44 43 45 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(call_insn 45 44 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

;; # DEBUG __fd => file_4(D)

(debug_insn 46 45 0 (var_location:SI __fd (const_int 0 [0])) tiles.cpp:257 -1
     (nil))
;; # DEBUG __buf => _17

(debug_insn 47 46 0 (var_location:DI __buf (const_int 0 [0])) tiles.cpp:257 -1
     (nil))
;; # DEBUG __nbytes => _16

(debug_insn 48 47 0 (var_location:DI __nbytes (const_int 0 [0])) tiles.cpp:257 -1
     (nil))
;; __read_alias (file_4(D), _17, _16); [tail call]

(insn 49 48 50 2 (set (reg:DI 75)
        (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:257 -1
     (nil))

(insn 50 49 51 2 (parallel [
            (set (reg:DI 74 [ D.26115 ])
                (ashift:DI (reg:DI 75)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:257 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 51 50 52 2 (set (reg:DI 76)
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 52 51 53 2 (set (reg:DI 1 dx)
        (reg:DI 74 [ D.26115 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 53 52 54 2 (set (reg:DI 4 si)
        (reg:DI 76)) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(insn 54 53 55 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))

(call_insn/j 55 54 56 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(barrier 56 55 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 68 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:251 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 69 [ file ])
        (reg:SI 4 si [ file ])) tiles.cpp:251 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:252 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:DI __buf (reg/f:DI 68 [ this ])) tiles.cpp:252 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:252 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 68 [ this ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 14 13 15 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:253 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 16 [0x10]))) tiles.cpp:253 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:DI __nbytes (const_int 4 [0x4])) tiles.cpp:253 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 70 [ D.26113 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:253 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 70 [ D.26113 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 22 21 23 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:254 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 24 [0x18]))) tiles.cpp:254 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:254 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 71 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:254 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg:DI 71 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 30 29 31 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:255 -1
     (nil))
(debug_insn 31 30 32 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 32 [0x20]))) tiles.cpp:255 -1
     (nil))
(debug_insn 32 31 33 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:255 -1
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg:DI 72 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:255 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg:DI 72 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(call_insn 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 38 37 39 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:256 -1
     (nil))
(debug_insn 39 38 40 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 40 [0x28]))) tiles.cpp:256 -1
     (nil))
(debug_insn 40 39 41 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:256 -1
     (nil))
(insn 41 40 42 2 (parallel [
            (set (reg:DI 73 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:256 -1
     (nil))
(insn 42 41 43 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 43 42 44 2 (set (reg:DI 4 si)
        (reg:DI 73 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 44 43 45 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(call_insn 45 44 46 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 46 45 47 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:257 -1
     (nil))
(debug_insn 47 46 48 2 (var_location:DI __buf (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
            (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) tiles.cpp:257 -1
     (nil))
(debug_insn 48 47 49 2 (var_location:DI __nbytes (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
        (const_int 3 [0x3]))) tiles.cpp:257 -1
     (nil))
(insn 49 48 50 2 (set (reg:DI 75)
        (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:257 -1
     (nil))
(insn 50 49 51 2 (parallel [
            (set (reg:DI 74 [ D.26115 ])
                (ashift:DI (reg:DI 75)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:257 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 51 50 52 2 (set (reg:DI 76)
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 52 51 53 2 (set (reg:DI 1 dx)
        (reg:DI 74 [ D.26115 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 53 52 54 2 (set (reg:DI 4 si)
        (reg:DI 76)) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(insn 54 53 55 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil))
(call_insn/j 55 54 56 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 56 55 0)

;; Function void tiles(int*, int, int, float*, int) (_Z5tilesPiiiPfi, funcdef_no=1076, decl_uid=23709, cgraph_uid=320)

void tiles(int*, int, int, float*, int) (int * the_tiles, int nt, int memory, float * floats, int nf)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  tiles (the_tiles_2(D), nt_3(D), memory_4(D), floats_5(D), nf_6(D), &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (the_tiles_2(D) - 2 )
Partition 3 (nt_3(D) - 3 )
Partition 4 (memory_4(D) - 4 )
Partition 5 (floats_5(D) - 5 )
Partition 6 (nf_6(D) - 6 )


Partition map 

Partition 0 (the_tiles_2(D) - 2 )
Partition 1 (nt_3(D) - 3 )
Partition 2 (memory_4(D) - 4 )
Partition 3 (floats_5(D) - 5 )
Partition 4 (nf_6(D) - 6 )


Live on entry to BB2 : the_tiles_2(D)  nt_3(D)  memory_4(D)  floats_5(D)  nf_6(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (the_tiles_2(D) - 2 )
Partition 1 (nt_3(D) - 3 )
Partition 2 (memory_4(D) - 4 )
Partition 3 (floats_5(D) - 5 )
Partition 4 (nf_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (the_tiles_2(D) - 2 )
Partition 1 (nt_3(D) - 3 )
Partition 2 (memory_4(D) - 4 )
Partition 3 (floats_5(D) - 5 )
Partition 4 (nf_6(D) - 6 )

void tiles(int*, int, int, float*, int) (int * the_tiles, int nt, int memory, float * floats, int nf)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  tiles (the_tiles_2(D), nt_3(D), memory_4(D), floats_5(D), nf_6(D), &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; tiles (the_tiles_2(D), nt_3(D), memory_4(D), floats_5(D), nf_6(D), &i_tmp_arr, 0); [tail call]

(insn 10 9 11 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:276 -1
     (nil))

(insn 11 10 12 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:276 -1
     (nil))

(insn 12 11 13 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:276 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 13 12 14 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:276 -1
     (nil))

(insn 14 13 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:276 -1
     (nil))

(insn 15 14 16 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:276 -1
     (nil))

(insn 16 15 17 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:276 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:276 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:276 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:275 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:275 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:275 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:275 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:275 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:276 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:276 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:276 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:276 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:276 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:276 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:276 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:276 -1
     (nil))
(call_insn 18 17 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:276 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles(int*, int, collision_table*, float*, int) (_Z5tilesPiiP15collision_tablePfi, funcdef_no=1077, decl_uid=23715, cgraph_uid=321)

void tiles(int*, int, collision_table*, float*, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  tiles (the_tiles_2(D), nt_3(D), ct_4(D), floats_5(D), nf_6(D), &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (the_tiles_2(D) - 2 )
Partition 3 (nt_3(D) - 3 )
Partition 4 (ct_4(D) - 4 )
Partition 5 (floats_5(D) - 5 )
Partition 6 (nf_6(D) - 6 )


Partition map 

Partition 0 (the_tiles_2(D) - 2 )
Partition 1 (nt_3(D) - 3 )
Partition 2 (ct_4(D) - 4 )
Partition 3 (floats_5(D) - 5 )
Partition 4 (nf_6(D) - 6 )


Live on entry to BB2 : the_tiles_2(D)  nt_3(D)  ct_4(D)  floats_5(D)  nf_6(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (the_tiles_2(D) - 2 )
Partition 1 (nt_3(D) - 3 )
Partition 2 (ct_4(D) - 4 )
Partition 3 (floats_5(D) - 5 )
Partition 4 (nf_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (the_tiles_2(D) - 2 )
Partition 1 (nt_3(D) - 3 )
Partition 2 (ct_4(D) - 4 )
Partition 3 (floats_5(D) - 5 )
Partition 4 (nf_6(D) - 6 )

void tiles(int*, int, collision_table*, float*, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  tiles (the_tiles_2(D), nt_3(D), ct_4(D), floats_5(D), nf_6(D), &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; tiles (the_tiles_2(D), nt_3(D), ct_4(D), floats_5(D), nf_6(D), &i_tmp_arr, 0); [tail call]

(insn 10 9 11 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:279 -1
     (nil))

(insn 11 10 12 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:279 -1
     (nil))

(insn 12 11 13 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:279 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 13 12 14 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:279 -1
     (nil))

(insn 14 13 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:279 -1
     (nil))

(insn 15 14 16 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:279 -1
     (nil))

(insn 16 15 17 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:279 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:279 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:279 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:278 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:278 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:278 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:278 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:278 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:279 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:279 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:279 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:279 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:279 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:279 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:279 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:279 -1
     (nil))
(call_insn 18 17 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:279 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles(int*, int, int, float*, int, int) (_Z5tilesPiiiPfii, funcdef_no=1078, decl_uid=23722, cgraph_uid=322)

void tiles(int*, int, int, float*, int, int) (int * the_tiles, int nt, int memory, float * floats, int nf, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  tiles (the_tiles_4(D), nt_5(D), memory_6(D), floats_7(D), nf_8(D), &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (h1_2(D) - 2 )
Partition 4 (the_tiles_4(D) - 4 )
Partition 5 (nt_5(D) - 5 )
Partition 6 (memory_6(D) - 6 )
Partition 7 (floats_7(D) - 7 )
Partition 8 (nf_8(D) - 8 )


Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (memory_6(D) - 6 )
Partition 4 (floats_7(D) - 7 )
Partition 5 (nf_8(D) - 8 )


Live on entry to BB2 : h1_2(D)  the_tiles_4(D)  nt_5(D)  memory_6(D)  floats_7(D)  nf_8(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (memory_6(D) - 6 )
Partition 4 (floats_7(D) - 7 )
Partition 5 (nf_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (memory_6(D) - 6 )
Partition 4 (floats_7(D) - 7 )
Partition 5 (nf_8(D) - 8 )

void tiles(int*, int, int, float*, int, int) (int * the_tiles, int nt, int memory, float * floats, int nf, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  tiles (the_tiles_4(D), nt_5(D), memory_6(D), floats_7(D), nf_8(D), &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_tmp_arr[0] = h1_2(D);

(insn 11 10 12 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:284 -1
     (nil))

(insn 12 11 0 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:284 -1
     (nil))

;; tiles (the_tiles_4(D), nt_5(D), memory_6(D), floats_7(D), nf_8(D), &i_tmp_arr, 1); [tail call]

(insn 13 12 14 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:285 -1
     (nil))

(insn 14 13 15 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:285 -1
     (nil))

(insn 15 14 16 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:285 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 16 15 17 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:285 -1
     (nil))

(insn 17 16 18 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:285 -1
     (nil))

(insn 18 17 19 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:285 -1
     (nil))

(insn 19 18 20 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:285 -1
     (nil))

(insn 20 19 21 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:285 -1
     (nil))

(call_insn 21 20 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:285 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:283 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:283 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:283 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:283 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:283 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:283 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:284 -1
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:284 -1
     (nil))
(insn 13 12 14 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:285 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:285 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:285 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 16 15 17 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:285 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:285 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:285 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:285 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:285 -1
     (nil))
(call_insn 21 20 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:285 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles(int*, int, collision_table*, float*, int, int) (_Z5tilesPiiP15collision_tablePfii, funcdef_no=1079, decl_uid=23729, cgraph_uid=323)

void tiles(int*, int, collision_table*, float*, int, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  tiles (the_tiles_4(D), nt_5(D), ct_6(D), floats_7(D), nf_8(D), &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (h1_2(D) - 2 )
Partition 4 (the_tiles_4(D) - 4 )
Partition 5 (nt_5(D) - 5 )
Partition 6 (ct_6(D) - 6 )
Partition 7 (floats_7(D) - 7 )
Partition 8 (nf_8(D) - 8 )


Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (ct_6(D) - 6 )
Partition 4 (floats_7(D) - 7 )
Partition 5 (nf_8(D) - 8 )


Live on entry to BB2 : h1_2(D)  the_tiles_4(D)  nt_5(D)  ct_6(D)  floats_7(D)  nf_8(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (ct_6(D) - 6 )
Partition 4 (floats_7(D) - 7 )
Partition 5 (nf_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (ct_6(D) - 6 )
Partition 4 (floats_7(D) - 7 )
Partition 5 (nf_8(D) - 8 )

void tiles(int*, int, collision_table*, float*, int, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  tiles (the_tiles_4(D), nt_5(D), ct_6(D), floats_7(D), nf_8(D), &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_tmp_arr[0] = h1_2(D);

(insn 11 10 12 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:288 -1
     (nil))

(insn 12 11 0 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:288 -1
     (nil))

;; tiles (the_tiles_4(D), nt_5(D), ct_6(D), floats_7(D), nf_8(D), &i_tmp_arr, 1); [tail call]

(insn 13 12 14 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:289 -1
     (nil))

(insn 14 13 15 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:289 -1
     (nil))

(insn 15 14 16 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:289 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 16 15 17 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:289 -1
     (nil))

(insn 17 16 18 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:289 -1
     (nil))

(insn 18 17 19 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:289 -1
     (nil))

(insn 19 18 20 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:289 -1
     (nil))

(insn 20 19 21 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:289 -1
     (nil))

(call_insn 21 20 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:289 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:287 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:287 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:287 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:287 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:287 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:287 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:288 -1
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:288 -1
     (nil))
(insn 13 12 14 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:289 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:289 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:289 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 16 15 17 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:289 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:289 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:289 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:289 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:289 -1
     (nil))
(call_insn 21 20 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:289 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles(int*, int, int, float*, int, int, int) (_Z5tilesPiiiPfiii, funcdef_no=1080, decl_uid=23737, cgraph_uid=324)

void tiles(int*, int, int, float*, int, int, int) (int * the_tiles, int nt, int memory, float * floats, int nf, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  tiles (the_tiles_6(D), nt_7(D), memory_8(D), floats_9(D), nf_10(D), &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (h1_2(D) - 2 )
Partition 4 (h2_4(D) - 4 )
Partition 6 (the_tiles_6(D) - 6 )
Partition 7 (nt_7(D) - 7 )
Partition 8 (memory_8(D) - 8 )
Partition 9 (floats_9(D) - 9 )
Partition 10 (nf_10(D) - 10 )


Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )
Partition 5 (floats_9(D) - 9 )
Partition 6 (nf_10(D) - 10 )


Live on entry to BB2 : h1_2(D)  h2_4(D)  the_tiles_6(D)  nt_7(D)  memory_8(D)  floats_9(D)  nf_10(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )
Partition 5 (floats_9(D) - 9 )
Partition 6 (nf_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )
Partition 5 (floats_9(D) - 9 )
Partition 6 (nf_10(D) - 10 )

void tiles(int*, int, int, float*, int, int, int) (int * the_tiles, int nt, int memory, float * floats, int nf, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  tiles (the_tiles_6(D), nt_7(D), memory_8(D), floats_9(D), nf_10(D), &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_tmp_arr[0] = h1_2(D);

(insn 12 11 13 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:294 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:294 -1
     (nil))

;; i_tmp_arr[1] = h2_4(D);

(insn 14 13 15 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:295 -1
     (nil))

(insn 15 14 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:295 -1
     (nil))

;; tiles (the_tiles_6(D), nt_7(D), memory_8(D), floats_9(D), nf_10(D), &i_tmp_arr, 2); [tail call]

(insn 16 15 17 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:296 -1
     (nil))

(insn 17 16 18 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:296 -1
     (nil))

(insn 18 17 19 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:296 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 19 18 20 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:296 -1
     (nil))

(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:296 -1
     (nil))

(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:296 -1
     (nil))

(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:296 -1
     (nil))

(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:296 -1
     (nil))

(call_insn/j 24 23 25 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:296 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))

(barrier 25 24 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:293 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:293 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:293 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:293 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:293 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:293 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 h2+0 S4 A64])) tiles.cpp:293 -1
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:294 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:294 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:295 -1
     (nil))
(insn 15 14 16 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:295 -1
     (nil))
(insn 16 15 17 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:296 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:296 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:296 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:296 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:296 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:296 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:296 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:296 -1
     (nil))
(call_insn/j 24 23 25 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:296 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 25 24 0)

;; Function void tiles(int*, int, collision_table*, float*, int, int, int) (_Z5tilesPiiP15collision_tablePfiii, funcdef_no=1081, decl_uid=23745, cgraph_uid=325)

void tiles(int*, int, collision_table*, float*, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  tiles (the_tiles_6(D), nt_7(D), ct_8(D), floats_9(D), nf_10(D), &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (h1_2(D) - 2 )
Partition 4 (h2_4(D) - 4 )
Partition 6 (the_tiles_6(D) - 6 )
Partition 7 (nt_7(D) - 7 )
Partition 8 (ct_8(D) - 8 )
Partition 9 (floats_9(D) - 9 )
Partition 10 (nf_10(D) - 10 )


Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )
Partition 5 (floats_9(D) - 9 )
Partition 6 (nf_10(D) - 10 )


Live on entry to BB2 : h1_2(D)  h2_4(D)  the_tiles_6(D)  nt_7(D)  ct_8(D)  floats_9(D)  nf_10(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )
Partition 5 (floats_9(D) - 9 )
Partition 6 (nf_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )
Partition 5 (floats_9(D) - 9 )
Partition 6 (nf_10(D) - 10 )

void tiles(int*, int, collision_table*, float*, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  tiles (the_tiles_6(D), nt_7(D), ct_8(D), floats_9(D), nf_10(D), &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_tmp_arr[0] = h1_2(D);

(insn 12 11 13 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:299 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:299 -1
     (nil))

;; i_tmp_arr[1] = h2_4(D);

(insn 14 13 15 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:300 -1
     (nil))

(insn 15 14 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:300 -1
     (nil))

;; tiles (the_tiles_6(D), nt_7(D), ct_8(D), floats_9(D), nf_10(D), &i_tmp_arr, 2); [tail call]

(insn 16 15 17 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:301 -1
     (nil))

(insn 17 16 18 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:301 -1
     (nil))

(insn 18 17 19 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:301 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 19 18 20 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:301 -1
     (nil))

(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:301 -1
     (nil))

(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:301 -1
     (nil))

(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:301 -1
     (nil))

(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:301 -1
     (nil))

(call_insn/j 24 23 25 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:301 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))

(barrier 25 24 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:298 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:298 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:298 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:298 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:298 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:298 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 h2+0 S4 A64])) tiles.cpp:298 -1
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:299 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:299 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:300 -1
     (nil))
(insn 15 14 16 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:300 -1
     (nil))
(insn 16 15 17 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:301 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:301 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:301 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:301 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:301 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:301 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:301 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:301 -1
     (nil))
(call_insn/j 24 23 25 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:301 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 25 24 0)

;; Function void tiles(int*, int, int, float*, int, int, int, int) (_Z5tilesPiiiPfiiii, funcdef_no=1082, decl_uid=23754, cgraph_uid=326)

void tiles(int*, int, int, float*, int, int, int, int) (int * the_tiles, int nt, int memory, float * floats, int nf, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  i_tmp_arr[2] = h3_6(D);
  tiles (the_tiles_8(D), nt_9(D), memory_10(D), floats_11(D), nf_12(D), &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (h1_2(D) - 2 )
Partition 4 (h2_4(D) - 4 )
Partition 6 (h3_6(D) - 6 )
Partition 8 (the_tiles_8(D) - 8 )
Partition 9 (nt_9(D) - 9 )
Partition 10 (memory_10(D) - 10 )
Partition 11 (floats_11(D) - 11 )
Partition 12 (nf_12(D) - 12 )


Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (h3_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )
Partition 6 (floats_11(D) - 11 )
Partition 7 (nf_12(D) - 12 )


Live on entry to BB2 : h1_2(D)  h2_4(D)  h3_6(D)  the_tiles_8(D)  nt_9(D)  memory_10(D)  floats_11(D)  nf_12(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (h3_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )
Partition 6 (floats_11(D) - 11 )
Partition 7 (nf_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (h3_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )
Partition 6 (floats_11(D) - 11 )
Partition 7 (nf_12(D) - 12 )

void tiles(int*, int, int, float*, int, int, int, int) (int * the_tiles, int nt, int memory, float * floats, int nf, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  i_tmp_arr[2] = h3_6(D);
  tiles (the_tiles_8(D), nt_9(D), memory_10(D), floats_11(D), nf_12(D), &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_tmp_arr[0] = h1_2(D);

(insn 13 12 14 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:306 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:306 -1
     (nil))

;; i_tmp_arr[1] = h2_4(D);

(insn 15 14 16 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:307 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:307 -1
     (nil))

;; i_tmp_arr[2] = h3_6(D);

(insn 17 16 18 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:308 -1
     (nil))

(insn 18 17 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:308 -1
     (nil))

;; tiles (the_tiles_8(D), nt_9(D), memory_10(D), floats_11(D), nf_12(D), &i_tmp_arr, 3); [tail call]

(insn 19 18 20 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:309 -1
     (nil))

(insn 20 19 21 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:309 -1
     (nil))

(insn 21 20 22 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:309 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 22 21 23 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:309 -1
     (nil))

(insn 23 22 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:309 -1
     (nil))

(insn 24 23 25 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:309 -1
     (nil))

(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:309 -1
     (nil))

(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:309 -1
     (nil))

(call_insn/j 27 26 28 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:309 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))

(barrier 28 27 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:305 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:305 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:305 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:305 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:305 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:305 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 h2+0 S4 A64])) tiles.cpp:305 -1
     (nil))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (mem/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 h3+0 S4 A64])) tiles.cpp:305 -1
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:306 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:306 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:307 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:307 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:308 -1
     (nil))
(insn 18 17 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:308 -1
     (nil))
(insn 19 18 20 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:309 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:309 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:309 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:309 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:309 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:309 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:309 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:309 -1
     (nil))
(call_insn/j 27 26 28 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:309 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 28 27 0)

;; Function void tiles(int*, int, collision_table*, float*, int, int, int, int) (_Z5tilesPiiP15collision_tablePfiiii, funcdef_no=1083, decl_uid=23763, cgraph_uid=327)

void tiles(int*, int, collision_table*, float*, int, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  i_tmp_arr[2] = h3_6(D);
  tiles (the_tiles_8(D), nt_9(D), ct_10(D), floats_11(D), nf_12(D), &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (h1_2(D) - 2 )
Partition 4 (h2_4(D) - 4 )
Partition 6 (h3_6(D) - 6 )
Partition 8 (the_tiles_8(D) - 8 )
Partition 9 (nt_9(D) - 9 )
Partition 10 (ct_10(D) - 10 )
Partition 11 (floats_11(D) - 11 )
Partition 12 (nf_12(D) - 12 )


Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (h3_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )
Partition 6 (floats_11(D) - 11 )
Partition 7 (nf_12(D) - 12 )


Live on entry to BB2 : h1_2(D)  h2_4(D)  h3_6(D)  the_tiles_8(D)  nt_9(D)  ct_10(D)  floats_11(D)  nf_12(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (h3_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )
Partition 6 (floats_11(D) - 11 )
Partition 7 (nf_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (h1_2(D) - 2 )
Partition 1 (h2_4(D) - 4 )
Partition 2 (h3_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )
Partition 6 (floats_11(D) - 11 )
Partition 7 (nf_12(D) - 12 )

void tiles(int*, int, collision_table*, float*, int, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float * floats, int nf, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  i_tmp_arr[0] = h1_2(D);
  i_tmp_arr[1] = h2_4(D);
  i_tmp_arr[2] = h3_6(D);
  tiles (the_tiles_8(D), nt_9(D), ct_10(D), floats_11(D), nf_12(D), &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; i_tmp_arr[0] = h1_2(D);

(insn 13 12 14 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:312 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:312 -1
     (nil))

;; i_tmp_arr[1] = h2_4(D);

(insn 15 14 16 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:313 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:313 -1
     (nil))

;; i_tmp_arr[2] = h3_6(D);

(insn 17 16 18 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:314 -1
     (nil))

(insn 18 17 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:314 -1
     (nil))

;; tiles (the_tiles_8(D), nt_9(D), ct_10(D), floats_11(D), nf_12(D), &i_tmp_arr, 3); [tail call]

(insn 19 18 20 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:315 -1
     (nil))

(insn 20 19 21 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:315 -1
     (nil))

(insn 21 20 22 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:315 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 22 21 23 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:315 -1
     (nil))

(insn 23 22 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:315 -1
     (nil))

(insn 24 23 25 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:315 -1
     (nil))

(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:315 -1
     (nil))

(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:315 -1
     (nil))

(call_insn/j 27 26 28 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:315 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))

(barrier 28 27 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:311 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:311 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:311 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:311 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:311 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:311 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 53 virtual-incoming-args) [0 h2+0 S4 A64])) tiles.cpp:311 -1
     (nil))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (mem/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 h3+0 S4 A64])) tiles.cpp:311 -1
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:312 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:312 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:313 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:313 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:314 -1
     (nil))
(insn 18 17 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:314 -1
     (nil))
(insn 19 18 20 2 (set (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:315 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:315 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:315 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:315 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:315 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:315 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:315 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:315 -1
     (nil))
(call_insn/j 27 26 28 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:315 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 53 virtual-incoming-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 28 27 0)

;; Function void tiles1(int*, int, int, float) (_Z6tiles1Piiif, funcdef_no=1084, decl_uid=23768, cgraph_uid=328)

void tiles1(int*, int, int, float) (int * the_tiles, int nt, int memory, float f1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  tiles (the_tiles_4(D), nt_5(D), memory_6(D), &f_tmp_arr, 1, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (the_tiles_4(D) - 4 )
Partition 5 (nt_5(D) - 5 )
Partition 6 (memory_6(D) - 6 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (memory_6(D) - 6 )


Live on entry to BB2 : f1_2(D)  the_tiles_4(D)  nt_5(D)  memory_6(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (memory_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (memory_6(D) - 6 )

void tiles1(int*, int, int, float) (int * the_tiles, int nt, int memory, float f1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  tiles (the_tiles_4(D), nt_5(D), memory_6(D), &f_tmp_arr, 1, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 9 8 10 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:320 -1
     (nil))

(insn 10 9 0 (set (mem/j/c:SF (reg/f:DI 63) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:320 -1
     (nil))

;; tiles (the_tiles_4(D), nt_5(D), memory_6(D), &f_tmp_arr, 1, &i_tmp_arr, 0); [tail call]

(insn 11 10 12 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:321 -1
     (nil))

(insn 12 11 13 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:321 -1
     (nil))

(insn 13 12 14 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:321 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 14 13 15 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:321 -1
     (nil))

(insn 15 14 16 (set (reg:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:321 -1
     (nil))

(insn 16 15 17 (set (reg:DI 2 cx)
        (reg:DI 65)) tiles.cpp:321 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 17 16 18 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:321 -1
     (nil))

(insn 18 17 19 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:321 -1
     (nil))

(insn 19 18 20 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:321 -1
     (nil))

(call_insn 20 19 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:321 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:319 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:319 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:319 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:319 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:320 -1
     (nil))
(insn 10 9 11 2 (set (mem/j/c:SF (reg/f:DI 63) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:320 -1
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:321 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:321 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:321 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:321 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:321 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (reg:DI 65)) tiles.cpp:321 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:321 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:321 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:321 -1
     (nil))
(call_insn 20 19 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:321 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles1(int*, int, collision_table*, float) (_Z6tiles1PiiP15collision_tablef, funcdef_no=1085, decl_uid=23773, cgraph_uid=329)

void tiles1(int*, int, collision_table*, float) (int * the_tiles, int nt, struct collision_table * ct, float f1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  tiles (the_tiles_4(D), nt_5(D), ct_6(D), &f_tmp_arr, 1, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (the_tiles_4(D) - 4 )
Partition 5 (nt_5(D) - 5 )
Partition 6 (ct_6(D) - 6 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (ct_6(D) - 6 )


Live on entry to BB2 : f1_2(D)  the_tiles_4(D)  nt_5(D)  ct_6(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (ct_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (the_tiles_4(D) - 4 )
Partition 2 (nt_5(D) - 5 )
Partition 3 (ct_6(D) - 6 )

void tiles1(int*, int, collision_table*, float) (int * the_tiles, int nt, struct collision_table * ct, float f1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  tiles (the_tiles_4(D), nt_5(D), ct_6(D), &f_tmp_arr, 1, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 9 8 10 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:324 -1
     (nil))

(insn 10 9 0 (set (mem/j/c:SF (reg/f:DI 63) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:324 -1
     (nil))

;; tiles (the_tiles_4(D), nt_5(D), ct_6(D), &f_tmp_arr, 1, &i_tmp_arr, 0); [tail call]

(insn 11 10 12 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:325 -1
     (nil))

(insn 12 11 13 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:325 -1
     (nil))

(insn 13 12 14 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:325 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 14 13 15 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:325 -1
     (nil))

(insn 15 14 16 (set (reg:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:325 -1
     (nil))

(insn 16 15 17 (set (reg:DI 2 cx)
        (reg:DI 65)) tiles.cpp:325 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 17 16 18 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:325 -1
     (nil))

(insn 18 17 19 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:325 -1
     (nil))

(insn 19 18 20 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:325 -1
     (nil))

(call_insn 20 19 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:325 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:323 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:323 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:323 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:323 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:324 -1
     (nil))
(insn 10 9 11 2 (set (mem/j/c:SF (reg/f:DI 63) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:324 -1
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:325 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:325 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:325 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:325 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:325 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (reg:DI 65)) tiles.cpp:325 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:325 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:325 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:325 -1
     (nil))
(call_insn 20 19 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:325 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles1(int*, int, int, float, int) (_Z6tiles1Piiifi, funcdef_no=1086, decl_uid=23779, cgraph_uid=330)

void tiles1(int*, int, int, float, int) (int * the_tiles, int nt, int memory, float f1, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  tiles (the_tiles_6(D), nt_7(D), memory_8(D), &f_tmp_arr, 1, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (h1_4(D) - 4 )
Partition 6 (the_tiles_6(D) - 6 )
Partition 7 (nt_7(D) - 7 )
Partition 8 (memory_8(D) - 8 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )


Live on entry to BB2 : f1_2(D)  h1_4(D)  the_tiles_6(D)  nt_7(D)  memory_8(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )

void tiles1(int*, int, int, float, int) (int * the_tiles, int nt, int memory, float f1, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  tiles (the_tiles_6(D), nt_7(D), memory_8(D), &f_tmp_arr, 1, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 10 9 11 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:330 -1
     (nil))

(insn 11 10 0 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:330 -1
     (nil))

;; i_tmp_arr[0] = h1_4(D);

(insn 12 11 13 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:331 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:331 -1
     (nil))

;; tiles (the_tiles_6(D), nt_7(D), memory_8(D), &f_tmp_arr, 1, &i_tmp_arr, 1); [tail call]

(insn 14 13 15 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:332 -1
     (nil))

(insn 15 14 16 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:332 -1
     (nil))

(insn 16 15 17 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:332 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 17 16 18 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:332 -1
     (nil))

(insn 18 17 19 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:332 -1
     (nil))

(insn 19 18 20 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:332 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:332 -1
     (nil))

(insn 21 20 22 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:332 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:332 -1
     (nil))

(call_insn 23 22 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:332 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:329 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:329 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:329 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:329 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:329 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:330 -1
     (nil))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:330 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:331 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:331 -1
     (nil))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:332 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:332 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:332 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:332 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:332 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:332 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:332 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:332 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:332 -1
     (nil))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:332 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles1(int*, int, collision_table*, float, int) (_Z6tiles1PiiP15collision_tablefi, funcdef_no=1087, decl_uid=23785, cgraph_uid=331)

void tiles1(int*, int, collision_table*, float, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  tiles (the_tiles_6(D), nt_7(D), ct_8(D), &f_tmp_arr, 1, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (h1_4(D) - 4 )
Partition 6 (the_tiles_6(D) - 6 )
Partition 7 (nt_7(D) - 7 )
Partition 8 (ct_8(D) - 8 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )


Live on entry to BB2 : f1_2(D)  h1_4(D)  the_tiles_6(D)  nt_7(D)  ct_8(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )

void tiles1(int*, int, collision_table*, float, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  tiles (the_tiles_6(D), nt_7(D), ct_8(D), &f_tmp_arr, 1, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 10 9 11 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:335 -1
     (nil))

(insn 11 10 0 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:335 -1
     (nil))

;; i_tmp_arr[0] = h1_4(D);

(insn 12 11 13 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:336 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:336 -1
     (nil))

;; tiles (the_tiles_6(D), nt_7(D), ct_8(D), &f_tmp_arr, 1, &i_tmp_arr, 1); [tail call]

(insn 14 13 15 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:337 -1
     (nil))

(insn 15 14 16 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:337 -1
     (nil))

(insn 16 15 17 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:337 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 17 16 18 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:337 -1
     (nil))

(insn 18 17 19 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:337 -1
     (nil))

(insn 19 18 20 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:337 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:337 -1
     (nil))

(insn 21 20 22 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:337 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:337 -1
     (nil))

(call_insn 23 22 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:337 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:334 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:334 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:334 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:334 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:334 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:335 -1
     (nil))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:335 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:336 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:336 -1
     (nil))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:337 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:337 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:337 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:337 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:337 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:337 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:337 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:337 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:337 -1
     (nil))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:337 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles1(int*, int, int, float, int, int) (_Z6tiles1Piiifii, funcdef_no=1088, decl_uid=23792, cgraph_uid=332)

void tiles1(int*, int, int, float, int, int) (int * the_tiles, int nt, int memory, float f1, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  tiles (the_tiles_8(D), nt_9(D), memory_10(D), &f_tmp_arr, 1, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (h1_4(D) - 4 )
Partition 6 (h2_6(D) - 6 )
Partition 8 (the_tiles_8(D) - 8 )
Partition 9 (nt_9(D) - 9 )
Partition 10 (memory_10(D) - 10 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )


Live on entry to BB2 : f1_2(D)  h1_4(D)  h2_6(D)  the_tiles_8(D)  nt_9(D)  memory_10(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )

void tiles1(int*, int, int, float, int, int) (int * the_tiles, int nt, int memory, float f1, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  tiles (the_tiles_8(D), nt_9(D), memory_10(D), &f_tmp_arr, 1, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 11 10 12 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:342 -1
     (nil))

(insn 12 11 0 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:342 -1
     (nil))

;; i_tmp_arr[0] = h1_4(D);

(insn 13 12 14 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:343 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:343 -1
     (nil))

;; i_tmp_arr[1] = h2_6(D);

(insn 15 14 16 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:344 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:344 -1
     (nil))

;; tiles (the_tiles_8(D), nt_9(D), memory_10(D), &f_tmp_arr, 1, &i_tmp_arr, 2); [tail call]

(insn 17 16 18 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:345 -1
     (nil))

(insn 18 17 19 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:345 -1
     (nil))

(insn 19 18 20 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:345 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:345 -1
     (nil))

(insn 21 20 22 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:345 -1
     (nil))

(insn 22 21 23 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:345 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:345 -1
     (nil))

(insn 24 23 25 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:345 -1
     (nil))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:345 -1
     (nil))

(call_insn 26 25 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:345 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:341 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:341 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:341 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:341 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:341 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:341 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:342 -1
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:342 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:343 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:343 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:344 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:344 -1
     (nil))
(insn 17 16 18 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:345 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:345 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:345 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:345 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:345 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:345 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:345 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:345 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:345 -1
     (nil))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:345 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles1(int*, int, collision_table*, float, int, int) (_Z6tiles1PiiP15collision_tablefii, funcdef_no=1089, decl_uid=23799, cgraph_uid=333)

void tiles1(int*, int, collision_table*, float, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  tiles (the_tiles_8(D), nt_9(D), ct_10(D), &f_tmp_arr, 1, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (h1_4(D) - 4 )
Partition 6 (h2_6(D) - 6 )
Partition 8 (the_tiles_8(D) - 8 )
Partition 9 (nt_9(D) - 9 )
Partition 10 (ct_10(D) - 10 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )


Live on entry to BB2 : f1_2(D)  h1_4(D)  h2_6(D)  the_tiles_8(D)  nt_9(D)  ct_10(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )

void tiles1(int*, int, collision_table*, float, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  tiles (the_tiles_8(D), nt_9(D), ct_10(D), &f_tmp_arr, 1, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 11 10 12 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:348 -1
     (nil))

(insn 12 11 0 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:348 -1
     (nil))

;; i_tmp_arr[0] = h1_4(D);

(insn 13 12 14 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:349 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:349 -1
     (nil))

;; i_tmp_arr[1] = h2_6(D);

(insn 15 14 16 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:350 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:350 -1
     (nil))

;; tiles (the_tiles_8(D), nt_9(D), ct_10(D), &f_tmp_arr, 1, &i_tmp_arr, 2); [tail call]

(insn 17 16 18 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:351 -1
     (nil))

(insn 18 17 19 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:351 -1
     (nil))

(insn 19 18 20 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:351 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:351 -1
     (nil))

(insn 21 20 22 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:351 -1
     (nil))

(insn 22 21 23 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:351 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:351 -1
     (nil))

(insn 24 23 25 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:351 -1
     (nil))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:351 -1
     (nil))

(call_insn 26 25 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:351 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:347 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:347 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:347 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:347 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:347 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:347 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:348 -1
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:348 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:349 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:349 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:350 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:350 -1
     (nil))
(insn 17 16 18 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:351 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:351 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:351 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:351 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:351 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:351 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:351 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:351 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:351 -1
     (nil))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:351 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles1(int*, int, int, float, int, int, int) (_Z6tiles1Piiifiii, funcdef_no=1090, decl_uid=23807, cgraph_uid=334)

void tiles1(int*, int, int, float, int, int, int) (int * the_tiles, int nt, int memory, float f1, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  i_tmp_arr[2] = h3_8(D);
  tiles (the_tiles_10(D), nt_11(D), memory_12(D), &f_tmp_arr, 1, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (h1_4(D) - 4 )
Partition 6 (h2_6(D) - 6 )
Partition 8 (h3_8(D) - 8 )
Partition 10 (the_tiles_10(D) - 10 )
Partition 11 (nt_11(D) - 11 )
Partition 12 (memory_12(D) - 12 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (h3_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (memory_12(D) - 12 )


Live on entry to BB2 : f1_2(D)  h1_4(D)  h2_6(D)  h3_8(D)  the_tiles_10(D)  nt_11(D)  memory_12(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (h3_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (memory_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (h3_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (memory_12(D) - 12 )

void tiles1(int*, int, int, float, int, int, int) (int * the_tiles, int nt, int memory, float f1, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  i_tmp_arr[2] = h3_8(D);
  tiles (the_tiles_10(D), nt_11(D), memory_12(D), &f_tmp_arr, 1, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 12 11 13 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:356 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:356 -1
     (nil))

;; i_tmp_arr[0] = h1_4(D);

(insn 14 13 15 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:357 -1
     (nil))

(insn 15 14 0 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:357 -1
     (nil))

;; i_tmp_arr[1] = h2_6(D);

(insn 16 15 17 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:358 -1
     (nil))

(insn 17 16 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:358 -1
     (nil))

;; i_tmp_arr[2] = h3_8(D);

(insn 18 17 19 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:359 -1
     (nil))

(insn 19 18 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 65 [ h3 ])) tiles.cpp:359 -1
     (nil))

;; tiles (the_tiles_10(D), nt_11(D), memory_12(D), &f_tmp_arr, 1, &i_tmp_arr, 3); [tail call]

(insn 20 19 21 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:360 -1
     (nil))

(insn 21 20 22 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:360 -1
     (nil))

(insn 22 21 23 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:360 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:360 -1
     (nil))

(insn 24 23 25 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:360 -1
     (nil))

(insn 25 24 26 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:360 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 26 25 27 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:360 -1
     (nil))

(insn 27 26 28 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:360 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:360 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:360 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:355 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:355 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:355 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:355 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:355 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:355 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:355 -1
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:356 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:356 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:357 -1
     (nil))
(insn 15 14 16 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:357 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:358 -1
     (nil))
(insn 17 16 18 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:358 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:359 -1
     (nil))
(insn 19 18 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 65 [ h3 ])) tiles.cpp:359 -1
     (nil))
(insn 20 19 21 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:360 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:360 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:360 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:360 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:360 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:360 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:360 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:360 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:360 -1
     (nil))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:360 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles1(int*, int, collision_table*, float, int, int, int) (_Z6tiles1PiiP15collision_tablefiii, funcdef_no=1091, decl_uid=23815, cgraph_uid=335)

void tiles1(int*, int, collision_table*, float, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  i_tmp_arr[2] = h3_8(D);
  tiles (the_tiles_10(D), nt_11(D), ct_12(D), &f_tmp_arr, 1, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (h1_4(D) - 4 )
Partition 6 (h2_6(D) - 6 )
Partition 8 (h3_8(D) - 8 )
Partition 10 (the_tiles_10(D) - 10 )
Partition 11 (nt_11(D) - 11 )
Partition 12 (ct_12(D) - 12 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (h3_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (ct_12(D) - 12 )


Live on entry to BB2 : f1_2(D)  h1_4(D)  h2_6(D)  h3_8(D)  the_tiles_10(D)  nt_11(D)  ct_12(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (h3_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (ct_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (h1_4(D) - 4 )
Partition 2 (h2_6(D) - 6 )
Partition 3 (h3_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (ct_12(D) - 12 )

void tiles1(int*, int, collision_table*, float, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  i_tmp_arr[0] = h1_4(D);
  i_tmp_arr[1] = h2_6(D);
  i_tmp_arr[2] = h3_8(D);
  tiles (the_tiles_10(D), nt_11(D), ct_12(D), &f_tmp_arr, 1, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 12 11 13 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:363 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:363 -1
     (nil))

;; i_tmp_arr[0] = h1_4(D);

(insn 14 13 15 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:364 -1
     (nil))

(insn 15 14 0 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:364 -1
     (nil))

;; i_tmp_arr[1] = h2_6(D);

(insn 16 15 17 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:365 -1
     (nil))

(insn 17 16 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:365 -1
     (nil))

;; i_tmp_arr[2] = h3_8(D);

(insn 18 17 19 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:366 -1
     (nil))

(insn 19 18 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 65 [ h3 ])) tiles.cpp:366 -1
     (nil))

;; tiles (the_tiles_10(D), nt_11(D), ct_12(D), &f_tmp_arr, 1, &i_tmp_arr, 3); [tail call]

(insn 20 19 21 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:367 -1
     (nil))

(insn 21 20 22 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:367 -1
     (nil))

(insn 22 21 23 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:367 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:367 -1
     (nil))

(insn 24 23 25 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:367 -1
     (nil))

(insn 25 24 26 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:367 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 26 25 27 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:367 -1
     (nil))

(insn 27 26 28 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:367 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:367 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:367 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:362 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:362 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:362 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:362 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:362 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:362 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:362 -1
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:363 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:363 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:364 -1
     (nil))
(insn 15 14 16 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:364 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:365 -1
     (nil))
(insn 17 16 18 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:365 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:366 -1
     (nil))
(insn 19 18 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 65 [ h3 ])) tiles.cpp:366 -1
     (nil))
(insn 20 19 21 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:367 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:367 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:367 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:367 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:367 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:367 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:367 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:367 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:367 -1
     (nil))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:367 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, int, float, float) (_Z6tiles2Piiiff, funcdef_no=1092, decl_uid=23821, cgraph_uid=336)

void tiles2(int*, int, int, float, float) (int * the_tiles, int nt, int memory, float f1, float f2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  tiles (the_tiles_6(D), nt_7(D), memory_8(D), &f_tmp_arr, 2, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (the_tiles_6(D) - 6 )
Partition 7 (nt_7(D) - 7 )
Partition 8 (memory_8(D) - 8 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  the_tiles_6(D)  nt_7(D)  memory_8(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (memory_8(D) - 8 )

void tiles2(int*, int, int, float, float) (int * the_tiles, int nt, int memory, float f1, float f2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  tiles (the_tiles_6(D), nt_7(D), memory_8(D), &f_tmp_arr, 2, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 10 9 11 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:372 -1
     (nil))

(insn 11 10 0 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:372 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 12 11 13 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:373 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 65)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:373 -1
     (nil))

;; tiles (the_tiles_6(D), nt_7(D), memory_8(D), &f_tmp_arr, 2, &i_tmp_arr, 0); [tail call]

(insn 14 13 15 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:374 -1
     (nil))

(insn 15 14 16 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:374 -1
     (nil))

(insn 16 15 17 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:374 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 17 16 18 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:374 -1
     (nil))

(insn 18 17 19 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:374 -1
     (nil))

(insn 19 18 20 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:374 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:374 -1
     (nil))

(insn 21 20 22 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:374 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:374 -1
     (nil))

(call_insn 23 22 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:374 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:371 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:371 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:371 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:371 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:371 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:372 -1
     (nil))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:372 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:373 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 65)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:373 -1
     (nil))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:374 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:374 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:374 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:374 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:374 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:374 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:374 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:374 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:374 -1
     (nil))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:374 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, collision_table*, float, float) (_Z6tiles2PiiP15collision_tableff, funcdef_no=1093, decl_uid=23827, cgraph_uid=337)

void tiles2(int*, int, collision_table*, float, float) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  tiles (the_tiles_6(D), nt_7(D), ct_8(D), &f_tmp_arr, 2, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (the_tiles_6(D) - 6 )
Partition 7 (nt_7(D) - 7 )
Partition 8 (ct_8(D) - 8 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  the_tiles_6(D)  nt_7(D)  ct_8(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (the_tiles_6(D) - 6 )
Partition 3 (nt_7(D) - 7 )
Partition 4 (ct_8(D) - 8 )

void tiles2(int*, int, collision_table*, float, float) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  tiles (the_tiles_6(D), nt_7(D), ct_8(D), &f_tmp_arr, 2, &i_tmp_arr, 0); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 10 9 11 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:377 -1
     (nil))

(insn 11 10 0 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:377 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 12 11 13 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:378 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 65)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:378 -1
     (nil))

;; tiles (the_tiles_6(D), nt_7(D), ct_8(D), &f_tmp_arr, 2, &i_tmp_arr, 0); [tail call]

(insn 14 13 15 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:379 -1
     (nil))

(insn 15 14 16 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:379 -1
     (nil))

(insn 16 15 17 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:379 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 17 16 18 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:379 -1
     (nil))

(insn 18 17 19 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:379 -1
     (nil))

(insn 19 18 20 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:379 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:379 -1
     (nil))

(insn 21 20 22 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:379 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:379 -1
     (nil))

(call_insn 23 22 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:379 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:376 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:376 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:376 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:376 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:376 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:377 -1
     (nil))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:377 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:378 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 65)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:378 -1
     (nil))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:379 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:379 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:379 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:379 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:379 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg:DI 67)) tiles.cpp:379 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:379 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:379 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:379 -1
     (nil))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:379 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, int, float, float, int) (_Z6tiles2Piiiffi, funcdef_no=1094, decl_uid=23834, cgraph_uid=338)

void tiles2(int*, int, int, float, float, int) (int * the_tiles, int nt, int memory, float f1, float f2, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  tiles (the_tiles_8(D), nt_9(D), memory_10(D), &f_tmp_arr, 2, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (h1_6(D) - 6 )
Partition 8 (the_tiles_8(D) - 8 )
Partition 9 (nt_9(D) - 9 )
Partition 10 (memory_10(D) - 10 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  h1_6(D)  the_tiles_8(D)  nt_9(D)  memory_10(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (memory_10(D) - 10 )

void tiles2(int*, int, int, float, float, int) (int * the_tiles, int nt, int memory, float f1, float f2, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  tiles (the_tiles_8(D), nt_9(D), memory_10(D), &f_tmp_arr, 2, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 11 10 12 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:384 -1
     (nil))

(insn 12 11 0 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:384 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 13 12 14 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:385 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:385 -1
     (nil))

;; i_tmp_arr[0] = h1_6(D);

(insn 15 14 16 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:386 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:386 -1
     (nil))

;; tiles (the_tiles_8(D), nt_9(D), memory_10(D), &f_tmp_arr, 2, &i_tmp_arr, 1); [tail call]

(insn 17 16 18 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:387 -1
     (nil))

(insn 18 17 19 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:387 -1
     (nil))

(insn 19 18 20 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:387 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:387 -1
     (nil))

(insn 21 20 22 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:387 -1
     (nil))

(insn 22 21 23 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:387 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:387 -1
     (nil))

(insn 24 23 25 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:387 -1
     (nil))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:387 -1
     (nil))

(call_insn 26 25 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:387 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:383 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:383 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:383 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:383 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:383 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:383 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:384 -1
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:384 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:385 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:385 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:386 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:386 -1
     (nil))
(insn 17 16 18 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:387 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:387 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:387 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:387 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:387 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:387 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:387 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:387 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:387 -1
     (nil))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:387 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, collision_table*, float, float, int) (_Z6tiles2PiiP15collision_tableffi, funcdef_no=1095, decl_uid=23841, cgraph_uid=339)

void tiles2(int*, int, collision_table*, float, float, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  tiles (the_tiles_8(D), nt_9(D), ct_10(D), &f_tmp_arr, 2, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (h1_6(D) - 6 )
Partition 8 (the_tiles_8(D) - 8 )
Partition 9 (nt_9(D) - 9 )
Partition 10 (ct_10(D) - 10 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  h1_6(D)  the_tiles_8(D)  nt_9(D)  ct_10(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (the_tiles_8(D) - 8 )
Partition 4 (nt_9(D) - 9 )
Partition 5 (ct_10(D) - 10 )

void tiles2(int*, int, collision_table*, float, float, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2, int h1)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  tiles (the_tiles_8(D), nt_9(D), ct_10(D), &f_tmp_arr, 2, &i_tmp_arr, 1); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 11 10 12 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:390 -1
     (nil))

(insn 12 11 0 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:390 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 13 12 14 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:391 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:391 -1
     (nil))

;; i_tmp_arr[0] = h1_6(D);

(insn 15 14 16 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:392 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:392 -1
     (nil))

;; tiles (the_tiles_8(D), nt_9(D), ct_10(D), &f_tmp_arr, 2, &i_tmp_arr, 1); [tail call]

(insn 17 16 18 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:393 -1
     (nil))

(insn 18 17 19 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:393 -1
     (nil))

(insn 19 18 20 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:393 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 20 19 21 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:393 -1
     (nil))

(insn 21 20 22 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:393 -1
     (nil))

(insn 22 21 23 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:393 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:393 -1
     (nil))

(insn 24 23 25 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:393 -1
     (nil))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:393 -1
     (nil))

(call_insn 26 25 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:393 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:389 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:389 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:389 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:389 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:389 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:389 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:390 -1
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:390 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:391 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:391 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:392 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:392 -1
     (nil))
(insn 17 16 18 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:393 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:393 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 38 r9)
        (reg:DI 68)) tiles.cpp:393 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:393 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:393 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 2 cx)
        (reg:DI 69)) tiles.cpp:393 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:393 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:393 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:393 -1
     (nil))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:393 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, int, float, float, int, int) (_Z6tiles2Piiiffii, funcdef_no=1096, decl_uid=23849, cgraph_uid=340)

void tiles2(int*, int, int, float, float, int, int) (int * the_tiles, int nt, int memory, float f1, float f2, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  tiles (the_tiles_10(D), nt_11(D), memory_12(D), &f_tmp_arr, 2, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (h1_6(D) - 6 )
Partition 8 (h2_8(D) - 8 )
Partition 10 (the_tiles_10(D) - 10 )
Partition 11 (nt_11(D) - 11 )
Partition 12 (memory_12(D) - 12 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (memory_12(D) - 12 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  h1_6(D)  h2_8(D)  the_tiles_10(D)  nt_11(D)  memory_12(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (memory_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (memory_12(D) - 12 )

void tiles2(int*, int, int, float, float, int, int) (int * the_tiles, int nt, int memory, float f1, float f2, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  tiles (the_tiles_10(D), nt_11(D), memory_12(D), &f_tmp_arr, 2, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 12 11 13 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:398 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:398 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 14 13 15 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:399 -1
     (nil))

(insn 15 14 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:399 -1
     (nil))

;; i_tmp_arr[0] = h1_6(D);

(insn 16 15 17 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:400 -1
     (nil))

(insn 17 16 0 (set (mem/j/c:SI (reg/f:DI 68) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:400 -1
     (nil))

;; i_tmp_arr[1] = h2_8(D);

(insn 18 17 19 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:401 -1
     (nil))

(insn 19 18 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:401 -1
     (nil))

;; tiles (the_tiles_10(D), nt_11(D), memory_12(D), &f_tmp_arr, 2, &i_tmp_arr, 2); [tail call]

(insn 20 19 21 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:402 -1
     (nil))

(insn 21 20 22 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:402 -1
     (nil))

(insn 22 21 23 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:402 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:402 -1
     (nil))

(insn 24 23 25 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:402 -1
     (nil))

(insn 25 24 26 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:402 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 26 25 27 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:402 -1
     (nil))

(insn 27 26 28 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:402 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:402 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:402 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:397 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:397 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:397 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:397 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:397 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:397 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:397 -1
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:398 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:398 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:399 -1
     (nil))
(insn 15 14 16 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:399 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:400 -1
     (nil))
(insn 17 16 18 2 (set (mem/j/c:SI (reg/f:DI 68) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:400 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:401 -1
     (nil))
(insn 19 18 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:401 -1
     (nil))
(insn 20 19 21 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:402 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:402 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:402 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:402 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:402 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:402 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:402 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:402 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:402 -1
     (nil))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:402 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, collision_table*, float, float, int, int) (_Z6tiles2PiiP15collision_tableffii, funcdef_no=1097, decl_uid=23857, cgraph_uid=341)

void tiles2(int*, int, collision_table*, float, float, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  tiles (the_tiles_10(D), nt_11(D), ct_12(D), &f_tmp_arr, 2, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (h1_6(D) - 6 )
Partition 8 (h2_8(D) - 8 )
Partition 10 (the_tiles_10(D) - 10 )
Partition 11 (nt_11(D) - 11 )
Partition 12 (ct_12(D) - 12 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (ct_12(D) - 12 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  h1_6(D)  h2_8(D)  the_tiles_10(D)  nt_11(D)  ct_12(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (ct_12(D) - 12 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (the_tiles_10(D) - 10 )
Partition 5 (nt_11(D) - 11 )
Partition 6 (ct_12(D) - 12 )

void tiles2(int*, int, collision_table*, float, float, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2, int h1, int h2)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  tiles (the_tiles_10(D), nt_11(D), ct_12(D), &f_tmp_arr, 2, &i_tmp_arr, 2); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 12 11 13 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:405 -1
     (nil))

(insn 13 12 0 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:405 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 14 13 15 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:406 -1
     (nil))

(insn 15 14 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:406 -1
     (nil))

;; i_tmp_arr[0] = h1_6(D);

(insn 16 15 17 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:407 -1
     (nil))

(insn 17 16 0 (set (mem/j/c:SI (reg/f:DI 68) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:407 -1
     (nil))

;; i_tmp_arr[1] = h2_8(D);

(insn 18 17 19 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:408 -1
     (nil))

(insn 19 18 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:408 -1
     (nil))

;; tiles (the_tiles_10(D), nt_11(D), ct_12(D), &f_tmp_arr, 2, &i_tmp_arr, 2); [tail call]

(insn 20 19 21 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:409 -1
     (nil))

(insn 21 20 22 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:409 -1
     (nil))

(insn 22 21 23 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:409 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 23 22 24 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:409 -1
     (nil))

(insn 24 23 25 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:409 -1
     (nil))

(insn 25 24 26 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:409 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 26 25 27 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:409 -1
     (nil))

(insn 27 26 28 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:409 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:409 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:409 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:404 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:404 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:404 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:404 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:404 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:404 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:404 -1
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:405 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:405 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:406 -1
     (nil))
(insn 15 14 16 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:406 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:407 -1
     (nil))
(insn 17 16 18 2 (set (mem/j/c:SI (reg/f:DI 68) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:407 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:408 -1
     (nil))
(insn 19 18 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:408 -1
     (nil))
(insn 20 19 21 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:409 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:409 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 38 r9)
        (reg:DI 70)) tiles.cpp:409 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:409 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:409 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 71)) tiles.cpp:409 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:409 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:409 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:409 -1
     (nil))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:409 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, int, float, float, int, int, int) (_Z6tiles2Piiiffiii, funcdef_no=1098, decl_uid=23866, cgraph_uid=342)

void tiles2(int*, int, int, float, float, int, int, int) (int * the_tiles, int nt, int memory, float f1, float f2, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  i_tmp_arr[2] = h3_10(D);
  tiles (the_tiles_12(D), nt_13(D), memory_14(D), &f_tmp_arr, 2, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (h1_6(D) - 6 )
Partition 8 (h2_8(D) - 8 )
Partition 10 (h3_10(D) - 10 )
Partition 12 (the_tiles_12(D) - 12 )
Partition 13 (nt_13(D) - 13 )
Partition 14 (memory_14(D) - 14 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (h3_10(D) - 10 )
Partition 5 (the_tiles_12(D) - 12 )
Partition 6 (nt_13(D) - 13 )
Partition 7 (memory_14(D) - 14 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  h1_6(D)  h2_8(D)  h3_10(D)  the_tiles_12(D)  nt_13(D)  memory_14(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (h3_10(D) - 10 )
Partition 5 (the_tiles_12(D) - 12 )
Partition 6 (nt_13(D) - 13 )
Partition 7 (memory_14(D) - 14 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (h3_10(D) - 10 )
Partition 5 (the_tiles_12(D) - 12 )
Partition 6 (nt_13(D) - 13 )
Partition 7 (memory_14(D) - 14 )

void tiles2(int*, int, int, float, float, int, int, int) (int * the_tiles, int nt, int memory, float f1, float f2, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  i_tmp_arr[2] = h3_10(D);
  tiles (the_tiles_12(D), nt_13(D), memory_14(D), &f_tmp_arr, 2, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 13 12 14 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:414 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SF (reg/f:DI 67) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:414 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 15 14 16 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:415 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:415 -1
     (nil))

;; i_tmp_arr[0] = h1_6(D);

(insn 17 16 18 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:416 -1
     (nil))

(insn 18 17 0 (set (mem/j/c:SI (reg/f:DI 69) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:416 -1
     (nil))

;; i_tmp_arr[1] = h2_8(D);

(insn 19 18 20 (set (reg/f:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:417 -1
     (nil))

(insn 20 19 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 70)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:417 -1
     (nil))

;; i_tmp_arr[2] = h3_10(D);

(insn 21 20 22 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:418 -1
     (nil))

(insn 22 21 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 71)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:418 -1
     (nil))

;; tiles (the_tiles_12(D), nt_13(D), memory_14(D), &f_tmp_arr, 2, &i_tmp_arr, 3); [tail call]

(insn 23 22 24 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:419 -1
     (nil))

(insn 24 23 25 (set (reg:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:419 -1
     (nil))

(insn 25 24 26 (set (reg:DI 38 r9)
        (reg:DI 72)) tiles.cpp:419 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 26 25 27 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:419 -1
     (nil))

(insn 27 26 28 (set (reg:DI 73)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:419 -1
     (nil))

(insn 28 27 29 (set (reg:DI 2 cx)
        (reg:DI 73)) tiles.cpp:419 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 29 28 30 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:419 -1
     (nil))

(insn 30 29 31 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:419 -1
     (nil))

(insn 31 30 32 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:419 -1
     (nil))

(call_insn 32 31 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:419 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:413 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:413 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:413 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:413 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:413 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:413 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:413 -1
     (nil))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:413 -1
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:414 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SF (reg/f:DI 67) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:414 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:415 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:415 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:416 -1
     (nil))
(insn 18 17 19 2 (set (mem/j/c:SI (reg/f:DI 69) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:416 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:417 -1
     (nil))
(insn 20 19 21 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 70)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:417 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:418 -1
     (nil))
(insn 22 21 23 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 71)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:418 -1
     (nil))
(insn 23 22 24 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:419 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:419 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 38 r9)
        (reg:DI 72)) tiles.cpp:419 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:419 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 73)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:419 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 2 cx)
        (reg:DI 73)) tiles.cpp:419 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:419 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:419 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:419 -1
     (nil))
(call_insn 32 31 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:419 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tiles2(int*, int, collision_table*, float, float, int, int, int) (_Z6tiles2PiiP15collision_tableffiii, funcdef_no=1099, decl_uid=23875, cgraph_uid=343)

void tiles2(int*, int, collision_table*, float, float, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  i_tmp_arr[2] = h3_10(D);
  tiles (the_tiles_12(D), nt_13(D), ct_14(D), &f_tmp_arr, 2, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (f1_2(D) - 2 )
Partition 4 (f2_4(D) - 4 )
Partition 6 (h1_6(D) - 6 )
Partition 8 (h2_8(D) - 8 )
Partition 10 (h3_10(D) - 10 )
Partition 12 (the_tiles_12(D) - 12 )
Partition 13 (nt_13(D) - 13 )
Partition 14 (ct_14(D) - 14 )


Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (h3_10(D) - 10 )
Partition 5 (the_tiles_12(D) - 12 )
Partition 6 (nt_13(D) - 13 )
Partition 7 (ct_14(D) - 14 )


Live on entry to BB2 : f1_2(D)  f2_4(D)  h1_6(D)  h2_8(D)  h3_10(D)  the_tiles_12(D)  nt_13(D)  ct_14(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (h3_10(D) - 10 )
Partition 5 (the_tiles_12(D) - 12 )
Partition 6 (nt_13(D) - 13 )
Partition 7 (ct_14(D) - 14 )

After Coalescing:

Partition map 

Partition 0 (f1_2(D) - 2 )
Partition 1 (f2_4(D) - 4 )
Partition 2 (h1_6(D) - 6 )
Partition 3 (h2_8(D) - 8 )
Partition 4 (h3_10(D) - 10 )
Partition 5 (the_tiles_12(D) - 12 )
Partition 6 (nt_13(D) - 13 )
Partition 7 (ct_14(D) - 14 )

void tiles2(int*, int, collision_table*, float, float, int, int, int) (int * the_tiles, int nt, struct collision_table * ct, float f1, float f2, int h1, int h2, int h3)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  f_tmp_arr[0] = f1_2(D);
  f_tmp_arr[1] = f2_4(D);
  i_tmp_arr[0] = h1_6(D);
  i_tmp_arr[1] = h2_8(D);
  i_tmp_arr[2] = h3_10(D);
  tiles (the_tiles_12(D), nt_13(D), ct_14(D), &f_tmp_arr, 2, &i_tmp_arr, 3); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; f_tmp_arr[0] = f1_2(D);

(insn 13 12 14 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:422 -1
     (nil))

(insn 14 13 0 (set (mem/j/c:SF (reg/f:DI 67) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:422 -1
     (nil))

;; f_tmp_arr[1] = f2_4(D);

(insn 15 14 16 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:423 -1
     (nil))

(insn 16 15 0 (set (mem/j/c:SF (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:423 -1
     (nil))

;; i_tmp_arr[0] = h1_6(D);

(insn 17 16 18 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:424 -1
     (nil))

(insn 18 17 0 (set (mem/j/c:SI (reg/f:DI 69) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:424 -1
     (nil))

;; i_tmp_arr[1] = h2_8(D);

(insn 19 18 20 (set (reg/f:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:425 -1
     (nil))

(insn 20 19 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 70)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:425 -1
     (nil))

;; i_tmp_arr[2] = h3_10(D);

(insn 21 20 22 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:426 -1
     (nil))

(insn 22 21 0 (set (mem/j/c:SI (plus:DI (reg/f:DI 71)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:426 -1
     (nil))

;; tiles (the_tiles_12(D), nt_13(D), ct_14(D), &f_tmp_arr, 2, &i_tmp_arr, 3); [tail call]

(insn 23 22 24 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:427 -1
     (nil))

(insn 24 23 25 (set (reg:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:427 -1
     (nil))

(insn 25 24 26 (set (reg:DI 38 r9)
        (reg:DI 72)) tiles.cpp:427 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))

(insn 26 25 27 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:427 -1
     (nil))

(insn 27 26 28 (set (reg:DI 73)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:427 -1
     (nil))

(insn 28 27 29 (set (reg:DI 2 cx)
        (reg:DI 73)) tiles.cpp:427 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))

(insn 29 28 30 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:427 -1
     (nil))

(insn 30 29 31 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:427 -1
     (nil))

(insn 31 30 32 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:427 -1
     (nil))

(call_insn 32 31 0 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:427 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:421 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:421 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:421 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:421 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:421 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:421 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:421 -1
     (nil))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:421 -1
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:422 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:SF (reg/f:DI 67) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:422 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:423 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:423 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:424 -1
     (nil))
(insn 18 17 19 2 (set (mem/j/c:SI (reg/f:DI 69) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:424 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:425 -1
     (nil))
(insn 20 19 21 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 70)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:425 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:426 -1
     (nil))
(insn 22 21 23 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 71)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:426 -1
     (nil))
(insn 23 22 24 2 (set (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:427 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:427 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 38 r9)
        (reg:DI 72)) tiles.cpp:427 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:427 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 73)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:427 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 2 cx)
        (reg:DI 73)) tiles.cpp:427 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:427 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:427 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:427 -1
     (nil))
(call_insn 32 31 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:427 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 56 virtual-outgoing-args) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tileswrap(int*, int, int, float*, int, int*, int*, int) (_Z9tileswrapPiiiPfiS_S_i, funcdef_no=1100, decl_uid=23884, cgraph_uid=344)

void tileswrap(int*, int, int, float*, int, int*, int*, int) (int * the_tiles, int num_tilings, int memory_size, float * floats, int num_floats, int * wrap_widths, int * ints, int num_ints)
{
  sizetype ivtmp.261;
  unsigned long ivtmp.255;
  unsigned int ivtmp.245;
  sizetype ivtmp.241;
  vector(4) int vect_cst_.227;
  vector(4) int vect_var_.226;
  vector(4) int vect_var_.225;
  unsigned int ratio_mult_vf.219;
  unsigned int bnd.218;
  int coordinates_I_lsm.216;
  int num_coordinates;
  int coordinates[41];
  int wrap_widths_times_num_tilings[20];
  int base[20];
  int qstate[20];
  int j;
  int i;
  unsigned int _5;
  unsigned int _6;
  ssizetype _10;
  int _11;
  int _12;
  int _15;
  float _23;
  float _24;
  float _25;
  int _26;
  int _27;
  int * _33;
  long unsigned int _44;
  int _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _51;
  int[41] * _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int cstore_58;
  sizetype _61;
  int _62;
  int _64;
  int _65;
  sizetype _70;
  int _71;
  sizetype _72;
  unsigned int _73;
  int _74;
  int _75;
  void * _77;
  unsigned int _82;
  int _86;
  sizetype _95;
  long unsigned int _99;
  sizetype _107;
  int * _109;
  long unsigned int _114;
  ssizetype _118;
  int _119;
  long unsigned int _121;
  bool _123;
  bool _124;
  long int pretmp_127;
  bool _129;
  int _138;
  int _139;
  sizetype _142;
  int prephitmp_143;
  int pretmp_144;
  sizetype _146;
  float pretmp_149;
  long unsigned int _151;
  int * _152;
  sizetype _156;
  long unsigned int _157;
  int _159;
  sizetype _186;
  sizetype _187;
  sizetype _188;
  sizetype _189;
  sizetype _190;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _15 = num_floats_13(D) + num_ints_14(D);
  num_coordinates_16 = _15 + 1;
  # DEBUG num_coordinates => num_coordinates_16
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_14(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 4, loop depth 0
;;    pred:       2
  _107 = (sizetype) num_ints_14(D);
  _72 = _107 * 4;
  _70 = (sizetype) num_floats_13(D);
  _156 = _70 * 4;
  _10 = (ssizetype) _156;
  _118 = _10 + 4;
  _95 = (sizetype) _118;
  _52 = &coordinates + _95;
  __builtin_memcpy (_52, ints_22(D), _72);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       16
;;                17
;;                18
;;                19
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       3
;;                5
  # DEBUG j => 0
  if (num_tilings_32(D) > 0)
    goto <bb 20>;
  else
    goto <bb 37>;
;;    succ:       20
;;                37

;;   basic block 7, loop depth 0
;;    pred:       3
  pretmp_149 = (float) num_tilings_32(D);
  _82 = (unsigned int) num_floats_13(D);
  _73 = _82 + 4294967295;
  _61 = (sizetype) _73;
  _189 = _61 + 1;
  _190 = _189 * 4;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       9
;;                7
  # ivtmp.261_79 = PHI <ivtmp.261_80(9), 0(7)>
  # DEBUG i => NULL
  _23 = MEM[base: floats_29(D), index: ivtmp.261_79, offset: 0B];
  _24 = _23 * pretmp_149;
  _25 = __builtin_floorf (_24);
  _26 = (int) _25;
  MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B] = _26;
  # DEBUG i => D#14
  # DEBUG i => D#14
  ivtmp.261_80 = ivtmp.261_79 + 4;
  if (ivtmp.261_80 != _190)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  goto <bb 8>;
;;    succ:       8

;;   basic block 10, loop depth 0
;;    pred:       8
  _142 = (sizetype) num_floats_13(D);
  _146 = _142 * 4;
  __builtin_memset (&base, 0, _146);
  bnd.218_35 = _82 >> 2;
  ratio_mult_vf.219_34 = bnd.218_35 << 2;
  _129 = _82 <= 3;
  _124 = ratio_mult_vf.219_34 == 0;
  _123 = _124 | _129;
  if (_123 != 0)
    goto <bb 18>;
  else
    goto <bb 11>;
;;    succ:       11
;;                18

;;   basic block 11, loop depth 0
;;    pred:       10
  vect_cst_.227_100 = {num_tilings_32(D), num_tilings_32(D), num_tilings_32(D), num_tilings_32(D)};
  # DEBUG i => NULL
  vect_var_.225_2 = MEM[(int *)wrap_widths_39(D)];
  vect_var_.226_1 = vect_var_.225_2 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings] = vect_var_.226_1;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 1)
    goto <bb 12>;
  else
    goto <bb 17>;
;;    succ:       12
;;                17

;;   basic block 12, loop depth 0
;;    pred:       11
  # DEBUG i => NULL
  vect_var_.225_132 = MEM[(int *)wrap_widths_39(D) + 16B];
  vect_var_.226_131 = vect_var_.225_132 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B] = vect_var_.226_131;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 2)
    goto <bb 13>;
  else
    goto <bb 17>;
;;    succ:       13
;;                17

;;   basic block 13, loop depth 0
;;    pred:       12
  # DEBUG i => NULL
  vect_var_.225_169 = MEM[(int *)wrap_widths_39(D) + 32B];
  vect_var_.226_170 = vect_var_.225_169 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B] = vect_var_.226_170;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 3)
    goto <bb 14>;
  else
    goto <bb 17>;
;;    succ:       14
;;                17

;;   basic block 14, loop depth 0
;;    pred:       13
  # DEBUG i => NULL
  vect_var_.225_179 = MEM[(int *)wrap_widths_39(D) + 48B];
  vect_var_.226_180 = vect_var_.225_179 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B] = vect_var_.226_180;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 4)
    goto <bb 15>;
  else
    goto <bb 17>;
;;    succ:       15
;;                17

;;   basic block 15, loop depth 0
;;    pred:       14
  # DEBUG i => NULL
  vect_var_.225_101 = MEM[(int *)wrap_widths_39(D) + 64B];
  vect_var_.226_96 = vect_var_.225_101 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B] = vect_var_.226_96;
  # DEBUG i => D#12
  # DEBUG i => D#12
  goto <bb 17>;
;;    succ:       17

;;   basic block 16, loop depth 0
;;    pred:       19
  # DEBUG i => i_7
  _114 = (long unsigned int) i_7;
  _151 = _114 * 4;
  _152 = wrap_widths_39(D) + _151;
  _139 = *_152;
  _138 = _139 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_7] = _138;
  # DEBUG D#15 => i_7 + 1
  # DEBUG i => D#15
  # DEBUG i => D#15
  goto <bb 5>;
;;    succ:       5

;;   basic block 17, loop depth 0
;;    pred:       15
;;                11
;;                12
;;                13
;;                14
  i_106 = (int) ratio_mult_vf.219_34;
  if (ratio_mult_vf.219_34 == _82)
    goto <bb 5>;
  else
    goto <bb 18>;
;;    succ:       18
;;                5

;;   basic block 18, loop depth 0
;;    pred:       17
;;                10
  # i_122 = PHI <i_106(17), 0(10)>
  # DEBUG i => i_122
  _121 = (long unsigned int) i_122;
  _99 = _121 * 4;
  _109 = wrap_widths_39(D) + _99;
  _159 = *_109;
  _27 = _159 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_122] = _27;
  i_40 = i_122 + 1;
  # DEBUG i => i_40
  # DEBUG i => i_40
  if (num_floats_13(D) > i_40)
    goto <bb 19>;
  else
    goto <bb 5>;
;;    succ:       19
;;                5

;;   basic block 19, loop depth 0
;;    pred:       18
  # DEBUG i => i_40
  _44 = (long unsigned int) i_40;
  _157 = _44 * 4;
  _33 = wrap_widths_39(D) + _157;
  _12 = *_33;
  _11 = _12 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_40] = _11;
  i_7 = i_122 + 2;
  # DEBUG i => i_7
  # DEBUG i => i_7
  if (i_7 < num_floats_13(D))
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16
;;                5

;;   basic block 20, loop depth 0
;;    pred:       6
  pretmp_127 = (long int) memory_size_83(D);
  ivtmp.255_60 = (unsigned long) the_tiles_81(D);
  _5 = (unsigned int) num_floats_13(D);
  _6 = _5 + 4294967295;
  _186 = (sizetype) _6;
  _187 = _186 + 1;
  _188 = _187 * 4;
  goto <bb 35>;
;;    succ:       35

;;   basic block 21, loop depth 2
;;    pred:       28
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       21
;;                36
  # ivtmp.241_108 = PHI <ivtmp.241_18(21), 0(36)>
  # ivtmp.245_3 = PHI <ivtmp.245_4(21), 1(36)>
  # DEBUG i => NULL
  _45 = MEM[symbol: qstate, index: ivtmp.241_108, offset: 0B];
  _46 = MEM[symbol: base, index: ivtmp.241_108, offset: 0B];
  if (_45 >= _46)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 2
;;    pred:       22
  _47 = _45 - _46;
  _48 = _47 % num_tilings_32(D);
  _49 = _45 - _48;
  goto <bb 25>;
;;    succ:       25

;;   basic block 24, loop depth 2
;;    pred:       22
  _51 = _45 + 1;
  _53 = _46 - _45;
  _54 = _53 + -1;
  _55 = _54 % num_tilings_32(D);
  _56 = _51 + _55;
  _57 = _56 - num_tilings_32(D);
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       23
;;                24
  # cstore_58 = PHI <_49(23), _57(24)>
  MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = cstore_58;
  _62 = MEM[base: wrap_widths_39(D), index: ivtmp.241_108, offset: 0B];
  if (_62 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26
;;                27

;;   basic block 26, loop depth 2
;;    pred:       25
  _64 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B];
  _65 = cstore_58 % _64;
  MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = _65;
;;    succ:       27

;;   basic block 27, loop depth 2
;;    pred:       25
;;                26
  # prephitmp_143 = PHI <cstore_58(25), _65(26)>
  if (prephitmp_143 < 0)
    goto <bb 29>;
  else
    goto <bb 28>;
;;    succ:       29
;;                28

;;   basic block 28, loop depth 2
;;   Invalid sum of incoming frequencies 1119, should be 3333
;;    pred:       31
;;                27
  _74 = (int) ivtmp.245_3;
  _75 = _46 + _74;
  MEM[symbol: base, index: ivtmp.241_108, offset: 0B] = _75;
  # DEBUG i => D#13
  # DEBUG i => D#13
  ivtmp.241_18 = ivtmp.241_108 + 4;
  ivtmp.245_4 = ivtmp.245_3 + 2;
  if (ivtmp.241_18 != _188)
    goto <bb 21>;
  else
    goto <bb 33>;
;;    succ:       21
;;                33

;;   basic block 29, loop depth 2
;;   Invalid sum of incoming frequencies 3033, should be 819
;;    pred:       27
  pretmp_144 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B];
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       32
;;                29
  # _119 = PHI <_71(32), prephitmp_143(29)>
  _71 = _119 + pretmp_144;
  if (_71 < 0)
    goto <bb 32>;
  else
    goto <bb 31>;
;;    succ:       32
;;                31

;;   basic block 31, loop depth 2
;;    pred:       30
  # coordinates_I_lsm.216_154 = PHI <_71(30)>
  MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = coordinates_I_lsm.216_154;
  goto <bb 28>;
;;    succ:       28

;;   basic block 32, loop depth 3
;;    pred:       30
  goto <bb 30>;
;;    succ:       30

;;   basic block 33, loop depth 1
;;    pred:       28
;;                35
  # num_floats_98 = PHI <num_floats_13(D)(28), 0(35)>
  coordinates[num_floats_98] = j_111;
  _86 = hash_UNH (&coordinates, num_coordinates_16, pretmp_127, 449);
  _77 = (void *) ivtmp.255_103;
  MEM[base: _77, offset: 0B] = _86;
  j_89 = j_111 + 1;
  # DEBUG j => j_89
  # DEBUG j => j_89
  ivtmp.255_59 = ivtmp.255_103 + 4;
  if (j_89 != num_tilings_32(D))
    goto <bb 34>;
  else
    goto <bb 37>;
;;    succ:       34
;;                37

;;   basic block 34, loop depth 1
;;    pred:       33
;;    succ:       35

;;   basic block 35, loop depth 1
;;    pred:       34
;;                20
  # j_111 = PHI <j_89(34), 0(20)>
  # ivtmp.255_103 = PHI <ivtmp.255_59(34), ivtmp.255_60(20)>
  # DEBUG j => j_111
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 36>;
  else
    goto <bb 33>;
;;    succ:       36
;;                33

;;   basic block 36, loop depth 1
;;    pred:       35
  goto <bb 22>;
;;    succ:       22

;;   basic block 37, loop depth 0
;;    pred:       6
;;                33
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  wrap_widths_times_num_tilings ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (vect_var_.226_1 - 1 )
Partition 2 (vect_var_.225_2 - 2 )
Partition 3 (ivtmp.245_3 - 3 )
Partition 4 (ivtmp.245_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (i_7 - 7 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (num_floats_13(D) - 13 )
Partition 14 (num_ints_14(D) - 14 )
Partition 15 (_15 - 15 )
Partition 16 (num_coordinates_16 - 16 )
Partition 18 (ivtmp.241_18 - 18 )
Partition 22 (ints_22(D) - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 29 (floats_29(D) - 29 )
Partition 32 (num_tilings_32(D) - 32 )
Partition 33 (_33 - 33 )
Partition 34 (ratio_mult_vf.219_34 - 34 )
Partition 35 (bnd.218_35 - 35 )
Partition 39 (wrap_widths_39(D) - 39 )
Partition 40 (i_40 - 40 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (cstore_58 - 58 )
Partition 59 (ivtmp.255_59 - 59 )
Partition 60 (ivtmp.255_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 77 (_77 - 77 )
Partition 79 (ivtmp.261_79 - 79 )
Partition 80 (ivtmp.261_80 - 80 )
Partition 81 (the_tiles_81(D) - 81 )
Partition 82 (_82 - 82 )
Partition 83 (memory_size_83(D) - 83 )
Partition 86 (_86 - 86 )
Partition 89 (j_89 - 89 )
Partition 95 (_95 - 95 )
Partition 96 (vect_var_.226_96 - 96 )
Partition 98 (num_floats_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (vect_cst_.227_100 - 100 )
Partition 101 (vect_var_.225_101 - 101 )
Partition 103 (ivtmp.255_103 - 103 )
Partition 106 (i_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (ivtmp.241_108 - 108 )
Partition 109 (_109 - 109 )
Partition 111 (j_111 - 111 )
Partition 114 (_114 - 114 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 121 (_121 - 121 )
Partition 122 (i_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 127 (pretmp_127 - 127 )
Partition 129 (_129 - 129 )
Partition 131 (vect_var_.226_131 - 131 )
Partition 132 (vect_var_.225_132 - 132 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 142 (_142 - 142 )
Partition 143 (prephitmp_143 - 143 )
Partition 144 (pretmp_144 - 144 )
Partition 146 (_146 - 146 )
Partition 149 (pretmp_149 - 149 )
Partition 151 (_151 - 151 )
Partition 152 (_152 - 152 )
Partition 154 (coordinates_I_lsm.216_154 - 154 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 159 (_159 - 159 )
Partition 169 (vect_var_.225_169 - 169 )
Partition 170 (vect_var_.226_170 - 170 )
Partition 179 (vect_var_.225_179 - 179 )
Partition 180 (vect_var_.226_180 - 180 )
Partition 186 (_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (_188 - 188 )
Partition 189 (_189 - 189 )
Partition 190 (_190 - 190 )


Partition map 

Partition 0 (ivtmp.245_3 - 3 )
Partition 1 (ivtmp.245_4 - 4 )
Partition 2 (num_floats_13(D) - 13 )
Partition 3 (num_ints_14(D) - 14 )
Partition 4 (ivtmp.241_18 - 18 )
Partition 5 (ints_22(D) - 22 )
Partition 6 (floats_29(D) - 29 )
Partition 7 (num_tilings_32(D) - 32 )
Partition 8 (wrap_widths_39(D) - 39 )
Partition 9 (_49 - 49 )
Partition 10 (_57 - 57 )
Partition 11 (cstore_58 - 58 )
Partition 12 (ivtmp.255_59 - 59 )
Partition 13 (ivtmp.255_60 - 60 )
Partition 14 (_65 - 65 )
Partition 15 (_71 - 71 )
Partition 16 (ivtmp.261_79 - 79 )
Partition 17 (ivtmp.261_80 - 80 )
Partition 18 (the_tiles_81(D) - 81 )
Partition 19 (memory_size_83(D) - 83 )
Partition 20 (j_89 - 89 )
Partition 21 (num_floats_98 - 98 )
Partition 22 (ivtmp.255_103 - 103 )
Partition 23 (i_106 - 106 )
Partition 24 (ivtmp.241_108 - 108 )
Partition 25 (j_111 - 111 )
Partition 26 (_119 - 119 )
Partition 27 (i_122 - 122 )
Partition 28 (prephitmp_143 - 143 )


Live on entry to BB2 : num_floats_13(D)  num_ints_14(D)  ints_22(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB3 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB4 : num_floats_13(D)  num_ints_14(D)  ints_22(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB5 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB6 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB7 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB8 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB9 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.261_80  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB10 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB11 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB12 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB13 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB14 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB15 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB16 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB17 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB18 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB19 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  i_122  

Live on entry to BB20 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  memory_size_83(D)  

Live on entry to BB21 : ivtmp.245_4  num_floats_13(D)  ivtmp.241_18  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  j_111  

Live on entry to BB22 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  j_111  

Live on entry to BB23 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB24 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB25 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB26 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  cstore_58  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB27 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB28 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB29 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  prephitmp_143  

Live on entry to BB30 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB31 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB32 : ivtmp.245_3  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  _71  ivtmp.255_103  ivtmp.241_108  j_111  

Live on entry to BB33 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  j_111  

Live on entry to BB34 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_59  j_89  

Live on entry to BB35 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  

Live on entry to BB36 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.255_103  j_111  

Live on entry to BB37 : 

Conflict graph:
2: 21
21: 2

After sorting:
Sorted Coalesce list:
(8281) _71 <-> _119
(3334) cstore_58 <-> prephitmp_143
(3174) ivtmp.245_3 <-> ivtmp.245_4
(3174) ivtmp.241_18 <-> ivtmp.241_108
(1667) _49 <-> cstore_58
(1667) _57 <-> cstore_58
(1667) _65 <-> prephitmp_143
(819) _119 <-> prephitmp_143
(318) num_floats_13(D) <-> num_floats_98
(314) ivtmp.261_79 <-> ivtmp.261_80
(152) ivtmp.255_59 <-> ivtmp.255_103
(152) j_89 <-> j_111
(15) ivtmp.255_60 <-> ivtmp.255_103
(14) i_106 <-> i_122

Partition map 

Partition 0 (ivtmp.245_3 - 3 )
Partition 1 (ivtmp.245_4 - 4 )
Partition 2 (num_floats_13(D) - 13 )
Partition 3 (num_ints_14(D) - 14 )
Partition 4 (ivtmp.241_18 - 18 )
Partition 5 (ints_22(D) - 22 )
Partition 6 (floats_29(D) - 29 )
Partition 7 (num_tilings_32(D) - 32 )
Partition 8 (wrap_widths_39(D) - 39 )
Partition 9 (_49 - 49 )
Partition 10 (_57 - 57 )
Partition 11 (cstore_58 - 58 )
Partition 12 (ivtmp.255_59 - 59 )
Partition 13 (ivtmp.255_60 - 60 )
Partition 14 (_65 - 65 )
Partition 15 (_71 - 71 )
Partition 16 (ivtmp.261_79 - 79 )
Partition 17 (ivtmp.261_80 - 80 )
Partition 18 (the_tiles_81(D) - 81 )
Partition 19 (memory_size_83(D) - 83 )
Partition 20 (j_89 - 89 )
Partition 21 (num_floats_98 - 98 )
Partition 22 (ivtmp.255_103 - 103 )
Partition 23 (i_106 - 106 )
Partition 24 (ivtmp.241_108 - 108 )
Partition 25 (j_111 - 111 )
Partition 26 (_119 - 119 )
Partition 27 (i_122 - 122 )
Partition 28 (prephitmp_143 - 143 )

Coalesce list: (71)_71 & (119)_119 [map: 15, 26] : Success -> 15
Coalesce list: (58)cstore_58 & (143)prephitmp_143 [map: 11, 28] : Success -> 11
Coalesce list: (3)ivtmp.245_3 & (4)ivtmp.245_4 [map: 0, 1] : Success -> 0
Coalesce list: (18)ivtmp.241_18 & (108)ivtmp.241_108 [map: 4, 24] : Success -> 4
Coalesce list: (49)_49 & (58)cstore_58 [map: 9, 11] : Success -> 11
Coalesce list: (57)_57 & (58)cstore_58 [map: 10, 11] : Success -> 11
Coalesce list: (65)_65 & (143)cstore_58 [map: 14, 11] : Success -> 11
Coalesce list: (119)_71 & (143)cstore_58 [map: 15, 11] : Success -> 11
Coalesce list: (13)num_floats_13(D) & (98)num_floats_98 [map: 2, 21] : Fail due to conflict
Coalesce list: (79)ivtmp.261_79 & (80)ivtmp.261_80 [map: 16, 17] : Success -> 16
Coalesce list: (59)ivtmp.255_59 & (103)ivtmp.255_103 [map: 12, 22] : Success -> 12
Coalesce list: (89)j_89 & (111)j_111 [map: 20, 25] : Success -> 20
Coalesce list: (60)ivtmp.255_60 & (103)ivtmp.255_59 [map: 13, 12] : Success -> 12
Coalesce list: (106)i_106 & (122)i_122 [map: 23, 27] : Success -> 23
After Coalescing:

Partition map 

Partition 0 (vect_var_.226_1 - 1 )
Partition 1 (vect_var_.225_2 - 2 )
Partition 2 (ivtmp.245_3 - 3 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (i_7 - 7 )
Partition 6 (_10 - 10 )
Partition 7 (_11 - 11 )
Partition 8 (_12 - 12 )
Partition 9 (num_floats_13(D) - 13 )
Partition 10 (num_ints_14(D) - 14 )
Partition 11 (_15 - 15 )
Partition 12 (num_coordinates_16 - 16 )
Partition 13 (ivtmp.241_18 - 18 108 )
Partition 14 (ints_22(D) - 22 )
Partition 15 (_23 - 23 )
Partition 16 (_24 - 24 )
Partition 17 (_25 - 25 )
Partition 18 (_26 - 26 )
Partition 19 (_27 - 27 )
Partition 20 (floats_29(D) - 29 )
Partition 21 (num_tilings_32(D) - 32 )
Partition 22 (_33 - 33 )
Partition 23 (ratio_mult_vf.219_34 - 34 )
Partition 24 (bnd.218_35 - 35 )
Partition 25 (wrap_widths_39(D) - 39 )
Partition 26 (i_40 - 40 )
Partition 27 (_44 - 44 )
Partition 28 (_45 - 45 )
Partition 29 (_46 - 46 )
Partition 30 (_47 - 47 )
Partition 31 (_48 - 48 )
Partition 32 (_51 - 51 )
Partition 33 (_52 - 52 )
Partition 34 (_53 - 53 )
Partition 35 (_54 - 54 )
Partition 36 (_55 - 55 )
Partition 37 (_56 - 56 )
Partition 38 (cstore_58 - 49 57 58 65 71 119 143 )
Partition 39 (ivtmp.255_59 - 59 60 103 )
Partition 40 (_61 - 61 )
Partition 41 (_62 - 62 )
Partition 42 (_64 - 64 )
Partition 43 (_70 - 70 )
Partition 44 (_72 - 72 )
Partition 45 (_73 - 73 )
Partition 46 (_74 - 74 )
Partition 47 (_75 - 75 )
Partition 48 (_77 - 77 )
Partition 49 (ivtmp.261_79 - 79 80 )
Partition 50 (the_tiles_81(D) - 81 )
Partition 51 (_82 - 82 )
Partition 52 (memory_size_83(D) - 83 )
Partition 53 (_86 - 86 )
Partition 54 (j_89 - 89 111 )
Partition 55 (_95 - 95 )
Partition 56 (vect_var_.226_96 - 96 )
Partition 57 (num_floats_98 - 98 )
Partition 58 (_99 - 99 )
Partition 59 (vect_cst_.227_100 - 100 )
Partition 60 (vect_var_.225_101 - 101 )
Partition 61 (i_106 - 106 122 )
Partition 62 (_107 - 107 )
Partition 63 (_109 - 109 )
Partition 64 (_114 - 114 )
Partition 65 (_118 - 118 )
Partition 66 (_121 - 121 )
Partition 67 (_123 - 123 )
Partition 68 (_124 - 124 )
Partition 69 (pretmp_127 - 127 )
Partition 70 (_129 - 129 )
Partition 71 (vect_var_.226_131 - 131 )
Partition 72 (vect_var_.225_132 - 132 )
Partition 73 (_138 - 138 )
Partition 74 (_139 - 139 )
Partition 75 (_142 - 142 )
Partition 76 (pretmp_144 - 144 )
Partition 77 (_146 - 146 )
Partition 78 (pretmp_149 - 149 )
Partition 79 (_151 - 151 )
Partition 80 (_152 - 152 )
Partition 81 (coordinates_I_lsm.216_154 - 154 )
Partition 82 (_156 - 156 )
Partition 83 (_157 - 157 )
Partition 84 (_159 - 159 )
Partition 85 (vect_var_.225_169 - 169 )
Partition 86 (vect_var_.226_170 - 170 )
Partition 87 (vect_var_.225_179 - 179 )
Partition 88 (vect_var_.226_180 - 180 )
Partition 89 (_186 - 186 )
Partition 90 (_187 - 187 )
Partition 91 (_188 - 188 )
Partition 92 (_189 - 189 )
Partition 93 (_190 - 190 )


Replacing Expressions
vect_var_.226_1 replace with --> vect_var_.226_1 = vect_var_.225_2 * vect_cst_.227_100;

vect_var_.225_2 replace with --> vect_var_.225_2 = MEM[(int *)wrap_widths_39(D)];

_5 replace with --> _5 = (unsigned int) num_floats_13(D);

_6 replace with --> _6 = _5 + 4294967295;

_10 replace with --> _10 = (ssizetype) _156;

_11 replace with --> _11 = _12 * num_tilings_32(D);

_12 replace with --> _12 = *_33;

_15 replace with --> _15 = num_floats_13(D) + num_ints_14(D);

_23 replace with --> _23 = MEM[base: floats_29(D), index: ivtmp.261_79, offset: 0B];

_24 replace with --> _24 = _23 * pretmp_149;

_26 replace with --> _26 = (int) _25;

_27 replace with --> _27 = _159 * num_tilings_32(D);

_33 replace with --> _33 = wrap_widths_39(D) + _157;

_44 replace with --> _44 = (long unsigned int) i_40;

_47 replace with --> _47 = _45 - _46;

_48 replace with --> _48 = _47 % num_tilings_32(D);

_51 replace with --> _51 = _45 + 1;

_52 replace with --> _52 = &coordinates + _95;

_53 replace with --> _53 = _46 - _45;

_54 replace with --> _54 = _53 + -1;

_55 replace with --> _55 = _54 % num_tilings_32(D);

_56 replace with --> _56 = _51 + _55;

_61 replace with --> _61 = (sizetype) _73;

_62 replace with --> _62 = MEM[base: wrap_widths_39(D), index: ivtmp.241_108, offset: 0B];

_64 replace with --> _64 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B];

_70 replace with --> _70 = (sizetype) num_floats_13(D);

_72 replace with --> _72 = _107 * 4;

_73 replace with --> _73 = _82 + 4294967295;

_74 replace with --> _74 = (int) ivtmp.245_3;

_75 replace with --> _75 = _46 + _74;

_77 replace with --> _77 = (void *) ivtmp.255_103;

_95 replace with --> _95 = (sizetype) _118;

vect_var_.226_96 replace with --> vect_var_.226_96 = vect_var_.225_101 * vect_cst_.227_100;

_99 replace with --> _99 = _121 * 4;

vect_var_.225_101 replace with --> vect_var_.225_101 = MEM[(int *)wrap_widths_39(D) + 64B];

_107 replace with --> _107 = (sizetype) num_ints_14(D);

_109 replace with --> _109 = wrap_widths_39(D) + _99;

_114 replace with --> _114 = (long unsigned int) i_7;

_118 replace with --> _118 = _10 + 4;

_121 replace with --> _121 = (long unsigned int) i_122;

_123 replace with --> _123 = _124 | _129;

_124 replace with --> _124 = ratio_mult_vf.219_34 == 0;

_129 replace with --> _129 = _82 <= 3;

vect_var_.226_131 replace with --> vect_var_.226_131 = vect_var_.225_132 * vect_cst_.227_100;

vect_var_.225_132 replace with --> vect_var_.225_132 = MEM[(int *)wrap_widths_39(D) + 16B];

_138 replace with --> _138 = _139 * num_tilings_32(D);

_139 replace with --> _139 = *_152;

_142 replace with --> _142 = (sizetype) num_floats_13(D);

_146 replace with --> _146 = _142 * 4;

_151 replace with --> _151 = _114 * 4;

_152 replace with --> _152 = wrap_widths_39(D) + _151;

_156 replace with --> _156 = _70 * 4;

_157 replace with --> _157 = _44 * 4;

_159 replace with --> _159 = *_109;

vect_var_.225_169 replace with --> vect_var_.225_169 = MEM[(int *)wrap_widths_39(D) + 32B];

vect_var_.226_170 replace with --> vect_var_.226_170 = vect_var_.225_169 * vect_cst_.227_100;

vect_var_.225_179 replace with --> vect_var_.225_179 = MEM[(int *)wrap_widths_39(D) + 48B];

vect_var_.226_180 replace with --> vect_var_.226_180 = vect_var_.225_179 * vect_cst_.227_100;

_186 replace with --> _186 = (sizetype) _6;

_187 replace with --> _187 = _186 + 1;

_189 replace with --> _189 = _61 + 1;


void tileswrap(int*, int, int, float*, int, int*, int*, int) (int * the_tiles, int num_tilings, int memory_size, float * floats, int num_floats, int * wrap_widths, int * ints, int num_ints)
{
  sizetype ivtmp.261;
  unsigned long ivtmp.255;
  unsigned int ivtmp.245;
  sizetype ivtmp.241;
  vector(4) int vect_cst_.227;
  vector(4) int vect_var_.226;
  vector(4) int vect_var_.225;
  unsigned int ratio_mult_vf.219;
  unsigned int bnd.218;
  int coordinates_I_lsm.216;
  int num_coordinates;
  int coordinates[41];
  int wrap_widths_times_num_tilings[20];
  int base[20];
  int qstate[20];
  int j;
  int i;
  unsigned int _5;
  unsigned int _6;
  ssizetype _10;
  int _11;
  int _12;
  int _15;
  float _23;
  float _24;
  float _25;
  int _26;
  int _27;
  int * _33;
  long unsigned int _44;
  int _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _51;
  int[41] * _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int cstore_58;
  sizetype _61;
  int _62;
  int _64;
  int _65;
  sizetype _70;
  int _71;
  sizetype _72;
  unsigned int _73;
  int _74;
  int _75;
  void * _77;
  unsigned int _82;
  int _86;
  sizetype _95;
  long unsigned int _99;
  sizetype _107;
  int * _109;
  long unsigned int _114;
  ssizetype _118;
  int _119;
  long unsigned int _121;
  bool _123;
  bool _124;
  long int pretmp_127;
  bool _129;
  int _138;
  int _139;
  sizetype _142;
  int prephitmp_143;
  int pretmp_144;
  sizetype _146;
  float pretmp_149;
  long unsigned int _151;
  int * _152;
  sizetype _156;
  long unsigned int _157;
  int _159;
  sizetype _186;
  sizetype _187;
  sizetype _188;
  sizetype _189;
  sizetype _190;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _15 = num_floats_13(D) + num_ints_14(D);
  num_coordinates_16 = _15 + 1;
  # DEBUG num_coordinates => num_coordinates_16
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_14(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 4, loop depth 0
;;    pred:       2
  _107 = (sizetype) num_ints_14(D);
  _72 = _107 * 4;
  _70 = (sizetype) num_floats_13(D);
  _156 = _70 * 4;
  _10 = (ssizetype) _156;
  _118 = _10 + 4;
  _95 = (sizetype) _118;
  _52 = &coordinates + _95;
  __builtin_memcpy (_52, ints_22(D), _72);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       16
;;                17
;;                18
;;                19
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       3
;;                5
  # DEBUG j => 0
  if (num_tilings_32(D) > 0)
    goto <bb 20>;
  else
    goto <bb 37>;
;;    succ:       20
;;                37

;;   basic block 7, loop depth 0
;;    pred:       3
  pretmp_149 = (float) num_tilings_32(D);
  _82 = (unsigned int) num_floats_13(D);
  _73 = _82 + 4294967295;
  _61 = (sizetype) _73;
  _189 = _61 + 1;
  _190 = _189 * 4;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       9
;;                7
  # ivtmp.261_79 = PHI <ivtmp.261_80(9), 0(7)>
  # DEBUG i => NULL
  _23 = MEM[base: floats_29(D), index: ivtmp.261_79, offset: 0B];
  _24 = _23 * pretmp_149;
  _25 = __builtin_floorf (_24);
  _26 = (int) _25;
  MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B] = _26;
  # DEBUG i => D#14
  # DEBUG i => D#14
  ivtmp.261_80 = ivtmp.261_79 + 4;
  if (ivtmp.261_80 != _190)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  goto <bb 8>;
;;    succ:       8

;;   basic block 10, loop depth 0
;;    pred:       8
  _142 = (sizetype) num_floats_13(D);
  _146 = _142 * 4;
  __builtin_memset (&base, 0, _146);
  bnd.218_35 = _82 >> 2;
  ratio_mult_vf.219_34 = bnd.218_35 << 2;
  _129 = _82 <= 3;
  _124 = ratio_mult_vf.219_34 == 0;
  _123 = _124 | _129;
  if (_123 != 0)
    goto <bb 18>;
  else
    goto <bb 11>;
;;    succ:       11
;;                18

;;   basic block 11, loop depth 0
;;    pred:       10
  vect_cst_.227_100 = {num_tilings_32(D), num_tilings_32(D), num_tilings_32(D), num_tilings_32(D)};
  # DEBUG i => NULL
  vect_var_.225_2 = MEM[(int *)wrap_widths_39(D)];
  vect_var_.226_1 = vect_var_.225_2 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings] = vect_var_.226_1;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 1)
    goto <bb 12>;
  else
    goto <bb 17>;
;;    succ:       12
;;                17

;;   basic block 12, loop depth 0
;;    pred:       11
  # DEBUG i => NULL
  vect_var_.225_132 = MEM[(int *)wrap_widths_39(D) + 16B];
  vect_var_.226_131 = vect_var_.225_132 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B] = vect_var_.226_131;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 2)
    goto <bb 13>;
  else
    goto <bb 17>;
;;    succ:       13
;;                17

;;   basic block 13, loop depth 0
;;    pred:       12
  # DEBUG i => NULL
  vect_var_.225_169 = MEM[(int *)wrap_widths_39(D) + 32B];
  vect_var_.226_170 = vect_var_.225_169 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B] = vect_var_.226_170;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 3)
    goto <bb 14>;
  else
    goto <bb 17>;
;;    succ:       14
;;                17

;;   basic block 14, loop depth 0
;;    pred:       13
  # DEBUG i => NULL
  vect_var_.225_179 = MEM[(int *)wrap_widths_39(D) + 48B];
  vect_var_.226_180 = vect_var_.225_179 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B] = vect_var_.226_180;
  # DEBUG i => D#12
  # DEBUG i => D#12
  if (bnd.218_35 > 4)
    goto <bb 15>;
  else
    goto <bb 17>;
;;    succ:       15
;;                17

;;   basic block 15, loop depth 0
;;    pred:       14
  # DEBUG i => NULL
  vect_var_.225_101 = MEM[(int *)wrap_widths_39(D) + 64B];
  vect_var_.226_96 = vect_var_.225_101 * vect_cst_.227_100;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B] = vect_var_.226_96;
  # DEBUG i => D#12
  # DEBUG i => D#12
  goto <bb 17>;
;;    succ:       17

;;   basic block 16, loop depth 0
;;    pred:       19
  # DEBUG i => i_7
  _114 = (long unsigned int) i_7;
  _151 = _114 * 4;
  _152 = wrap_widths_39(D) + _151;
  _139 = *_152;
  _138 = _139 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_7] = _138;
  # DEBUG D#15 => i_7 + 1
  # DEBUG i => D#15
  # DEBUG i => D#15
  goto <bb 5>;
;;    succ:       5

;;   basic block 17, loop depth 0
;;    pred:       15
;;                11
;;                12
;;                13
;;                14
  i_106 = (int) ratio_mult_vf.219_34;
  if (ratio_mult_vf.219_34 == _82)
    goto <bb 5>;
  else
    goto <bb 18>;
;;    succ:       18
;;                5

;;   basic block 18, loop depth 0
;;    pred:       17
;;                10
  # i_122 = PHI <i_106(17), 0(10)>
  # DEBUG i => i_122
  _121 = (long unsigned int) i_122;
  _99 = _121 * 4;
  _109 = wrap_widths_39(D) + _99;
  _159 = *_109;
  _27 = _159 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_122] = _27;
  i_40 = i_122 + 1;
  # DEBUG i => i_40
  # DEBUG i => i_40
  if (num_floats_13(D) > i_40)
    goto <bb 19>;
  else
    goto <bb 5>;
;;    succ:       19
;;                5

;;   basic block 19, loop depth 0
;;    pred:       18
  # DEBUG i => i_40
  _44 = (long unsigned int) i_40;
  _157 = _44 * 4;
  _33 = wrap_widths_39(D) + _157;
  _12 = *_33;
  _11 = _12 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_40] = _11;
  i_7 = i_122 + 2;
  # DEBUG i => i_7
  # DEBUG i => i_7
  if (i_7 < num_floats_13(D))
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16
;;                5

;;   basic block 20, loop depth 0
;;    pred:       6
  pretmp_127 = (long int) memory_size_83(D);
  ivtmp.255_60 = (unsigned long) the_tiles_81(D);
  _5 = (unsigned int) num_floats_13(D);
  _6 = _5 + 4294967295;
  _186 = (sizetype) _6;
  _187 = _186 + 1;
  _188 = _187 * 4;
  goto <bb 35>;
;;    succ:       35

;;   basic block 21, loop depth 2
;;    pred:       28
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       21
;;                36
  # ivtmp.241_108 = PHI <ivtmp.241_18(21), 0(36)>
  # ivtmp.245_3 = PHI <ivtmp.245_4(21), 1(36)>
  # DEBUG i => NULL
  _45 = MEM[symbol: qstate, index: ivtmp.241_108, offset: 0B];
  _46 = MEM[symbol: base, index: ivtmp.241_108, offset: 0B];
  if (_45 >= _46)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 2
;;    pred:       22
  _47 = _45 - _46;
  _48 = _47 % num_tilings_32(D);
  _49 = _45 - _48;
  goto <bb 25>;
;;    succ:       25

;;   basic block 24, loop depth 2
;;    pred:       22
  _51 = _45 + 1;
  _53 = _46 - _45;
  _54 = _53 + -1;
  _55 = _54 % num_tilings_32(D);
  _56 = _51 + _55;
  _57 = _56 - num_tilings_32(D);
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       23
;;                24
  # cstore_58 = PHI <_49(23), _57(24)>
  MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = cstore_58;
  _62 = MEM[base: wrap_widths_39(D), index: ivtmp.241_108, offset: 0B];
  if (_62 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26
;;                27

;;   basic block 26, loop depth 2
;;    pred:       25
  _64 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B];
  _65 = cstore_58 % _64;
  MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = _65;
;;    succ:       27

;;   basic block 27, loop depth 2
;;    pred:       25
;;                26
  # prephitmp_143 = PHI <cstore_58(25), _65(26)>
  if (prephitmp_143 < 0)
    goto <bb 29>;
  else
    goto <bb 28>;
;;    succ:       29
;;                28

;;   basic block 28, loop depth 2
;;   Invalid sum of incoming frequencies 1119, should be 3333
;;    pred:       31
;;                27
  _74 = (int) ivtmp.245_3;
  _75 = _46 + _74;
  MEM[symbol: base, index: ivtmp.241_108, offset: 0B] = _75;
  # DEBUG i => D#13
  # DEBUG i => D#13
  ivtmp.241_18 = ivtmp.241_108 + 4;
  ivtmp.245_4 = ivtmp.245_3 + 2;
  if (ivtmp.241_18 != _188)
    goto <bb 21>;
  else
    goto <bb 33>;
;;    succ:       21
;;                33

;;   basic block 29, loop depth 2
;;   Invalid sum of incoming frequencies 3033, should be 819
;;    pred:       27
  pretmp_144 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B];
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       32
;;                29
  # _119 = PHI <_71(32), prephitmp_143(29)>
  _71 = _119 + pretmp_144;
  if (_71 < 0)
    goto <bb 32>;
  else
    goto <bb 31>;
;;    succ:       32
;;                31

;;   basic block 31, loop depth 2
;;    pred:       30
  # coordinates_I_lsm.216_154 = PHI <_71(30)>
  MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = coordinates_I_lsm.216_154;
  goto <bb 28>;
;;    succ:       28

;;   basic block 32, loop depth 3
;;    pred:       30
  goto <bb 30>;
;;    succ:       30

;;   basic block 33, loop depth 1
;;    pred:       28
;;                35
  # num_floats_98 = PHI <num_floats_13(D)(28), 0(35)>
  coordinates[num_floats_98] = j_111;
  _86 = hash_UNH (&coordinates, num_coordinates_16, pretmp_127, 449);
  _77 = (void *) ivtmp.255_103;
  MEM[base: _77, offset: 0B] = _86;
  j_89 = j_111 + 1;
  # DEBUG j => j_89
  # DEBUG j => j_89
  ivtmp.255_59 = ivtmp.255_103 + 4;
  if (j_89 != num_tilings_32(D))
    goto <bb 34>;
  else
    goto <bb 37>;
;;    succ:       34
;;                37

;;   basic block 34, loop depth 1
;;    pred:       33
;;    succ:       35

;;   basic block 35, loop depth 1
;;    pred:       34
;;                20
  # j_111 = PHI <j_89(34), 0(20)>
  # ivtmp.255_103 = PHI <ivtmp.255_59(34), ivtmp.255_60(20)>
  # DEBUG j => j_111
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 36>;
  else
    goto <bb 33>;
;;    succ:       36
;;                33

;;   basic block 36, loop depth 1
;;    pred:       35
  goto <bb 22>;
;;    succ:       22

;;   basic block 37, loop depth 0
;;    pred:       6
;;                33
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  wrap_widths_times_num_tilings ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}


Partition 3: size 164 align 16
	coordinates
Partition 2: size 80 align 16
	wrap_widths_times_num_tilings
Partition 1: size 80 align 16
	base
Partition 0: size 80 align 16
	qstate
Inserting a value copy on edge BB7->BB8 : PART.49 = 0
Inserting a value copy on edge BB10->BB18 : PART.61 = 0
Inserting a value copy on edge BB36->BB22 : PART.2 = 1
Inserting a value copy on edge BB36->BB22 : PART.13 = 0
Inserting a partition copy on edge BB30->BB31 :PART.81 = PART.38
Inserting a partition copy on edge BB28->BB33 :PART.57 = PART.9
Inserting a value copy on edge BB35->BB33 : PART.57 = 0
Inserting a value copy on edge BB20->BB35 : PART.54 = 0

;; Generating RTL for gimple basic block 2

;; num_coordinates_16 = _15 + 1;

(insn 23 22 24 (parallel [
            (set (reg:SI 155 [ D.26216 ])
                (plus:SI (reg/v:SI 151 [ num_floats ])
                    (reg/v:SI 154 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:445 -1
     (nil))

(insn 24 23 0 (parallel [
            (set (reg/v:SI 71 [ num_coordinates ])
                (plus:SI (reg:SI 155 [ D.26216 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:445 -1
     (nil))

;; # DEBUG num_coordinates => num_coordinates_16

(debug_insn 25 24 0 (var_location:SI num_coordinates (const_int 0 [0])) tiles.cpp:445 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 26 25 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:447 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 27 26 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_ints_14(D) > 0)

(insn 28 27 29 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 154 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:447 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:447 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil)))

;; Generating RTL for gimple basic block 3

;; # DEBUG i => 0

(debug_insn 31 30 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_13(D) > 0)

(insn 32 31 33 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 151 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:450 -1
     (nil))

(jump_insn 33 32 36 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:450 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

(note 36 33 34 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(jump_insn 34 36 35 39 (set (pc)
        (label_ref 0)) tiles.cpp:450 -1
     (nil))

(barrier 35 34 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 37 35 38 142 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memcpy (_52, ints_22(D), _72);

(insn 39 38 40 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))

(insn 40 39 41 (set (reg:DI 157 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 151 [ num_floats ]))) tiles.cpp:447 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:DI 158 [ D.26221 ])
                (ashift:DI (reg:DI 157 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))

(insn 42 41 43 (parallel [
            (set (reg:DI 159 [ D.26215 ])
                (plus:DI (reg:DI 158 [ D.26221 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))

(insn 43 42 44 (parallel [
            (set (reg:DI 160 [ D.26220 ])
                (plus:DI (reg:DI 156)
                    (reg:DI 159 [ D.26215 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))

(insn 44 43 45 (set (reg:DI 161 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 154 [ num_ints ]))) tiles.cpp:447 -1
     (nil))

(insn 45 44 46 (parallel [
            (set (reg:DI 162 [ D.26221 ])
                (ashift:DI (reg:DI 161 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))

(insn 46 45 47 (set (reg:DI 163)
        (reg:DI 160 [ D.26220 ])) -1
     (nil))

(insn 47 46 48 (set (reg:DI 164)
        (reg/v/f:DI 153 [ ints ])) -1
     (nil))

(insn 48 47 49 (set (reg:DI 165)
        (reg:DI 162 [ D.26221 ])) -1
     (nil))

(insn 49 48 50 (set (reg:DI 1 dx)
        (reg:DI 165)) -1
     (nil))

(insn 50 49 51 (set (reg:DI 4 si)
        (reg:DI 164)) -1
     (nil))

(insn 51 50 52 (set (reg:DI 5 di)
        (reg:DI 163)) -1
     (nil))

(call_insn 52 51 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))

(insn 53 52 54 (set (reg:DI 166)
        (reg:DI 0 ax)) -1
     (nil))

(insn 54 53 0 (set (reg:DI 167)
        (reg:DI 166)) -1
     (nil))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; 

(code_label 59 58 60 144 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => 0

(debug_insn 61 60 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; if (num_tilings_32(D) > 0)

(insn 62 61 63 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 148 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:457 -1
     (nil))

(jump_insn 63 62 66 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:457 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

(note 66 63 64 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(jump_insn 64 66 65 40 (set (pc)
        (label_ref 0)) tiles.cpp:457 -1
     (nil))

(barrier 65 64 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 67 65 68 143 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; _149 = (float) num_tilings_32(D);

(insn 69 68 0 (set (reg:SF 131 [ D.26217 ])
        (float:SF (reg/v:SI 148 [ num_tilings ]))) -1
     (nil))

;; _82 = (unsigned int) num_floats_13(D);

(insn 70 69 0 (set (reg:SI 105 [ D.26214 ])
        (reg/v:SI 151 [ num_floats ])) -1
     (nil))

;; _190 = _189 * 4;

(insn 71 70 72 (parallel [
            (set (reg:SI 168 [ D.26214 ])
                (plus:SI (reg:SI 105 [ D.26214 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 72 71 73 (set (reg:DI 169 [ D.26221 ])
        (zero_extend:DI (reg:SI 168 [ D.26214 ]))) -1
     (nil))

(insn 73 72 74 (parallel [
            (set (reg:DI 170 [ D.26221 ])
                (plus:DI (reg:DI 169 [ D.26221 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 74 73 0 (parallel [
            (set (reg:DI 146 [ D.26221 ])
                (ashift:DI (reg:DI 170 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 8

;; # DEBUG i => NULL

(debug_insn 76 75 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _25 = __builtin_floorf (_24);

(insn 77 76 78 (set (reg:SF 171 [ D.26217 ])
        (mult:SF (reg:SF 131 [ D.26217 ])
            (mem:SF (plus:DI (reg/v/f:DI 150 [ floats ])
                    (reg:DI 104 [ ivtmp.261 ])) [0 MEM[base: floats_29(D), index: ivtmp.261_79, offset: 0B]+0 S4 A32]))) tiles.cpp:451 -1
     (nil))

(insn 78 77 79 (set (reg:SF 21 xmm0)
        (reg:SF 171 [ D.26217 ])) tiles.cpp:451 -1
     (nil))

(call_insn/u 79 78 80 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:451 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 80 79 0 (set (reg:SF 75 [ D.26217 ])
        (reg:SF 21 xmm0)) tiles.cpp:451 -1
     (nil))

;; MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B] = _26;

(insn 81 80 82 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:451 -1
     (nil))

(insn 82 81 83 (set (reg:SI 173)
        (fix:SI (reg:SF 75 [ D.26217 ]))) tiles.cpp:451 -1
     (nil))

(insn 83 82 0 (set (mem:SI (plus:DI (reg:DI 104 [ ivtmp.261 ])
                (reg:DI 172)) [0 MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B]+0 S4 A32])
        (reg:SI 173)) tiles.cpp:451 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 75 [ D.26217 ]))
        (nil)))

;; # DEBUG i => D#14

(debug_insn 84 83 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#14

(debug_insn 85 84 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.261_80 = ivtmp.261_79 + 4;

(insn 86 85 0 (parallel [
            (set (reg:DI 104 [ ivtmp.261 ])
                (plus:DI (reg:DI 104 [ ivtmp.261 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.261_80 != _190)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 104 [ ivtmp.261 ])
            (reg:DI 146 [ D.26221 ]))) tiles.cpp:450 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:450 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; 

(code_label 93 92 94 148 "" [0 uses])

(note 94 93 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memset (&base, 0, _146);

(insn 95 94 96 (set (reg:DI 174 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 151 [ num_floats ]))) tiles.cpp:452 -1
     (nil))

(insn 96 95 97 (parallel [
            (set (reg:DI 175 [ D.26221 ])
                (ashift:DI (reg:DI 174 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:452 -1
     (nil))

(insn 97 96 98 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 98 97 99 (set (reg:DI 177)
        (reg:DI 176)) -1
     (nil))

(insn 99 98 100 (set (reg:DI 178)
        (reg:DI 175 [ D.26221 ])) -1
     (nil))

(insn 100 99 101 (set (reg:DI 1 dx)
        (reg:DI 178)) -1
     (nil))

(insn 101 100 102 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))

(insn 102 101 103 (set (reg:DI 5 di)
        (reg:DI 177)) -1
     (nil))

(call_insn 103 102 104 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 104 103 105 (set (reg:DI 179)
        (reg:DI 0 ax)) -1
     (nil))

(insn 105 104 0 (set (reg:DI 180)
        (reg:DI 179)) -1
     (nil))

;; bnd.218_35 = _82 >> 2;

(insn 106 105 0 (parallel [
            (set (reg:SI 80 [ bnd.218 ])
                (lshiftrt:SI (reg:SI 105 [ D.26214 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; ratio_mult_vf.219_34 = bnd.218_35 << 2;

(insn 107 106 0 (parallel [
            (set (reg:SI 79 [ ratio_mult_vf.219 ])
                (ashift:SI (reg:SI 80 [ bnd.218 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (_123 != 0)

(insn 108 107 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ ratio_mult_vf.219 ])
            (const_int 0 [0]))) -1
     (nil))

(insn 109 108 110 (set (reg:QI 182 [ D.26223 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))

(insn 110 109 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 182 [ D.26223 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 111 110 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil)))

(insn 112 111 113 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 105 [ D.26214 ])
            (const_int 3 [0x3]))) -1
     (nil))

(insn 113 112 114 (set (reg:QI 184 [ D.26223 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) -1
     (nil))

(insn 114 113 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 184 [ D.26223 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 115 114 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil)))

;; Generating RTL for gimple basic block 11

;; vect_cst_.227_100 = {num_tilings_32(D), num_tilings_32(D), num_tilings_32(D), num_tilings_32(D)};

(insn 117 116 118 (set (reg:V4SI 185)
        (vec_duplicate:V4SI (reg/v:SI 148 [ num_tilings ]))) 1643 {*vec_dupv4si}
     (nil))

(insn 118 117 0 (set (reg:V4SI 112 [ vect_cst_.227 ])
        (reg:V4SI 185)) -1
     (nil))

;; # DEBUG i => NULL

(debug_insn 119 118 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings] = vect_var_.226_1;

(insn 120 119 121 (set (subreg:V16QI (reg:V4SI 186 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 152 [ wrap_widths ]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))

(insn 121 120 122 (set (subreg:V2DI (reg:V4SI 188) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 186 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 122 121 123 (set (reg:V2DI 190)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 186 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 123 122 124 (set (reg:V2DI 191)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 124 123 125 (set (subreg:V2DI (reg:V4SI 189) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 191) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 125 124 126 (set (reg:V4SI 188)
        (vec_select:V4SI (reg:V4SI 188)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 126 125 127 (set (reg:V4SI 189)
        (vec_select:V4SI (reg:V4SI 189)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 127 126 128 (set (reg:V4SI 187 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 188)
                (reg:V4SI 189))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 186 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))

(insn 128 127 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 187 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))

;; # DEBUG i => D#12

(debug_insn 129 128 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#12

(debug_insn 130 129 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.218_35 > 1)

(insn 131 130 132 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 1 [0x1]))) -1
     (nil))

(jump_insn 132 131 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 12

;; # DEBUG i => NULL

(debug_insn 134 133 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B] = vect_var_.226_131;

(insn 135 134 136 (set (subreg:V16QI (reg:V4SI 192 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))

(insn 136 135 137 (set (subreg:V2DI (reg:V4SI 194) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 192 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 137 136 138 (set (reg:V2DI 196)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 192 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 138 137 139 (set (reg:V2DI 197)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 139 138 140 (set (subreg:V2DI (reg:V4SI 195) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 196) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 197) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 140 139 141 (set (reg:V4SI 194)
        (vec_select:V4SI (reg:V4SI 194)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 141 140 142 (set (reg:V4SI 195)
        (vec_select:V4SI (reg:V4SI 195)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 142 141 143 (set (reg:V4SI 193 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 194)
                (reg:V4SI 195))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 192 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))

(insn 143 142 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 193 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))

;; # DEBUG i => D#12

(debug_insn 144 143 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#12

(debug_insn 145 144 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.218_35 > 2)

(insn 146 145 147 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 2 [0x2]))) -1
     (nil))

(jump_insn 147 146 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 13

;; # DEBUG i => NULL

(debug_insn 149 148 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B] = vect_var_.226_170;

(insn 150 149 151 (set (subreg:V16QI (reg:V4SI 198 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))

(insn 151 150 152 (set (subreg:V2DI (reg:V4SI 200) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 198 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 152 151 153 (set (reg:V2DI 202)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 198 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 153 152 154 (set (reg:V2DI 203)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 154 153 155 (set (subreg:V2DI (reg:V4SI 201) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 202) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 203) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 155 154 156 (set (reg:V4SI 200)
        (vec_select:V4SI (reg:V4SI 200)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 156 155 157 (set (reg:V4SI 201)
        (vec_select:V4SI (reg:V4SI 201)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 157 156 158 (set (reg:V4SI 199 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 200)
                (reg:V4SI 201))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 198 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))

(insn 158 157 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 199 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))

;; # DEBUG i => D#12

(debug_insn 159 158 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#12

(debug_insn 160 159 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.218_35 > 3)

(insn 161 160 162 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 3 [0x3]))) -1
     (nil))

(jump_insn 162 161 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 14

;; # DEBUG i => NULL

(debug_insn 164 163 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B] = vect_var_.226_180;

(insn 165 164 166 (set (subreg:V16QI (reg:V4SI 204 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))

(insn 166 165 167 (set (subreg:V2DI (reg:V4SI 206) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 204 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 167 166 168 (set (reg:V2DI 208)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 204 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 168 167 169 (set (reg:V2DI 209)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 169 168 170 (set (subreg:V2DI (reg:V4SI 207) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 208) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 209) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 170 169 171 (set (reg:V4SI 206)
        (vec_select:V4SI (reg:V4SI 206)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 171 170 172 (set (reg:V4SI 207)
        (vec_select:V4SI (reg:V4SI 207)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 172 171 173 (set (reg:V4SI 205 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 206)
                (reg:V4SI 207))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 204 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))

(insn 173 172 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 205 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))

;; # DEBUG i => D#12

(debug_insn 174 173 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#12

(debug_insn 175 174 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.218_35 > 4)

(insn 176 175 177 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 4 [0x4]))) -1
     (nil))

(jump_insn 177 176 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 15

;; # DEBUG i => NULL

(debug_insn 179 178 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B] = vect_var_.226_96;

(insn 180 179 181 (set (subreg:V16QI (reg:V4SI 210 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))

(insn 181 180 182 (set (subreg:V2DI (reg:V4SI 212) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 210 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 182 181 183 (set (reg:V2DI 214)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 210 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 183 182 184 (set (reg:V2DI 215)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))

(insn 184 183 185 (set (subreg:V2DI (reg:V4SI 213) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 214) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 215) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))

(insn 185 184 186 (set (reg:V4SI 212)
        (vec_select:V4SI (reg:V4SI 212)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 186 185 187 (set (reg:V4SI 213)
        (vec_select:V4SI (reg:V4SI 213)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))

(insn 187 186 188 (set (reg:V4SI 211 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 212)
                (reg:V4SI 213))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 210 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))

(insn 188 187 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 211 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))

;; # DEBUG i => D#12

(debug_insn 189 188 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#12

(debug_insn 190 189 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 16

;; # DEBUG i => i_7

(debug_insn 194 193 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; wrap_widths_times_num_tilings[i_7] = _138;

(insn 195 194 196 (set (reg:DI 216)
        (sign_extend:DI (reg/v:SI 66 [ i ]))) tiles.cpp:453 -1
     (nil))

(insn 196 195 197 (set (reg:DI 217 [ D.26219 ])
        (sign_extend:DI (reg/v:SI 66 [ i ]))) tiles.cpp:451 -1
     (nil))

(insn 197 196 198 (set (reg:SI 219)
        (mem:SI (plus:DI (mult:DI (reg:DI 217 [ D.26219 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_152+0 S4 A32])) tiles.cpp:453 -1
     (nil))

(insn 198 197 199 (parallel [
            (set (reg:SI 218 [ D.26216 ])
                (mult:SI (reg:SI 219)
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 -1
     (nil))

(insn 199 198 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 216)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 218 [ D.26216 ])) tiles.cpp:453 -1
     (nil))

;; # DEBUG D#15 => i_7 + 1

(debug_insn 200 199 0 (var_location:SI D#15 (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#15

(debug_insn 201 200 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => D#15

(debug_insn 202 201 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 17

;; 

(code_label 206 205 207 151 "" [0 uses])

(note 207 206 0 NOTE_INSN_BASIC_BLOCK)

;; i_106 = (int) ratio_mult_vf.219_34;

(insn 208 207 0 (set (reg/v:SI 114 [ i ])
        (reg:SI 79 [ ratio_mult_vf.219 ])) -1
     (nil))

;; if (ratio_mult_vf.219_34 == _82)

(insn 209 208 210 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ ratio_mult_vf.219 ])
            (reg:SI 105 [ D.26214 ]))) -1
     (nil))

(jump_insn 210 209 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil)))

;; Generating RTL for gimple basic block 18

;; 

(code_label 211 210 212 150 "" [0 uses])

(note 212 211 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG i => i_122

(debug_insn 213 212 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; wrap_widths_times_num_tilings[i_122] = _27;

(insn 214 213 215 (set (reg:DI 220)
        (sign_extend:DI (reg/v:SI 114 [ i ]))) tiles.cpp:453 -1
     (nil))

(insn 215 214 216 (set (reg:DI 221 [ D.26219 ])
        (sign_extend:DI (reg/v:SI 114 [ i ]))) tiles.cpp:451 -1
     (nil))

(insn 216 215 217 (set (reg:SI 223)
        (mem:SI (plus:DI (mult:DI (reg:DI 221 [ D.26219 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_109+0 S4 A32])) tiles.cpp:453 -1
     (nil))

(insn 217 216 218 (parallel [
            (set (reg:SI 222 [ D.26216 ])
                (mult:SI (reg:SI 223)
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 -1
     (nil))

(insn 218 217 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 220)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 222 [ D.26216 ])) tiles.cpp:453 -1
     (nil))

;; i_40 = i_122 + 1;

(insn 219 218 0 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 114 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 -1
     (nil))

;; # DEBUG i => i_40

(debug_insn 220 219 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => i_40

(debug_insn 221 220 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_13(D) > i_40)

(insn 222 221 223 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 151 [ num_floats ])
            (reg/v:SI 81 [ i ]))) tiles.cpp:450 -1
     (nil))

(jump_insn 223 222 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) tiles.cpp:450 -1
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil)))

;; Generating RTL for gimple basic block 19

;; # DEBUG i => i_40

(debug_insn 225 224 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; wrap_widths_times_num_tilings[i_40] = _11;

(insn 226 225 227 (set (reg:DI 224)
        (sign_extend:DI (reg/v:SI 81 [ i ]))) tiles.cpp:453 -1
     (nil))

(insn 227 226 228 (set (reg:DI 225 [ D.26219 ])
        (sign_extend:DI (reg/v:SI 81 [ i ]))) tiles.cpp:451 -1
     (nil))

(insn 228 227 229 (set (reg:SI 227)
        (mem:SI (plus:DI (mult:DI (reg:DI 225 [ D.26219 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_33+0 S4 A32])) tiles.cpp:453 -1
     (nil))

(insn 229 228 230 (parallel [
            (set (reg:SI 226 [ D.26216 ])
                (mult:SI (reg:SI 227)
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 -1
     (nil))

(insn 230 229 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 224)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 226 [ D.26216 ])) tiles.cpp:453 -1
     (nil))

;; i_7 = i_122 + 2;

(insn 231 230 0 (parallel [
            (set (reg/v:SI 66 [ i ])
                (plus:SI (reg/v:SI 114 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 -1
     (nil))

;; # DEBUG i => i_7

(debug_insn 232 231 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;; # DEBUG i => i_7

(debug_insn 233 232 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (i_7 < num_floats_13(D))

(insn 235 233 236 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 66 [ i ])
            (reg/v:SI 151 [ num_floats ]))) tiles.cpp:450 -1
     (nil))

(jump_insn 236 235 239 19 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:450 -1
     (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
        (nil)))

(note 239 236 237 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(jump_insn 237 239 238 41 (set (pc)
        (label_ref 203)) tiles.cpp:450 -1
     (nil))

(barrier 238 237 0)

;; Generating RTL for gimple basic block 20

;; 

(code_label 240 238 241 146 "" [0 uses])

(note 241 240 0 NOTE_INSN_BASIC_BLOCK)

;; _127 = (long int) memory_size_83(D);

(insn 242 241 0 (set (reg:DI 122 [ D.26224 ])
        (sign_extend:DI (reg/v:SI 149 [ memory_size ]))) -1
     (nil))

;; ivtmp.255_60 = (unsigned long) the_tiles_81(D);

(insn 243 242 0 (set (reg:DI 94 [ ivtmp.255 ])
        (reg/v/f:DI 147 [ the_tiles ])) -1
     (nil))

;; _188 = _187 * 4;

(insn 244 243 245 (parallel [
            (set (reg:SI 228 [ D.26214 ])
                (plus:SI (reg/v:SI 151 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 245 244 246 (set (reg:DI 229 [ D.26221 ])
        (zero_extend:DI (reg:SI 228 [ D.26214 ]))) -1
     (nil))

(insn 246 245 247 (parallel [
            (set (reg:DI 230 [ D.26221 ])
                (plus:DI (reg:DI 229 [ D.26221 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 247 246 0 (parallel [
            (set (reg:DI 144 [ D.26221 ])
                (ashift:DI (reg:DI 230 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; # DEBUG i => NULL

(debug_insn 252 251 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _45 = MEM[symbol: qstate, index: ivtmp.241_108, offset: 0B];

(insn 253 252 254 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:463 -1
     (nil))

(insn 254 253 0 (set (reg:SI 83 [ D.26216 ])
        (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 231)) [0 MEM[symbol: qstate, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 -1
     (nil))

;; _46 = MEM[symbol: base, index: ivtmp.241_108, offset: 0B];

(insn 255 254 256 (parallel [
            (set (reg:DI 232)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:463 -1
     (nil))

(insn 256 255 0 (set (reg:SI 84 [ D.26216 ])
        (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 232)) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 -1
     (nil))

;; if (_45 >= _46)

(insn 257 256 258 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 83 [ D.26216 ])
            (reg:SI 84 [ D.26216 ]))) tiles.cpp:463 -1
     (nil))

(jump_insn 258 257 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:463 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 23

;; _49 = _45 - _48;

(insn 260 259 261 (parallel [
            (set (reg:SI 233 [ D.26216 ])
                (minus:SI (reg:SI 83 [ D.26216 ])
                    (reg:SI 84 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 -1
     (nil))

(insn 261 260 262 (parallel [
            (set (reg:SI 236)
                (div:SI (reg:SI 233 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (set (reg:SI 235 [ D.26216 ])
                (mod:SI (reg:SI 233 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 -1
     (nil))

(insn 262 261 0 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (minus:SI (reg:SI 83 [ D.26216 ])
                    (reg:SI 235 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 265 264 266 155 "" [0 uses])

(note 266 265 0 NOTE_INSN_BASIC_BLOCK)

;; _57 = _56 - num_tilings_32(D);

(insn 267 266 268 (parallel [
            (set (reg:SI 237 [ D.26216 ])
                (plus:SI (reg:SI 83 [ D.26216 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))

(insn 268 267 269 (parallel [
            (set (reg:SI 238 [ D.26216 ])
                (minus:SI (reg:SI 84 [ D.26216 ])
                    (reg:SI 83 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))

(insn 269 268 270 (parallel [
            (set (reg:SI 239 [ D.26216 ])
                (plus:SI (reg:SI 238 [ D.26216 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))

(insn 270 269 271 (parallel [
            (set (reg:SI 242)
                (div:SI (reg:SI 239 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (set (reg:SI 241 [ D.26216 ])
                (mod:SI (reg:SI 239 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))

(insn 271 270 272 (parallel [
            (set (reg:SI 243 [ D.26216 ])
                (plus:SI (reg:SI 237 [ D.26216 ])
                    (reg:SI 241 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))

(insn 272 271 0 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (minus:SI (reg:SI 243 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 273 272 274 156 "" [0 uses])

(note 274 273 0 NOTE_INSN_BASIC_BLOCK)

;; MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = _58;

(insn 275 274 276 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 276 275 0 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 244)) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 93 [ D.26216 ])) -1
     (nil))

;; if (_62 != 0)

(insn 277 276 278 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                    (reg:DI 72 [ ivtmp.241 ])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.241_108, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:467 -1
     (nil))

(jump_insn 278 277 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:467 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 26

;; _65 = _58 % _64;

(insn 280 279 281 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 -1
     (nil))

(insn 281 280 282 (parallel [
            (set (reg:SI 248)
                (div:SI (reg:SI 93 [ D.26216 ])
                    (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                            (reg:DI 245)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (set (reg:SI 247)
                (mod:SI (reg:SI 93 [ D.26216 ])
                    (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                            (reg:DI 245)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 -1
     (nil))

(insn 282 281 0 (set (reg:SI 93 [ D.26216 ])
        (reg:SI 247)) tiles.cpp:467 -1
     (nil))

;; MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = _65;

(insn 283 282 284 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 -1
     (nil))

(insn 284 283 0 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 249)) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 93 [ D.26216 ])) tiles.cpp:467 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 285 284 286 157 "" [0 uses])

(note 286 285 0 NOTE_INSN_BASIC_BLOCK)

;; if (_143 < 0)

(insn 287 286 288 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 93 [ D.26216 ])
            (const_int 0 [0]))) tiles.cpp:469 -1
     (nil))

(jump_insn 288 287 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:469 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 28

;; MEM[symbol: base, index: ivtmp.241_108, offset: 0B] = _75;

(insn 290 289 291 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:473 -1
     (nil))

(insn 291 290 292 (parallel [
            (set (reg:SI 251)
                (plus:SI (reg:SI 84 [ D.26216 ])
                    (reg:SI 63 [ ivtmp.245 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:473 -1
     (nil))

(insn 292 291 0 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 250)) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 251)) tiles.cpp:473 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 84 [ D.26216 ])
            (reg:SI 63 [ ivtmp.245 ]))
        (nil)))

;; # DEBUG i => D#13

(debug_insn 293 292 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:460 -1
     (nil))
;; # DEBUG i => D#13

(debug_insn 294 293 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.241_18 = ivtmp.241_108 + 4;

(insn 295 294 0 (parallel [
            (set (reg:DI 72 [ ivtmp.241 ])
                (plus:DI (reg:DI 72 [ ivtmp.241 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; ivtmp.245_4 = ivtmp.245_3 + 2;

(insn 296 295 0 (parallel [
            (set (reg:SI 63 [ ivtmp.245 ])
                (plus:SI (reg:SI 63 [ ivtmp.245 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.241_18 != _188)

(insn 298 296 299 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 72 [ ivtmp.241 ])
            (reg:DI 144 [ D.26221 ]))) tiles.cpp:460 -1
     (nil))

(jump_insn 299 298 302 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) tiles.cpp:460 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

(note 302 299 300 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(jump_insn 300 302 301 42 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 301 300 0)

;; Generating RTL for gimple basic block 29

;; 

(code_label 303 301 304 158 "" [0 uses])

(note 304 303 0 NOTE_INSN_BASIC_BLOCK)

;; _144 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B];

(insn 305 304 306 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 306 305 0 (set (reg:SI 129 [ D.26216 ])
        (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 252)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) -1
     (nil))

;; Generating RTL for gimple basic block 30

;; _71 = _119 + _144;

(insn 308 307 0 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (plus:SI (reg:SI 93 [ D.26216 ])
                    (reg:SI 129 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:470 -1
     (nil))

;; if (_71 < 0)

(insn 309 308 310 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 93 [ D.26216 ])
            (const_int 0 [0]))) tiles.cpp:469 -1
     (nil))

(jump_insn 310 309 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:469 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 31

;; MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B] = coordinates_I_lsm.216_154;

(insn 312 311 313 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 313 312 0 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 253)) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 134 [ coordinates_I_lsm.216 ])) -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 317 316 318 161 "" [0 uses])

(note 318 317 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 33

;; 

(code_label 322 321 323 160 "" [0 uses])

(note 323 322 0 NOTE_INSN_BASIC_BLOCK)

;; coordinates[num_floats_98] = j_111;

(insn 324 323 325 (set (reg:DI 254)
        (sign_extend:DI (reg/v:SI 110 [ num_floats ]))) tiles.cpp:476 -1
     (nil))

(insn 325 324 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 254)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 107 [ j ])) tiles.cpp:476 -1
     (nil))

;; _86 = hash_UNH (&coordinates, num_coordinates_16, _127, 449);

(insn 326 325 327 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:478 -1
     (nil))

(insn 327 326 328 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:478 -1
     (nil))

(insn 328 327 329 (set (reg:DI 1 dx)
        (reg:DI 122 [ D.26224 ])) tiles.cpp:478 -1
     (nil))

(insn 329 328 330 (set (reg:SI 4 si)
        (reg/v:SI 71 [ num_coordinates ])) tiles.cpp:478 -1
     (nil))

(insn 330 329 331 (set (reg:DI 5 di)
        (reg:DI 255)) tiles.cpp:478 -1
     (nil))

(call_insn 331 330 332 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:478 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))

(insn 332 331 0 (set (reg:SI 106 [ D.26216 ])
        (reg:SI 0 ax)) tiles.cpp:478 -1
     (nil))

;; MEM[base: _77, offset: 0B] = _86;

(insn 333 332 0 (set (mem:SI (reg:DI 94 [ ivtmp.255 ]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 106 [ D.26216 ])) tiles.cpp:478 -1
     (nil))

;; j_89 = j_111 + 1;

(insn 334 333 0 (parallel [
            (set (reg/v:SI 107 [ j ])
                (plus:SI (reg/v:SI 107 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:457 -1
     (nil))

;; # DEBUG j => j_89

(debug_insn 335 334 0 (var_location:SI j (const_int 0 [0])) tiles.cpp:457 -1
     (nil))
;; # DEBUG j => j_89

(debug_insn 336 335 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; ivtmp.255_59 = ivtmp.255_103 + 4;

(insn 337 336 0 (parallel [
            (set (reg:DI 94 [ ivtmp.255 ])
                (plus:DI (reg:DI 94 [ ivtmp.255 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (j_89 != num_tilings_32(D))

(insn 338 337 339 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 107 [ j ])
            (reg/v:SI 148 [ num_tilings ]))) tiles.cpp:457 -1
     (nil))

(jump_insn 339 338 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:457 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; 

(code_label 341 340 342 154 "" [0 uses])

(note 342 341 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => j_111

(debug_insn 343 342 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => 0

(debug_insn 344 343 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_13(D) > 0)

(insn 345 344 346 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 151 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:460 -1
     (nil))

(jump_insn 346 345 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 322)
            (pc))) tiles.cpp:460 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; 

(code_label 351 350 352 147 "" [0 uses])

(note 352 351 0 NOTE_INSN_BASIC_BLOCK)

;; qstate ={v} {CLOBBER};

(nil)

;; base ={v} {CLOBBER};

(nil)

;; wrap_widths_times_num_tilings ={v} {CLOBBER};

(nil)

;; coordinates ={v} {CLOBBER};

(nil)
Edge 10->18 redirected to 45
Edge 35->33 redirected to 46


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 8 failed.
Forwarding edge 8->9 to 47 failed.
Redirecting jump 64 from 46 to 47.
Redirecting jump 204 from 7 to 8.
Forwarding edge 21->22 to 24 failed.
Edge 21->7 redirected to 8
Forwarding edge 21->22 to 24 failed.
Edge 24->7 redirected to 8
Forwarding edge 25->26 to 8 failed.
Redirecting jump 237 from 7 to 8.
Edge 42->46 redirected to 47
deleting block 46


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 8 failed.
deleting block 7
Forwarding edge 8->9 to 47 failed.
Forwarding edge 21->22 to 24 failed.
Forwarding edge 25->26 to 8 failed.


try_optimize_cfg iteration 3

Forwarding edge 4->5 to 8 failed.
Forwarding edge 8->9 to 47 failed.
Forwarding edge 21->22 to 24 failed.
Forwarding edge 25->26 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 3 0 21 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 21 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 21 5 2 (set (reg/v/f:DI 147 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:439 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 148 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:439 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 149 [ memory_size ])
        (reg:SI 1 dx [ memory_size ])) tiles.cpp:439 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 150 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:439 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 151 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:439 -1
     (nil))
(insn 9 8 10 2 (set (reg/v/f:DI 152 [ wrap_widths ])
        (reg:DI 38 r9 [ wrap_widths ])) tiles.cpp:439 -1
     (nil))
(insn 10 9 11 2 (set (reg/v/f:DI 153 [ ints ])
        (mem/f/c:DI (reg/f:DI 53 virtual-incoming-args) [0 ints+0 S8 A64])) tiles.cpp:439 -1
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 53 virtual-incoming-args) [0 ints+0 S8 A64])
        (nil)))
(insn 11 10 12 2 (set (reg/v:SI 154 [ num_ints ])
        (mem/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])) tiles.cpp:439 -1
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])
        (nil)))
(note 12 11 23 2 NOTE_INSN_FUNCTION_BEG)
(insn 23 12 24 2 (parallel [
            (set (reg:SI 155 [ D.26216 ])
                (plus:SI (reg/v:SI 151 [ num_floats ])
                    (reg/v:SI 154 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:445 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/v:SI 71 [ num_coordinates ])
                (plus:SI (reg:SI 155 [ D.26216 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:445 -1
     (nil))
(debug_insn 25 24 26 2 (var_location:SI num_coordinates (reg/v:SI 71 [ num_coordinates ])) tiles.cpp:445 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI i (const_int 0 [0])) tiles.cpp:447 -1
     (nil))
(debug_insn 27 26 28 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 28 27 29 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 154 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:447 -1
     (nil))
(jump_insn 29 28 55 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) tiles.cpp:447 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 37)
;;  succ:       6 [97.6%] 
;;              4 [2.4%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              6 [100.0%] 
(code_label 55 29 30 4 145 "" [1 uses])
(note 30 55 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 32 31 33 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 151 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:450 -1
     (nil))
(jump_insn 33 32 36 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) tiles.cpp:450 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 67)
;;  succ:       10 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [4.8%]  (FALLTHRU)
(note 36 33 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 34 36 35 5 (set (pc)
        (label_ref 59)) tiles.cpp:450 -1
     (nil)
 -> 59)
;;  succ:       8 [100.0%] 

(barrier 35 34 37)
;; basic block 6, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [97.6%] 
(code_label 37 35 38 6 142 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))
(insn 40 39 41 6 (set (reg:DI 157 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 151 [ num_floats ]))) tiles.cpp:447 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 158 [ D.26221 ])
                (ashift:DI (reg:DI 157 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 159 [ D.26215 ])
                (plus:DI (reg:DI 158 [ D.26221 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 160 [ D.26220 ])
                (plus:DI (reg:DI 156)
                    (reg:DI 159 [ D.26215 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))
(insn 44 43 45 6 (set (reg:DI 161 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 154 [ num_ints ]))) tiles.cpp:447 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 162 [ D.26221 ])
                (ashift:DI (reg:DI 161 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 163)
        (reg:DI 160 [ D.26220 ])) -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 164)
        (reg/v/f:DI 153 [ ints ])) -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 165)
        (reg:DI 162 [ D.26221 ])) -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 1 dx)
        (reg:DI 165)) -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 4 si)
        (reg:DI 164)) -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (reg:DI 163)) -1
     (nil))
(call_insn 52 51 53 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 53 52 54 6 (set (reg:DI 166)
        (reg:DI 0 ax)) -1
     (nil))
(insn 54 53 56 6 (set (reg:DI 167)
        (reg:DI 166)) -1
     (nil))
(jump_insn 56 54 57 6 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
;;  succ:       4 [100.0%] 

(barrier 57 56 59)
;; basic block 8, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 [100.0%] 
;;              5 [100.0%] 
;;              20 [100.0%] 
;;              21 [33.3%] 
;;              24 [25.0%] 
(code_label 59 57 60 8 144 "" [5 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 8 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 62 61 63 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 148 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:457 -1
     (nil))
(jump_insn 63 62 66 8 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) tiles.cpp:457 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 240)
;;  succ:       27 [91.0%] 
;;              9 [9.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU)
(note 66 63 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 64 66 65 9 (set (pc)
        (label_ref:DI 353)) tiles.cpp:457 650 {jump}
     (nil)
 -> 353)
;;  succ:       47 [100.0%] 

(barrier 65 64 67)
;; basic block 10, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [95.2%] 
(code_label 67 65 68 10 143 "" [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg:SF 131 [ D.26217 ])
        (float:SF (reg/v:SI 148 [ num_tilings ]))) -1
     (nil))
(insn 70 69 71 10 (set (reg:SI 105 [ D.26214 ])
        (reg/v:SI 151 [ num_floats ])) -1
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:SI 168 [ D.26214 ])
                (plus:SI (reg:SI 105 [ D.26214 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 72 71 73 10 (set (reg:DI 169 [ D.26221 ])
        (zero_extend:DI (reg:SI 168 [ D.26214 ]))) -1
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:DI 170 [ D.26221 ])
                (plus:DI (reg:DI 169 [ D.26221 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 74 73 13 10 (parallel [
            (set (reg:DI 146 [ D.26221 ])
                (ashift:DI (reg:DI 170 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 13 74 90 10 (set (reg:DI 104 [ ivtmp.261 ])
        (const_int 0 [0])) tiles.cpp:450 -1
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)

;; basic block 11, loop depth 1, count 0, freq 330, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0%]  (DFS_BACK)
;;              10 [100.0%]  (FALLTHRU)
(code_label 90 13 75 11 149 "" [1 uses])
(note 75 90 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 11 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 77 76 78 11 (set (reg:SF 171 [ D.26217 ])
        (mult:SF (reg:SF 131 [ D.26217 ])
            (mem:SF (plus:DI (reg/v/f:DI 150 [ floats ])
                    (reg:DI 104 [ ivtmp.261 ])) [0 MEM[base: floats_29(D), index: ivtmp.261_79, offset: 0B]+0 S4 A32]))) tiles.cpp:451 -1
     (nil))
(insn 78 77 79 11 (set (reg:SF 21 xmm0)
        (reg:SF 171 [ D.26217 ])) tiles.cpp:451 -1
     (nil))
(call_insn/u 79 78 80 11 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:451 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 80 79 81 11 (set (reg:SF 75 [ D.26217 ])
        (reg:SF 21 xmm0)) tiles.cpp:451 -1
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:451 -1
     (nil))
(insn 82 81 83 11 (set (reg:SI 173)
        (fix:SI (reg:SF 75 [ D.26217 ]))) tiles.cpp:451 -1
     (nil))
(insn 83 82 84 11 (set (mem:SI (plus:DI (reg:DI 104 [ ivtmp.261 ])
                (reg:DI 172)) [0 MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B]+0 S4 A32])
        (reg:SI 173)) tiles.cpp:451 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 75 [ D.26217 ]))
        (nil)))
(debug_insn 84 83 85 11 (var_location:SI i (debug_expr:SI D#14)) tiles.cpp:450 -1
     (nil))
(debug_insn 85 84 86 11 (var_location:SI i (debug_expr:SI D#14)) -1
     (nil))
(insn 86 85 87 11 (parallel [
            (set (reg:DI 104 [ ivtmp.261 ])
                (plus:DI (reg:DI 104 [ ivtmp.261 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 87 86 88 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 104 [ ivtmp.261 ])
            (reg:DI 146 [ D.26221 ]))) tiles.cpp:450 -1
     (nil))
(jump_insn 88 87 89 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) tiles.cpp:450 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 93)
;;  succ:       12 [95.2%]  (FALLTHRU)
;;              13 [4.8%] 

;; basic block 12, loop depth 1, count 0, freq 314, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [95.2%]  (FALLTHRU)
(note 89 88 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 91 89 92 12 (set (pc)
        (label_ref 90)) tiles.cpp:450 -1
     (nil)
 -> 90)
;;  succ:       11 [100.0%]  (DFS_BACK)

(barrier 92 91 93)
;; basic block 13, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [4.8%] 
(code_label 93 92 94 13 148 "" [1 uses])
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg:DI 174 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 151 [ num_floats ]))) tiles.cpp:452 -1
     (nil))
(insn 96 95 97 13 (parallel [
            (set (reg:DI 175 [ D.26221 ])
                (ashift:DI (reg:DI 174 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:452 -1
     (nil))
(insn 97 96 98 13 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 98 97 99 13 (set (reg:DI 177)
        (reg:DI 176)) -1
     (nil))
(insn 99 98 100 13 (set (reg:DI 178)
        (reg:DI 175 [ D.26221 ])) -1
     (nil))
(insn 100 99 101 13 (set (reg:DI 1 dx)
        (reg:DI 178)) -1
     (nil))
(insn 101 100 102 13 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))
(insn 102 101 103 13 (set (reg:DI 5 di)
        (reg:DI 177)) -1
     (nil))
(call_insn 103 102 104 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 104 103 105 13 (set (reg:DI 179)
        (reg:DI 0 ax)) -1
     (nil))
(insn 105 104 106 13 (set (reg:DI 180)
        (reg:DI 179)) -1
     (nil))
(insn 106 105 107 13 (parallel [
            (set (reg:SI 80 [ bnd.218 ])
                (lshiftrt:SI (reg:SI 105 [ D.26214 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 107 106 108 13 (parallel [
            (set (reg:SI 79 [ ratio_mult_vf.219 ])
                (ashift:SI (reg:SI 80 [ bnd.218 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 108 107 109 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ ratio_mult_vf.219 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 109 108 110 13 (set (reg:QI 182 [ D.26223 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 110 109 111 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 182 [ D.26223 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 111 110 362 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 359)
;;  succ:       23 [33.3%] 
;;              14 [66.7%]  (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 [66.7%]  (FALLTHRU)
(note 362 111 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 112 362 113 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 105 [ D.26214 ])
            (const_int 3 [0x3]))) -1
     (nil))
(insn 113 112 114 14 (set (reg:QI 184 [ D.26223 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 114 113 115 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 184 [ D.26223 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 115 114 116 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 359)
;;  succ:       15 [66.7%]  (FALLTHRU)
;;              23 [33.3%] 

;; basic block 15, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [66.7%]  (FALLTHRU)
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 15 (set (reg:V4SI 185)
        (vec_duplicate:V4SI (reg/v:SI 148 [ num_tilings ]))) 1643 {*vec_dupv4si}
     (nil))
(insn 118 117 119 15 (set (reg:V4SI 112 [ vect_cst_.227 ])
        (reg:V4SI 185)) -1
     (nil))
(debug_insn 119 118 120 15 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 120 119 121 15 (set (subreg:V16QI (reg:V4SI 186 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 152 [ wrap_widths ]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))
(insn 121 120 122 15 (set (subreg:V2DI (reg:V4SI 188) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 186 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 122 121 123 15 (set (reg:V2DI 190)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 186 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 123 122 124 15 (set (reg:V2DI 191)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 124 123 125 15 (set (subreg:V2DI (reg:V4SI 189) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 191) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 125 124 126 15 (set (reg:V4SI 188)
        (vec_select:V4SI (reg:V4SI 188)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 126 125 127 15 (set (reg:V4SI 189)
        (vec_select:V4SI (reg:V4SI 189)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 127 126 128 15 (set (reg:V4SI 187 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 188)
                (reg:V4SI 189))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 186 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))
(insn 128 127 129 15 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 187 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))
(debug_insn 129 128 130 15 (var_location:SI i (debug_expr:SI D#12)) tiles.cpp:450 -1
     (nil))
(debug_insn 130 129 131 15 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 131 130 132 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 1 [0x1]))) -1
     (nil))
(jump_insn 132 131 133 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       16 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 16, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [66.7%]  (FALLTHRU)
(note 133 132 134 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 134 133 135 16 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 135 134 136 16 (set (subreg:V16QI (reg:V4SI 192 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))
(insn 136 135 137 16 (set (subreg:V2DI (reg:V4SI 194) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 192 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 137 136 138 16 (set (reg:V2DI 196)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 192 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 138 137 139 16 (set (reg:V2DI 197)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 139 138 140 16 (set (subreg:V2DI (reg:V4SI 195) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 196) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 197) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 140 139 141 16 (set (reg:V4SI 194)
        (vec_select:V4SI (reg:V4SI 194)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 141 140 142 16 (set (reg:V4SI 195)
        (vec_select:V4SI (reg:V4SI 195)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 142 141 143 16 (set (reg:V4SI 193 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 194)
                (reg:V4SI 195))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 192 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))
(insn 143 142 144 16 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 193 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))
(debug_insn 144 143 145 16 (var_location:SI i (debug_expr:SI D#12)) tiles.cpp:450 -1
     (nil))
(debug_insn 145 144 146 16 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 146 145 147 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 2 [0x2]))) -1
     (nil))
(jump_insn 147 146 148 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       17 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 17, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [66.7%]  (FALLTHRU)
(note 148 147 149 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 17 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 150 149 151 17 (set (subreg:V16QI (reg:V4SI 198 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))
(insn 151 150 152 17 (set (subreg:V2DI (reg:V4SI 200) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 198 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 152 151 153 17 (set (reg:V2DI 202)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 198 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 153 152 154 17 (set (reg:V2DI 203)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 154 153 155 17 (set (subreg:V2DI (reg:V4SI 201) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 202) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 203) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 155 154 156 17 (set (reg:V4SI 200)
        (vec_select:V4SI (reg:V4SI 200)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 156 155 157 17 (set (reg:V4SI 201)
        (vec_select:V4SI (reg:V4SI 201)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 157 156 158 17 (set (reg:V4SI 199 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 200)
                (reg:V4SI 201))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 198 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))
(insn 158 157 159 17 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 199 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))
(debug_insn 159 158 160 17 (var_location:SI i (debug_expr:SI D#12)) tiles.cpp:450 -1
     (nil))
(debug_insn 160 159 161 17 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 161 160 162 17 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 3 [0x3]))) -1
     (nil))
(jump_insn 162 161 163 17 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       18 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 18, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 [66.7%]  (FALLTHRU)
(note 163 162 164 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 164 163 165 18 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 165 164 166 18 (set (subreg:V16QI (reg:V4SI 204 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))
(insn 166 165 167 18 (set (subreg:V2DI (reg:V4SI 206) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 204 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 167 166 168 18 (set (reg:V2DI 208)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 204 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 168 167 169 18 (set (reg:V2DI 209)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 169 168 170 18 (set (subreg:V2DI (reg:V4SI 207) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 208) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 209) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 170 169 171 18 (set (reg:V4SI 206)
        (vec_select:V4SI (reg:V4SI 206)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 171 170 172 18 (set (reg:V4SI 207)
        (vec_select:V4SI (reg:V4SI 207)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 172 171 173 18 (set (reg:V4SI 205 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 206)
                (reg:V4SI 207))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 204 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))
(insn 173 172 174 18 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 205 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))
(debug_insn 174 173 175 18 (var_location:SI i (debug_expr:SI D#12)) tiles.cpp:450 -1
     (nil))
(debug_insn 175 174 176 18 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 176 175 177 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 4 [0x4]))) -1
     (nil))
(jump_insn 177 176 178 18 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       19 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 19, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [66.7%]  (FALLTHRU)
(note 178 177 179 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 179 178 180 19 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 180 179 181 19 (set (subreg:V16QI (reg:V4SI 210 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 -1
     (nil))
(insn 181 180 182 19 (set (subreg:V2DI (reg:V4SI 212) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 210 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 112 [ vect_cst_.227 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 182 181 183 19 (set (reg:V2DI 214)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 210 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 183 182 184 19 (set (reg:V2DI 215)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 112 [ vect_cst_.227 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 -1
     (nil))
(insn 184 183 185 19 (set (subreg:V2DI (reg:V4SI 213) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 214) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 215) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 -1
     (nil))
(insn 185 184 186 19 (set (reg:V4SI 212)
        (vec_select:V4SI (reg:V4SI 212)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 186 185 187 19 (set (reg:V4SI 213)
        (vec_select:V4SI (reg:V4SI 213)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 -1
     (nil))
(insn 187 186 188 19 (set (reg:V4SI 211 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 212)
                (reg:V4SI 213))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 210 [ vect_var_.225 ])
            (reg:V4SI 112 [ vect_cst_.227 ]))
        (nil)))
(insn 188 187 189 19 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 211 [ vect_var_.226 ])) tiles.cpp:453 -1
     (nil))
(debug_insn 189 188 190 19 (var_location:SI i (debug_expr:SI D#12)) tiles.cpp:450 -1
     (nil))
(debug_insn 190 189 191 19 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(jump_insn 191 190 192 19 (set (pc)
        (label_ref 206)) -1
     (nil)
 -> 206)
;;  succ:       21 [100.0%] 

(barrier 192 191 234)
;; basic block 20, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 [75.0%] 
(code_label 234 192 193 20 153 "" [1 uses])
(note 193 234 194 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 20 (var_location:SI i (reg/v:SI 66 [ i ])) -1
     (nil))
(insn 195 194 196 20 (set (reg:DI 216)
        (sign_extend:DI (reg/v:SI 66 [ i ]))) tiles.cpp:453 -1
     (nil))
(insn 196 195 197 20 (set (reg:DI 217 [ D.26219 ])
        (sign_extend:DI (reg/v:SI 66 [ i ]))) tiles.cpp:451 -1
     (nil))
(insn 197 196 198 20 (set (reg:SI 219)
        (mem:SI (plus:DI (mult:DI (reg:DI 217 [ D.26219 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_152+0 S4 A32])) tiles.cpp:453 -1
     (nil))
(insn 198 197 199 20 (parallel [
            (set (reg:SI 218 [ D.26216 ])
                (mult:SI (reg:SI 219)
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 -1
     (nil))
(insn 199 198 200 20 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 216)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 218 [ D.26216 ])) tiles.cpp:453 -1
     (nil))
(debug_insn 200 199 201 20 (var_location:SI D#15 (plus:SI (reg/v:SI 66 [ i ])
        (const_int 1 [0x1]))) tiles.cpp:450 -1
     (nil))
(debug_insn 201 200 202 20 (var_location:SI i (debug_expr:SI D#15)) tiles.cpp:450 -1
     (nil))
(debug_insn 202 201 204 20 (var_location:SI i (debug_expr:SI D#15)) -1
     (nil))
(jump_insn 204 202 205 20 (set (pc)
        (label_ref:DI 59)) tiles.cpp:453 650 {jump}
     (nil)
 -> 59)
;;  succ:       8 [100.0%] 

(barrier 205 204 206)
;; basic block 21, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;;              15 [33.3%] 
;;              16 [33.3%] 
;;              17 [33.3%] 
;;              18 [33.3%] 
(code_label 206 205 207 21 151 "" [5 uses])
(note 207 206 208 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 21 (set (reg/v:SI 114 [ i ])
        (reg:SI 79 [ ratio_mult_vf.219 ])) -1
     (nil))
(insn 209 208 210 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ ratio_mult_vf.219 ])
            (reg:SI 105 [ D.26214 ]))) -1
     (nil))
(jump_insn 210 209 355 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 59)
;;  succ:       22 [66.7%]  (FALLTHRU)
;;              8 [33.3%] 

;; basic block 22, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 [66.7%]  (FALLTHRU)
(note 355 210 356 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 356 355 357 22 (set (pc)
        (label_ref 211)) -1
     (nil)
 -> 211)
;;  succ:       24 [100.0%] 

(barrier 357 356 359)
;; basic block 23, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 [33.3%] 
;;              13 [33.3%] 
(code_label 359 357 358 23 165 "" [2 uses])
(note 358 359 14 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 14 358 211 23 (set (reg/v:SI 114 [ i ])
        (const_int 0 [0])) tiles.cpp:452 -1
     (nil))
;;  succ:       24 [100.0%]  (FALLTHRU)

;; basic block 24, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;;              22 [100.0%] 
(code_label 211 14 212 24 150 "" [1 uses])
(note 212 211 213 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 24 (var_location:SI i (reg/v:SI 114 [ i ])) -1
     (nil))
(insn 214 213 215 24 (set (reg:DI 220)
        (sign_extend:DI (reg/v:SI 114 [ i ]))) tiles.cpp:453 -1
     (nil))
(insn 215 214 216 24 (set (reg:DI 221 [ D.26219 ])
        (sign_extend:DI (reg/v:SI 114 [ i ]))) tiles.cpp:451 -1
     (nil))
(insn 216 215 217 24 (set (reg:SI 223)
        (mem:SI (plus:DI (mult:DI (reg:DI 221 [ D.26219 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_109+0 S4 A32])) tiles.cpp:453 -1
     (nil))
(insn 217 216 218 24 (parallel [
            (set (reg:SI 222 [ D.26216 ])
                (mult:SI (reg:SI 223)
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 -1
     (nil))
(insn 218 217 219 24 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 220)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 222 [ D.26216 ])) tiles.cpp:453 -1
     (nil))
(insn 219 218 220 24 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 114 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 -1
     (nil))
(debug_insn 220 219 221 24 (var_location:SI i (reg/v:SI 81 [ i ])) tiles.cpp:450 -1
     (nil))
(debug_insn 221 220 222 24 (var_location:SI i (reg/v:SI 81 [ i ])) -1
     (nil))
(insn 222 221 223 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 151 [ num_floats ])
            (reg/v:SI 81 [ i ]))) tiles.cpp:450 -1
     (nil))
(jump_insn 223 222 224 24 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil))
 -> 59)
;;  succ:       25 [75.0%]  (FALLTHRU)
;;              8 [25.0%] 

;; basic block 25, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [75.0%]  (FALLTHRU)
(note 224 223 225 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 25 (var_location:SI i (reg/v:SI 81 [ i ])) -1
     (nil))
(insn 226 225 227 25 (set (reg:DI 224)
        (sign_extend:DI (reg/v:SI 81 [ i ]))) tiles.cpp:453 -1
     (nil))
(insn 227 226 228 25 (set (reg:DI 225 [ D.26219 ])
        (sign_extend:DI (reg/v:SI 81 [ i ]))) tiles.cpp:451 -1
     (nil))
(insn 228 227 229 25 (set (reg:SI 227)
        (mem:SI (plus:DI (mult:DI (reg:DI 225 [ D.26219 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_33+0 S4 A32])) tiles.cpp:453 -1
     (nil))
(insn 229 228 230 25 (parallel [
            (set (reg:SI 226 [ D.26216 ])
                (mult:SI (reg:SI 227)
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 -1
     (nil))
(insn 230 229 231 25 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 224)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 226 [ D.26216 ])) tiles.cpp:453 -1
     (nil))
(insn 231 230 232 25 (parallel [
            (set (reg/v:SI 66 [ i ])
                (plus:SI (reg/v:SI 114 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 -1
     (nil))
(debug_insn 232 231 233 25 (var_location:SI i (reg/v:SI 66 [ i ])) tiles.cpp:450 -1
     (nil))
(debug_insn 233 232 235 25 (var_location:SI i (reg/v:SI 66 [ i ])) -1
     (nil))
(insn 235 233 236 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 66 [ i ])
            (reg/v:SI 151 [ num_floats ]))) tiles.cpp:450 -1
     (nil))
(jump_insn 236 235 239 25 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:450 -1
     (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
        (nil))
 -> 234)
;;  succ:       20 [75.0%] 
;;              26 [25.0%]  (FALLTHRU)

;; basic block 26, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 [25.0%]  (FALLTHRU)
(note 239 236 237 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 237 239 238 26 (set (pc)
        (label_ref:DI 59)) tiles.cpp:450 650 {jump}
     (nil)
 -> 59)
;;  succ:       8 [100.0%] 

(barrier 238 237 240)
;; basic block 27, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [91.0%] 
(code_label 240 238 241 27 146 "" [1 uses])
(note 241 240 242 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 27 (set (reg:DI 122 [ D.26224 ])
        (sign_extend:DI (reg/v:SI 149 [ memory_size ]))) -1
     (nil))
(insn 243 242 244 27 (set (reg:DI 94 [ ivtmp.255 ])
        (reg/v/f:DI 147 [ the_tiles ])) -1
     (nil))
(insn 244 243 245 27 (parallel [
            (set (reg:SI 228 [ D.26214 ])
                (plus:SI (reg/v:SI 151 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 245 244 246 27 (set (reg:DI 229 [ D.26221 ])
        (zero_extend:DI (reg:SI 228 [ D.26214 ]))) -1
     (nil))
(insn 246 245 247 27 (parallel [
            (set (reg:DI 230 [ D.26221 ])
                (plus:DI (reg:DI 229 [ D.26221 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 247 246 20 27 (parallel [
            (set (reg:DI 144 [ D.26221 ])
                (ashift:DI (reg:DI 230 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 20 247 248 27 (set (reg/v:SI 107 [ j ])
        (const_int 0 [0])) tiles.cpp:457 -1
     (nil))
(jump_insn 248 20 249 27 (set (pc)
        (label_ref 341)) -1
     (nil)
 -> 341)
;;  succ:       44 [100.0%] 

(barrier 249 248 297)
;; basic block 28, loop depth 2, count 0, freq 3174, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 [95.2%] 
(code_label 297 249 250 28 159 "" [1 uses])
(note 250 297 348 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       29 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 29, loop depth 2, count 0, freq 3333, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 [100.0%]  (FALLTHRU,DFS_BACK)
;;              45 [100.0%] 
(code_label 348 250 251 29 164 "" [1 uses])
(note 251 348 252 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 252 251 253 29 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 253 252 254 29 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:463 -1
     (nil))
(insn 254 253 255 29 (set (reg:SI 83 [ D.26216 ])
        (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 231)) [0 MEM[symbol: qstate, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 -1
     (nil))
(insn 255 254 256 29 (parallel [
            (set (reg:DI 232)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:463 -1
     (nil))
(insn 256 255 257 29 (set (reg:SI 84 [ D.26216 ])
        (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 232)) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 -1
     (nil))
(insn 257 256 258 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 83 [ D.26216 ])
            (reg:SI 84 [ D.26216 ]))) tiles.cpp:463 -1
     (nil))
(jump_insn 258 257 259 29 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) tiles.cpp:463 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 265)
;;  succ:       30 [50.0%]  (FALLTHRU)
;;              31 [50.0%] 

;; basic block 30, loop depth 2, count 0, freq 1667, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [50.0%]  (FALLTHRU)
(note 259 258 260 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 30 (parallel [
            (set (reg:SI 233 [ D.26216 ])
                (minus:SI (reg:SI 83 [ D.26216 ])
                    (reg:SI 84 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 -1
     (nil))
(insn 261 260 262 30 (parallel [
            (set (reg:SI 236)
                (div:SI (reg:SI 233 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (set (reg:SI 235 [ D.26216 ])
                (mod:SI (reg:SI 233 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 -1
     (nil))
(insn 262 261 263 30 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (minus:SI (reg:SI 83 [ D.26216 ])
                    (reg:SI 235 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 -1
     (nil))
(jump_insn 263 262 264 30 (set (pc)
        (label_ref 273)) -1
     (nil)
 -> 273)
;;  succ:       32 [100.0%] 

(barrier 264 263 265)
;; basic block 31, loop depth 2, count 0, freq 1667, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [50.0%] 
(code_label 265 264 266 31 155 "" [1 uses])
(note 266 265 267 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 31 (parallel [
            (set (reg:SI 237 [ D.26216 ])
                (plus:SI (reg:SI 83 [ D.26216 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))
(insn 268 267 269 31 (parallel [
            (set (reg:SI 238 [ D.26216 ])
                (minus:SI (reg:SI 84 [ D.26216 ])
                    (reg:SI 83 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))
(insn 269 268 270 31 (parallel [
            (set (reg:SI 239 [ D.26216 ])
                (plus:SI (reg:SI 238 [ D.26216 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))
(insn 270 269 271 31 (parallel [
            (set (reg:SI 242)
                (div:SI (reg:SI 239 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (set (reg:SI 241 [ D.26216 ])
                (mod:SI (reg:SI 239 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))
(insn 271 270 272 31 (parallel [
            (set (reg:SI 243 [ D.26216 ])
                (plus:SI (reg:SI 237 [ D.26216 ])
                    (reg:SI 241 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))
(insn 272 271 273 31 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (minus:SI (reg:SI 243 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 -1
     (nil))
;;  succ:       32 [100.0%]  (FALLTHRU)

;; basic block 32, loop depth 2, count 0, freq 3333, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 [100.0%] 
;;              31 [100.0%]  (FALLTHRU)
(code_label 273 272 274 32 156 "" [1 uses])
(note 274 273 275 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 275 274 276 32 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 276 275 277 32 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 244)) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 93 [ D.26216 ])) -1
     (nil))
(insn 277 276 278 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                    (reg:DI 72 [ ivtmp.241 ])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.241_108, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:467 -1
     (nil))
(jump_insn 278 277 279 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) tiles.cpp:467 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 285)
;;  succ:       33 [50.0%]  (FALLTHRU)
;;              34 [50.0%] 

;; basic block 33, loop depth 2, count 0, freq 1667, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 [50.0%]  (FALLTHRU)
(note 279 278 280 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 33 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 -1
     (nil))
(insn 281 280 282 33 (parallel [
            (set (reg:SI 248)
                (div:SI (reg:SI 93 [ D.26216 ])
                    (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                            (reg:DI 245)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (set (reg:SI 247)
                (mod:SI (reg:SI 93 [ D.26216 ])
                    (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                            (reg:DI 245)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 -1
     (nil))
(insn 282 281 283 33 (set (reg:SI 93 [ D.26216 ])
        (reg:SI 247)) tiles.cpp:467 -1
     (nil))
(insn 283 282 284 33 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 -1
     (nil))
(insn 284 283 285 33 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 249)) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 93 [ D.26216 ])) tiles.cpp:467 -1
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)

;; basic block 34, loop depth 2, count 0, freq 3333, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 [50.0%] 
;;              33 [100.0%]  (FALLTHRU)
(code_label 285 284 286 34 157 "" [1 uses])
(note 286 285 287 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 34 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 93 [ D.26216 ])
            (const_int 0 [0]))) tiles.cpp:469 -1
     (nil))
(jump_insn 288 287 314 34 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) tiles.cpp:469 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 303)
;;  succ:       37 [91.0%] 
;;              35 [9.0%]  (FALLTHRU)

;; basic block 35, loop depth 2, count 0, freq 3333, maybe hot
;; Invalid sum of incoming frequencies 1119, should be 3333
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 [100.0%] 
;;              34 [9.0%]  (FALLTHRU)
(code_label 314 288 289 35 162 "" [1 uses])
(note 289 314 290 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 35 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:473 -1
     (nil))
(insn 291 290 292 35 (parallel [
            (set (reg:SI 251)
                (plus:SI (reg:SI 84 [ D.26216 ])
                    (reg:SI 63 [ ivtmp.245 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:473 -1
     (nil))
(insn 292 291 293 35 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 250)) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 251)) tiles.cpp:473 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 84 [ D.26216 ])
            (reg:SI 63 [ ivtmp.245 ]))
        (nil)))
(debug_insn 293 292 294 35 (var_location:SI i (debug_expr:SI D#13)) tiles.cpp:460 -1
     (nil))
(debug_insn 294 293 295 35 (var_location:SI i (debug_expr:SI D#13)) -1
     (nil))
(insn 295 294 296 35 (parallel [
            (set (reg:DI 72 [ ivtmp.241 ])
                (plus:DI (reg:DI 72 [ ivtmp.241 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 296 295 298 35 (parallel [
            (set (reg:SI 63 [ ivtmp.245 ])
                (plus:SI (reg:SI 63 [ ivtmp.245 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 298 296 299 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 72 [ ivtmp.241 ])
            (reg:DI 144 [ D.26221 ]))) tiles.cpp:460 -1
     (nil))
(jump_insn 299 298 302 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) tiles.cpp:460 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 297)
;;  succ:       28 [95.2%] 
;;              36 [4.8%]  (FALLTHRU)

;; basic block 36, loop depth 1, count 0, freq 159, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 [4.8%]  (FALLTHRU)
(note 302 299 18 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 18 302 300 36 (set (reg/v:SI 110 [ num_floats ])
        (reg/v:SI 151 [ num_floats ])) -1
     (nil))
(jump_insn 300 18 301 36 (set (pc)
        (label_ref 322)) -1
     (nil)
 -> 322)
;;  succ:       42 [100.0%] 

(barrier 301 300 303)
;; basic block 37, loop depth 2, count 0, freq 819, maybe hot
;; Invalid sum of incoming frequencies 3033, should be 819
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 [91.0%] 
(code_label 303 301 304 37 158 "" [1 uses])
(note 304 303 305 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 37 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 306 305 319 37 (set (reg:SI 129 [ D.26216 ])
        (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 252)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) -1
     (nil))
;;  succ:       38 [100.0%]  (FALLTHRU)

;; basic block 38, loop depth 3, count 0, freq 9100, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 [100.0%]  (DFS_BACK)
;;              37 [100.0%]  (FALLTHRU)
(code_label 319 306 307 38 163 "" [1 uses])
(note 307 319 308 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 38 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (plus:SI (reg:SI 93 [ D.26216 ])
                    (reg:SI 129 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:470 -1
     (nil))
(insn 309 308 310 38 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 93 [ D.26216 ])
            (const_int 0 [0]))) tiles.cpp:469 -1
     (nil))
(jump_insn 310 309 311 38 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) tiles.cpp:469 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 317)
;;  succ:       40 [91.0%] 
;;              39 [9.0%]  (FALLTHRU)

;; basic block 39, loop depth 2, count 0, freq 819, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 [9.0%]  (FALLTHRU)
(note 311 310 17 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 17 311 312 39 (set (reg:SI 134 [ coordinates_I_lsm.216 ])
        (reg:SI 93 [ D.26216 ])) -1
     (nil))
(insn 312 17 313 39 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 313 312 315 39 (set (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                (reg:DI 253)) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 134 [ coordinates_I_lsm.216 ])) -1
     (nil))
(jump_insn 315 313 316 39 (set (pc)
        (label_ref 314)) -1
     (nil)
 -> 314)
;;  succ:       35 [100.0%] 

(barrier 316 315 317)
;; basic block 40, loop depth 3, count 0, freq 8281, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       38 [91.0%] 
(code_label 317 316 318 40 161 "" [1 uses])
(note 318 317 320 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 320 318 321 40 (set (pc)
        (label_ref 319)) -1
     (nil)
 -> 319)
;;  succ:       38 [100.0%]  (DFS_BACK)

(barrier 321 320 361)
;; basic block 41, loop depth 1, count 0, freq 8, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 [4.8%] 
(code_label 361 321 360 41 166 "" [1 uses])
(note 360 361 19 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 19 360 322 41 (set (reg/v:SI 110 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:460 -1
     (nil))
;;  succ:       42 [100.0%]  (FALLTHRU)

;; basic block 42, loop depth 1, count 0, freq 167, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 [100.0%]  (FALLTHRU)
;;              36 [100.0%] 
(code_label 322 19 323 42 160 "" [1 uses])
(note 323 322 324 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 42 (set (reg:DI 254)
        (sign_extend:DI (reg/v:SI 110 [ num_floats ]))) tiles.cpp:476 -1
     (nil))
(insn 325 324 326 42 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 254)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 107 [ j ])) tiles.cpp:476 -1
     (nil))
(insn 326 325 327 42 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:478 -1
     (nil))
(insn 327 326 328 42 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:478 -1
     (nil))
(insn 328 327 329 42 (set (reg:DI 1 dx)
        (reg:DI 122 [ D.26224 ])) tiles.cpp:478 -1
     (nil))
(insn 329 328 330 42 (set (reg:SI 4 si)
        (reg/v:SI 71 [ num_coordinates ])) tiles.cpp:478 -1
     (nil))
(insn 330 329 331 42 (set (reg:DI 5 di)
        (reg:DI 255)) tiles.cpp:478 -1
     (nil))
(call_insn 331 330 332 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:478 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 332 331 333 42 (set (reg:SI 106 [ D.26216 ])
        (reg:SI 0 ax)) tiles.cpp:478 -1
     (nil))
(insn 333 332 334 42 (set (mem:SI (reg:DI 94 [ ivtmp.255 ]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 106 [ D.26216 ])) tiles.cpp:478 -1
     (nil))
(insn 334 333 335 42 (parallel [
            (set (reg/v:SI 107 [ j ])
                (plus:SI (reg/v:SI 107 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:457 -1
     (nil))
(debug_insn 335 334 336 42 (var_location:SI j (reg/v:SI 107 [ j ])) tiles.cpp:457 -1
     (nil))
(debug_insn 336 335 337 42 (var_location:SI j (reg/v:SI 107 [ j ])) -1
     (nil))
(insn 337 336 338 42 (parallel [
            (set (reg:DI 94 [ ivtmp.255 ])
                (plus:DI (reg:DI 94 [ ivtmp.255 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 338 337 339 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 107 [ j ])
            (reg/v:SI 148 [ num_tilings ]))) tiles.cpp:457 -1
     (nil))
(jump_insn 339 338 340 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 353)
            (pc))) tiles.cpp:457 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 353)
;;  succ:       43 [91.0%]  (FALLTHRU)
;;              47 [9.0%] 

;; basic block 43, loop depth 1, count 0, freq 152, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 [91.0%]  (FALLTHRU)
(note 340 339 341 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
;;  succ:       44 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 44, loop depth 1, count 0, freq 167, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 [100.0%]  (FALLTHRU,DFS_BACK)
;;              27 [100.0%] 
(code_label 341 340 342 44 154 "" [1 uses])
(note 342 341 343 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(debug_insn 343 342 344 44 (var_location:SI j (reg/v:SI 107 [ j ])) -1
     (nil))
(debug_insn 344 343 345 44 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 345 344 346 44 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 151 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:460 -1
     (nil))
(jump_insn 346 345 347 44 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) tiles.cpp:460 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 361)
;;  succ:       45 [95.2%]  (FALLTHRU)
;;              41 [4.8%] 

;; basic block 45, loop depth 1, count 0, freq 159, maybe hot
;;  prev block 44, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 [95.2%]  (FALLTHRU)
(note 347 346 15 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 15 347 16 45 (set (reg:SI 63 [ ivtmp.245 ])
        (const_int 1 [0x1])) tiles.cpp:460 -1
     (nil))
(insn 16 15 349 45 (set (reg:DI 72 [ ivtmp.241 ])
        (const_int 0 [0])) tiles.cpp:460 -1
     (nil))
(jump_insn 349 16 350 45 (set (pc)
        (label_ref 348)) tiles.cpp:460 -1
     (nil)
 -> 348)
;;  succ:       29 [100.0%] 

(barrier 350 349 353)
;; basic block 47, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 45, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 [9.0%] 
;;              9 [100.0%] 
(code_label 353 350 354 47 141 "" [2 uses])
(note 354 353 0 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int) (_Z9tileswrapPiiP15collision_tablePfiS_S_i, funcdef_no=1101, decl_uid=23893, cgraph_uid=345)

void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int) (int * the_tiles, int num_tilings, struct collision_table * ctable, float * floats, int num_floats, int * wrap_widths, int * ints, int num_ints)
{
  sizetype ivtmp.311;
  unsigned long ivtmp.305;
  unsigned int ivtmp.295;
  sizetype ivtmp.291;
  vector(4) int vect_cst_.277;
  vector(4) int vect_var_.276;
  vector(4) int vect_var_.275;
  unsigned int ratio_mult_vf.269;
  unsigned int bnd.268;
  int coordinates_I_lsm.266;
  int num_coordinates;
  int coordinates[41];
  int wrap_widths_times_num_tilings[20];
  int base[20];
  int qstate[20];
  int j;
  int i;
  unsigned int _4;
  unsigned int _5;
  int _9;
  sizetype _10;
  int _11;
  int _15;
  float _23;
  float _24;
  float _25;
  int _26;
  int _27;
  int * _33;
  long unsigned int _44;
  int _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _51;
  sizetype _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int cstore_58;
  sizetype _61;
  int _62;
  int _64;
  int _65;
  sizetype _70;
  int _71;
  sizetype _72;
  unsigned int _73;
  int _74;
  int _75;
  void * _77;
  unsigned int _82;
  int _85;
  ssizetype _94;
  long unsigned int _98;
  int * _107;
  long unsigned int _113;
  ssizetype _117;
  int _118;
  long unsigned int _119;
  bool _121;
  bool _122;
  bool _123;
  int _135;
  int _136;
  sizetype _139;
  sizetype _140;
  int prephitmp_141;
  int pretmp_142;
  long unsigned int _144;
  float pretmp_147;
  int * _149;
  int[41] * _151;
  sizetype _154;
  long unsigned int _155;
  int _157;
  sizetype _185;
  sizetype _186;
  sizetype _187;
  sizetype _188;
  sizetype _189;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _15 = num_floats_13(D) + num_ints_14(D);
  num_coordinates_16 = _15 + 1;
  # DEBUG num_coordinates => num_coordinates_16
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_14(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 4, loop depth 0
;;    pred:       2
  _72 = (sizetype) num_ints_14(D);
  _70 = _72 * 4;
  _154 = (sizetype) num_floats_13(D);
  _10 = _154 * 4;
  _117 = (ssizetype) _10;
  _94 = _117 + 4;
  _52 = (sizetype) _94;
  _151 = &coordinates + _52;
  __builtin_memcpy (_151, ints_22(D), _70);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       16
;;                17
;;                18
;;                19
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       3
;;                5
  # DEBUG j => 0
  if (num_tilings_32(D) > 0)
    goto <bb 20>;
  else
    goto <bb 37>;
;;    succ:       20
;;                37

;;   basic block 7, loop depth 0
;;    pred:       3
  pretmp_147 = (float) num_tilings_32(D);
  _82 = (unsigned int) num_floats_13(D);
  _73 = _82 + 4294967295;
  _61 = (sizetype) _73;
  _188 = _61 + 1;
  _189 = _188 * 4;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       9
;;                7
  # ivtmp.311_79 = PHI <ivtmp.311_80(9), 0(7)>
  # DEBUG i => NULL
  _23 = MEM[base: floats_29(D), index: ivtmp.311_79, offset: 0B];
  _24 = _23 * pretmp_147;
  _25 = __builtin_floorf (_24);
  _26 = (int) _25;
  MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B] = _26;
  # DEBUG i => D#19
  # DEBUG i => D#19
  ivtmp.311_80 = ivtmp.311_79 + 4;
  if (ivtmp.311_80 != _189)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  goto <bb 8>;
;;    succ:       8

;;   basic block 10, loop depth 0
;;    pred:       8
  _139 = (sizetype) num_floats_13(D);
  _140 = _139 * 4;
  __builtin_memset (&base, 0, _140);
  bnd.268_35 = _82 >> 2;
  ratio_mult_vf.269_34 = bnd.268_35 << 2;
  _123 = _82 <= 3;
  _122 = ratio_mult_vf.269_34 == 0;
  _121 = _122 | _123;
  if (_121 != 0)
    goto <bb 18>;
  else
    goto <bb 11>;
;;    succ:       11
;;                18

;;   basic block 11, loop depth 0
;;    pred:       10
  vect_cst_.277_95 = {num_tilings_32(D), num_tilings_32(D), num_tilings_32(D), num_tilings_32(D)};
  # DEBUG i => NULL
  vect_var_.275_1 = MEM[(int *)wrap_widths_39(D)];
  vect_var_.276_160 = vect_var_.275_1 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings] = vect_var_.276_160;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 1)
    goto <bb 12>;
  else
    goto <bb 17>;
;;    succ:       12
;;                17

;;   basic block 12, loop depth 0
;;    pred:       11
  # DEBUG i => NULL
  vect_var_.275_129 = MEM[(int *)wrap_widths_39(D) + 16B];
  vect_var_.276_128 = vect_var_.275_129 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B] = vect_var_.276_128;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 2)
    goto <bb 13>;
  else
    goto <bb 17>;
;;    succ:       13
;;                17

;;   basic block 13, loop depth 0
;;    pred:       12
  # DEBUG i => NULL
  vect_var_.275_168 = MEM[(int *)wrap_widths_39(D) + 32B];
  vect_var_.276_169 = vect_var_.275_168 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B] = vect_var_.276_169;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 3)
    goto <bb 14>;
  else
    goto <bb 17>;
;;    succ:       14
;;                17

;;   basic block 14, loop depth 0
;;    pred:       13
  # DEBUG i => NULL
  vect_var_.275_178 = MEM[(int *)wrap_widths_39(D) + 48B];
  vect_var_.276_179 = vect_var_.275_178 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B] = vect_var_.276_179;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 4)
    goto <bb 15>;
  else
    goto <bb 17>;
;;    succ:       15
;;                17

;;   basic block 15, loop depth 0
;;    pred:       14
  # DEBUG i => NULL
  vect_var_.275_99 = MEM[(int *)wrap_widths_39(D) + 64B];
  vect_var_.276_89 = vect_var_.275_99 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B] = vect_var_.276_89;
  # DEBUG i => D#17
  # DEBUG i => D#17
  goto <bb 17>;
;;    succ:       17

;;   basic block 16, loop depth 0
;;    pred:       19
  # DEBUG i => i_6
  _113 = (long unsigned int) i_6;
  _144 = _113 * 4;
  _149 = wrap_widths_39(D) + _144;
  _136 = *_149;
  _135 = _136 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_6] = _135;
  # DEBUG D#20 => i_6 + 1
  # DEBUG i => D#20
  # DEBUG i => D#20
  goto <bb 5>;
;;    succ:       5

;;   basic block 17, loop depth 0
;;    pred:       15
;;                11
;;                12
;;                13
;;                14
  i_104 = (int) ratio_mult_vf.269_34;
  if (ratio_mult_vf.269_34 == _82)
    goto <bb 5>;
  else
    goto <bb 18>;
;;    succ:       18
;;                5

;;   basic block 18, loop depth 0
;;    pred:       17
;;                10
  # i_120 = PHI <i_104(17), 0(10)>
  # DEBUG i => i_120
  _119 = (long unsigned int) i_120;
  _98 = _119 * 4;
  _107 = wrap_widths_39(D) + _98;
  _157 = *_107;
  _27 = _157 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_120] = _27;
  i_40 = i_120 + 1;
  # DEBUG i => i_40
  # DEBUG i => i_40
  if (num_floats_13(D) > i_40)
    goto <bb 19>;
  else
    goto <bb 5>;
;;    succ:       19
;;                5

;;   basic block 19, loop depth 0
;;    pred:       18
  # DEBUG i => i_40
  _44 = (long unsigned int) i_40;
  _155 = _44 * 4;
  _33 = wrap_widths_39(D) + _155;
  _11 = *_33;
  _9 = _11 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_40] = _9;
  i_6 = i_120 + 2;
  # DEBUG i => i_6
  # DEBUG i => i_6
  if (i_6 < num_floats_13(D))
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16
;;                5

;;   basic block 20, loop depth 0
;;    pred:       6
  ivtmp.305_60 = (unsigned long) the_tiles_81(D);
  _4 = (unsigned int) num_floats_13(D);
  _5 = _4 + 4294967295;
  _185 = (sizetype) _5;
  _186 = _185 + 1;
  _187 = _186 * 4;
  goto <bb 35>;
;;    succ:       35

;;   basic block 21, loop depth 2
;;    pred:       28
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       21
;;                36
  # ivtmp.291_105 = PHI <ivtmp.291_18(21), 0(36)>
  # ivtmp.295_2 = PHI <ivtmp.295_3(21), 1(36)>
  # DEBUG i => NULL
  _45 = MEM[symbol: qstate, index: ivtmp.291_105, offset: 0B];
  _46 = MEM[symbol: base, index: ivtmp.291_105, offset: 0B];
  if (_45 >= _46)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 2
;;    pred:       22
  _47 = _45 - _46;
  _48 = _47 % num_tilings_32(D);
  _49 = _45 - _48;
  goto <bb 25>;
;;    succ:       25

;;   basic block 24, loop depth 2
;;    pred:       22
  _51 = _45 + 1;
  _53 = _46 - _45;
  _54 = _53 + -1;
  _55 = _54 % num_tilings_32(D);
  _56 = _51 + _55;
  _57 = _56 - num_tilings_32(D);
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       23
;;                24
  # cstore_58 = PHI <_49(23), _57(24)>
  MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = cstore_58;
  _62 = MEM[base: wrap_widths_39(D), index: ivtmp.291_105, offset: 0B];
  if (_62 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26
;;                27

;;   basic block 26, loop depth 2
;;    pred:       25
  _64 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B];
  _65 = cstore_58 % _64;
  MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = _65;
;;    succ:       27

;;   basic block 27, loop depth 2
;;    pred:       25
;;                26
  # prephitmp_141 = PHI <cstore_58(25), _65(26)>
  if (prephitmp_141 < 0)
    goto <bb 29>;
  else
    goto <bb 28>;
;;    succ:       29
;;                28

;;   basic block 28, loop depth 2
;;   Invalid sum of incoming frequencies 1119, should be 3333
;;    pred:       31
;;                27
  _74 = (int) ivtmp.295_2;
  _75 = _46 + _74;
  MEM[symbol: base, index: ivtmp.291_105, offset: 0B] = _75;
  # DEBUG i => D#18
  # DEBUG i => D#18
  ivtmp.291_18 = ivtmp.291_105 + 4;
  ivtmp.295_3 = ivtmp.295_2 + 2;
  if (ivtmp.291_18 != _187)
    goto <bb 21>;
  else
    goto <bb 33>;
;;    succ:       21
;;                33

;;   basic block 29, loop depth 2
;;   Invalid sum of incoming frequencies 3033, should be 819
;;    pred:       27
  pretmp_142 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B];
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       32
;;                29
  # _118 = PHI <_71(32), prephitmp_141(29)>
  _71 = _118 + pretmp_142;
  if (_71 < 0)
    goto <bb 32>;
  else
    goto <bb 31>;
;;    succ:       32
;;                31

;;   basic block 31, loop depth 2
;;    pred:       30
  # coordinates_I_lsm.266_152 = PHI <_71(30)>
  MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = coordinates_I_lsm.266_152;
  goto <bb 28>;
;;    succ:       28

;;   basic block 32, loop depth 3
;;    pred:       30
  goto <bb 30>;
;;    succ:       30

;;   basic block 33, loop depth 1
;;    pred:       28
;;                35
  # num_floats_97 = PHI <num_floats_13(D)(28), 0(35)>
  coordinates[num_floats_97] = j_110;
  _85 = hash (&coordinates, num_coordinates_16, ctable_83(D));
  _77 = (void *) ivtmp.305_102;
  MEM[base: _77, offset: 0B] = _85;
  j_88 = j_110 + 1;
  # DEBUG j => j_88
  # DEBUG j => j_88
  ivtmp.305_59 = ivtmp.305_102 + 4;
  if (j_88 != num_tilings_32(D))
    goto <bb 34>;
  else
    goto <bb 37>;
;;    succ:       34
;;                37

;;   basic block 34, loop depth 1
;;    pred:       33
;;    succ:       35

;;   basic block 35, loop depth 1
;;    pred:       34
;;                20
  # j_110 = PHI <j_88(34), 0(20)>
  # ivtmp.305_102 = PHI <ivtmp.305_59(34), ivtmp.305_60(20)>
  # DEBUG j => j_110
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 36>;
  else
    goto <bb 33>;
;;    succ:       36
;;                33

;;   basic block 36, loop depth 1
;;    pred:       35
  goto <bb 22>;
;;    succ:       22

;;   basic block 37, loop depth 0
;;    pred:       6
;;                33
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  wrap_widths_times_num_tilings ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (vect_var_.275_1 - 1 )
Partition 2 (ivtmp.295_2 - 2 )
Partition 3 (ivtmp.295_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 13 (num_floats_13(D) - 13 )
Partition 14 (num_ints_14(D) - 14 )
Partition 15 (_15 - 15 )
Partition 16 (num_coordinates_16 - 16 )
Partition 18 (ivtmp.291_18 - 18 )
Partition 22 (ints_22(D) - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 29 (floats_29(D) - 29 )
Partition 32 (num_tilings_32(D) - 32 )
Partition 33 (_33 - 33 )
Partition 34 (ratio_mult_vf.269_34 - 34 )
Partition 35 (bnd.268_35 - 35 )
Partition 39 (wrap_widths_39(D) - 39 )
Partition 40 (i_40 - 40 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (cstore_58 - 58 )
Partition 59 (ivtmp.305_59 - 59 )
Partition 60 (ivtmp.305_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 77 (_77 - 77 )
Partition 79 (ivtmp.311_79 - 79 )
Partition 80 (ivtmp.311_80 - 80 )
Partition 81 (the_tiles_81(D) - 81 )
Partition 82 (_82 - 82 )
Partition 83 (ctable_83(D) - 83 )
Partition 85 (_85 - 85 )
Partition 88 (j_88 - 88 )
Partition 89 (vect_var_.276_89 - 89 )
Partition 94 (_94 - 94 )
Partition 95 (vect_cst_.277_95 - 95 )
Partition 97 (num_floats_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (vect_var_.275_99 - 99 )
Partition 102 (ivtmp.305_102 - 102 )
Partition 104 (i_104 - 104 )
Partition 105 (ivtmp.291_105 - 105 )
Partition 107 (_107 - 107 )
Partition 110 (j_110 - 110 )
Partition 113 (_113 - 113 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (i_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 128 (vect_var_.276_128 - 128 )
Partition 129 (vect_var_.275_129 - 129 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (prephitmp_141 - 141 )
Partition 142 (pretmp_142 - 142 )
Partition 144 (_144 - 144 )
Partition 147 (pretmp_147 - 147 )
Partition 149 (_149 - 149 )
Partition 151 (_151 - 151 )
Partition 152 (coordinates_I_lsm.266_152 - 152 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 157 (_157 - 157 )
Partition 160 (vect_var_.276_160 - 160 )
Partition 168 (vect_var_.275_168 - 168 )
Partition 169 (vect_var_.276_169 - 169 )
Partition 178 (vect_var_.275_178 - 178 )
Partition 179 (vect_var_.276_179 - 179 )
Partition 185 (_185 - 185 )
Partition 186 (_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (_188 - 188 )
Partition 189 (_189 - 189 )


Partition map 

Partition 0 (ivtmp.295_2 - 2 )
Partition 1 (ivtmp.295_3 - 3 )
Partition 2 (num_floats_13(D) - 13 )
Partition 3 (num_ints_14(D) - 14 )
Partition 4 (ivtmp.291_18 - 18 )
Partition 5 (ints_22(D) - 22 )
Partition 6 (floats_29(D) - 29 )
Partition 7 (num_tilings_32(D) - 32 )
Partition 8 (wrap_widths_39(D) - 39 )
Partition 9 (_49 - 49 )
Partition 10 (_57 - 57 )
Partition 11 (cstore_58 - 58 )
Partition 12 (ivtmp.305_59 - 59 )
Partition 13 (ivtmp.305_60 - 60 )
Partition 14 (_65 - 65 )
Partition 15 (_71 - 71 )
Partition 16 (ivtmp.311_79 - 79 )
Partition 17 (ivtmp.311_80 - 80 )
Partition 18 (the_tiles_81(D) - 81 )
Partition 19 (ctable_83(D) - 83 )
Partition 20 (j_88 - 88 )
Partition 21 (num_floats_97 - 97 )
Partition 22 (ivtmp.305_102 - 102 )
Partition 23 (i_104 - 104 )
Partition 24 (ivtmp.291_105 - 105 )
Partition 25 (j_110 - 110 )
Partition 26 (_118 - 118 )
Partition 27 (i_120 - 120 )
Partition 28 (prephitmp_141 - 141 )


Live on entry to BB2 : num_floats_13(D)  num_ints_14(D)  ints_22(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB3 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB4 : num_floats_13(D)  num_ints_14(D)  ints_22(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB5 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB6 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB7 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB8 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB9 : num_floats_13(D)  floats_29(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.311_80  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB10 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB11 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB12 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB13 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB14 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB15 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB16 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB17 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB18 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB19 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  i_120  

Live on entry to BB20 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  the_tiles_81(D)  ctable_83(D)  

Live on entry to BB21 : ivtmp.295_3  num_floats_13(D)  ivtmp.291_18  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  j_110  

Live on entry to BB22 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  j_110  

Live on entry to BB23 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB24 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB25 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB26 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  cstore_58  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB27 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB28 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB29 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  prephitmp_141  

Live on entry to BB30 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB31 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB32 : ivtmp.295_2  num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  _71  ctable_83(D)  ivtmp.305_102  ivtmp.291_105  j_110  

Live on entry to BB33 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  j_110  

Live on entry to BB34 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ivtmp.305_59  ctable_83(D)  j_88  

Live on entry to BB35 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  

Live on entry to BB36 : num_floats_13(D)  num_tilings_32(D)  wrap_widths_39(D)  ctable_83(D)  ivtmp.305_102  j_110  

Live on entry to BB37 : 

Conflict graph:
2: 21
21: 2

After sorting:
Sorted Coalesce list:
(8281) _71 <-> _118
(3334) cstore_58 <-> prephitmp_141
(3174) ivtmp.295_2 <-> ivtmp.295_3
(3174) ivtmp.291_18 <-> ivtmp.291_105
(1667) _49 <-> cstore_58
(1667) _57 <-> cstore_58
(1667) _65 <-> prephitmp_141
(819) _118 <-> prephitmp_141
(318) num_floats_13(D) <-> num_floats_97
(314) ivtmp.311_79 <-> ivtmp.311_80
(152) ivtmp.305_59 <-> ivtmp.305_102
(152) j_88 <-> j_110
(15) ivtmp.305_60 <-> ivtmp.305_102
(14) i_104 <-> i_120

Partition map 

Partition 0 (ivtmp.295_2 - 2 )
Partition 1 (ivtmp.295_3 - 3 )
Partition 2 (num_floats_13(D) - 13 )
Partition 3 (num_ints_14(D) - 14 )
Partition 4 (ivtmp.291_18 - 18 )
Partition 5 (ints_22(D) - 22 )
Partition 6 (floats_29(D) - 29 )
Partition 7 (num_tilings_32(D) - 32 )
Partition 8 (wrap_widths_39(D) - 39 )
Partition 9 (_49 - 49 )
Partition 10 (_57 - 57 )
Partition 11 (cstore_58 - 58 )
Partition 12 (ivtmp.305_59 - 59 )
Partition 13 (ivtmp.305_60 - 60 )
Partition 14 (_65 - 65 )
Partition 15 (_71 - 71 )
Partition 16 (ivtmp.311_79 - 79 )
Partition 17 (ivtmp.311_80 - 80 )
Partition 18 (the_tiles_81(D) - 81 )
Partition 19 (ctable_83(D) - 83 )
Partition 20 (j_88 - 88 )
Partition 21 (num_floats_97 - 97 )
Partition 22 (ivtmp.305_102 - 102 )
Partition 23 (i_104 - 104 )
Partition 24 (ivtmp.291_105 - 105 )
Partition 25 (j_110 - 110 )
Partition 26 (_118 - 118 )
Partition 27 (i_120 - 120 )
Partition 28 (prephitmp_141 - 141 )

Coalesce list: (71)_71 & (118)_118 [map: 15, 26] : Success -> 15
Coalesce list: (58)cstore_58 & (141)prephitmp_141 [map: 11, 28] : Success -> 11
Coalesce list: (2)ivtmp.295_2 & (3)ivtmp.295_3 [map: 0, 1] : Success -> 0
Coalesce list: (18)ivtmp.291_18 & (105)ivtmp.291_105 [map: 4, 24] : Success -> 4
Coalesce list: (49)_49 & (58)cstore_58 [map: 9, 11] : Success -> 11
Coalesce list: (57)_57 & (58)cstore_58 [map: 10, 11] : Success -> 11
Coalesce list: (65)_65 & (141)cstore_58 [map: 14, 11] : Success -> 11
Coalesce list: (118)_71 & (141)cstore_58 [map: 15, 11] : Success -> 11
Coalesce list: (13)num_floats_13(D) & (97)num_floats_97 [map: 2, 21] : Fail due to conflict
Coalesce list: (79)ivtmp.311_79 & (80)ivtmp.311_80 [map: 16, 17] : Success -> 16
Coalesce list: (59)ivtmp.305_59 & (102)ivtmp.305_102 [map: 12, 22] : Success -> 12
Coalesce list: (88)j_88 & (110)j_110 [map: 20, 25] : Success -> 20
Coalesce list: (60)ivtmp.305_60 & (102)ivtmp.305_59 [map: 13, 12] : Success -> 12
Coalesce list: (104)i_104 & (120)i_120 [map: 23, 27] : Success -> 23
After Coalescing:

Partition map 

Partition 0 (vect_var_.275_1 - 1 )
Partition 1 (ivtmp.295_2 - 2 3 )
Partition 2 (_4 - 4 )
Partition 3 (_5 - 5 )
Partition 4 (i_6 - 6 )
Partition 5 (_9 - 9 )
Partition 6 (_10 - 10 )
Partition 7 (_11 - 11 )
Partition 8 (num_floats_13(D) - 13 )
Partition 9 (num_ints_14(D) - 14 )
Partition 10 (_15 - 15 )
Partition 11 (num_coordinates_16 - 16 )
Partition 12 (ivtmp.291_18 - 18 105 )
Partition 13 (ints_22(D) - 22 )
Partition 14 (_23 - 23 )
Partition 15 (_24 - 24 )
Partition 16 (_25 - 25 )
Partition 17 (_26 - 26 )
Partition 18 (_27 - 27 )
Partition 19 (floats_29(D) - 29 )
Partition 20 (num_tilings_32(D) - 32 )
Partition 21 (_33 - 33 )
Partition 22 (ratio_mult_vf.269_34 - 34 )
Partition 23 (bnd.268_35 - 35 )
Partition 24 (wrap_widths_39(D) - 39 )
Partition 25 (i_40 - 40 )
Partition 26 (_44 - 44 )
Partition 27 (_45 - 45 )
Partition 28 (_46 - 46 )
Partition 29 (_47 - 47 )
Partition 30 (_48 - 48 )
Partition 31 (_51 - 51 )
Partition 32 (_52 - 52 )
Partition 33 (_53 - 53 )
Partition 34 (_54 - 54 )
Partition 35 (_55 - 55 )
Partition 36 (_56 - 56 )
Partition 37 (cstore_58 - 49 57 58 65 71 118 141 )
Partition 38 (ivtmp.305_59 - 59 60 102 )
Partition 39 (_61 - 61 )
Partition 40 (_62 - 62 )
Partition 41 (_64 - 64 )
Partition 42 (_70 - 70 )
Partition 43 (_72 - 72 )
Partition 44 (_73 - 73 )
Partition 45 (_74 - 74 )
Partition 46 (_75 - 75 )
Partition 47 (_77 - 77 )
Partition 48 (ivtmp.311_79 - 79 80 )
Partition 49 (the_tiles_81(D) - 81 )
Partition 50 (_82 - 82 )
Partition 51 (ctable_83(D) - 83 )
Partition 52 (_85 - 85 )
Partition 53 (j_88 - 88 110 )
Partition 54 (vect_var_.276_89 - 89 )
Partition 55 (_94 - 94 )
Partition 56 (vect_cst_.277_95 - 95 )
Partition 57 (num_floats_97 - 97 )
Partition 58 (_98 - 98 )
Partition 59 (vect_var_.275_99 - 99 )
Partition 60 (i_104 - 104 120 )
Partition 61 (_107 - 107 )
Partition 62 (_113 - 113 )
Partition 63 (_117 - 117 )
Partition 64 (_119 - 119 )
Partition 65 (_121 - 121 )
Partition 66 (_122 - 122 )
Partition 67 (_123 - 123 )
Partition 68 (vect_var_.276_128 - 128 )
Partition 69 (vect_var_.275_129 - 129 )
Partition 70 (_135 - 135 )
Partition 71 (_136 - 136 )
Partition 72 (_139 - 139 )
Partition 73 (_140 - 140 )
Partition 74 (pretmp_142 - 142 )
Partition 75 (_144 - 144 )
Partition 76 (pretmp_147 - 147 )
Partition 77 (_149 - 149 )
Partition 78 (_151 - 151 )
Partition 79 (coordinates_I_lsm.266_152 - 152 )
Partition 80 (_154 - 154 )
Partition 81 (_155 - 155 )
Partition 82 (_157 - 157 )
Partition 83 (vect_var_.276_160 - 160 )
Partition 84 (vect_var_.275_168 - 168 )
Partition 85 (vect_var_.276_169 - 169 )
Partition 86 (vect_var_.275_178 - 178 )
Partition 87 (vect_var_.276_179 - 179 )
Partition 88 (_185 - 185 )
Partition 89 (_186 - 186 )
Partition 90 (_187 - 187 )
Partition 91 (_188 - 188 )
Partition 92 (_189 - 189 )


Replacing Expressions
vect_var_.275_1 replace with --> vect_var_.275_1 = MEM[(int *)wrap_widths_39(D)];

_4 replace with --> _4 = (unsigned int) num_floats_13(D);

_5 replace with --> _5 = _4 + 4294967295;

_9 replace with --> _9 = _11 * num_tilings_32(D);

_10 replace with --> _10 = _154 * 4;

_11 replace with --> _11 = *_33;

_15 replace with --> _15 = num_floats_13(D) + num_ints_14(D);

_23 replace with --> _23 = MEM[base: floats_29(D), index: ivtmp.311_79, offset: 0B];

_24 replace with --> _24 = _23 * pretmp_147;

_26 replace with --> _26 = (int) _25;

_27 replace with --> _27 = _157 * num_tilings_32(D);

_33 replace with --> _33 = wrap_widths_39(D) + _155;

_44 replace with --> _44 = (long unsigned int) i_40;

_47 replace with --> _47 = _45 - _46;

_48 replace with --> _48 = _47 % num_tilings_32(D);

_51 replace with --> _51 = _45 + 1;

_52 replace with --> _52 = (sizetype) _94;

_53 replace with --> _53 = _46 - _45;

_54 replace with --> _54 = _53 + -1;

_55 replace with --> _55 = _54 % num_tilings_32(D);

_56 replace with --> _56 = _51 + _55;

_61 replace with --> _61 = (sizetype) _73;

_62 replace with --> _62 = MEM[base: wrap_widths_39(D), index: ivtmp.291_105, offset: 0B];

_64 replace with --> _64 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B];

_70 replace with --> _70 = _72 * 4;

_72 replace with --> _72 = (sizetype) num_ints_14(D);

_73 replace with --> _73 = _82 + 4294967295;

_74 replace with --> _74 = (int) ivtmp.295_2;

_75 replace with --> _75 = _46 + _74;

_77 replace with --> _77 = (void *) ivtmp.305_102;

vect_var_.276_89 replace with --> vect_var_.276_89 = vect_var_.275_99 * vect_cst_.277_95;

_94 replace with --> _94 = _117 + 4;

_98 replace with --> _98 = _119 * 4;

vect_var_.275_99 replace with --> vect_var_.275_99 = MEM[(int *)wrap_widths_39(D) + 64B];

_107 replace with --> _107 = wrap_widths_39(D) + _98;

_113 replace with --> _113 = (long unsigned int) i_6;

_117 replace with --> _117 = (ssizetype) _10;

_119 replace with --> _119 = (long unsigned int) i_120;

_121 replace with --> _121 = _122 | _123;

_122 replace with --> _122 = ratio_mult_vf.269_34 == 0;

_123 replace with --> _123 = _82 <= 3;

vect_var_.276_128 replace with --> vect_var_.276_128 = vect_var_.275_129 * vect_cst_.277_95;

vect_var_.275_129 replace with --> vect_var_.275_129 = MEM[(int *)wrap_widths_39(D) + 16B];

_135 replace with --> _135 = _136 * num_tilings_32(D);

_136 replace with --> _136 = *_149;

_139 replace with --> _139 = (sizetype) num_floats_13(D);

_140 replace with --> _140 = _139 * 4;

_144 replace with --> _144 = _113 * 4;

_149 replace with --> _149 = wrap_widths_39(D) + _144;

_151 replace with --> _151 = &coordinates + _52;

_154 replace with --> _154 = (sizetype) num_floats_13(D);

_155 replace with --> _155 = _44 * 4;

_157 replace with --> _157 = *_107;

vect_var_.276_160 replace with --> vect_var_.276_160 = vect_var_.275_1 * vect_cst_.277_95;

vect_var_.275_168 replace with --> vect_var_.275_168 = MEM[(int *)wrap_widths_39(D) + 32B];

vect_var_.276_169 replace with --> vect_var_.276_169 = vect_var_.275_168 * vect_cst_.277_95;

vect_var_.275_178 replace with --> vect_var_.275_178 = MEM[(int *)wrap_widths_39(D) + 48B];

vect_var_.276_179 replace with --> vect_var_.276_179 = vect_var_.275_178 * vect_cst_.277_95;

_185 replace with --> _185 = (sizetype) _5;

_186 replace with --> _186 = _185 + 1;

_188 replace with --> _188 = _61 + 1;


void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int) (int * the_tiles, int num_tilings, struct collision_table * ctable, float * floats, int num_floats, int * wrap_widths, int * ints, int num_ints)
{
  sizetype ivtmp.311;
  unsigned long ivtmp.305;
  unsigned int ivtmp.295;
  sizetype ivtmp.291;
  vector(4) int vect_cst_.277;
  vector(4) int vect_var_.276;
  vector(4) int vect_var_.275;
  unsigned int ratio_mult_vf.269;
  unsigned int bnd.268;
  int coordinates_I_lsm.266;
  int num_coordinates;
  int coordinates[41];
  int wrap_widths_times_num_tilings[20];
  int base[20];
  int qstate[20];
  int j;
  int i;
  unsigned int _4;
  unsigned int _5;
  int _9;
  sizetype _10;
  int _11;
  int _15;
  float _23;
  float _24;
  float _25;
  int _26;
  int _27;
  int * _33;
  long unsigned int _44;
  int _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _51;
  sizetype _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int cstore_58;
  sizetype _61;
  int _62;
  int _64;
  int _65;
  sizetype _70;
  int _71;
  sizetype _72;
  unsigned int _73;
  int _74;
  int _75;
  void * _77;
  unsigned int _82;
  int _85;
  ssizetype _94;
  long unsigned int _98;
  int * _107;
  long unsigned int _113;
  ssizetype _117;
  int _118;
  long unsigned int _119;
  bool _121;
  bool _122;
  bool _123;
  int _135;
  int _136;
  sizetype _139;
  sizetype _140;
  int prephitmp_141;
  int pretmp_142;
  long unsigned int _144;
  float pretmp_147;
  int * _149;
  int[41] * _151;
  sizetype _154;
  long unsigned int _155;
  int _157;
  sizetype _185;
  sizetype _186;
  sizetype _187;
  sizetype _188;
  sizetype _189;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _15 = num_floats_13(D) + num_ints_14(D);
  num_coordinates_16 = _15 + 1;
  # DEBUG num_coordinates => num_coordinates_16
  # DEBUG i => 0
  # DEBUG i => 0
  if (num_ints_14(D) > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 4, loop depth 0
;;    pred:       2
  _72 = (sizetype) num_ints_14(D);
  _70 = _72 * 4;
  _154 = (sizetype) num_floats_13(D);
  _10 = _154 * 4;
  _117 = (ssizetype) _10;
  _94 = _117 + 4;
  _52 = (sizetype) _94;
  _151 = &coordinates + _52;
  __builtin_memcpy (_151, ints_22(D), _70);
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       16
;;                17
;;                18
;;                19
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       3
;;                5
  # DEBUG j => 0
  if (num_tilings_32(D) > 0)
    goto <bb 20>;
  else
    goto <bb 37>;
;;    succ:       20
;;                37

;;   basic block 7, loop depth 0
;;    pred:       3
  pretmp_147 = (float) num_tilings_32(D);
  _82 = (unsigned int) num_floats_13(D);
  _73 = _82 + 4294967295;
  _61 = (sizetype) _73;
  _188 = _61 + 1;
  _189 = _188 * 4;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       9
;;                7
  # ivtmp.311_79 = PHI <ivtmp.311_80(9), 0(7)>
  # DEBUG i => NULL
  _23 = MEM[base: floats_29(D), index: ivtmp.311_79, offset: 0B];
  _24 = _23 * pretmp_147;
  _25 = __builtin_floorf (_24);
  _26 = (int) _25;
  MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B] = _26;
  # DEBUG i => D#19
  # DEBUG i => D#19
  ivtmp.311_80 = ivtmp.311_79 + 4;
  if (ivtmp.311_80 != _189)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       8
  goto <bb 8>;
;;    succ:       8

;;   basic block 10, loop depth 0
;;    pred:       8
  _139 = (sizetype) num_floats_13(D);
  _140 = _139 * 4;
  __builtin_memset (&base, 0, _140);
  bnd.268_35 = _82 >> 2;
  ratio_mult_vf.269_34 = bnd.268_35 << 2;
  _123 = _82 <= 3;
  _122 = ratio_mult_vf.269_34 == 0;
  _121 = _122 | _123;
  if (_121 != 0)
    goto <bb 18>;
  else
    goto <bb 11>;
;;    succ:       11
;;                18

;;   basic block 11, loop depth 0
;;    pred:       10
  vect_cst_.277_95 = {num_tilings_32(D), num_tilings_32(D), num_tilings_32(D), num_tilings_32(D)};
  # DEBUG i => NULL
  vect_var_.275_1 = MEM[(int *)wrap_widths_39(D)];
  vect_var_.276_160 = vect_var_.275_1 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings] = vect_var_.276_160;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 1)
    goto <bb 12>;
  else
    goto <bb 17>;
;;    succ:       12
;;                17

;;   basic block 12, loop depth 0
;;    pred:       11
  # DEBUG i => NULL
  vect_var_.275_129 = MEM[(int *)wrap_widths_39(D) + 16B];
  vect_var_.276_128 = vect_var_.275_129 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B] = vect_var_.276_128;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 2)
    goto <bb 13>;
  else
    goto <bb 17>;
;;    succ:       13
;;                17

;;   basic block 13, loop depth 0
;;    pred:       12
  # DEBUG i => NULL
  vect_var_.275_168 = MEM[(int *)wrap_widths_39(D) + 32B];
  vect_var_.276_169 = vect_var_.275_168 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B] = vect_var_.276_169;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 3)
    goto <bb 14>;
  else
    goto <bb 17>;
;;    succ:       14
;;                17

;;   basic block 14, loop depth 0
;;    pred:       13
  # DEBUG i => NULL
  vect_var_.275_178 = MEM[(int *)wrap_widths_39(D) + 48B];
  vect_var_.276_179 = vect_var_.275_178 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B] = vect_var_.276_179;
  # DEBUG i => D#17
  # DEBUG i => D#17
  if (bnd.268_35 > 4)
    goto <bb 15>;
  else
    goto <bb 17>;
;;    succ:       15
;;                17

;;   basic block 15, loop depth 0
;;    pred:       14
  # DEBUG i => NULL
  vect_var_.275_99 = MEM[(int *)wrap_widths_39(D) + 64B];
  vect_var_.276_89 = vect_var_.275_99 * vect_cst_.277_95;
  MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B] = vect_var_.276_89;
  # DEBUG i => D#17
  # DEBUG i => D#17
  goto <bb 17>;
;;    succ:       17

;;   basic block 16, loop depth 0
;;    pred:       19
  # DEBUG i => i_6
  _113 = (long unsigned int) i_6;
  _144 = _113 * 4;
  _149 = wrap_widths_39(D) + _144;
  _136 = *_149;
  _135 = _136 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_6] = _135;
  # DEBUG D#20 => i_6 + 1
  # DEBUG i => D#20
  # DEBUG i => D#20
  goto <bb 5>;
;;    succ:       5

;;   basic block 17, loop depth 0
;;    pred:       15
;;                11
;;                12
;;                13
;;                14
  i_104 = (int) ratio_mult_vf.269_34;
  if (ratio_mult_vf.269_34 == _82)
    goto <bb 5>;
  else
    goto <bb 18>;
;;    succ:       18
;;                5

;;   basic block 18, loop depth 0
;;    pred:       17
;;                10
  # i_120 = PHI <i_104(17), 0(10)>
  # DEBUG i => i_120
  _119 = (long unsigned int) i_120;
  _98 = _119 * 4;
  _107 = wrap_widths_39(D) + _98;
  _157 = *_107;
  _27 = _157 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_120] = _27;
  i_40 = i_120 + 1;
  # DEBUG i => i_40
  # DEBUG i => i_40
  if (num_floats_13(D) > i_40)
    goto <bb 19>;
  else
    goto <bb 5>;
;;    succ:       19
;;                5

;;   basic block 19, loop depth 0
;;    pred:       18
  # DEBUG i => i_40
  _44 = (long unsigned int) i_40;
  _155 = _44 * 4;
  _33 = wrap_widths_39(D) + _155;
  _11 = *_33;
  _9 = _11 * num_tilings_32(D);
  wrap_widths_times_num_tilings[i_40] = _9;
  i_6 = i_120 + 2;
  # DEBUG i => i_6
  # DEBUG i => i_6
  if (i_6 < num_floats_13(D))
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16
;;                5

;;   basic block 20, loop depth 0
;;    pred:       6
  ivtmp.305_60 = (unsigned long) the_tiles_81(D);
  _4 = (unsigned int) num_floats_13(D);
  _5 = _4 + 4294967295;
  _185 = (sizetype) _5;
  _186 = _185 + 1;
  _187 = _186 * 4;
  goto <bb 35>;
;;    succ:       35

;;   basic block 21, loop depth 2
;;    pred:       28
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       21
;;                36
  # ivtmp.291_105 = PHI <ivtmp.291_18(21), 0(36)>
  # ivtmp.295_2 = PHI <ivtmp.295_3(21), 1(36)>
  # DEBUG i => NULL
  _45 = MEM[symbol: qstate, index: ivtmp.291_105, offset: 0B];
  _46 = MEM[symbol: base, index: ivtmp.291_105, offset: 0B];
  if (_45 >= _46)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23
;;                24

;;   basic block 23, loop depth 2
;;    pred:       22
  _47 = _45 - _46;
  _48 = _47 % num_tilings_32(D);
  _49 = _45 - _48;
  goto <bb 25>;
;;    succ:       25

;;   basic block 24, loop depth 2
;;    pred:       22
  _51 = _45 + 1;
  _53 = _46 - _45;
  _54 = _53 + -1;
  _55 = _54 % num_tilings_32(D);
  _56 = _51 + _55;
  _57 = _56 - num_tilings_32(D);
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       23
;;                24
  # cstore_58 = PHI <_49(23), _57(24)>
  MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = cstore_58;
  _62 = MEM[base: wrap_widths_39(D), index: ivtmp.291_105, offset: 0B];
  if (_62 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26
;;                27

;;   basic block 26, loop depth 2
;;    pred:       25
  _64 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B];
  _65 = cstore_58 % _64;
  MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = _65;
;;    succ:       27

;;   basic block 27, loop depth 2
;;    pred:       25
;;                26
  # prephitmp_141 = PHI <cstore_58(25), _65(26)>
  if (prephitmp_141 < 0)
    goto <bb 29>;
  else
    goto <bb 28>;
;;    succ:       29
;;                28

;;   basic block 28, loop depth 2
;;   Invalid sum of incoming frequencies 1119, should be 3333
;;    pred:       31
;;                27
  _74 = (int) ivtmp.295_2;
  _75 = _46 + _74;
  MEM[symbol: base, index: ivtmp.291_105, offset: 0B] = _75;
  # DEBUG i => D#18
  # DEBUG i => D#18
  ivtmp.291_18 = ivtmp.291_105 + 4;
  ivtmp.295_3 = ivtmp.295_2 + 2;
  if (ivtmp.291_18 != _187)
    goto <bb 21>;
  else
    goto <bb 33>;
;;    succ:       21
;;                33

;;   basic block 29, loop depth 2
;;   Invalid sum of incoming frequencies 3033, should be 819
;;    pred:       27
  pretmp_142 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B];
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       32
;;                29
  # _118 = PHI <_71(32), prephitmp_141(29)>
  _71 = _118 + pretmp_142;
  if (_71 < 0)
    goto <bb 32>;
  else
    goto <bb 31>;
;;    succ:       32
;;                31

;;   basic block 31, loop depth 2
;;    pred:       30
  # coordinates_I_lsm.266_152 = PHI <_71(30)>
  MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = coordinates_I_lsm.266_152;
  goto <bb 28>;
;;    succ:       28

;;   basic block 32, loop depth 3
;;    pred:       30
  goto <bb 30>;
;;    succ:       30

;;   basic block 33, loop depth 1
;;    pred:       28
;;                35
  # num_floats_97 = PHI <num_floats_13(D)(28), 0(35)>
  coordinates[num_floats_97] = j_110;
  _85 = hash (&coordinates, num_coordinates_16, ctable_83(D));
  _77 = (void *) ivtmp.305_102;
  MEM[base: _77, offset: 0B] = _85;
  j_88 = j_110 + 1;
  # DEBUG j => j_88
  # DEBUG j => j_88
  ivtmp.305_59 = ivtmp.305_102 + 4;
  if (j_88 != num_tilings_32(D))
    goto <bb 34>;
  else
    goto <bb 37>;
;;    succ:       34
;;                37

;;   basic block 34, loop depth 1
;;    pred:       33
;;    succ:       35

;;   basic block 35, loop depth 1
;;    pred:       34
;;                20
  # j_110 = PHI <j_88(34), 0(20)>
  # ivtmp.305_102 = PHI <ivtmp.305_59(34), ivtmp.305_60(20)>
  # DEBUG j => j_110
  # DEBUG i => 0
  if (num_floats_13(D) > 0)
    goto <bb 36>;
  else
    goto <bb 33>;
;;    succ:       36
;;                33

;;   basic block 36, loop depth 1
;;    pred:       35
  goto <bb 22>;
;;    succ:       22

;;   basic block 37, loop depth 0
;;    pred:       6
;;                33
  qstate ={v} {CLOBBER};
  base ={v} {CLOBBER};
  wrap_widths_times_num_tilings ={v} {CLOBBER};
  coordinates ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}


Partition 3: size 164 align 16
	coordinates
Partition 2: size 80 align 16
	wrap_widths_times_num_tilings
Partition 1: size 80 align 16
	base
Partition 0: size 80 align 16
	qstate
Inserting a value copy on edge BB7->BB8 : PART.48 = 0
Inserting a value copy on edge BB10->BB18 : PART.60 = 0
Inserting a value copy on edge BB36->BB22 : PART.1 = 1
Inserting a value copy on edge BB36->BB22 : PART.12 = 0
Inserting a partition copy on edge BB30->BB31 :PART.79 = PART.37
Inserting a partition copy on edge BB28->BB33 :PART.57 = PART.8
Inserting a value copy on edge BB35->BB33 : PART.57 = 0
Inserting a value copy on edge BB20->BB35 : PART.53 = 0

;; Generating RTL for gimple basic block 2

;; num_coordinates_16 = _15 + 1;

(insn 23 22 24 (parallel [
            (set (reg:SI 154 [ D.26281 ])
                (plus:SI (reg/v:SI 150 [ num_floats ])
                    (reg/v:SI 153 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:498 -1
     (nil))

(insn 24 23 0 (parallel [
            (set (reg/v:SI 70 [ num_coordinates ])
                (plus:SI (reg:SI 154 [ D.26281 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:498 -1
     (nil))

;; # DEBUG num_coordinates => num_coordinates_16

(debug_insn 25 24 0 (var_location:SI num_coordinates (const_int 0 [0])) tiles.cpp:498 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 26 25 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:500 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 27 26 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_ints_14(D) > 0)

(insn 28 27 29 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 153 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:500 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:500 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil)))

;; Generating RTL for gimple basic block 3

;; # DEBUG i => 0

(debug_insn 31 30 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_13(D) > 0)

(insn 32 31 33 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 150 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:503 -1
     (nil))

(jump_insn 33 32 36 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:503 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

(note 36 33 34 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(jump_insn 34 36 35 39 (set (pc)
        (label_ref 0)) tiles.cpp:503 -1
     (nil))

(barrier 35 34 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 37 35 38 169 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memcpy (_151, ints_22(D), _70);

(insn 39 38 40 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))

(insn 40 39 41 (set (reg:DI 156 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 150 [ num_floats ]))) tiles.cpp:500 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:DI 157 [ D.26282 ])
                (ashift:DI (reg:DI 156 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))

(insn 42 41 43 (parallel [
            (set (reg:DI 158 [ D.26287 ])
                (plus:DI (reg:DI 157 [ D.26282 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))

(insn 43 42 44 (parallel [
            (set (reg:DI 159 [ D.26289 ])
                (plus:DI (reg:DI 155)
                    (reg:DI 158 [ D.26287 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))

(insn 44 43 45 (set (reg:DI 160 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 153 [ num_ints ]))) tiles.cpp:500 -1
     (nil))

(insn 45 44 46 (parallel [
            (set (reg:DI 161 [ D.26282 ])
                (ashift:DI (reg:DI 160 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))

(insn 46 45 47 (set (reg:DI 162)
        (reg:DI 159 [ D.26289 ])) -1
     (nil))

(insn 47 46 48 (set (reg:DI 163)
        (reg/v/f:DI 152 [ ints ])) -1
     (nil))

(insn 48 47 49 (set (reg:DI 164)
        (reg:DI 161 [ D.26282 ])) -1
     (nil))

(insn 49 48 50 (set (reg:DI 1 dx)
        (reg:DI 164)) -1
     (nil))

(insn 50 49 51 (set (reg:DI 4 si)
        (reg:DI 163)) -1
     (nil))

(insn 51 50 52 (set (reg:DI 5 di)
        (reg:DI 162)) -1
     (nil))

(call_insn 52 51 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))

(insn 53 52 54 (set (reg:DI 165)
        (reg:DI 0 ax)) -1
     (nil))

(insn 54 53 0 (set (reg:DI 166)
        (reg:DI 165)) -1
     (nil))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; 

(code_label 59 58 60 171 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => 0

(debug_insn 61 60 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; if (num_tilings_32(D) > 0)

(insn 62 61 63 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 147 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:510 -1
     (nil))

(jump_insn 63 62 66 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:510 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

(note 66 63 64 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(jump_insn 64 66 65 40 (set (pc)
        (label_ref 0)) tiles.cpp:510 -1
     (nil))

(barrier 65 64 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 67 65 68 170 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; _147 = (float) num_tilings_32(D);

(insn 69 68 0 (set (reg:SF 129 [ D.26283 ])
        (float:SF (reg/v:SI 147 [ num_tilings ]))) -1
     (nil))

;; _82 = (unsigned int) num_floats_13(D);

(insn 70 69 0 (set (reg:SI 104 [ D.26280 ])
        (reg/v:SI 150 [ num_floats ])) -1
     (nil))

;; _189 = _188 * 4;

(insn 71 70 72 (parallel [
            (set (reg:SI 167 [ D.26280 ])
                (plus:SI (reg:SI 104 [ D.26280 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 72 71 73 (set (reg:DI 168 [ D.26282 ])
        (zero_extend:DI (reg:SI 167 [ D.26280 ]))) -1
     (nil))

(insn 73 72 74 (parallel [
            (set (reg:DI 169 [ D.26282 ])
                (plus:DI (reg:DI 168 [ D.26282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 74 73 0 (parallel [
            (set (reg:DI 145 [ D.26282 ])
                (ashift:DI (reg:DI 169 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 8

;; # DEBUG i => NULL

(debug_insn 76 75 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _25 = __builtin_floorf (_24);

(insn 77 76 78 (set (reg:SF 170 [ D.26283 ])
        (mult:SF (reg:SF 129 [ D.26283 ])
            (mem:SF (plus:DI (reg/v/f:DI 149 [ floats ])
                    (reg:DI 103 [ ivtmp.311 ])) [0 MEM[base: floats_29(D), index: ivtmp.311_79, offset: 0B]+0 S4 A32]))) tiles.cpp:504 -1
     (nil))

(insn 78 77 79 (set (reg:SF 21 xmm0)
        (reg:SF 170 [ D.26283 ])) tiles.cpp:504 -1
     (nil))

(call_insn/u 79 78 80 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:504 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 80 79 0 (set (reg:SF 74 [ D.26283 ])
        (reg:SF 21 xmm0)) tiles.cpp:504 -1
     (nil))

;; MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B] = _26;

(insn 81 80 82 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:504 -1
     (nil))

(insn 82 81 83 (set (reg:SI 172)
        (fix:SI (reg:SF 74 [ D.26283 ]))) tiles.cpp:504 -1
     (nil))

(insn 83 82 0 (set (mem:SI (plus:DI (reg:DI 103 [ ivtmp.311 ])
                (reg:DI 171)) [0 MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B]+0 S4 A32])
        (reg:SI 172)) tiles.cpp:504 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 74 [ D.26283 ]))
        (nil)))

;; # DEBUG i => D#19

(debug_insn 84 83 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#19

(debug_insn 85 84 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.311_80 = ivtmp.311_79 + 4;

(insn 86 85 0 (parallel [
            (set (reg:DI 103 [ ivtmp.311 ])
                (plus:DI (reg:DI 103 [ ivtmp.311 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.311_80 != _189)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 103 [ ivtmp.311 ])
            (reg:DI 145 [ D.26282 ]))) tiles.cpp:503 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:503 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; 

(code_label 93 92 94 175 "" [0 uses])

(note 94 93 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_memset (&base, 0, _140);

(insn 95 94 96 (set (reg:DI 173 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 150 [ num_floats ]))) tiles.cpp:505 -1
     (nil))

(insn 96 95 97 (parallel [
            (set (reg:DI 174 [ D.26282 ])
                (ashift:DI (reg:DI 173 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:505 -1
     (nil))

(insn 97 96 98 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 98 97 99 (set (reg:DI 176)
        (reg:DI 175)) -1
     (nil))

(insn 99 98 100 (set (reg:DI 177)
        (reg:DI 174 [ D.26282 ])) -1
     (nil))

(insn 100 99 101 (set (reg:DI 1 dx)
        (reg:DI 177)) -1
     (nil))

(insn 101 100 102 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))

(insn 102 101 103 (set (reg:DI 5 di)
        (reg:DI 176)) -1
     (nil))

(call_insn 103 102 104 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 104 103 105 (set (reg:DI 178)
        (reg:DI 0 ax)) -1
     (nil))

(insn 105 104 0 (set (reg:DI 179)
        (reg:DI 178)) -1
     (nil))

;; bnd.268_35 = _82 >> 2;

(insn 106 105 0 (parallel [
            (set (reg:SI 79 [ bnd.268 ])
                (lshiftrt:SI (reg:SI 104 [ D.26280 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; ratio_mult_vf.269_34 = bnd.268_35 << 2;

(insn 107 106 0 (parallel [
            (set (reg:SI 78 [ ratio_mult_vf.269 ])
                (ashift:SI (reg:SI 79 [ bnd.268 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (_121 != 0)

(insn 108 107 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ ratio_mult_vf.269 ])
            (const_int 0 [0]))) -1
     (nil))

(insn 109 108 110 (set (reg:QI 181 [ D.26288 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))

(insn 110 109 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 181 [ D.26288 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 111 110 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil)))

(insn 112 111 113 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 104 [ D.26280 ])
            (const_int 3 [0x3]))) -1
     (nil))

(insn 113 112 114 (set (reg:QI 183 [ D.26288 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) -1
     (nil))

(insn 114 113 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ D.26288 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 115 114 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil)))

;; Generating RTL for gimple basic block 11

;; vect_cst_.277_95 = {num_tilings_32(D), num_tilings_32(D), num_tilings_32(D), num_tilings_32(D)};

(insn 117 116 118 (set (reg:V4SI 184)
        (vec_duplicate:V4SI (reg/v:SI 147 [ num_tilings ]))) 1643 {*vec_dupv4si}
     (nil))

(insn 118 117 0 (set (reg:V4SI 109 [ vect_cst_.277 ])
        (reg:V4SI 184)) -1
     (nil))

;; # DEBUG i => NULL

(debug_insn 119 118 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings] = vect_var_.276_160;

(insn 120 119 121 (set (subreg:V16QI (reg:V4SI 185 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 151 [ wrap_widths ]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))

(insn 121 120 122 (set (subreg:V2DI (reg:V4SI 187) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 122 121 123 (set (reg:V2DI 189)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 185 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 123 122 124 (set (reg:V2DI 190)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 124 123 125 (set (subreg:V2DI (reg:V4SI 188) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 189) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 125 124 126 (set (reg:V4SI 187)
        (vec_select:V4SI (reg:V4SI 187)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 126 125 127 (set (reg:V4SI 188)
        (vec_select:V4SI (reg:V4SI 188)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 127 126 128 (set (reg:V4SI 186 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 187)
                (reg:V4SI 188))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 185 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))

(insn 128 127 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 186 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))

;; # DEBUG i => D#17

(debug_insn 129 128 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#17

(debug_insn 130 129 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.268_35 > 1)

(insn 131 130 132 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 1 [0x1]))) -1
     (nil))

(jump_insn 132 131 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 12

;; # DEBUG i => NULL

(debug_insn 134 133 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B] = vect_var_.276_128;

(insn 135 134 136 (set (subreg:V16QI (reg:V4SI 191 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))

(insn 136 135 137 (set (subreg:V2DI (reg:V4SI 193) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 191 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 137 136 138 (set (reg:V2DI 195)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 191 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 138 137 139 (set (reg:V2DI 196)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 139 138 140 (set (subreg:V2DI (reg:V4SI 194) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 195) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 196) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 140 139 141 (set (reg:V4SI 193)
        (vec_select:V4SI (reg:V4SI 193)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 141 140 142 (set (reg:V4SI 194)
        (vec_select:V4SI (reg:V4SI 194)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 142 141 143 (set (reg:V4SI 192 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 193)
                (reg:V4SI 194))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 191 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))

(insn 143 142 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 192 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))

;; # DEBUG i => D#17

(debug_insn 144 143 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#17

(debug_insn 145 144 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.268_35 > 2)

(insn 146 145 147 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 2 [0x2]))) -1
     (nil))

(jump_insn 147 146 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 13

;; # DEBUG i => NULL

(debug_insn 149 148 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B] = vect_var_.276_169;

(insn 150 149 151 (set (subreg:V16QI (reg:V4SI 197 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))

(insn 151 150 152 (set (subreg:V2DI (reg:V4SI 199) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 197 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 152 151 153 (set (reg:V2DI 201)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 197 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 153 152 154 (set (reg:V2DI 202)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 154 153 155 (set (subreg:V2DI (reg:V4SI 200) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 201) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 202) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 155 154 156 (set (reg:V4SI 199)
        (vec_select:V4SI (reg:V4SI 199)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 156 155 157 (set (reg:V4SI 200)
        (vec_select:V4SI (reg:V4SI 200)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 157 156 158 (set (reg:V4SI 198 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 199)
                (reg:V4SI 200))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 197 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))

(insn 158 157 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 198 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))

;; # DEBUG i => D#17

(debug_insn 159 158 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#17

(debug_insn 160 159 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.268_35 > 3)

(insn 161 160 162 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 3 [0x3]))) -1
     (nil))

(jump_insn 162 161 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 14

;; # DEBUG i => NULL

(debug_insn 164 163 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B] = vect_var_.276_179;

(insn 165 164 166 (set (subreg:V16QI (reg:V4SI 203 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))

(insn 166 165 167 (set (subreg:V2DI (reg:V4SI 205) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 203 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 167 166 168 (set (reg:V2DI 207)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 203 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 168 167 169 (set (reg:V2DI 208)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 169 168 170 (set (subreg:V2DI (reg:V4SI 206) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 207) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 208) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 170 169 171 (set (reg:V4SI 205)
        (vec_select:V4SI (reg:V4SI 205)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 171 170 172 (set (reg:V4SI 206)
        (vec_select:V4SI (reg:V4SI 206)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 172 171 173 (set (reg:V4SI 204 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 205)
                (reg:V4SI 206))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 203 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))

(insn 173 172 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 204 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))

;; # DEBUG i => D#17

(debug_insn 174 173 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#17

(debug_insn 175 174 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (bnd.268_35 > 4)

(insn 176 175 177 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 4 [0x4]))) -1
     (nil))

(jump_insn 177 176 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))

;; Generating RTL for gimple basic block 15

;; # DEBUG i => NULL

(debug_insn 179 178 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B] = vect_var_.276_89;

(insn 180 179 181 (set (subreg:V16QI (reg:V4SI 209 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))

(insn 181 180 182 (set (subreg:V2DI (reg:V4SI 211) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 209 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 182 181 183 (set (reg:V2DI 213)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 209 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 183 182 184 (set (reg:V2DI 214)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))

(insn 184 183 185 (set (subreg:V2DI (reg:V4SI 212) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 213) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 214) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))

(insn 185 184 186 (set (reg:V4SI 211)
        (vec_select:V4SI (reg:V4SI 211)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 186 185 187 (set (reg:V4SI 212)
        (vec_select:V4SI (reg:V4SI 212)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))

(insn 187 186 188 (set (reg:V4SI 210 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 211)
                (reg:V4SI 212))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 209 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))

(insn 188 187 0 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 210 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))

;; # DEBUG i => D#17

(debug_insn 189 188 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#17

(debug_insn 190 189 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 16

;; # DEBUG i => i_6

(debug_insn 194 193 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; wrap_widths_times_num_tilings[i_6] = _135;

(insn 195 194 196 (set (reg:DI 215)
        (sign_extend:DI (reg/v:SI 65 [ i ]))) tiles.cpp:506 -1
     (nil))

(insn 196 195 197 (set (reg:DI 216 [ D.26285 ])
        (sign_extend:DI (reg/v:SI 65 [ i ]))) tiles.cpp:504 -1
     (nil))

(insn 197 196 198 (set (reg:SI 218)
        (mem:SI (plus:DI (mult:DI (reg:DI 216 [ D.26285 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_149+0 S4 A32])) tiles.cpp:506 -1
     (nil))

(insn 198 197 199 (parallel [
            (set (reg:SI 217 [ D.26281 ])
                (mult:SI (reg:SI 218)
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 -1
     (nil))

(insn 199 198 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 215)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 217 [ D.26281 ])) tiles.cpp:506 -1
     (nil))

;; # DEBUG D#20 => i_6 + 1

(debug_insn 200 199 0 (var_location:SI D#20 (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#20

(debug_insn 201 200 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => D#20

(debug_insn 202 201 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 17

;; 

(code_label 206 205 207 178 "" [0 uses])

(note 207 206 0 NOTE_INSN_BASIC_BLOCK)

;; i_104 = (int) ratio_mult_vf.269_34;

(insn 208 207 0 (set (reg/v:SI 113 [ i ])
        (reg:SI 78 [ ratio_mult_vf.269 ])) -1
     (nil))

;; if (ratio_mult_vf.269_34 == _82)

(insn 209 208 210 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ ratio_mult_vf.269 ])
            (reg:SI 104 [ D.26280 ]))) -1
     (nil))

(jump_insn 210 209 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil)))

;; Generating RTL for gimple basic block 18

;; 

(code_label 211 210 212 177 "" [0 uses])

(note 212 211 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG i => i_120

(debug_insn 213 212 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; wrap_widths_times_num_tilings[i_120] = _27;

(insn 214 213 215 (set (reg:DI 219)
        (sign_extend:DI (reg/v:SI 113 [ i ]))) tiles.cpp:506 -1
     (nil))

(insn 215 214 216 (set (reg:DI 220 [ D.26285 ])
        (sign_extend:DI (reg/v:SI 113 [ i ]))) tiles.cpp:504 -1
     (nil))

(insn 216 215 217 (set (reg:SI 222)
        (mem:SI (plus:DI (mult:DI (reg:DI 220 [ D.26285 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_107+0 S4 A32])) tiles.cpp:506 -1
     (nil))

(insn 217 216 218 (parallel [
            (set (reg:SI 221 [ D.26281 ])
                (mult:SI (reg:SI 222)
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 -1
     (nil))

(insn 218 217 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 219)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 221 [ D.26281 ])) tiles.cpp:506 -1
     (nil))

;; i_40 = i_120 + 1;

(insn 219 218 0 (parallel [
            (set (reg/v:SI 80 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 -1
     (nil))

;; # DEBUG i => i_40

(debug_insn 220 219 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => i_40

(debug_insn 221 220 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_13(D) > i_40)

(insn 222 221 223 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 150 [ num_floats ])
            (reg/v:SI 80 [ i ]))) tiles.cpp:503 -1
     (nil))

(jump_insn 223 222 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) tiles.cpp:503 -1
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil)))

;; Generating RTL for gimple basic block 19

;; # DEBUG i => i_40

(debug_insn 225 224 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; wrap_widths_times_num_tilings[i_40] = _9;

(insn 226 225 227 (set (reg:DI 223)
        (sign_extend:DI (reg/v:SI 80 [ i ]))) tiles.cpp:506 -1
     (nil))

(insn 227 226 228 (set (reg:DI 224 [ D.26285 ])
        (sign_extend:DI (reg/v:SI 80 [ i ]))) tiles.cpp:504 -1
     (nil))

(insn 228 227 229 (set (reg:SI 226)
        (mem:SI (plus:DI (mult:DI (reg:DI 224 [ D.26285 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_33+0 S4 A32])) tiles.cpp:506 -1
     (nil))

(insn 229 228 230 (parallel [
            (set (reg:SI 225 [ D.26281 ])
                (mult:SI (reg:SI 226)
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 -1
     (nil))

(insn 230 229 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 223)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 225 [ D.26281 ])) tiles.cpp:506 -1
     (nil))

;; i_6 = i_120 + 2;

(insn 231 230 0 (parallel [
            (set (reg/v:SI 65 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 -1
     (nil))

;; # DEBUG i => i_6

(debug_insn 232 231 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;; # DEBUG i => i_6

(debug_insn 233 232 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (i_6 < num_floats_13(D))

(insn 235 233 236 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 65 [ i ])
            (reg/v:SI 150 [ num_floats ]))) tiles.cpp:503 -1
     (nil))

(jump_insn 236 235 239 19 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:503 -1
     (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
        (nil)))

(note 239 236 237 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(jump_insn 237 239 238 41 (set (pc)
        (label_ref 203)) tiles.cpp:503 -1
     (nil))

(barrier 238 237 0)

;; Generating RTL for gimple basic block 20

;; 

(code_label 240 238 241 173 "" [0 uses])

(note 241 240 0 NOTE_INSN_BASIC_BLOCK)

;; ivtmp.305_60 = (unsigned long) the_tiles_81(D);

(insn 242 241 0 (set (reg:DI 93 [ ivtmp.305 ])
        (reg/v/f:DI 146 [ the_tiles ])) -1
     (nil))

;; _187 = _186 * 4;

(insn 243 242 244 (parallel [
            (set (reg:SI 227 [ D.26280 ])
                (plus:SI (reg/v:SI 150 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 244 243 245 (set (reg:DI 228 [ D.26282 ])
        (zero_extend:DI (reg:SI 227 [ D.26280 ]))) -1
     (nil))

(insn 245 244 246 (parallel [
            (set (reg:DI 229 [ D.26282 ])
                (plus:DI (reg:DI 228 [ D.26282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 246 245 0 (parallel [
            (set (reg:DI 143 [ D.26282 ])
                (ashift:DI (reg:DI 229 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; # DEBUG i => NULL

(debug_insn 251 250 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; _45 = MEM[symbol: qstate, index: ivtmp.291_105, offset: 0B];

(insn 252 251 253 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:516 -1
     (nil))

(insn 253 252 0 (set (reg:SI 82 [ D.26281 ])
        (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 230)) [0 MEM[symbol: qstate, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 -1
     (nil))

;; _46 = MEM[symbol: base, index: ivtmp.291_105, offset: 0B];

(insn 254 253 255 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:516 -1
     (nil))

(insn 255 254 0 (set (reg:SI 83 [ D.26281 ])
        (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 231)) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 -1
     (nil))

;; if (_45 >= _46)

(insn 256 255 257 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 82 [ D.26281 ])
            (reg:SI 83 [ D.26281 ]))) tiles.cpp:516 -1
     (nil))

(jump_insn 257 256 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:516 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 23

;; _49 = _45 - _48;

(insn 259 258 260 (parallel [
            (set (reg:SI 232 [ D.26281 ])
                (minus:SI (reg:SI 82 [ D.26281 ])
                    (reg:SI 83 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 -1
     (nil))

(insn 260 259 261 (parallel [
            (set (reg:SI 235)
                (div:SI (reg:SI 232 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (set (reg:SI 234 [ D.26281 ])
                (mod:SI (reg:SI 232 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 -1
     (nil))

(insn 261 260 0 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (minus:SI (reg:SI 82 [ D.26281 ])
                    (reg:SI 234 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 264 263 265 182 "" [0 uses])

(note 265 264 0 NOTE_INSN_BASIC_BLOCK)

;; _57 = _56 - num_tilings_32(D);

(insn 266 265 267 (parallel [
            (set (reg:SI 236 [ D.26281 ])
                (plus:SI (reg:SI 82 [ D.26281 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))

(insn 267 266 268 (parallel [
            (set (reg:SI 237 [ D.26281 ])
                (minus:SI (reg:SI 83 [ D.26281 ])
                    (reg:SI 82 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))

(insn 268 267 269 (parallel [
            (set (reg:SI 238 [ D.26281 ])
                (plus:SI (reg:SI 237 [ D.26281 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))

(insn 269 268 270 (parallel [
            (set (reg:SI 241)
                (div:SI (reg:SI 238 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (set (reg:SI 240 [ D.26281 ])
                (mod:SI (reg:SI 238 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))

(insn 270 269 271 (parallel [
            (set (reg:SI 242 [ D.26281 ])
                (plus:SI (reg:SI 236 [ D.26281 ])
                    (reg:SI 240 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))

(insn 271 270 0 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (minus:SI (reg:SI 242 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 272 271 273 183 "" [0 uses])

(note 273 272 0 NOTE_INSN_BASIC_BLOCK)

;; MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = _58;

(insn 274 273 275 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 275 274 0 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 243)) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 92 [ D.26281 ])) -1
     (nil))

;; if (_62 != 0)

(insn 276 275 277 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                    (reg:DI 71 [ ivtmp.291 ])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.291_105, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:521 -1
     (nil))

(jump_insn 277 276 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:521 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 26

;; _65 = _58 % _64;

(insn 279 278 280 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 -1
     (nil))

(insn 280 279 281 (parallel [
            (set (reg:SI 247)
                (div:SI (reg:SI 92 [ D.26281 ])
                    (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                            (reg:DI 244)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (set (reg:SI 246)
                (mod:SI (reg:SI 92 [ D.26281 ])
                    (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                            (reg:DI 244)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 -1
     (nil))

(insn 281 280 0 (set (reg:SI 92 [ D.26281 ])
        (reg:SI 246)) tiles.cpp:521 -1
     (nil))

;; MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = _65;

(insn 282 281 283 (parallel [
            (set (reg:DI 248)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 -1
     (nil))

(insn 283 282 0 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 248)) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 92 [ D.26281 ])) tiles.cpp:521 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 284 283 285 184 "" [0 uses])

(note 285 284 0 NOTE_INSN_BASIC_BLOCK)

;; if (_141 < 0)

(insn 286 285 287 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ D.26281 ])
            (const_int 0 [0]))) tiles.cpp:523 -1
     (nil))

(jump_insn 287 286 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:523 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 28

;; MEM[symbol: base, index: ivtmp.291_105, offset: 0B] = _75;

(insn 289 288 290 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:527 -1
     (nil))

(insn 290 289 291 (parallel [
            (set (reg:SI 250)
                (plus:SI (reg:SI 83 [ D.26281 ])
                    (reg:SI 62 [ ivtmp.295 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:527 -1
     (nil))

(insn 291 290 0 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 249)) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 250)) tiles.cpp:527 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 83 [ D.26281 ])
            (reg:SI 62 [ ivtmp.295 ]))
        (nil)))

;; # DEBUG i => D#18

(debug_insn 292 291 0 (var_location:SI i (const_int 0 [0])) tiles.cpp:513 -1
     (nil))
;; # DEBUG i => D#18

(debug_insn 293 292 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; ivtmp.291_18 = ivtmp.291_105 + 4;

(insn 294 293 0 (parallel [
            (set (reg:DI 71 [ ivtmp.291 ])
                (plus:DI (reg:DI 71 [ ivtmp.291 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; ivtmp.295_3 = ivtmp.295_2 + 2;

(insn 295 294 0 (parallel [
            (set (reg:SI 62 [ ivtmp.295 ])
                (plus:SI (reg:SI 62 [ ivtmp.295 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.291_18 != _187)

(insn 297 295 298 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 71 [ ivtmp.291 ])
            (reg:DI 143 [ D.26282 ]))) tiles.cpp:513 -1
     (nil))

(jump_insn 298 297 301 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) tiles.cpp:513 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil)))

(note 301 298 299 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(jump_insn 299 301 300 42 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 300 299 0)

;; Generating RTL for gimple basic block 29

;; 

(code_label 302 300 303 185 "" [0 uses])

(note 303 302 0 NOTE_INSN_BASIC_BLOCK)

;; _142 = MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B];

(insn 304 303 305 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 305 304 0 (set (reg:SI 127 [ D.26281 ])
        (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 251)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) -1
     (nil))

;; Generating RTL for gimple basic block 30

;; _71 = _118 + _142;

(insn 307 306 0 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (plus:SI (reg:SI 92 [ D.26281 ])
                    (reg:SI 127 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:524 -1
     (nil))

;; if (_71 < 0)

(insn 308 307 309 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ D.26281 ])
            (const_int 0 [0]))) tiles.cpp:523 -1
     (nil))

(jump_insn 309 308 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:523 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 31

;; MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B] = coordinates_I_lsm.266_152;

(insn 311 310 312 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 312 311 0 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 252)) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 132 [ coordinates_I_lsm.266 ])) -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 316 315 317 188 "" [0 uses])

(note 317 316 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 33

;; 

(code_label 321 320 322 187 "" [0 uses])

(note 322 321 0 NOTE_INSN_BASIC_BLOCK)

;; coordinates[num_floats_97] = j_110;

(insn 323 322 324 (set (reg:DI 253)
        (sign_extend:DI (reg/v:SI 110 [ num_floats ]))) tiles.cpp:530 -1
     (nil))

(insn 324 323 0 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 253)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 106 [ j ])) tiles.cpp:530 -1
     (nil))

;; _85 = hash (&coordinates, num_coordinates_16, ctable_83(D));

(insn 325 324 326 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:532 -1
     (nil))

(insn 326 325 327 (set (reg:DI 1 dx)
        (reg/v/f:DI 148 [ ctable ])) tiles.cpp:532 -1
     (nil))

(insn 327 326 328 (set (reg:SI 4 si)
        (reg/v:SI 70 [ num_coordinates ])) tiles.cpp:532 -1
     (nil))

(insn 328 327 329 (set (reg:DI 5 di)
        (reg:DI 254)) tiles.cpp:532 -1
     (nil))

(call_insn 329 328 330 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b82f1f16800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:532 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(insn 330 329 0 (set (reg:SI 105 [ D.26281 ])
        (reg:SI 0 ax)) tiles.cpp:532 -1
     (nil))

;; MEM[base: _77, offset: 0B] = _85;

(insn 331 330 0 (set (mem:SI (reg:DI 93 [ ivtmp.305 ]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 105 [ D.26281 ])) tiles.cpp:532 -1
     (nil))

;; j_88 = j_110 + 1;

(insn 332 331 0 (parallel [
            (set (reg/v:SI 106 [ j ])
                (plus:SI (reg/v:SI 106 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:510 -1
     (nil))

;; # DEBUG j => j_88

(debug_insn 333 332 0 (var_location:SI j (const_int 0 [0])) tiles.cpp:510 -1
     (nil))
;; # DEBUG j => j_88

(debug_insn 334 333 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; ivtmp.305_59 = ivtmp.305_102 + 4;

(insn 335 334 0 (parallel [
            (set (reg:DI 93 [ ivtmp.305 ])
                (plus:DI (reg:DI 93 [ ivtmp.305 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (j_88 != num_tilings_32(D))

(insn 336 335 337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ j ])
            (reg/v:SI 147 [ num_tilings ]))) tiles.cpp:510 -1
     (nil))

(jump_insn 337 336 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) tiles.cpp:510 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; 

(code_label 339 338 340 181 "" [0 uses])

(note 340 339 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG j => j_110

(debug_insn 341 340 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => 0

(debug_insn 342 341 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; if (num_floats_13(D) > 0)

(insn 343 342 344 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 150 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:513 -1
     (nil))

(jump_insn 344 343 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) tiles.cpp:513 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil)))

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; 

(code_label 349 348 350 174 "" [0 uses])

(note 350 349 0 NOTE_INSN_BASIC_BLOCK)

;; qstate ={v} {CLOBBER};

(nil)

;; base ={v} {CLOBBER};

(nil)

;; wrap_widths_times_num_tilings ={v} {CLOBBER};

(nil)

;; coordinates ={v} {CLOBBER};

(nil)
Edge 10->18 redirected to 45
Edge 35->33 redirected to 46


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 8 failed.
Forwarding edge 8->9 to 47 failed.
Redirecting jump 64 from 46 to 47.
Redirecting jump 204 from 7 to 8.
Forwarding edge 21->22 to 24 failed.
Edge 21->7 redirected to 8
Forwarding edge 21->22 to 24 failed.
Edge 24->7 redirected to 8
Forwarding edge 25->26 to 8 failed.
Redirecting jump 237 from 7 to 8.
Edge 42->46 redirected to 47
deleting block 46


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 8 failed.
deleting block 7
Forwarding edge 8->9 to 47 failed.
Forwarding edge 21->22 to 24 failed.
Forwarding edge 25->26 to 8 failed.


try_optimize_cfg iteration 3

Forwarding edge 4->5 to 8 failed.
Forwarding edge 8->9 to 47 failed.
Forwarding edge 21->22 to 24 failed.
Forwarding edge 25->26 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 3 0 21 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 21 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 21 5 2 (set (reg/v/f:DI 146 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:492 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 147 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:492 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 148 [ ctable ])
        (reg:DI 1 dx [ ctable ])) tiles.cpp:492 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 149 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:492 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:SI 150 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:492 -1
     (nil))
(insn 9 8 10 2 (set (reg/v/f:DI 151 [ wrap_widths ])
        (reg:DI 38 r9 [ wrap_widths ])) tiles.cpp:492 -1
     (nil))
(insn 10 9 11 2 (set (reg/v/f:DI 152 [ ints ])
        (mem/f/c:DI (reg/f:DI 53 virtual-incoming-args) [0 ints+0 S8 A64])) tiles.cpp:492 -1
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 53 virtual-incoming-args) [0 ints+0 S8 A64])
        (nil)))
(insn 11 10 12 2 (set (reg/v:SI 153 [ num_ints ])
        (mem/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])) tiles.cpp:492 -1
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])
        (nil)))
(note 12 11 23 2 NOTE_INSN_FUNCTION_BEG)
(insn 23 12 24 2 (parallel [
            (set (reg:SI 154 [ D.26281 ])
                (plus:SI (reg/v:SI 150 [ num_floats ])
                    (reg/v:SI 153 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:498 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/v:SI 70 [ num_coordinates ])
                (plus:SI (reg:SI 154 [ D.26281 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:498 -1
     (nil))
(debug_insn 25 24 26 2 (var_location:SI num_coordinates (reg/v:SI 70 [ num_coordinates ])) tiles.cpp:498 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI i (const_int 0 [0])) tiles.cpp:500 -1
     (nil))
(debug_insn 27 26 28 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 28 27 29 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 153 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:500 -1
     (nil))
(jump_insn 29 28 55 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) tiles.cpp:500 -1
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 37)
;;  succ:       6 [97.6%] 
;;              4 [2.4%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              6 [100.0%] 
(code_label 55 29 30 4 172 "" [1 uses])
(note 30 55 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 32 31 33 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 150 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:503 -1
     (nil))
(jump_insn 33 32 36 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) tiles.cpp:503 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 67)
;;  succ:       10 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [4.8%]  (FALLTHRU)
(note 36 33 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 34 36 35 5 (set (pc)
        (label_ref 59)) tiles.cpp:503 -1
     (nil)
 -> 59)
;;  succ:       8 [100.0%] 

(barrier 35 34 37)
;; basic block 6, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [97.6%] 
(code_label 37 35 38 6 169 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))
(insn 40 39 41 6 (set (reg:DI 156 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 150 [ num_floats ]))) tiles.cpp:500 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 157 [ D.26282 ])
                (ashift:DI (reg:DI 156 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 158 [ D.26287 ])
                (plus:DI (reg:DI 157 [ D.26282 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 159 [ D.26289 ])
                (plus:DI (reg:DI 155)
                    (reg:DI 158 [ D.26287 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))
(insn 44 43 45 6 (set (reg:DI 160 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 153 [ num_ints ]))) tiles.cpp:500 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 161 [ D.26282 ])
                (ashift:DI (reg:DI 160 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 162)
        (reg:DI 159 [ D.26289 ])) -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 163)
        (reg/v/f:DI 152 [ ints ])) -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 164)
        (reg:DI 161 [ D.26282 ])) -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 1 dx)
        (reg:DI 164)) -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 4 si)
        (reg:DI 163)) -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (reg:DI 162)) -1
     (nil))
(call_insn 52 51 53 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 53 52 54 6 (set (reg:DI 165)
        (reg:DI 0 ax)) -1
     (nil))
(insn 54 53 56 6 (set (reg:DI 166)
        (reg:DI 165)) -1
     (nil))
(jump_insn 56 54 57 6 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
;;  succ:       4 [100.0%] 

(barrier 57 56 59)
;; basic block 8, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 [100.0%] 
;;              5 [100.0%] 
;;              20 [100.0%] 
;;              21 [33.3%] 
;;              24 [25.0%] 
(code_label 59 57 60 8 171 "" [5 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 8 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 62 61 63 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 147 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:510 -1
     (nil))
(jump_insn 63 62 66 8 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) tiles.cpp:510 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 240)
;;  succ:       27 [91.0%] 
;;              9 [9.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU)
(note 66 63 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 64 66 65 9 (set (pc)
        (label_ref:DI 351)) tiles.cpp:510 650 {jump}
     (nil)
 -> 351)
;;  succ:       47 [100.0%] 

(barrier 65 64 67)
;; basic block 10, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [95.2%] 
(code_label 67 65 68 10 170 "" [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg:SF 129 [ D.26283 ])
        (float:SF (reg/v:SI 147 [ num_tilings ]))) -1
     (nil))
(insn 70 69 71 10 (set (reg:SI 104 [ D.26280 ])
        (reg/v:SI 150 [ num_floats ])) -1
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:SI 167 [ D.26280 ])
                (plus:SI (reg:SI 104 [ D.26280 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 72 71 73 10 (set (reg:DI 168 [ D.26282 ])
        (zero_extend:DI (reg:SI 167 [ D.26280 ]))) -1
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:DI 169 [ D.26282 ])
                (plus:DI (reg:DI 168 [ D.26282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 74 73 13 10 (parallel [
            (set (reg:DI 145 [ D.26282 ])
                (ashift:DI (reg:DI 169 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 13 74 90 10 (set (reg:DI 103 [ ivtmp.311 ])
        (const_int 0 [0])) tiles.cpp:503 -1
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)

;; basic block 11, loop depth 1, count 0, freq 330, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [100.0%]  (DFS_BACK)
;;              10 [100.0%]  (FALLTHRU)
(code_label 90 13 75 11 176 "" [1 uses])
(note 75 90 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 11 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 77 76 78 11 (set (reg:SF 170 [ D.26283 ])
        (mult:SF (reg:SF 129 [ D.26283 ])
            (mem:SF (plus:DI (reg/v/f:DI 149 [ floats ])
                    (reg:DI 103 [ ivtmp.311 ])) [0 MEM[base: floats_29(D), index: ivtmp.311_79, offset: 0B]+0 S4 A32]))) tiles.cpp:504 -1
     (nil))
(insn 78 77 79 11 (set (reg:SF 21 xmm0)
        (reg:SF 170 [ D.26283 ])) tiles.cpp:504 -1
     (nil))
(call_insn/u 79 78 80 11 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:504 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 80 79 81 11 (set (reg:SF 74 [ D.26283 ])
        (reg:SF 21 xmm0)) tiles.cpp:504 -1
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:504 -1
     (nil))
(insn 82 81 83 11 (set (reg:SI 172)
        (fix:SI (reg:SF 74 [ D.26283 ]))) tiles.cpp:504 -1
     (nil))
(insn 83 82 84 11 (set (mem:SI (plus:DI (reg:DI 103 [ ivtmp.311 ])
                (reg:DI 171)) [0 MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B]+0 S4 A32])
        (reg:SI 172)) tiles.cpp:504 -1
     (expr_list:REG_EQUAL (fix:SI (reg:SF 74 [ D.26283 ]))
        (nil)))
(debug_insn 84 83 85 11 (var_location:SI i (debug_expr:SI D#19)) tiles.cpp:503 -1
     (nil))
(debug_insn 85 84 86 11 (var_location:SI i (debug_expr:SI D#19)) -1
     (nil))
(insn 86 85 87 11 (parallel [
            (set (reg:DI 103 [ ivtmp.311 ])
                (plus:DI (reg:DI 103 [ ivtmp.311 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 87 86 88 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 103 [ ivtmp.311 ])
            (reg:DI 145 [ D.26282 ]))) tiles.cpp:503 -1
     (nil))
(jump_insn 88 87 89 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) tiles.cpp:503 -1
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 93)
;;  succ:       12 [95.2%]  (FALLTHRU)
;;              13 [4.8%] 

;; basic block 12, loop depth 1, count 0, freq 314, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [95.2%]  (FALLTHRU)
(note 89 88 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 91 89 92 12 (set (pc)
        (label_ref 90)) tiles.cpp:503 -1
     (nil)
 -> 90)
;;  succ:       11 [100.0%]  (DFS_BACK)

(barrier 92 91 93)
;; basic block 13, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [4.8%] 
(code_label 93 92 94 13 175 "" [1 uses])
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg:DI 173 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 150 [ num_floats ]))) tiles.cpp:505 -1
     (nil))
(insn 96 95 97 13 (parallel [
            (set (reg:DI 174 [ D.26282 ])
                (ashift:DI (reg:DI 173 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:505 -1
     (nil))
(insn 97 96 98 13 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 98 97 99 13 (set (reg:DI 176)
        (reg:DI 175)) -1
     (nil))
(insn 99 98 100 13 (set (reg:DI 177)
        (reg:DI 174 [ D.26282 ])) -1
     (nil))
(insn 100 99 101 13 (set (reg:DI 1 dx)
        (reg:DI 177)) -1
     (nil))
(insn 101 100 102 13 (set (reg:SI 4 si)
        (const_int 0 [0])) -1
     (nil))
(insn 102 101 103 13 (set (reg:DI 5 di)
        (reg:DI 176)) -1
     (nil))
(call_insn 103 102 104 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 104 103 105 13 (set (reg:DI 178)
        (reg:DI 0 ax)) -1
     (nil))
(insn 105 104 106 13 (set (reg:DI 179)
        (reg:DI 178)) -1
     (nil))
(insn 106 105 107 13 (parallel [
            (set (reg:SI 79 [ bnd.268 ])
                (lshiftrt:SI (reg:SI 104 [ D.26280 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 107 106 108 13 (parallel [
            (set (reg:SI 78 [ ratio_mult_vf.269 ])
                (ashift:SI (reg:SI 79 [ bnd.268 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 108 107 109 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ ratio_mult_vf.269 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 109 108 110 13 (set (reg:QI 181 [ D.26288 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 110 109 111 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 181 [ D.26288 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 111 110 360 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 357)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 357)
;;  succ:       23 [33.3%] 
;;              14 [66.7%]  (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 [66.7%]  (FALLTHRU)
(note 360 111 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 112 360 113 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 104 [ D.26280 ])
            (const_int 3 [0x3]))) -1
     (nil))
(insn 113 112 114 14 (set (reg:QI 183 [ D.26288 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 114 113 115 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ D.26288 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 115 114 116 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 357)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 357)
;;  succ:       15 [66.7%]  (FALLTHRU)
;;              23 [33.3%] 

;; basic block 15, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [66.7%]  (FALLTHRU)
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 15 (set (reg:V4SI 184)
        (vec_duplicate:V4SI (reg/v:SI 147 [ num_tilings ]))) 1643 {*vec_dupv4si}
     (nil))
(insn 118 117 119 15 (set (reg:V4SI 109 [ vect_cst_.277 ])
        (reg:V4SI 184)) -1
     (nil))
(debug_insn 119 118 120 15 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 120 119 121 15 (set (subreg:V16QI (reg:V4SI 185 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 151 [ wrap_widths ]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))
(insn 121 120 122 15 (set (subreg:V2DI (reg:V4SI 187) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 122 121 123 15 (set (reg:V2DI 189)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 185 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 123 122 124 15 (set (reg:V2DI 190)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 124 123 125 15 (set (subreg:V2DI (reg:V4SI 188) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 189) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 125 124 126 15 (set (reg:V4SI 187)
        (vec_select:V4SI (reg:V4SI 187)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 126 125 127 15 (set (reg:V4SI 188)
        (vec_select:V4SI (reg:V4SI 188)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 127 126 128 15 (set (reg:V4SI 186 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 187)
                (reg:V4SI 188))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 185 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))
(insn 128 127 129 15 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 186 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))
(debug_insn 129 128 130 15 (var_location:SI i (debug_expr:SI D#17)) tiles.cpp:503 -1
     (nil))
(debug_insn 130 129 131 15 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 131 130 132 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 1 [0x1]))) -1
     (nil))
(jump_insn 132 131 133 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       16 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 16, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [66.7%]  (FALLTHRU)
(note 133 132 134 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 134 133 135 16 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 135 134 136 16 (set (subreg:V16QI (reg:V4SI 191 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))
(insn 136 135 137 16 (set (subreg:V2DI (reg:V4SI 193) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 191 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 137 136 138 16 (set (reg:V2DI 195)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 191 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 138 137 139 16 (set (reg:V2DI 196)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 139 138 140 16 (set (subreg:V2DI (reg:V4SI 194) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 195) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 196) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 140 139 141 16 (set (reg:V4SI 193)
        (vec_select:V4SI (reg:V4SI 193)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 141 140 142 16 (set (reg:V4SI 194)
        (vec_select:V4SI (reg:V4SI 194)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 142 141 143 16 (set (reg:V4SI 192 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 193)
                (reg:V4SI 194))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 191 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))
(insn 143 142 144 16 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 192 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))
(debug_insn 144 143 145 16 (var_location:SI i (debug_expr:SI D#17)) tiles.cpp:503 -1
     (nil))
(debug_insn 145 144 146 16 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 146 145 147 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 2 [0x2]))) -1
     (nil))
(jump_insn 147 146 148 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       17 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 17, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [66.7%]  (FALLTHRU)
(note 148 147 149 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 17 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 150 149 151 17 (set (subreg:V16QI (reg:V4SI 197 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))
(insn 151 150 152 17 (set (subreg:V2DI (reg:V4SI 199) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 197 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 152 151 153 17 (set (reg:V2DI 201)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 197 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 153 152 154 17 (set (reg:V2DI 202)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 154 153 155 17 (set (subreg:V2DI (reg:V4SI 200) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 201) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 202) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 155 154 156 17 (set (reg:V4SI 199)
        (vec_select:V4SI (reg:V4SI 199)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 156 155 157 17 (set (reg:V4SI 200)
        (vec_select:V4SI (reg:V4SI 200)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 157 156 158 17 (set (reg:V4SI 198 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 199)
                (reg:V4SI 200))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 197 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))
(insn 158 157 159 17 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 198 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))
(debug_insn 159 158 160 17 (var_location:SI i (debug_expr:SI D#17)) tiles.cpp:503 -1
     (nil))
(debug_insn 160 159 161 17 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 161 160 162 17 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 3 [0x3]))) -1
     (nil))
(jump_insn 162 161 163 17 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       18 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 18, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 [66.7%]  (FALLTHRU)
(note 163 162 164 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 164 163 165 18 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 165 164 166 18 (set (subreg:V16QI (reg:V4SI 203 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))
(insn 166 165 167 18 (set (subreg:V2DI (reg:V4SI 205) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 203 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 167 166 168 18 (set (reg:V2DI 207)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 203 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 168 167 169 18 (set (reg:V2DI 208)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 169 168 170 18 (set (subreg:V2DI (reg:V4SI 206) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 207) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 208) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 170 169 171 18 (set (reg:V4SI 205)
        (vec_select:V4SI (reg:V4SI 205)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 171 170 172 18 (set (reg:V4SI 206)
        (vec_select:V4SI (reg:V4SI 206)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 172 171 173 18 (set (reg:V4SI 204 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 205)
                (reg:V4SI 206))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 203 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))
(insn 173 172 174 18 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 204 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))
(debug_insn 174 173 175 18 (var_location:SI i (debug_expr:SI D#17)) tiles.cpp:503 -1
     (nil))
(debug_insn 175 174 176 18 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 176 175 177 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 4 [0x4]))) -1
     (nil))
(jump_insn 177 176 178 18 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) -1
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       19 [66.7%]  (FALLTHRU)
;;              21 [33.3%] 

;; basic block 19, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [66.7%]  (FALLTHRU)
(note 178 177 179 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 179 178 180 19 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 180 179 181 19 (set (subreg:V16QI (reg:V4SI 209 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 -1
     (nil))
(insn 181 180 182 19 (set (subreg:V2DI (reg:V4SI 211) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 209 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 109 [ vect_cst_.277 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 182 181 183 19 (set (reg:V2DI 213)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 209 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 183 182 184 19 (set (reg:V2DI 214)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 109 [ vect_cst_.277 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 -1
     (nil))
(insn 184 183 185 19 (set (subreg:V2DI (reg:V4SI 212) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 213) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 214) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 -1
     (nil))
(insn 185 184 186 19 (set (reg:V4SI 211)
        (vec_select:V4SI (reg:V4SI 211)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 186 185 187 19 (set (reg:V4SI 212)
        (vec_select:V4SI (reg:V4SI 212)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 -1
     (nil))
(insn 187 186 188 19 (set (reg:V4SI 210 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 211)
                (reg:V4SI 212))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 -1
     (expr_list:REG_EQUAL (mult:V4SI (reg:V4SI 209 [ vect_var_.275 ])
            (reg:V4SI 109 [ vect_cst_.277 ]))
        (nil)))
(insn 188 187 189 19 (set (mem/c:V4SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 210 [ vect_var_.276 ])) tiles.cpp:506 -1
     (nil))
(debug_insn 189 188 190 19 (var_location:SI i (debug_expr:SI D#17)) tiles.cpp:503 -1
     (nil))
(debug_insn 190 189 191 19 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(jump_insn 191 190 192 19 (set (pc)
        (label_ref 206)) -1
     (nil)
 -> 206)
;;  succ:       21 [100.0%] 

(barrier 192 191 234)
;; basic block 20, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 [75.0%] 
(code_label 234 192 193 20 180 "" [1 uses])
(note 193 234 194 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 20 (var_location:SI i (reg/v:SI 65 [ i ])) -1
     (nil))
(insn 195 194 196 20 (set (reg:DI 215)
        (sign_extend:DI (reg/v:SI 65 [ i ]))) tiles.cpp:506 -1
     (nil))
(insn 196 195 197 20 (set (reg:DI 216 [ D.26285 ])
        (sign_extend:DI (reg/v:SI 65 [ i ]))) tiles.cpp:504 -1
     (nil))
(insn 197 196 198 20 (set (reg:SI 218)
        (mem:SI (plus:DI (mult:DI (reg:DI 216 [ D.26285 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_149+0 S4 A32])) tiles.cpp:506 -1
     (nil))
(insn 198 197 199 20 (parallel [
            (set (reg:SI 217 [ D.26281 ])
                (mult:SI (reg:SI 218)
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 -1
     (nil))
(insn 199 198 200 20 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 215)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 217 [ D.26281 ])) tiles.cpp:506 -1
     (nil))
(debug_insn 200 199 201 20 (var_location:SI D#20 (plus:SI (reg/v:SI 65 [ i ])
        (const_int 1 [0x1]))) tiles.cpp:503 -1
     (nil))
(debug_insn 201 200 202 20 (var_location:SI i (debug_expr:SI D#20)) tiles.cpp:503 -1
     (nil))
(debug_insn 202 201 204 20 (var_location:SI i (debug_expr:SI D#20)) -1
     (nil))
(jump_insn 204 202 205 20 (set (pc)
        (label_ref:DI 59)) tiles.cpp:506 650 {jump}
     (nil)
 -> 59)
;;  succ:       8 [100.0%] 

(barrier 205 204 206)
;; basic block 21, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;;              15 [33.3%] 
;;              16 [33.3%] 
;;              17 [33.3%] 
;;              18 [33.3%] 
(code_label 206 205 207 21 178 "" [5 uses])
(note 207 206 208 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 21 (set (reg/v:SI 113 [ i ])
        (reg:SI 78 [ ratio_mult_vf.269 ])) -1
     (nil))
(insn 209 208 210 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ ratio_mult_vf.269 ])
            (reg:SI 104 [ D.26280 ]))) -1
     (nil))
(jump_insn 210 209 353 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 59)
;;  succ:       22 [66.7%]  (FALLTHRU)
;;              8 [33.3%] 

;; basic block 22, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 [66.7%]  (FALLTHRU)
(note 353 210 354 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 354 353 355 22 (set (pc)
        (label_ref 211)) -1
     (nil)
 -> 211)
;;  succ:       24 [100.0%] 

(barrier 355 354 357)
;; basic block 23, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 [33.3%] 
;;              13 [33.3%] 
(code_label 357 355 356 23 192 "" [2 uses])
(note 356 357 14 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 14 356 211 23 (set (reg/v:SI 113 [ i ])
        (const_int 0 [0])) tiles.cpp:505 -1
     (nil))
;;  succ:       24 [100.0%]  (FALLTHRU)

;; basic block 24, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;;              22 [100.0%] 
(code_label 211 14 212 24 177 "" [1 uses])
(note 212 211 213 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 24 (var_location:SI i (reg/v:SI 113 [ i ])) -1
     (nil))
(insn 214 213 215 24 (set (reg:DI 219)
        (sign_extend:DI (reg/v:SI 113 [ i ]))) tiles.cpp:506 -1
     (nil))
(insn 215 214 216 24 (set (reg:DI 220 [ D.26285 ])
        (sign_extend:DI (reg/v:SI 113 [ i ]))) tiles.cpp:504 -1
     (nil))
(insn 216 215 217 24 (set (reg:SI 222)
        (mem:SI (plus:DI (mult:DI (reg:DI 220 [ D.26285 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_107+0 S4 A32])) tiles.cpp:506 -1
     (nil))
(insn 217 216 218 24 (parallel [
            (set (reg:SI 221 [ D.26281 ])
                (mult:SI (reg:SI 222)
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 -1
     (nil))
(insn 218 217 219 24 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 219)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 221 [ D.26281 ])) tiles.cpp:506 -1
     (nil))
(insn 219 218 220 24 (parallel [
            (set (reg/v:SI 80 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 -1
     (nil))
(debug_insn 220 219 221 24 (var_location:SI i (reg/v:SI 80 [ i ])) tiles.cpp:503 -1
     (nil))
(debug_insn 221 220 222 24 (var_location:SI i (reg/v:SI 80 [ i ])) -1
     (nil))
(insn 222 221 223 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 150 [ num_floats ])
            (reg/v:SI 80 [ i ]))) tiles.cpp:503 -1
     (nil))
(jump_insn 223 222 224 24 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil))
 -> 59)
;;  succ:       25 [75.0%]  (FALLTHRU)
;;              8 [25.0%] 

;; basic block 25, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [75.0%]  (FALLTHRU)
(note 224 223 225 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 25 (var_location:SI i (reg/v:SI 80 [ i ])) -1
     (nil))
(insn 226 225 227 25 (set (reg:DI 223)
        (sign_extend:DI (reg/v:SI 80 [ i ]))) tiles.cpp:506 -1
     (nil))
(insn 227 226 228 25 (set (reg:DI 224 [ D.26285 ])
        (sign_extend:DI (reg/v:SI 80 [ i ]))) tiles.cpp:504 -1
     (nil))
(insn 228 227 229 25 (set (reg:SI 226)
        (mem:SI (plus:DI (mult:DI (reg:DI 224 [ D.26285 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_33+0 S4 A32])) tiles.cpp:506 -1
     (nil))
(insn 229 228 230 25 (parallel [
            (set (reg:SI 225 [ D.26281 ])
                (mult:SI (reg:SI 226)
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 -1
     (nil))
(insn 230 229 231 25 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 223)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 225 [ D.26281 ])) tiles.cpp:506 -1
     (nil))
(insn 231 230 232 25 (parallel [
            (set (reg/v:SI 65 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 -1
     (nil))
(debug_insn 232 231 233 25 (var_location:SI i (reg/v:SI 65 [ i ])) tiles.cpp:503 -1
     (nil))
(debug_insn 233 232 235 25 (var_location:SI i (reg/v:SI 65 [ i ])) -1
     (nil))
(insn 235 233 236 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 65 [ i ])
            (reg/v:SI 150 [ num_floats ]))) tiles.cpp:503 -1
     (nil))
(jump_insn 236 235 239 25 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:503 -1
     (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
        (nil))
 -> 234)
;;  succ:       20 [75.0%] 
;;              26 [25.0%]  (FALLTHRU)

;; basic block 26, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 [25.0%]  (FALLTHRU)
(note 239 236 237 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 237 239 238 26 (set (pc)
        (label_ref:DI 59)) tiles.cpp:503 650 {jump}
     (nil)
 -> 59)
;;  succ:       8 [100.0%] 

(barrier 238 237 240)
;; basic block 27, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [91.0%] 
(code_label 240 238 241 27 173 "" [1 uses])
(note 241 240 242 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 27 (set (reg:DI 93 [ ivtmp.305 ])
        (reg/v/f:DI 146 [ the_tiles ])) -1
     (nil))
(insn 243 242 244 27 (parallel [
            (set (reg:SI 227 [ D.26280 ])
                (plus:SI (reg/v:SI 150 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 244 243 245 27 (set (reg:DI 228 [ D.26282 ])
        (zero_extend:DI (reg:SI 227 [ D.26280 ]))) -1
     (nil))
(insn 245 244 246 27 (parallel [
            (set (reg:DI 229 [ D.26282 ])
                (plus:DI (reg:DI 228 [ D.26282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 246 245 20 27 (parallel [
            (set (reg:DI 143 [ D.26282 ])
                (ashift:DI (reg:DI 229 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 20 246 247 27 (set (reg/v:SI 106 [ j ])
        (const_int 0 [0])) tiles.cpp:510 -1
     (nil))
(jump_insn 247 20 248 27 (set (pc)
        (label_ref 339)) -1
     (nil)
 -> 339)
;;  succ:       44 [100.0%] 

(barrier 248 247 296)
;; basic block 28, loop depth 2, count 0, freq 3174, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 [95.2%] 
(code_label 296 248 249 28 186 "" [1 uses])
(note 249 296 346 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       29 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 29, loop depth 2, count 0, freq 3333, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 [100.0%]  (FALLTHRU,DFS_BACK)
;;              45 [100.0%] 
(code_label 346 249 250 29 191 "" [1 uses])
(note 250 346 251 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 251 250 252 29 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 252 251 253 29 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:516 -1
     (nil))
(insn 253 252 254 29 (set (reg:SI 82 [ D.26281 ])
        (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 230)) [0 MEM[symbol: qstate, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 -1
     (nil))
(insn 254 253 255 29 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:516 -1
     (nil))
(insn 255 254 256 29 (set (reg:SI 83 [ D.26281 ])
        (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 231)) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 -1
     (nil))
(insn 256 255 257 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 82 [ D.26281 ])
            (reg:SI 83 [ D.26281 ]))) tiles.cpp:516 -1
     (nil))
(jump_insn 257 256 258 29 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) tiles.cpp:516 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 264)
;;  succ:       30 [50.0%]  (FALLTHRU)
;;              31 [50.0%] 

;; basic block 30, loop depth 2, count 0, freq 1667, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [50.0%]  (FALLTHRU)
(note 258 257 259 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 30 (parallel [
            (set (reg:SI 232 [ D.26281 ])
                (minus:SI (reg:SI 82 [ D.26281 ])
                    (reg:SI 83 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 -1
     (nil))
(insn 260 259 261 30 (parallel [
            (set (reg:SI 235)
                (div:SI (reg:SI 232 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (set (reg:SI 234 [ D.26281 ])
                (mod:SI (reg:SI 232 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 -1
     (nil))
(insn 261 260 262 30 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (minus:SI (reg:SI 82 [ D.26281 ])
                    (reg:SI 234 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 -1
     (nil))
(jump_insn 262 261 263 30 (set (pc)
        (label_ref 272)) -1
     (nil)
 -> 272)
;;  succ:       32 [100.0%] 

(barrier 263 262 264)
;; basic block 31, loop depth 2, count 0, freq 1667, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [50.0%] 
(code_label 264 263 265 31 182 "" [1 uses])
(note 265 264 266 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 31 (parallel [
            (set (reg:SI 236 [ D.26281 ])
                (plus:SI (reg:SI 82 [ D.26281 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))
(insn 267 266 268 31 (parallel [
            (set (reg:SI 237 [ D.26281 ])
                (minus:SI (reg:SI 83 [ D.26281 ])
                    (reg:SI 82 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))
(insn 268 267 269 31 (parallel [
            (set (reg:SI 238 [ D.26281 ])
                (plus:SI (reg:SI 237 [ D.26281 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))
(insn 269 268 270 31 (parallel [
            (set (reg:SI 241)
                (div:SI (reg:SI 238 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (set (reg:SI 240 [ D.26281 ])
                (mod:SI (reg:SI 238 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))
(insn 270 269 271 31 (parallel [
            (set (reg:SI 242 [ D.26281 ])
                (plus:SI (reg:SI 236 [ D.26281 ])
                    (reg:SI 240 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))
(insn 271 270 272 31 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (minus:SI (reg:SI 242 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 -1
     (nil))
;;  succ:       32 [100.0%]  (FALLTHRU)

;; basic block 32, loop depth 2, count 0, freq 3333, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 [100.0%] 
;;              31 [100.0%]  (FALLTHRU)
(code_label 272 271 273 32 183 "" [1 uses])
(note 273 272 274 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 32 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 275 274 276 32 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 243)) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 92 [ D.26281 ])) -1
     (nil))
(insn 276 275 277 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                    (reg:DI 71 [ ivtmp.291 ])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.291_105, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:521 -1
     (nil))
(jump_insn 277 276 278 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) tiles.cpp:521 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 284)
;;  succ:       33 [50.0%]  (FALLTHRU)
;;              34 [50.0%] 

;; basic block 33, loop depth 2, count 0, freq 1667, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 [50.0%]  (FALLTHRU)
(note 278 277 279 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 33 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 -1
     (nil))
(insn 280 279 281 33 (parallel [
            (set (reg:SI 247)
                (div:SI (reg:SI 92 [ D.26281 ])
                    (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                            (reg:DI 244)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (set (reg:SI 246)
                (mod:SI (reg:SI 92 [ D.26281 ])
                    (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                            (reg:DI 244)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 -1
     (nil))
(insn 281 280 282 33 (set (reg:SI 92 [ D.26281 ])
        (reg:SI 246)) tiles.cpp:521 -1
     (nil))
(insn 282 281 283 33 (parallel [
            (set (reg:DI 248)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 -1
     (nil))
(insn 283 282 284 33 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 248)) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 92 [ D.26281 ])) tiles.cpp:521 -1
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)

;; basic block 34, loop depth 2, count 0, freq 3333, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 [50.0%] 
;;              33 [100.0%]  (FALLTHRU)
(code_label 284 283 285 34 184 "" [1 uses])
(note 285 284 286 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 34 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ D.26281 ])
            (const_int 0 [0]))) tiles.cpp:523 -1
     (nil))
(jump_insn 287 286 313 34 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) tiles.cpp:523 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 302)
;;  succ:       37 [91.0%] 
;;              35 [9.0%]  (FALLTHRU)

;; basic block 35, loop depth 2, count 0, freq 3333, maybe hot
;; Invalid sum of incoming frequencies 1119, should be 3333
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 [100.0%] 
;;              34 [9.0%]  (FALLTHRU)
(code_label 313 287 288 35 189 "" [1 uses])
(note 288 313 289 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 35 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:527 -1
     (nil))
(insn 290 289 291 35 (parallel [
            (set (reg:SI 250)
                (plus:SI (reg:SI 83 [ D.26281 ])
                    (reg:SI 62 [ ivtmp.295 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:527 -1
     (nil))
(insn 291 290 292 35 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 249)) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 250)) tiles.cpp:527 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 83 [ D.26281 ])
            (reg:SI 62 [ ivtmp.295 ]))
        (nil)))
(debug_insn 292 291 293 35 (var_location:SI i (debug_expr:SI D#18)) tiles.cpp:513 -1
     (nil))
(debug_insn 293 292 294 35 (var_location:SI i (debug_expr:SI D#18)) -1
     (nil))
(insn 294 293 295 35 (parallel [
            (set (reg:DI 71 [ ivtmp.291 ])
                (plus:DI (reg:DI 71 [ ivtmp.291 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 295 294 297 35 (parallel [
            (set (reg:SI 62 [ ivtmp.295 ])
                (plus:SI (reg:SI 62 [ ivtmp.295 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 297 295 298 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 71 [ ivtmp.291 ])
            (reg:DI 143 [ D.26282 ]))) tiles.cpp:513 -1
     (nil))
(jump_insn 298 297 301 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) tiles.cpp:513 -1
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 296)
;;  succ:       28 [95.2%] 
;;              36 [4.8%]  (FALLTHRU)

;; basic block 36, loop depth 1, count 0, freq 159, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 [4.8%]  (FALLTHRU)
(note 301 298 18 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 18 301 299 36 (set (reg/v:SI 110 [ num_floats ])
        (reg/v:SI 150 [ num_floats ])) -1
     (nil))
(jump_insn 299 18 300 36 (set (pc)
        (label_ref 321)) -1
     (nil)
 -> 321)
;;  succ:       42 [100.0%] 

(barrier 300 299 302)
;; basic block 37, loop depth 2, count 0, freq 819, maybe hot
;; Invalid sum of incoming frequencies 3033, should be 819
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 [91.0%] 
(code_label 302 300 303 37 185 "" [1 uses])
(note 303 302 304 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 37 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 305 304 318 37 (set (reg:SI 127 [ D.26281 ])
        (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 251)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) -1
     (nil))
;;  succ:       38 [100.0%]  (FALLTHRU)

;; basic block 38, loop depth 3, count 0, freq 9100, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 [100.0%]  (DFS_BACK)
;;              37 [100.0%]  (FALLTHRU)
(code_label 318 305 306 38 190 "" [1 uses])
(note 306 318 307 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 38 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (plus:SI (reg:SI 92 [ D.26281 ])
                    (reg:SI 127 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:524 -1
     (nil))
(insn 308 307 309 38 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ D.26281 ])
            (const_int 0 [0]))) tiles.cpp:523 -1
     (nil))
(jump_insn 309 308 310 38 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) tiles.cpp:523 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 316)
;;  succ:       40 [91.0%] 
;;              39 [9.0%]  (FALLTHRU)

;; basic block 39, loop depth 2, count 0, freq 819, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 [9.0%]  (FALLTHRU)
(note 310 309 17 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 17 310 311 39 (set (reg:SI 132 [ coordinates_I_lsm.266 ])
        (reg:SI 92 [ D.26281 ])) -1
     (nil))
(insn 311 17 312 39 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 312 311 314 39 (set (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                (reg:DI 252)) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 132 [ coordinates_I_lsm.266 ])) -1
     (nil))
(jump_insn 314 312 315 39 (set (pc)
        (label_ref 313)) -1
     (nil)
 -> 313)
;;  succ:       35 [100.0%] 

(barrier 315 314 316)
;; basic block 40, loop depth 3, count 0, freq 8281, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       38 [91.0%] 
(code_label 316 315 317 40 188 "" [1 uses])
(note 317 316 319 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 319 317 320 40 (set (pc)
        (label_ref 318)) -1
     (nil)
 -> 318)
;;  succ:       38 [100.0%]  (DFS_BACK)

(barrier 320 319 359)
;; basic block 41, loop depth 1, count 0, freq 8, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 [4.8%] 
(code_label 359 320 358 41 193 "" [1 uses])
(note 358 359 19 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 19 358 321 41 (set (reg/v:SI 110 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:513 -1
     (nil))
;;  succ:       42 [100.0%]  (FALLTHRU)

;; basic block 42, loop depth 1, count 0, freq 167, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 [100.0%]  (FALLTHRU)
;;              36 [100.0%] 
(code_label 321 19 322 42 187 "" [1 uses])
(note 322 321 323 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 42 (set (reg:DI 253)
        (sign_extend:DI (reg/v:SI 110 [ num_floats ]))) tiles.cpp:530 -1
     (nil))
(insn 324 323 325 42 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 253)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 106 [ j ])) tiles.cpp:530 -1
     (nil))
(insn 325 324 326 42 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:532 -1
     (nil))
(insn 326 325 327 42 (set (reg:DI 1 dx)
        (reg/v/f:DI 148 [ ctable ])) tiles.cpp:532 -1
     (nil))
(insn 327 326 328 42 (set (reg:SI 4 si)
        (reg/v:SI 70 [ num_coordinates ])) tiles.cpp:532 -1
     (nil))
(insn 328 327 329 42 (set (reg:DI 5 di)
        (reg:DI 254)) tiles.cpp:532 -1
     (nil))
(call_insn 329 328 330 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b82f1f16800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:532 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 330 329 331 42 (set (reg:SI 105 [ D.26281 ])
        (reg:SI 0 ax)) tiles.cpp:532 -1
     (nil))
(insn 331 330 332 42 (set (mem:SI (reg:DI 93 [ ivtmp.305 ]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 105 [ D.26281 ])) tiles.cpp:532 -1
     (nil))
(insn 332 331 333 42 (parallel [
            (set (reg/v:SI 106 [ j ])
                (plus:SI (reg/v:SI 106 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:510 -1
     (nil))
(debug_insn 333 332 334 42 (var_location:SI j (reg/v:SI 106 [ j ])) tiles.cpp:510 -1
     (nil))
(debug_insn 334 333 335 42 (var_location:SI j (reg/v:SI 106 [ j ])) -1
     (nil))
(insn 335 334 336 42 (parallel [
            (set (reg:DI 93 [ ivtmp.305 ])
                (plus:DI (reg:DI 93 [ ivtmp.305 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 336 335 337 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ j ])
            (reg/v:SI 147 [ num_tilings ]))) tiles.cpp:510 -1
     (nil))
(jump_insn 337 336 338 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 351)
            (pc))) tiles.cpp:510 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 351)
;;  succ:       43 [91.0%]  (FALLTHRU)
;;              47 [9.0%] 

;; basic block 43, loop depth 1, count 0, freq 152, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 [91.0%]  (FALLTHRU)
(note 338 337 339 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
;;  succ:       44 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 44, loop depth 1, count 0, freq 167, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 [100.0%]  (FALLTHRU,DFS_BACK)
;;              27 [100.0%] 
(code_label 339 338 340 44 181 "" [1 uses])
(note 340 339 341 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(debug_insn 341 340 342 44 (var_location:SI j (reg/v:SI 106 [ j ])) -1
     (nil))
(debug_insn 342 341 343 44 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 343 342 344 44 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 150 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:513 -1
     (nil))
(jump_insn 344 343 345 44 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) tiles.cpp:513 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 359)
;;  succ:       45 [95.2%]  (FALLTHRU)
;;              41 [4.8%] 

;; basic block 45, loop depth 1, count 0, freq 159, maybe hot
;;  prev block 44, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 [95.2%]  (FALLTHRU)
(note 345 344 15 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 15 345 16 45 (set (reg:SI 62 [ ivtmp.295 ])
        (const_int 1 [0x1])) tiles.cpp:513 -1
     (nil))
(insn 16 15 347 45 (set (reg:DI 71 [ ivtmp.291 ])
        (const_int 0 [0])) tiles.cpp:513 -1
     (nil))
(jump_insn 347 16 348 45 (set (pc)
        (label_ref 346)) tiles.cpp:513 -1
     (nil)
 -> 346)
;;  succ:       29 [100.0%] 

(barrier 348 347 351)
;; basic block 47, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 45, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 [9.0%] 
;;              9 [100.0%] 
(code_label 351 348 352 47 168 "" [2 uses])
(note 352 351 0 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function (static initializers for tiles.cpp) (_GLOBAL__sub_I_tiles.cpp, funcdef_no=1103, decl_uid=25455, cgraph_uid=347) (executed once)

(static initializers for tiles.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG __priority => 65535
  # DEBUG __initialize_p => 1
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


(static initializers for tiles.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG __priority => 65535
  # DEBUG __initialize_p => 1
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; # DEBUG __priority => 65535

(debug_insn 5 4 0 (var_location:SI __priority (const_int 0 [0])) -1
     (nil))
;; # DEBUG __initialize_p => 1

(debug_insn 6 5 0 (var_location:SI __initialize_p (const_int 0 [0])) -1
     (nil))
;; std::ios_base::Init::Init (&__ioinit);

(insn 7 6 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b82f1da6390 __ioinit>)) /usr/include/c++/4.8/iostream:74 -1
     (nil))

(call_insn 8 7 0 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x2b82f1903200 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.8/iostream:74 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle); [tail call]

(insn 9 8 10 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x2b82f1f9dab0 __dso_handle>)) /usr/include/c++/4.8/iostream:74 -1
     (nil))

(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b82f1da6390 __ioinit>)) /usr/include/c++/4.8/iostream:74 -1
     (nil))

(insn 11 10 12 2 (set (reg:DI 59)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b82f1903400 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) /usr/include/c++/4.8/iostream:74 -1
     (nil))

(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 59)) /usr/include/c++/4.8/iostream:74 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b82f1903400 __comp_dtor >)
        (nil)))

(call_insn/j 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x2b82f1f74f00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.8/iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))

(barrier 14 13 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (var_location:SI __priority (const_int 65535 [0xffff])) -1
     (nil))
(debug_insn 6 5 7 2 (var_location:SI __initialize_p (const_int 1 [0x1])) -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b82f1da6390 __ioinit>)) /usr/include/c++/4.8/iostream:74 -1
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x2b82f1903200 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.8/iostream:74 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x2b82f1f9dab0 __dso_handle>)) /usr/include/c++/4.8/iostream:74 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b82f1da6390 __ioinit>)) /usr/include/c++/4.8/iostream:74 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 59)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b82f1903400 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) /usr/include/c++/4.8/iostream:74 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 59)) /usr/include/c++/4.8/iostream:74 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b82f1903400 __comp_dtor >)
        (nil)))
(call_insn/j 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x2b82f1f74f00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.8/iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 14 13 0)
