
;; Function PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*) (_ZL18CollisionTable_newP11_typeobjectP7_objectS2_, funcdef_no=146, decl_uid=11212, cgraph_uid=146)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 62: local to bb 2 def dominates all uses has unique first use
Reg 60 uninteresting (no unique first use)
Found def insn 2 for 62 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r62,l0) best DIREG, allocno DIREG
    a0 (r60,l0) best AREG, allocno AREG

  a0(r60,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:50674,50674 SSE_REGS:50674,50674 MMX_REGS:50674,50674 FP_TOP_SSE_REGS:61850430,61850430 FP_SECOND_SSE_REGS:61850430,61850430 FLOAT_SSE_REGS:61850430,61850430 FLOAT_INT_REGS:61850430,61850430 INT_SSE_REGS:50674,50674 FLOAT_INT_SSE_REGS:61850430,61850430 ALL_REGS:61850430,61850430 MEM:14592,14592
  a1(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:39000,39000 SSE_REGS:39000,39000 MMX_REGS:39000,39000 FP_TOP_SSE_REGS:67535000,67535000 FP_SECOND_SSE_REGS:67535000,67535000 FLOAT_SSE_REGS:67535000,67535000 FLOAT_INT_REGS:67535000,67535000 INT_SSE_REGS:39000,39000 FLOAT_INT_SSE_REGS:67535000,67535000 ALL_REGS:67535000,67535000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r62: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r60,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:50674,50674 SSE_REGS:50674,50674 MMX_REGS:50674,50674 FP_TOP_SSE_REGS:61850430,61850430 FP_SECOND_SSE_REGS:61850430,61850430 FLOAT_SSE_REGS:61850430,61850430 FLOAT_INT_REGS:61850430,61850430 INT_SSE_REGS:50674,50674 FLOAT_INT_SSE_REGS:61850430,61850430 ALL_REGS:61850430,61850430 MEM:14592,14592
  a1(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:39000,39000 SSE_REGS:39000,39000 MMX_REGS:39000,39000 FP_TOP_SSE_REGS:67535000,67535000 FP_SECOND_SSE_REGS:67535000,67535000 FLOAT_SSE_REGS:67535000,67535000 FLOAT_INT_REGS:67535000,67535000 INT_SSE_REGS:39000,39000 FLOAT_INT_SSE_REGS:67535000,67535000 ALL_REGS:67535000,67535000 MEM:11000,11000

   Insn 27(l0): point = 0
   Insn 24(l0): point = 2
   Insn 17(l0): point = 5
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 2(l0): point = 20
 a0(r60): [3..12]
 a1(r62): [15..20]
Compressing live ranges: from 23 to 4 - 17%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r62): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r60,l0) conflicts:;; a1(r62,l0) conflicts:  regions=1, blocks=5, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r60 1r62
    modified regnos: 60 62
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 0-6 37-44)@41184
          2:( 0-3 6 37-44)@32000
      Allocno a0r60 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r62 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, node:  0-3 6 37-44 (confl regs =  4 5 7-36 45-51)
      Pushing a1(r62,l0)(cost 0)
      Pushing a0(r60,l0)(cost 0)
      Popping a0(r60,l0)  -- assign reg 0
      Popping a1(r62,l0)  -- assign reg 0
Disposition:
    0:r60  l0     0    1:r62  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r60={1d,4u} r62={1d,2u} 
;;    total ref usage 98{69d,29u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 62
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 5 2 (set (reg/v/f:DI 62 [ type ])
        (reg:DI 5 di [ type ])) tilesInt.C:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ type ])
        (nil)))
(note 5 2 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 5 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 0 [0])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ type ])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f/j:DI (plus:DI (reg/v/f:DI 62 [ type ])
                        (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64]) [0 *_4 S1 A8])
            (const_int 0 [0]))) tilesInt.C:22 663 {*call_value}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ type ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/v/f:DI 60 [ self ])
        (reg:DI 0 ax)) tilesInt.C:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 13 12 14 2 (var_location:DI self (reg/v/f:DI 60 [ self ])) tilesInt.C:22 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 60 [ self ])
            (const_int 0 [0]))) tilesInt.C:23 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 18)
            (pc))) tilesInt.C:23 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil)))
 -> 18)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (mem/f/j:DI (plus:DI (reg/v/f:DI 60 [ self ])
                (const_int 16 [0x10])) [0 self_6->ct+0 S8 A64])
        (const_int 0 [0])) tilesInt.C:25 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [10.1%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
(code_label 18 17 19 4 2 "" [1 uses])
(note 19 18 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 19 27 4 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 60 [ self ])) tilesInt.C:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ self ])
        (nil)))
(insn 27 24 0 4 (use (reg/i:DI 0 ax)) tilesInt.C:29 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*) (_ZL19tiles_LoadTilesWrapP7_objectS0_, funcdef_no=154, decl_uid=11314, cgraph_uid=154)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)
rescanning insn with uid = 314.
deleting insn with uid = 314.
deleting insn with uid = 313.
rescanning insn with uid = 294.
deleting insn with uid = 294.
deleting insn with uid = 291.
rescanning insn with uid = 251.
deleting insn with uid = 251.
deleting insn with uid = 244.
rescanning insn with uid = 240.
deleting insn with uid = 240.
deleting insn with uid = 239.
rescanning insn with uid = 232.
deleting insn with uid = 232.
deleting insn with uid = 225.
rescanning insn with uid = 202.
deleting insn with uid = 202.
deleting insn with uid = 200.
rescanning insn with uid = 193.
deleting insn with uid = 193.
deleting insn with uid = 191.
rescanning insn with uid = 178.
deleting insn with uid = 178.
deleting insn with uid = 176.
rescanning insn with uid = 166.
deleting insn with uid = 166.
deleting insn with uid = 165.
rescanning insn with uid = 148.
deleting insn with uid = 148.
deleting insn with uid = 146.
rescanning insn with uid = 122.
deleting insn with uid = 122.
deleting insn with uid = 121.
rescanning insn with uid = 104.
deleting insn with uid = 104.
deleting insn with uid = 103.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)
Reg 178: local to bb 2 def dominates all uses has unique first use
Ignoring reg 184, has equiv memory
Reg 108: local to bb 2 def dominates all uses has unique first use
Reg 110 uninteresting
Reg 113 uninteresting (no unique first use)
Reg 196 uninteresting
Reg 117 uninteresting (no unique first use)
Reg 119 uninteresting
Reg 122 uninteresting (no unique first use)
Reg 123 uninteresting
Reg 124 uninteresting
Reg 131 uninteresting
Reg 132 uninteresting
Reg 135 uninteresting (no unique first use)
Reg 136: def dominates all uses has unique first use
Reg 149 uninteresting
Reg 141 uninteresting
Reg 142 uninteresting
Reg 145 uninteresting
Reg 146 uninteresting
Ignoring reg 208, has equiv memory
Reg 209: local to bb 12 def dominates all uses has unique first use
Reg 154: local to bb 13 def dominates all uses has unique first use
Ignoring reg 157, has equiv memory
Reg 219 uninteresting
Reg 174: def dominates all uses has unique first use
Reg 221 uninteresting
Reg 163: local to bb 17 def dominates all uses has unique first use
Reg 223: local to bb 17 def dominates all uses has unique first use
Reg 126 uninteresting
Reg 228 uninteresting
Found def insn 99 for 108 to be not moveable
Reg 136 not local to one basic block
Found def insn 242 for 154 to be not moveable
Found def insn 288 for 163 to be not moveable
Reg 174 not local to one basic block
Found def insn 49 for 178 to be not moveable
Found def insn 224 for 209 to be not moveable
Found def insn 290 for 223 to be not moveable
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 3
;;  header 17, latch 17
;;  depth 1, outer 0
;;  nodes: 17
;;
;; Loop 2
;;  header 10, latch 10
;;  depth 1, outer 0
;;  nodes: 10
;;
;; Loop 1
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;; 2 succs { 22 3 }
;; 3 succs { 4 21 }
;; 4 succs { 19 5 }
;; 5 succs { 21 }
;; 6 succs { 6 7 }
;; 7 succs { 10 8 }
;; 8 succs { 12 9 }
;; 9 succs { 13 }
;; 10 succs { 10 11 }
;; 11 succs { 8 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 22 }
;; 16 succs { 17 }
;; 17 succs { 17 18 }
;; 18 succs { 15 }
;; 19 succs { 20 7 }
;; 20 succs { 6 }
;; 21 succs { 7 }
;; 22 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 157: (insn_list:REG_DEP_TRUE 256 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 75 (nil))
init_insns for 208: (insn_list:REG_DEP_TRUE 223 (nil))
Reg 181 had equivalence, but can't be eliminated
Reg 182 had equivalence, but can't be eliminated
Reg 185 had equivalence, but can't be eliminated
Reg 188 had equivalence, but can't be eliminated
Reg 191 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a8 (r229,l0) best DIREG, allocno DIREG
    a9 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a43 (r223,l3) best SIREG, allocno SIREG
    a45 (r221,l3) best DIREG, allocno DIREG
    a12 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r218,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r209,l0) best DREG, allocno DREG
    a20 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r201,l0) best DIREG, allocno DIREG
    a28 (r198,l0) best DIREG, allocno DIREG
    a29 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r194,l0) best DIREG, allocno DIREG
    a36 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a37 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r184,l0) best DREG, allocno DREG
    a39 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a35 (r181,l0) best CREG, allocno CREG
    a33 (r178,l0) best SIREG, allocno SIREG
    a41 (r174,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r168,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r163,l3) best AD_REGS, allocno AD_REGS
    a53 (r159,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r157,l0) best NO_REGS, allocno NO_REGS
    a17 (r154,l0) best AREG, allocno AREG
    a21 (r149,l0) best AREG, allocno AREG
    a54 (r146,l2) best AREG, allocno AREG
    a55 (r145,l2) best AREG, allocno AREG
    a56 (r142,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a57 (r141,l2) best AREG, allocno AREG
    a63 (r137,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a52 (r136,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a51 (r135,l2) best AREG, allocno AREG
    a18 (r135,l0) best AREG, allocno AREG
    a64 (r132,l1) best AREG, allocno AREG
    a65 (r131,l1) best AREG, allocno AREG
    a7 (r126,l0) best AREG, allocno AREG
    a24 (r124,l0) best AREG, allocno AREG
    a25 (r123,l0) best DIREG, allocno DIREG
    a62 (r122,l1) best AREG, allocno AREG
    a50 (r122,l2) best AREG, allocno AREG
    a5 (r122,l0) best AREG, allocno AREG
    a27 (r119,l0) best AREG, allocno AREG
    a61 (r117,l1) best AREG, allocno AREG
    a49 (r117,l2) best AREG, allocno AREG
    a4 (r117,l0) best AREG, allocno AREG
    a60 (r113,l1) best AREG, allocno AREG
    a48 (r113,l2) best AREG, allocno AREG
    a3 (r113,l0) best AREG, allocno AREG
    a31 (r110,l0) best AREG, allocno AREG
    a32 (r108,l0) best AREG, allocno AREG
    a0 (r107,l0) best AREG, allocno AREG
    a59 (r106,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a47 (r106,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a58 (r105,l1) best AREG, allocno AREG
    a46 (r105,l2) best AREG, allocno AREG
    a1 (r105,l0) best AREG, allocno AREG

  a0(r107,l0) costs: AREG:-319,-319 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5629,5629 SSE_REGS:5629,5629 MMX_REGS:5629,5629 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:5629,5629 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:1503,1503
  a1(r105,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:716,1768
  a2(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r113,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r117,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3393,3393 SSE_REGS:3393,3393 MMX_REGS:3393,3393 FP_TOP_SSE_REGS:8308335,8308335 FP_SECOND_SSE_REGS:8308335,8308335 FLOAT_SSE_REGS:8308335,8308335 FLOAT_INT_REGS:8308335,8308335 INT_SSE_REGS:3393,3393 FLOAT_INT_SSE_REGS:8308335,8308335 ALL_REGS:8308335,8308335 MEM:954,954
  a5(r122,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a6(r137,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:164,4372
  a7(r126,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a8(r229,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a9(r228,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a10(r168,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1053,48373 SSE_REGS:1053,48373 MMX_REGS:1053,48373 FP_TOP_SSE_REGS:1000000,63636850 FP_SECOND_SSE_REGS:1000000,63636850 FLOAT_SSE_REGS:1000000,63636850 FLOAT_INT_REGS:1000000,63636850 INT_SSE_REGS:1053,48373 FLOAT_INT_SSE_REGS:1000000,63636850 ALL_REGS:1000000,63636850 MEM:324,12154
  a11(r174,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,60636850 FP_SECOND_SSE_REGS:1000000,60636850 FLOAT_SSE_REGS:1000000,60636850 FLOAT_INT_REGS:1000000,60636850 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,60636850 ALL_REGS:1000000,60636850 MEM:324,3964
  a12(r219,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2106,2106 SSE_REGS:2106,2106 MMX_REGS:2106,2106 FP_TOP_SSE_REGS:6308335,6308335 FP_SECOND_SSE_REGS:6308335,6308335 FLOAT_SSE_REGS:6308335,6308335 FLOAT_INT_REGS:6308335,6308335 INT_SSE_REGS:2106,2106 FLOAT_INT_SSE_REGS:6308335,6308335 ALL_REGS:6308335,6308335 MEM:648,648
  a13(r158,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3276,3276 SSE_REGS:3276,3276 MMX_REGS:3276,3276 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3276,3276 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:756,756
  a14(r218,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:243,2973
  a15(r217,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:4212,4212 SSE_REGS:4212,4212 MMX_REGS:4212,4212 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:4212,4212 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:1053,1053
  a16(r157,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:-90,-90
  a17(r154,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a18(r135,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a19(r209,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a20(r208,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a21(r149,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a22(r159,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:360,21290
  a23(r136,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a24(r124,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a25(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a26(r201,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a27(r119,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a28(r198,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a29(r196,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a30(r194,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a31(r110,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a32(r108,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a33(r178,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a34(r184,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:7410,7410 SSE_REGS:7410,7410 MMX_REGS:7410,7410 FP_TOP_SSE_REGS:5000000,5000000 FP_SECOND_SSE_REGS:5000000,5000000 FLOAT_SSE_REGS:5000000,5000000 FLOAT_INT_REGS:5000000,5000000 INT_SSE_REGS:7410,7410 FLOAT_INT_SSE_REGS:5000000,5000000 ALL_REGS:5000000,5000000 MEM:1254,1254
  a35(r181,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a36(r191,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a37(r188,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a38(r185,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a39(r182,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a40(r168,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:47320,47320 SSE_REGS:47320,47320 MMX_REGS:47320,47320 FP_TOP_SSE_REGS:62636850,62636850 FP_SECOND_SSE_REGS:62636850,62636850 FLOAT_SSE_REGS:62636850,62636850 FLOAT_INT_REGS:62636850,62636850 INT_SSE_REGS:47320,47320 FLOAT_INT_SSE_REGS:62636850,62636850 ALL_REGS:62636850,62636850 MEM:11830,11830
  a41(r174,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a42(r218,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a43(r223,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-910,-910 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a44(r163,l3) costs: AREG:-910,-910 DREG:-910,-910 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a45(r221,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a46(r105,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a47(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a48(r113,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a49(r117,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a50(r122,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a51(r135,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a52(r136,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a53(r159,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:20930,20930
  a54(r146,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:7280,7280
  a55(r145,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a56(r142,l2) costs: AREG:24570,24570 DREG:24570,24570 CREG:24570,24570 BREG:24570,24570 SIREG:24570,24570 DIREG:24570,24570 AD_REGS:24570,24570 Q_REGS:24570,24570 NON_Q_REGS:24570,24570 INDEX_REGS:24570,24570 GENERAL_REGS:24570,24570 LEGACY_REGS:24570,24570 CLOBBERED_REGS:24570,24570 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a57(r141,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a58(r105,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a59(r106,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a60(r113,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a61(r117,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a62(r122,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a63(r137,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:4208,4208
  a64(r132,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a65(r131,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841


Pass 1 for finding pseudo/allocno costs

    r229: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r223: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r209: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r201: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r194: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r184: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r181: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r163,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r157: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r154: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r135,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r122,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a50 (r122,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r117,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a49 (r117,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r113,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a48 (r113,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r105,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r105,l2) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r107,l0) costs: AREG:-319,-319 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5629,5629 SSE_REGS:5629,5629 MMX_REGS:5629,5629 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:5629,5629 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:1503,1503
  a1(r105,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:716,1768
  a2(r106,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r113,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r117,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3393,3393 SSE_REGS:3393,3393 MMX_REGS:3393,3393 FP_TOP_SSE_REGS:8308335,8308335 FP_SECOND_SSE_REGS:8308335,8308335 FLOAT_SSE_REGS:8308335,8308335 FLOAT_INT_REGS:8308335,8308335 INT_SSE_REGS:3393,3393 FLOAT_INT_SSE_REGS:8308335,8308335 ALL_REGS:8308335,8308335 MEM:954,954
  a5(r122,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a6(r137,l0) costs: GENERAL_REGS:0,0 MEM:164,4372
  a7(r126,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a8(r229,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a9(r228,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a10(r168,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1053,48373 SSE_REGS:1053,48373 MMX_REGS:1053,48373 FP_TOP_SSE_REGS:1000000,63636850 FP_SECOND_SSE_REGS:1000000,63636850 FLOAT_SSE_REGS:1000000,63636850 FLOAT_INT_REGS:1000000,63636850 INT_SSE_REGS:1053,48373 FLOAT_INT_SSE_REGS:1000000,63636850 ALL_REGS:1000000,63636850 MEM:324,12154
  a11(r174,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,60636850 FP_SECOND_SSE_REGS:1000000,60636850 FLOAT_SSE_REGS:1000000,60636850 FLOAT_INT_REGS:1000000,60636850 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,60636850 ALL_REGS:1000000,60636850 MEM:324,3964
  a12(r219,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2106,2106 SSE_REGS:2106,2106 MMX_REGS:2106,2106 FP_TOP_SSE_REGS:6308335,6308335 FP_SECOND_SSE_REGS:6308335,6308335 FLOAT_SSE_REGS:6308335,6308335 FLOAT_INT_REGS:6308335,6308335 INT_SSE_REGS:2106,2106 FLOAT_INT_SSE_REGS:6308335,6308335 ALL_REGS:6308335,6308335 MEM:648,648
  a13(r158,l0) costs: GENERAL_REGS:360,360 SSE_FIRST_REG:3636,3636 SSE_REGS:3636,3636 MMX_REGS:3636,3636 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3636,3636 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:1116,1116
  a14(r218,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:243,2973
  a15(r217,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4212,4212 SSE_REGS:4212,4212 MMX_REGS:4212,4212 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:4212,4212 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:1053,1053
  a16(r157,l0) costs: GENERAL_REGS:720,720 SSE_FIRST_REG:3060,3060 SSE_REGS:3060,3060 MMX_REGS:3060,3060 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:3060,3060 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a17(r154,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a18(r135,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a19(r209,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a20(r208,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a21(r149,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a22(r159,l0) costs: GENERAL_REGS:0,0 MEM:360,21290
  a23(r136,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a24(r124,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a25(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a26(r201,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a27(r119,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a28(r198,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a29(r196,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a30(r194,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a31(r110,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a32(r108,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a33(r178,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a34(r184,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:7410,7410 SSE_REGS:7410,7410 MMX_REGS:7410,7410 FP_TOP_SSE_REGS:5000000,5000000 FP_SECOND_SSE_REGS:5000000,5000000 FLOAT_SSE_REGS:5000000,5000000 FLOAT_INT_REGS:5000000,5000000 INT_SSE_REGS:7410,7410 FLOAT_INT_SSE_REGS:5000000,5000000 ALL_REGS:5000000,5000000 MEM:1254,1254
  a35(r181,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a36(r191,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a37(r188,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a38(r185,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a39(r182,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a40(r168,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:47320,47320 SSE_REGS:47320,47320 MMX_REGS:47320,47320 FP_TOP_SSE_REGS:62636850,62636850 FP_SECOND_SSE_REGS:62636850,62636850 FLOAT_SSE_REGS:62636850,62636850 FLOAT_INT_REGS:62636850,62636850 INT_SSE_REGS:47320,47320 FLOAT_INT_SSE_REGS:62636850,62636850 ALL_REGS:62636850,62636850 MEM:11830,11830
  a41(r174,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a42(r218,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a43(r223,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-910,-910 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a44(r163,l3) costs: CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a45(r221,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a46(r105,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a47(r106,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a48(r113,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a49(r117,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a50(r122,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a51(r135,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a52(r136,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a53(r159,l2) costs: GENERAL_REGS:0,0 MEM:20930,20930
  a54(r146,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:7280,7280
  a55(r145,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a56(r142,l2) costs: AREG:30940,30940 DREG:30940,30940 CREG:30940,30940 BREG:30940,30940 SIREG:30940,30940 DIREG:30940,30940 AD_REGS:30940,30940 Q_REGS:30940,30940 NON_Q_REGS:30940,30940 INDEX_REGS:30940,30940 GENERAL_REGS:30940,30940 LEGACY_REGS:30940,30940 CLOBBERED_REGS:30940,30940 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a57(r141,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a58(r105,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a59(r106,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a60(r113,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a61(r117,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a62(r122,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a63(r137,l1) costs: GENERAL_REGS:0,0 MEM:4208,4208
  a64(r132,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a65(r131,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841

   Insn 343(l0): point = 0
   Insn 340(l0): point = 2
   Insn 377(l0): point = 5
   Insn 51(l0): point = 7
   Insn 55(l0): point = 10
   Insn 281(l0): point = 12
   Insn 279(l0): point = 14
   Insn 276(l0): point = 16
   Insn 275(l0): point = 18
   Insn 272(l0): point = 20
   Insn 372(l0): point = 23
   Insn 266(l0): point = 25
   Insn 265(l0): point = 27
   Insn 264(l0): point = 29
   Insn 263(l0): point = 31
   Insn 375(l0): point = 34
   Insn 261(l0): point = 37
   Insn 260(l0): point = 39
   Insn 256(l0): point = 41
   Insn 253(l0): point = 44
   Insn 252(l0): point = 46
   Insn 251(l0): point = 48
   Insn 250(l0): point = 50
   Insn 249(l0): point = 52
   Insn 248(l0): point = 54
   Insn 247(l0): point = 56
   Insn 246(l0): point = 58
   Insn 245(l0): point = 60
   Insn 242(l0): point = 62
   Insn 241(l0): point = 64
   Insn 240(l0): point = 66
   Insn 370(l0): point = 69
   Insn 234(l0): point = 71
   Insn 233(l0): point = 73
   Insn 232(l0): point = 75
   Insn 231(l0): point = 77
   Insn 230(l0): point = 79
   Insn 229(l0): point = 81
   Insn 228(l0): point = 83
   Insn 227(l0): point = 85
   Insn 226(l0): point = 87
   Insn 224(l0): point = 89
   Insn 223(l0): point = 91
   Insn 365(l0): point = 94
   Insn 182(l0): point = 97
   Insn 181(l0): point = 99
   Insn 180(l0): point = 101
   Insn 179(l0): point = 103
   Insn 178(l0): point = 105
   Insn 177(l0): point = 107
   Insn 368(l0): point = 110
   Insn 174(l0): point = 113
   Insn 173(l0): point = 115
   Insn 54(l0): point = 117
   Insn 169(l0): point = 119
   Insn 168(l0): point = 121
   Insn 167(l0): point = 123
   Insn 166(l0): point = 125
   Insn 330(l0): point = 128
   Insn 329(l0): point = 130
   Insn 323(l0): point = 132
   Insn 322(l0): point = 134
   Insn 321(l0): point = 136
   Insn 320(l0): point = 138
   Insn 319(l0): point = 140
   Insn 317(l0): point = 142
   Insn 316(l0): point = 144
   Insn 315(l0): point = 146
   Insn 314(l0): point = 148
   Insn 379(l0): point = 151
   Insn 53(l0): point = 153
   Insn 52(l0): point = 155
   Insn 361(l0): point = 158
   Insn 139(l0): point = 161
   Insn 138(l0): point = 163
   Insn 137(l0): point = 165
   Insn 136(l0): point = 167
   Insn 135(l0): point = 169
   Insn 133(l0): point = 172
   Insn 132(l0): point = 174
   Insn 131(l0): point = 176
   Insn 128(l0): point = 178
   Insn 127(l0): point = 180
   Insn 126(l0): point = 182
   Insn 125(l0): point = 184
   Insn 124(l0): point = 186
   Insn 123(l0): point = 188
   Insn 122(l0): point = 190
   Insn 118(l0): point = 192
   Insn 117(l0): point = 194
   Insn 116(l0): point = 196
   Insn 115(l0): point = 198
   Insn 114(l0): point = 200
   Insn 110(l0): point = 202
   Insn 109(l0): point = 204
   Insn 108(l0): point = 206
   Insn 107(l0): point = 208
   Insn 106(l0): point = 210
   Insn 105(l0): point = 212
   Insn 104(l0): point = 214
   Insn 101(l0): point = 217
   Insn 100(l0): point = 219
   Insn 56(l0): point = 221
   Insn 99(l0): point = 223
   Insn 98(l0): point = 225
   Insn 97(l0): point = 227
   Insn 96(l0): point = 229
   Insn 95(l0): point = 231
   Insn 94(l0): point = 233
   Insn 92(l0): point = 235
   Insn 91(l0): point = 237
   Insn 90(l0): point = 239
   Insn 89(l0): point = 241
   Insn 88(l0): point = 243
   Insn 87(l0): point = 245
   Insn 84(l0): point = 247
   Insn 83(l0): point = 249
   Insn 82(l0): point = 251
   Insn 79(l0): point = 253
   Insn 78(l0): point = 255
   Insn 77(l0): point = 257
   Insn 75(l0): point = 259
   Insn 74(l0): point = 261
   Insn 73(l0): point = 263
   Insn 72(l0): point = 265
   Insn 67(l0): point = 267
   Insn 65(l0): point = 269
   Insn 63(l0): point = 271
   Insn 61(l0): point = 273
   Insn 59(l0): point = 275
   Insn 49(l0): point = 277
   Insn 301(l3): point = 280
   Insn 300(l3): point = 282
   Insn 298(l3): point = 284
   Insn 295(l3): point = 286
   Insn 294(l3): point = 288
   Insn 293(l3): point = 290
   Insn 292(l3): point = 292
   Insn 290(l3): point = 294
   Insn 288(l3): point = 296
   Insn 287(l3): point = 298
   Insn 286(l3): point = 300
   Insn 285(l3): point = 302
   Insn 215(l2): point = 305
   Insn 214(l2): point = 307
   Insn 212(l2): point = 309
   Insn 208(l2): point = 311
   Insn 207(l2): point = 313
   Insn 206(l2): point = 315
   Insn 205(l2): point = 317
   Insn 204(l2): point = 319
   Insn 203(l2): point = 321
   Insn 202(l2): point = 323
   Insn 201(l2): point = 325
   Insn 199(l2): point = 327
   Insn 198(l2): point = 329
   Insn 197(l2): point = 331
   Insn 196(l2): point = 333
   Insn 195(l2): point = 335
   Insn 194(l2): point = 337
   Insn 193(l2): point = 339
   Insn 192(l2): point = 341
   Insn 161(l1): point = 344
   Insn 160(l1): point = 346
   Insn 158(l1): point = 348
   Insn 154(l1): point = 350
   Insn 153(l1): point = 352
   Insn 152(l1): point = 354
   Insn 151(l1): point = 356
   Insn 150(l1): point = 358
   Insn 149(l1): point = 360
   Insn 148(l1): point = 362
   Insn 147(l1): point = 364
 a0(r107): [217..221] [23..25] [3..4]
 a1(r105): [151..153] [86..132] [59..68] [5..9]
 a2(r106): [151..155] [88..142] [61..68] [5..9]
 a3(r113): [80..202] [53..68] [5..9]
 a4(r117): [37..192] [13..22] [5..9]
 a5(r122): [84..178] [57..68] [5..9]
 a6(r137): [5..7]
 a7(r126): [131..144]
 a8(r229): [137..138]
 a9(r228): [139..140]
 a10(r168): [10..10]
 a11(r174): [10..12]
 a12(r219): [13..14]
 a13(r158): [37..39] [15..22]
 a14(r218): [10..16]
 a15(r217): [17..20]
 a16(r157): [40..41]
 a17(r154): [51..62]
 a18(r135): [82..121] [55..68]
 a19(r209): [78..89]
 a20(r208): [90..91]
 a21(r149): [100..101]
 a22(r159): [113..117]
 a23(r136): [113..119]
 a24(r124): [164..165]
 a25(r123): [170..176]
 a26(r201): [183..184]
 a27(r119): [185..186]
 a28(r198): [197..198]
 a29(r196): [199..200]
 a30(r194): [207..208]
 a31(r110): [209..210]
 a32(r108): [220..223]
 a33(r178): [230..277]
 a34(r184): [234..259]
 a35(r181): [236..265]
 a36(r191): [242..243]
 a37(r188): [248..249]
 a38(r185): [254..255]
 a39(r182): [262..263]
 a40(r168): [280..304]
 a41(r174): [280..304]
 a42(r218): [280..304]
 a43(r223): [291..294]
 a44(r163): [293..296]
 a45(r221): [301..302]
 a46(r105): [305..343]
 a47(r106): [305..343]
 a48(r113): [305..343]
 a49(r117): [305..343]
 a50(r122): [305..343]
 a51(r135): [305..343]
 a52(r136): [305..343]
 a53(r159): [305..343]
 a54(r146): [312..313]
 a55(r145): [318..319]
 a56(r142): [328..329]
 a57(r141): [334..335]
 a58(r105): [344..366]
 a59(r106): [344..366]
 a60(r113): [344..366]
 a61(r117): [344..366]
 a62(r122): [344..366]
 a63(r137): [344..366]
 a64(r132): [351..352]
 a65(r131): [357..358]
 Rebuilding regno allocno list for 223
 Rebuilding regno allocno list for 221
      Moving ranges of a42r218 to a14r218:  [280..304]
      Moving ranges of a41r174 to a11r174:  [280..304]
      Moving ranges of a40r168 to a10r168:  [280..304]
 Rebuilding regno allocno list for 163
      Moving ranges of a53r159 to a22r159:  [305..343]
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 145
 Rebuilding regno allocno list for 142
 Rebuilding regno allocno list for 141
      Moving ranges of a63r137 to a6r137:  [344..366]
      Moving ranges of a52r136 to a23r136:  [305..343]
      Moving ranges of a51r135 to a18r135:  [305..343]
 Rebuilding regno allocno list for 132
 Rebuilding regno allocno list for 131
      Moving ranges of a62r122 to a5r122:  [344..366]
      Moving ranges of a50r122 to a5r122:  [305..343]
      Moving ranges of a61r117 to a4r117:  [344..366]
      Moving ranges of a49r117 to a4r117:  [305..343]
      Moving ranges of a60r113 to a3r113:  [344..366]
      Moving ranges of a48r113 to a3r113:  [305..343]
      Moving ranges of a59r106 to a2r106:  [344..366]
      Moving ranges of a47r106 to a2r106:  [305..343]
      Moving ranges of a58r105 to a1r105:  [344..366]
      Moving ranges of a46r105 to a1r105:  [305..343]
Compressing live ranges: from 367 to 78 - 21%
Ranges after the compression:
 a0(r107): [52..53] [12..13] [0..1]
 a1(r105): [66..77] [34..35] [18..29] [2..3]
 a2(r106): [66..77] [18..35] [2..3]
 a3(r113): [66..77] [18..47] [2..3]
 a4(r117): [66..77] [14..43] [6..11] [2..3]
 a5(r122): [66..77] [18..39] [2..3]
 a6(r137): [74..77] [2..3]
 a7(r126): [28..33]
 a8(r229): [30..31]
 a9(r228): [32..33]
 a10(r168): [62..65] [4..4]
 a11(r174): [62..65] [4..5]
 a12(r219): [6..7]
 a13(r158): [14..15] [8..11]
 a14(r218): [62..65] [4..9]
 a15(r217): [10..11]
 a16(r157): [16..17]
 a17(r154): [18..19]
 a18(r135): [66..73] [18..27]
 a19(r209): [20..21]
 a20(r208): [22..23]
 a21(r149): [24..25]
 a22(r159): [66..73] [26..27]
 a23(r136): [66..73] [26..27]
 a24(r124): [36..37]
 a25(r123): [38..39]
 a26(r201): [40..41]
 a27(r119): [42..43]
 a28(r198): [44..45]
 a29(r196): [46..47]
 a30(r194): [48..49]
 a31(r110): [50..51]
 a32(r108): [52..53]
 a33(r178): [54..61]
 a34(r184): [54..59]
 a35(r181): [54..61]
 a36(r191): [54..55]
 a37(r188): [56..57]
 a38(r185): [58..59]
 a39(r182): [60..61]
 a43(r223): [62..63]
 a44(r163): [62..63]
 a45(r221): [64..65]
 a54(r146): [66..67]
 a55(r145): [68..69]
 a56(r142): [70..71]
 a57(r141): [72..73]
 a64(r132): [74..75]
 a65(r131): [76..77]
+++Allocating 392 bytes for conflict table (uncompressed size 1056)
;; a0(r107,l0) conflicts: a32(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r105,l0) conflicts: a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a6(r137,l0) a17(r154,l0) a18(r135,l0) a19(r209,l0) a20(r208,l0) a21(r149,l0) a22(r159,l0) a23(r136,l0) a7(r126,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0) a64(r132,l0) a65(r131,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a2(r106,l0) conflicts: a1(r105,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a6(r137,l0) a17(r154,l0) a18(r135,l0) a19(r209,l0) a20(r208,l0) a21(r149,l0) a22(r159,l0) a23(r136,l0) a7(r126,l0) a8(r229,l0) a9(r228,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0) a64(r132,l0) a65(r131,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a3(r113,l0) conflicts: a1(r105,l0) a2(r106,l0) a4(r117,l0) a5(r122,l0) a6(r137,l0) a17(r154,l0) a18(r135,l0) a19(r209,l0) a20(r208,l0) a21(r149,l0) a22(r159,l0) a23(r136,l0) a7(r126,l0) a8(r229,l0) a9(r228,l0) a24(r124,l0) a25(r123,l0) a26(r201,l0) a27(r119,l0) a28(r198,l0) a29(r196,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0) a64(r132,l0) a65(r131,l0)
;;     total conflict hard regs: 0 4 5 37 38
;;     conflict hard regs: 0 4 5 37 38

;; a4(r117,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a5(r122,l0) a6(r137,l0) a14(r218,l0) a12(r219,l0) a13(r158,l0) a15(r217,l0) a17(r154,l0) a18(r135,l0) a19(r209,l0) a20(r208,l0) a21(r149,l0) a22(r159,l0) a23(r136,l0) a7(r126,l0) a8(r229,l0) a9(r228,l0) a24(r124,l0) a25(r123,l0) a26(r201,l0) a27(r119,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0) a64(r132,l0) a65(r131,l0)
;;     total conflict hard regs: 0-2 4 5 37 38
;;     conflict hard regs: 0-2 4 5 37 38

;; a5(r122,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a6(r137,l0) a17(r154,l0) a18(r135,l0) a19(r209,l0) a20(r208,l0) a21(r149,l0) a22(r159,l0) a23(r136,l0) a7(r126,l0) a8(r229,l0) a9(r228,l0) a24(r124,l0) a25(r123,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0) a64(r132,l0) a65(r131,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a6(r137,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a64(r132,l0) a65(r131,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a7(r126,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a8(r229,l0) a9(r228,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a8(r229,l0) conflicts: a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a7(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r228,l0) conflicts: a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a7(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r168,l0) conflicts: a11(r174,l0) a14(r218,l0) a43(r223,l0) a44(r163,l0) a45(r221,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a11(r174,l0) conflicts: a10(r168,l0) a14(r218,l0) a43(r223,l0) a44(r163,l0) a45(r221,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a12(r219,l0) conflicts: a4(r117,l0) a14(r218,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r158,l0) conflicts: a4(r117,l0) a14(r218,l0) a15(r217,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r218,l0) conflicts: a4(r117,l0) a10(r168,l0) a11(r174,l0) a12(r219,l0) a13(r158,l0) a43(r223,l0) a44(r163,l0) a45(r221,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a15(r217,l0) conflicts: a4(r117,l0) a13(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r157,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r154,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a18(r135,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a17(r154,l0) a19(r209,l0) a20(r208,l0) a21(r149,l0) a22(r159,l0) a23(r136,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0)
;;     total conflict hard regs: 0 4 5 38
;;     conflict hard regs: 0 4 5 38

;; a19(r209,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a20(r208,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r149,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r159,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0) a23(r136,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a23(r136,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0) a22(r159,l0) a54(r146,l0) a55(r145,l0) a57(r141,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a24(r124,l0) conflicts: a3(r113,l0) a4(r117,l0) a5(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r123,l0) conflicts: a3(r113,l0) a4(r117,l0) a5(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r201,l0) conflicts: a3(r113,l0) a4(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r119,l0) conflicts: a3(r113,l0) a4(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r198,l0) conflicts: a3(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r196,l0) conflicts: a3(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r194,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r110,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r108,l0) conflicts: a0(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r178,l0) conflicts: a36(r191,l0) a34(r184,l0) a35(r181,l0) a37(r188,l0) a38(r185,l0) a39(r182,l0)
;;     total conflict hard regs: 1 2 4 37 38
;;     conflict hard regs: 1 2 4 37 38

;; a34(r184,l0) conflicts: a36(r191,l0) a33(r178,l0) a35(r181,l0) a37(r188,l0) a38(r185,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a35(r181,l0) conflicts: a36(r191,l0) a34(r184,l0) a33(r178,l0) a37(r188,l0) a38(r185,l0) a39(r182,l0)
;;     total conflict hard regs: 37 38
;;     conflict hard regs: 37 38

;; a36(r191,l0) conflicts: a34(r184,l0) a33(r178,l0) a35(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r188,l0) conflicts: a34(r184,l0) a33(r178,l0) a35(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r185,l0) conflicts: a34(r184,l0) a33(r178,l0) a35(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r182,l0) conflicts: a33(r178,l0) a35(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r223,l0) conflicts: a10(r168,l0) a11(r174,l0) a14(r218,l0) a44(r163,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a44(r163,l0) conflicts: a10(r168,l0) a11(r174,l0) a14(r218,l0) a43(r223,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r221,l0) conflicts: a10(r168,l0) a11(r174,l0) a14(r218,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r146,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0) a22(r159,l0) a23(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r145,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0) a22(r159,l0) a23(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r142,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r141,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a18(r135,l0) a22(r159,l0) a23(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r132,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a6(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r131,l0) conflicts: a1(r105,l0) a2(r106,l0) a3(r113,l0) a4(r117,l0) a5(r122,l0) a6(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a8(r229)<->a9(r228)@5:shuffle
  cp1:a14(r218)<->a15(r217)@10:shuffle
  cp2:a12(r219)<->a13(r158)@10:shuffle
  cp3:a13(r158)<->a16(r157)@11:shuffle
  cp4:a30(r194)<->a31(r110)@11:shuffle
  cp5:a28(r198)<->a29(r196)@11:shuffle
  cp6:a26(r201)<->a27(r119)@11:shuffle
  regions=4, blocks=23, points=78
    allocnos=66 (big 0), copies=7, conflicts=0, ranges=71

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r107 1r105 2r106 3r113 4r117 5r122 6r137 7r126 8r229 9r228 10r168 11r174 12r219 13r158 14r218 15r217 16r157 17r154 18r135 19r209 20r208 21r149 22r159 23r136 24r124 25r123 26r201 27r119 28r198 29r196 30r194 31r110 32r108 33r178 34r184 35r181 36r191 37r188 38r185 39r182 43r223 44r163 45r221 54r146 55r145 56r142 57r141 64r132 65r131
    modified regnos: 105 106 107 108 110 113 117 119 122 123 124 126 131 132 135 136 137 141 142 145 146 149 154 157 158 159 163 168 174 178 181 182 184 185 188 191 194 196 198 201 208 209 217 218 219 221 223 228 229
    border:
    Pressure: GENERAL_REGS=10 SSE_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 21-28 45-51)@32760
        2:( 0-6 37-44)@138372
          3:( 1-3 6 37-44)@51324
            4:( 2 3 6 37-44)@33408
              5:( 3 6 41-44)@48108
      Spill a16(r157,l0)
      Allocno a0r107 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r105 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a2r106 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a3r113 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-38 45-51)
      Allocno a4r117 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-38 45-51)
      Allocno a5r122 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a6r137 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a7r126 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-51)
      Allocno a8r229 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a9r228 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a10r168 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a11r174 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a12r219 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a13r158 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a14r218 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a15r217 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a17r154 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a18r135 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 38 45-51)
      Allocno a19r209 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a20r208 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a21r149 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a22r159 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a23r136 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a24r124 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a25r123 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a26r201 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a27r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a28r198 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a29r196 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a30r194 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a31r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a32r108 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a33r178 of GENERAL_REGS(15) has 10 avail. regs  0 3 5 6 39-44, ^node:  0-6 37-44 (confl regs =  1 2 4 7-38 45-51)
      Allocno a34r184 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a35r181 of GENERAL_REGS(15) has 13 avail. regs  0-6 39-44, ^node:  0-6 37-44 (confl regs =  7-38 45-51)
      Allocno a36r191 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a37r188 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a38r185 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a39r182 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a43r223 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, ^node:  0-6 37-44 (confl regs =  1 7-36 45-51)
      Allocno a44r163 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a45r221 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a54r146 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a55r145 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a56r142 of SSE_REGS(16) has 16 avail. regs  21-28 45-51, node:  21-28 45-51 (confl regs =  0-20 29-44)
      Allocno a57r141 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a64r132 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a65r131 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a20(r208,l0)(cost 0)
      Pushing a9(r228,l0)(cost 0)
      Pushing a8(r229,l0)(cost 0)
      Pushing a19(r209,l0)(cost 0)
      Pushing a17(r154,l0)(cost 0)
      Pushing a24(r124,l0)(cost 0)
      Pushing a12(r219,l0)(cost 0)
      Pushing a31(r110,l0)(cost 0)
      Pushing a30(r194,l0)(cost 0)
      Pushing a29(r196,l0)(cost 0)
      Pushing a28(r198,l0)(cost 0)
      Pushing a27(r119,l0)(cost 0)
      Pushing a26(r201,l0)(cost 0)
      Pushing a21(r149,l0)(cost 0)
      Pushing a7(r126,l0)(cost 0)
      Pushing a39(r182,l0)(cost 0)
      Pushing a38(r185,l0)(cost 0)
      Pushing a37(r188,l0)(cost 0)
      Pushing a36(r191,l0)(cost 0)
      Pushing a32(r108,l0)(cost 0)
      Pushing a35(r181,l0)(cost 0)
      Pushing a33(r178,l0)(cost 0)
      Pushing a25(r123,l0)(cost 0)
      Pushing a13(r158,l0)(cost 0)
      Pushing a15(r217,l0)(cost 0)
      Pushing a0(r107,l0)(cost 0)
      Pushing a65(r131,l0)(cost 0)
      Pushing a64(r132,l0)(cost 0)
      Pushing a34(r184,l0)(cost 0)
      Pushing a11(r174,l0)(cost 0)
        Making a14(r218,l0) colorable
      Pushing a14(r218,l0)(cost 2973)
      Pushing a6(r137,l0)(cost 0)
      Pushing a56(r142,l0)(cost 0)
      Pushing a57(r141,l0)(cost 0)
      Pushing a55(r145,l0)(cost 0)
      Pushing a54(r146,l0)(cost 0)
      Pushing a45(r221,l0)(cost 0)
      Pushing a44(r163,l0)(cost 0)
      Pushing a43(r223,l0)(cost 0)
      Pushing a10(r168,l0)(cost 0)
      Pushing a22(r159,l0)(cost 0)
      Pushing a4(r117,l0)(potential spill: pri=954, cost=954)
        Making a1(r105,l0) colorable
        Making a2(r106,l0) colorable
        Making a3(r113,l0) colorable
        Making a5(r122,l0) colorable
        Making a18(r135,l0) colorable
        Making a23(r136,l0) colorable
      Pushing a18(r135,l0)(cost 1260)
      Pushing a2(r106,l0)(cost 1505)
      Pushing a1(r105,l0)(cost 1768)
      Pushing a23(r136,l0)(cost 3090)
      Pushing a5(r122,l0)(cost 4270)
      Pushing a3(r113,l0)(cost 4270)
      Popping a3(r113,l0)  -- assign reg 3
      Popping a5(r122,l0)  -- assign reg 6
      Popping a23(r136,l0)  -- assign reg 41
      Popping a1(r105,l0)  -- assign reg 42
      Popping a2(r106,l0)  -- assign reg 43
      Popping a18(r135,l0)  -- assign reg 44
      Popping a4(r117,l0)  -- spill
      Popping a22(r159,l0)  -- assign reg 1
      Popping a10(r168,l0)  -- assign reg 3
      Popping a43(r223,l0)  -- assign reg 4
      Popping a44(r163,l0)  -- assign reg 0
      Popping a45(r221,l0)  -- assign reg 5
      Popping a54(r146,l0)  -- assign reg 0
      Popping a55(r145,l0)  -- assign reg 0
      Popping a57(r141,l0)  -- assign reg 0
      Popping a56(r142,l0)  -- assign reg 21
      Popping a6(r137,l0)  -- assign reg 41
      Popping a14(r218,l0)  -- assign reg 6
      Popping a11(r174,l0)  -- assign reg 41
      Popping a34(r184,l0)  -- assign reg 1
      Popping a64(r132,l0)  -- assign reg 0
      Popping a65(r131,l0)  -- assign reg 0
      Popping a0(r107,l0)  -- assign reg 0
      Popping a15(r217,l0)  -- assign reg 6
      Popping a13(r158,l0)  -- assign reg 0
      Popping a25(r123,l0)  -- assign reg 5
      Popping a33(r178,l0)  -- assign reg 5
      Popping a35(r181,l0)  -- assign reg 2
      Popping a32(r108,l0)  -- assign reg 1
      Popping a36(r191,l0)  -- assign reg 0
      Popping a37(r188,l0)  -- assign reg 0
      Popping a38(r185,l0)  -- assign reg 0
      Popping a39(r182,l0)  -- assign reg 0
      Popping a7(r126,l0)  -- assign reg 41
      Popping a21(r149,l0)  -- assign reg 0
      Popping a26(r201,l0)  -- assign reg 5
      Popping a27(r119,l0)  -- assign reg 0
      Popping a28(r198,l0)  -- assign reg 5
      Popping a29(r196,l0)  -- assign reg 5
      Popping a30(r194,l0)  -- assign reg 5
      Popping a31(r110,l0)  -- assign reg 0
      Popping a12(r219,l0)  -- assign reg 0
      Popping a24(r124,l0)  -- assign reg 0
      Popping a17(r154,l0)  -- assign reg 0
      Popping a19(r209,l0)  -- assign reg 1
      Popping a8(r229,l0)  -- assign reg 5
      Popping a9(r228,l0)  -- assign reg 5
      Popping a20(r208,l0)  -- assign reg 0
Spilling a18r135 for a22r159
Assigning 44 to a22r159
       a18(r135,l0)  -- assign memory
Disposition:
    1:r105 l0    42    2:r106 l0    43    0:r107 l0     0   32:r108 l0     1
   31:r110 l0     0    3:r113 l0     3    4:r117 l0   mem   27:r119 l0     0
    5:r122 l0     6   25:r123 l0     5   24:r124 l0     0    7:r126 l0    41
   65:r131 l0     0   64:r132 l0     0   18:r135 l0   mem   23:r136 l0    41
    6:r137 l0    41   57:r141 l0     0   56:r142 l0    21   55:r145 l0     0
   54:r146 l0     0   21:r149 l0     0   17:r154 l0     0   16:r157 l0   mem
   13:r158 l0     0   22:r159 l0    44   44:r163 l0     0   10:r168 l0     3
   11:r174 l0    41   33:r178 l0     5   35:r181 l0     2   39:r182 l0     0
   34:r184 l0     1   38:r185 l0     0   37:r188 l0     0   36:r191 l0     0
   30:r194 l0     5   29:r196 l0     5   28:r198 l0     5   26:r201 l0     5
   20:r208 l0     0   19:r209 l0     1   15:r217 l0     6   14:r218 l0     6
   12:r219 l0     0   45:r221 l0     5   43:r223 l0     4    9:r228 l0     5
    8:r229 l0     5
New iteration of spill/restore move
+++Costs: overall -14034, reg -16518, mem 2484, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={27d,23u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,22u} r7={1d,67u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,21u} r17={46d,10u} r18={23d} r19={23d} r20={1d,52u,12e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r105={2d,5u} r106={2d,4u} r107={2d,1u} r108={1d,1u} r110={1d,1u} r113={1d,4u} r117={1d,4u} r119={1d,1u} r122={1d,4u} r123={1d,2u} r124={1d,1u} r126={1d,4u} r131={1d,1u} r132={1d,1u} r135={1d,5u} r136={1d,1u} r137={2d,6u} r141={1d,1u} r142={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,1u} r154={1d,2u} r157={1d,3u} r158={1d,2u} r159={2d,8u} r163={1d,1u} r168={2d,3u} r174={1d,1u} r178={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,4u} r185={1d,1u} r188={1d,1u} r191={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} r201={1d,1u} r208={1d,1u} r209={1d,1u} r217={2d,2u} r218={1d,1u} r219={1d,1u} r221={1d,1u} r223={1d,1u} r228={1d,1u} r229={1d,1u} 
;;    total ref usage 1505{1157d,336u,12e} in 200{177 regular + 23 call} insns.
(note 47 0 57 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107 108 178 181 182 184 185 188 191
(note 57 47 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 49 57 50 2 (set (reg/v/f:DI 178 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:244 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 50 49 59 2 NOTE_INSN_FUNCTION_BEG)
(insn 59 50 60 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:245 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 60 59 61 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:246 -1
     (nil))
(insn 61 60 62 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:249 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 62 61 63 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:250 -1
     (nil))
(insn 63 62 64 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:252 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 64 63 65 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:253 -1
     (nil))
(insn 65 64 66 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:255 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 66 65 67 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:256 -1
     (nil))
(insn 67 66 68 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:257 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 68 67 69 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:258 -1
     (nil))
(debug_insn 69 68 70 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:259 -1
     (nil))
(note 70 69 71 2 NOTE_INSN_DELETED)
(note 71 70 72 2 NOTE_INSN_DELETED)
(insn 72 71 73 2 (parallel [
            (set (reg/f:DI 181)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 73 72 74 2 (parallel [
            (set (reg/f:DI 182)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 74 73 75 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S8 A64])
        (reg/f:DI 182)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 75 74 77 2 (set (reg:DI 184)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 77 75 78 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 2 (parallel [
            (set (reg/f:DI 185)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 79 78 82 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 185)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 82 79 83 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 2 (parallel [
            (set (reg/f:DI 188)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 84 83 87 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 188)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 87 84 88 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 2 (parallel [
            (set (reg/f:DI 191)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 89 88 90 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 191)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 90 89 91 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))) tilesInt.C:267 267 {*leadi}
     (nil))
(insn 91 90 92 2 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -112 [0xffffffffffffff90]))) tilesInt.C:267 267 {*leadi}
     (nil))
(insn 92 91 94 2 (set (reg:DI 2 cx)
        (reg/f:DI 181)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 94 92 95 2 (set (reg:DI 1 dx)
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 184)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 95 94 96 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b9b8a16a720 *.LC0>)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 2 (set (reg:DI 5 di)
        (reg/v/f:DI 178 [ args ])) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 178 [ args ])
        (nil)))
(insn 97 96 98 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:267 91 {*movqi_internal}
     (nil))
(call_insn 98 97 99 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 56 [0x38]))) tilesInt.C:267 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                    (const_int 40 [0x28])) [0  S8 A64]))
                                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                        (const_int 48 [0x30])) [0  S8 A64]))
                                                            (nil))))))))))))))))
(insn 99 98 56 2 (set (reg:SI 108 [ D.11814 ])
        (reg:SI 0 ax)) tilesInt.C:267 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 56 99 100 2 (set (reg/f:DI 107 [ D.11813 ])
        (const_int 0 [0])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 100 56 101 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.11814 ])
            (const_int 0 [0]))) tilesInt.C:262 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.11814 ])
        (nil)))
(jump_insn 101 100 102 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 353)
            (pc))) tilesInt.C:262 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 353)
;;  succ:       22 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 113 117 119 122 123 194 196 198 201
(note 102 101 104 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 104 102 105 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:270 87 {*movdi_internal_rex64}
     (nil))
(call_insn 105 104 106 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:270 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 106 105 107 3 (set (reg:DI 110 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 107 106 108 3 (parallel [
            (set (reg:DI 194 [ D.11816 ])
                (ashift:DI (reg:DI 110 [ D.11815 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:270 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ D.11815 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 3 (set (reg:DI 5 di)
        (reg:DI 194 [ D.11816 ])) tilesInt.C:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 194 [ D.11816 ])
        (nil)))
(call_insn 109 108 110 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:270 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 110 109 112 3 (set (reg/v/f:DI 113 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 195)
            (nil))))
(debug_insn 112 110 113 3 (var_location:DI variables (reg/v/f:DI 113 [ variables ])) tilesInt.C:270 -1
     (nil))
(note 113 112 114 3 NOTE_INSN_DELETED)
(insn 114 113 115 3 (set (reg:DI 196 [ D.11816 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128]))) tilesInt.C:271 149 {*extendsidi2_rex64}
     (nil))
(insn 115 114 116 3 (parallel [
            (set (reg:DI 198 [ D.11816 ])
                (ashift:DI (reg:DI 196 [ D.11816 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:271 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 196 [ D.11816 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 3 (set (reg:DI 5 di)
        (reg:DI 198 [ D.11816 ])) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 198 [ D.11816 ])
        (nil)))
(call_insn 117 116 118 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:271 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 118 117 120 3 (set (reg/v/f:DI 117 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 199)
            (nil))))
(debug_insn 120 118 122 3 (var_location:DI the_tiles (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:271 -1
     (nil))
(insn 122 120 123 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:272 87 {*movdi_internal_rex64}
     (nil))
(call_insn 123 122 124 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:272 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 124 123 125 3 (set (reg:DI 119 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 125 124 126 3 (parallel [
            (set (reg:DI 201 [ D.11816 ])
                (ashift:DI (reg:DI 119 [ D.11815 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:272 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.11815 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 3 (set (reg:DI 5 di)
        (reg:DI 201 [ D.11816 ])) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 201 [ D.11816 ])
        (nil)))
(call_insn 127 126 128 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:272 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 128 127 130 3 (set (reg/v/f:DI 122 [ wrapwidths ])
        (reg:DI 0 ax)) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 202)
            (nil))))
(debug_insn 130 128 131 3 (var_location:DI wrapwidths (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:272 -1
     (nil))
(insn 131 130 132 3 (set (reg/f:DI 123 [ ints_list.7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:274 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ ints_list.7 ])
            (const_int 0 [0]))) tilesInt.C:274 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 133 132 134 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 335)
            (pc))) tilesInt.C:274 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 335)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              21 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 124
(note 134 133 135 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 4 (set (reg:DI 5 di)
        (reg/f:DI 123 [ ints_list.7 ])) tilesInt.C:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 123 [ ints_list.7 ])
        (nil)))
(call_insn 136 135 137 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:274 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 4 (set (reg:DI 124 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 138 137 139 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 124 [ D.11815 ])
            (const_int 0 [0]))) tilesInt.C:274 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.11815 ])
        (nil)))
(jump_insn 139 138 360 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) tilesInt.C:274 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 311)
;;  succ:       19 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 360 139 361 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 361 360 362 5 (set (pc)
        (label_ref 335)) 650 {jump}
     (nil)
 -> 335)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122

(barrier 362 361 332)
;; basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              20 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 131 132 137
(code_label 332 362 144 6 23 "" [2 uses])
(note 144 332 145 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 145 144 147 6 (var_location:SI i (subreg:SI (reg:DI 137 [ ivtmp.79 ]) 0)) -1
     (nil))
(insn 147 145 148 6 (set (reg:DI 4 si)
        (reg:DI 137 [ ivtmp.79 ])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (nil))
(call_insn 149 148 150 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:279 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 150 149 151 6 (set (reg/f:DI 131 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 151 150 152 6 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.11813 ])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.11813 ])
        (nil)))
(call_insn 152 151 153 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:279 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 153 152 154 6 (set (reg:DI 132 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 154 153 155 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 137 [ ivtmp.79 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 105 [ ints ])) [0 MEM[base: ints_53, index: ivtmp.79_132, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 132 [ D.11815 ]) 0)) tilesInt.C:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 132 [ D.11815 ])
        (nil)))
(debug_insn 155 154 157 6 (var_location:SI D#3 (plus:SI (subreg:SI (reg:DI 137 [ ivtmp.79 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 157 155 158 6 (var_location:SI i (debug_expr:SI D#3)) -1
     (nil))
(insn 158 157 160 6 (parallel [
            (set (reg:DI 137 [ ivtmp.79 ])
                (plus:DI (reg:DI 137 [ ivtmp.79 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 160 158 161 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 106 [ num_ints ])
            (subreg:SI (reg:DI 137 [ ivtmp.79 ]) 0))) tilesInt.C:278 7 {*cmpsi_1}
     (nil))
(jump_insn 161 160 328 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 332)
            (pc))) tilesInt.C:278 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 332)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       19 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              21 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u132(6){ }u133(7){ }u134(16){ }u135(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 135 136 159
(code_label 328 161 162 7 22 "" [2 uses])
(note 162 328 163 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 163 162 164 7 (var_location:SI num_ints (reg/v:SI 106 [ num_ints ])) -1
     (nil))
(debug_insn 164 163 166 7 (var_location:DI ints (reg/v/f:DI 105 [ ints ])) -1
     (nil))
(insn 166 164 167 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:282 87 {*movdi_internal_rex64}
     (nil))
(call_insn 167 166 168 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:282 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 7 (set (reg:DI 135 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:282 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 169 168 170 7 (set (reg/v:SI 136 [ num_variables ])
        (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:282 89 {*movsi_internal}
     (nil))
(debug_insn 170 169 172 7 (var_location:SI num_variables (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:282 -1
     (nil))
(debug_insn 172 170 54 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 54 172 173 7 (set (reg:DI 159 [ ivtmp.73 ])
        (const_int 0 [0])) tilesInt.C:284 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 173 54 174 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 135 [ D.11815 ]) 0)
            (const_int 0 [0]))) tilesInt.C:284 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 174 173 213 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 355)
            (pc))) tilesInt.C:284 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 355)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 149
(code_label 213 174 175 8 16 "" [1 uses])
(note 175 213 177 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 177 175 178 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:290 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:290 87 {*movdi_internal_rex64}
     (nil))
(call_insn 179 178 180 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:290 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 180 179 181 8 (set (reg:SI 149 [ D.11814 ])
        (reg:SI 0 ax)) tilesInt.C:290 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 181 180 182 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11814 ])
            (const_int 0 [0]))) tilesInt.C:290 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 149 [ D.11814 ])
        (nil)))
(jump_insn 182 181 363 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) tilesInt.C:290 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 220)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 363 182 365 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 365 363 366 9 (set (pc)
        (label_ref 364)) 650 {jump}
     (nil)
 -> 364)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135

(barrier 366 365 355)
;; basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u159(6){ }u160(7){ }u161(16){ }u162(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 122 136 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 141 142 145 146 159
(code_label 355 366 354 10 28 "" [2 uses])
(note 354 355 189 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 189 354 192 10 (var_location:SI i (subreg:SI (reg:DI 159 [ ivtmp.73 ]) 0)) -1
     (nil))
(insn 192 189 193 10 (set (reg:DI 4 si)
        (reg:DI 159 [ ivtmp.73 ])) tilesInt.C:286 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:286 87 {*movdi_internal_rex64}
     (nil))
(call_insn 194 193 195 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:286 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 195 194 196 10 (set (reg/f:DI 141 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 196 195 197 10 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.11813 ])) tilesInt.C:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.11813 ])
        (nil)))
(call_insn 197 196 198 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:286 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 198 197 199 10 (set (reg:DF 142 [ D.11817 ])
        (reg:DF 21 xmm0)) tilesInt.C:286 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 199 198 201 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 159 [ ivtmp.73 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 113 [ variables ])) [0 MEM[base: variables_30, index: ivtmp.73_133, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 142 [ D.11817 ]))) tilesInt.C:286 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 142 [ D.11817 ])
        (nil)))
(insn 201 199 202 10 (set (reg:DI 4 si)
        (reg:DI 159 [ ivtmp.73 ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(insn 202 201 203 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(call_insn 203 202 204 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 204 203 205 10 (set (reg/f:DI 145 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 205 204 206 10 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.11813 ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.11813 ])
        (nil)))
(call_insn 206 205 207 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 207 206 208 10 (set (reg:DI 146 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 208 207 209 10 (set (mem:SI (plus:DI (mult:DI (reg:DI 159 [ ivtmp.73 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 122 [ wrapwidths ])) [0 MEM[base: wrapwidths_42, index: ivtmp.73_133, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 146 [ D.11815 ]) 0)) tilesInt.C:287 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 146 [ D.11815 ])
        (nil)))
(debug_insn 209 208 211 10 (var_location:SI D#2 (plus:SI (subreg:SI (reg:DI 159 [ ivtmp.73 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 211 209 212 10 (var_location:SI i (debug_expr:SI D#2)) -1
     (nil))
(insn 212 211 214 10 (parallel [
            (set (reg:DI 159 [ ivtmp.73 ])
                (plus:DI (reg:DI 159 [ ivtmp.73 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 214 212 215 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 136 [ num_variables ])
            (subreg:SI (reg:DI 159 [ ivtmp.73 ]) 0))) tilesInt.C:284 7 {*cmpsi_1}
     (nil))
(jump_insn 215 214 367 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 355)
            (pc))) tilesInt.C:284 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 355)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 367 215 368 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 368 367 369 11 (set (pc)
        (label_ref 213)) 650 {jump}
     (nil)
 -> 213)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135

(barrier 369 368 220)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u197(6){ }u198(7){ }u199(16){ }u200(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 208 209
(code_label 220 369 221 12 14 "" [1 uses])
(note 221 220 222 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 222 221 223 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:292 -1
     (nil))
(insn 223 222 224 12 (set (reg/f:DI 208 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:292 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 224 223 226 12 (set (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 208 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 208 [ memorctable ])
        (nil)))
(insn 226 224 227 12 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 106 [ num_ints ])) tilesInt.C:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 106 [ num_ints ])
        (nil)))
(insn 227 226 228 12 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 105 [ ints ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ ints ])
        (nil)))
(insn 228 227 229 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 122 [ wrapwidths ])
        (nil)))
(insn 229 228 230 12 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ D.11815 ])
        (nil)))
(insn 230 229 231 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 113 [ variables ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 113 [ variables ])
        (nil)))
(insn 231 230 232 12 (set (reg:DI 1 dx)
        (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])
        (nil)))
(insn 232 231 233 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:293 89 {*movsi_internal}
     (nil))
(insn 233 232 234 12 (set (reg:DI 5 di)
        (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (nil))
(call_insn 234 233 370 12 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a0a6000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:293 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
(jump_insn 370 234 371 12 (set (pc)
        (label_ref 254)) 650 {jump}
     (nil)
 -> 254)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

(barrier 371 370 364)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u224(6){ }u225(7){ }u226(16){ }u227(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 154
(code_label 364 371 238 13 31 "" [1 uses])
(note 238 364 240 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 240 238 241 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:297 87 {*movdi_internal_rex64}
     (nil))
(call_insn 241 240 242 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:297 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 242 241 243 13 (set (reg:DI 154 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 243 242 245 13 (var_location:SI memory_size (subreg:SI (reg:DI 154 [ D.11815 ]) 0)) tilesInt.C:297 -1
     (nil))
(insn 245 243 246 13 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 106 [ num_ints ])) tilesInt.C:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 106 [ num_ints ])
        (nil)))
(insn 246 245 247 13 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 105 [ ints ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ ints ])
        (nil)))
(insn 247 246 248 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 122 [ wrapwidths ])
        (nil)))
(insn 248 247 249 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ D.11815 ])
        (nil)))
(insn 249 248 250 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 113 [ variables ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 113 [ variables ])
        (nil)))
(insn 250 249 251 13 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 154 [ D.11815 ]) 0)) tilesInt.C:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 154 [ D.11815 ])
        (nil)))
(insn 251 250 252 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:298 89 {*movsi_internal}
     (nil))
(insn 252 251 253 13 (set (reg:DI 5 di)
        (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (nil))
(call_insn 253 252 254 13 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a09df00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:298 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u254(6){ }u255(7){ }u256(16){ }u257(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157 158
(code_label 254 253 255 14 18 "" [1 uses])
(note 255 254 256 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 14 (set (reg:SI 157 [ num_tilings.4 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:301 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])
        (nil)))
(note 257 256 259 14 NOTE_INSN_DELETED)
(debug_insn 259 257 260 14 (var_location:SI i (plus:SI (reg:SI 157 [ num_tilings.4 ])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 260 259 261 14 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg:SI 157 [ num_tilings.4 ])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg/v:SI 158 [ i ])
                (plus:SI (reg:SI 157 [ num_tilings.4 ])
                    (const_int -1 [0xffffffffffffffff])))
        ]) tilesInt.C:301 281 {*addsi_2}
     (expr_list:REG_DEAD (reg:SI 157 [ num_tilings.4 ])
        (nil)))
(jump_insn 261 260 299 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) tilesInt.C:301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 269)
;;  succ:       16 [91.0%] 
;;              15 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 [9.0%]  (FALLTHRU)
;;              18 [100.0%]  (LOOP_EXIT)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u263(6){ }u264(7){ }u265(16){ }u266(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107
(code_label 299 261 262 15 20 "" [1 uses])
(note 262 299 263 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:303 87 {*movdi_internal_rex64}
     (nil))
(insn 264 263 265 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:303 91 {*movqi_internal}
     (nil))
(call_insn 265 264 266 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:303 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 266 265 372 15 (set (reg/f:DI 107 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 372 266 373 15 (set (pc)
        (label_ref 353)) 650 {jump}
     (nil)
 -> 353)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

(barrier 373 372 269)
;; basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14 [91.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u271(6){ }u272(7){ }u273(16){ }u274(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  def 	 17 [flags] 168 174 217 218 219
(code_label 269 373 270 16 19 "" [1 uses])
(note 270 269 272 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 272 270 273 16 (set (reg:DI 217)
        (zero_extend:DI (reg/v:SI 158 [ i ]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(note 273 272 275 16 NOTE_INSN_DELETED)
(insn 275 273 276 16 (set (reg:DI 217)
        (not:DI (reg:DI 217))) 496 {*one_cmpldi2_1}
     (nil))
(insn 276 275 279 16 (parallel [
            (set (reg:DI 218)
                (ashift:DI (reg:DI 217)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 279 276 280 16 (set (reg:DI 219 [ D.11819 ])
        (sign_extend:DI (reg/v:SI 158 [ i ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 158 [ i ])
        (nil)))
(note 280 279 281 16 NOTE_INSN_DELETED)
(insn 281 280 55 16 (set (reg/f:DI 174 [ D.11821 ])
        (plus:DI (mult:DI (reg:DI 219 [ D.11819 ])
                (const_int 4 [0x4]))
            (reg/v/f:DI 117 [ the_tiles ]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 219 [ D.11819 ])
        (expr_list:REG_DEAD (reg/v/f:DI 117 [ the_tiles ])
            (nil))))
(insn 55 281 303 16 (set (reg:DI 168 [ ivtmp.69 ])
        (const_int 0 [0])) tilesInt.C:301 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

;; basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       17 [91.0%]  (DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u283(6){ }u284(7){ }u285(16){ }u286(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 163 168 221 223
(code_label 303 55 282 17 21 "" [1 uses])
(note 282 303 283 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 283 282 284 17 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(note 284 283 285 17 NOTE_INSN_DELETED)
(insn 285 284 286 17 (set (reg:DI 221 [ D.11815 ])
        (sign_extend:DI (mem:SI (plus:DI (reg/f:DI 174 [ D.11821 ])
                    (reg:DI 168 [ ivtmp.69 ])) [0 MEM[base: _147, index: ivtmp.69_138, offset: 0B]+0 S4 A32]))) tilesInt.C:302 149 {*extendsidi2_rex64}
     (nil))
(insn 286 285 287 17 (set (reg:DI 5 di)
        (reg:DI 221 [ D.11815 ])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 221 [ D.11815 ])
        (nil)))
(call_insn 287 286 288 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:302 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 288 287 289 17 (set (reg/f:DI 163 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(note 289 288 290 17 NOTE_INSN_DELETED)
(insn 290 289 292 17 (set (reg:DI 223 [ D.11815 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])) [0 start_element+0 S4 A128]))) tilesInt.C:302 149 {*extendsidi2_rex64}
     (nil))
(insn 292 290 293 17 (set (reg:DI 1 dx)
        (reg/f:DI 163 [ D.11813 ])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 163 [ D.11813 ])
        (nil)))
(insn 293 292 294 17 (set (reg:DI 4 si)
        (reg:DI 223 [ D.11815 ])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 223 [ D.11815 ])
        (nil)))
(insn 294 293 295 17 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 tiles_list+0 S8 A128])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (nil))
(call_insn 295 294 297 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9b89f7bf00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:302 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 297 295 298 17 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(insn 298 297 300 17 (parallel [
            (set (reg:DI 168 [ ivtmp.69 ])
                (plus:DI (reg:DI 168 [ ivtmp.69 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 300 298 301 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 168 [ ivtmp.69 ])
            (reg:DI 218))) tilesInt.C:301 8 {*cmpdi_1}
     (nil))
(jump_insn 301 300 374 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 303)
            (pc))) tilesInt.C:301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 303)
;;  succ:       17 [91.0%]  (DFS_BACK)
;;              18 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

;; basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 17, next block 19, flags: (NEW, RTL, MODIFIED)
;;  pred:       17 [9.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 374 301 375 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 375 374 376 18 (set (pc)
        (label_ref 299)) 650 {jump}
     (nil)
 -> 299)
;;  succ:       15 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 376 375 311)
;; basic block 19, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u308(6){ }u309(7){ }u310(16){ }u311(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 106 126 228 229
(code_label 311 376 312 19 11 "" [1 uses])
(note 312 311 314 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 314 312 315 19 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:276 87 {*movdi_internal_rex64}
     (nil))
(call_insn 315 314 316 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:276 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 316 315 317 19 (set (reg:DI 126 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 317 316 318 19 (set (reg/v:SI 106 [ num_ints ])
        (subreg:SI (reg:DI 126 [ D.11815 ]) 0)) tilesInt.C:276 89 {*movsi_internal}
     (nil))
(debug_insn 318 317 319 19 (var_location:SI num_ints (subreg:SI (reg:DI 126 [ D.11815 ]) 0)) tilesInt.C:276 -1
     (nil))
(insn 319 318 320 19 (set (reg:DI 228 [ D.11816 ])
        (sign_extend:DI (subreg:SI (reg:DI 126 [ D.11815 ]) 0))) tilesInt.C:277 149 {*extendsidi2_rex64}
     (nil))
(insn 320 319 321 19 (parallel [
            (set (reg:DI 229 [ D.11816 ])
                (ashift:DI (reg:DI 228 [ D.11816 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:277 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.11816 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 321 320 322 19 (set (reg:DI 5 di)
        (reg:DI 229 [ D.11816 ])) tilesInt.C:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 229 [ D.11816 ])
        (nil)))
(call_insn 322 321 323 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:277 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 323 322 325 19 (set (reg/v/f:DI 105 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 230)
            (nil))))
(debug_insn 325 323 327 19 (var_location:DI ints (reg/v/f:DI 105 [ ints ])) tilesInt.C:277 -1
     (nil))
(debug_insn 327 325 329 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 329 327 330 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 126 [ D.11815 ]) 0)
            (const_int 0 [0]))) tilesInt.C:278 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.11815 ])
        (nil)))
(jump_insn 330 329 331 19 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) tilesInt.C:278 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 328)
;;  succ:       20 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

;; basic block 20, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 [91.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u328(6){ }u329(7){ }u330(16){ }u331(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 137
(note 331 330 51 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 51 331 377 20 (set (reg:DI 137 [ ivtmp.79 ])
        (const_int 0 [0])) tilesInt.C:278 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 377 51 378 20 (set (pc)
        (label_ref 332)) 650 {jump}
     (nil)
 -> 332)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

(barrier 378 377 335)
;; basic block 21, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 105 106
(code_label 335 378 336 21 10 "" [2 uses])
(note 336 335 52 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 52 336 53 21 (set (reg/v:SI 106 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:259 89 {*movsi_internal}
     (nil))
(insn 53 52 379 21 (set (reg/v/f:DI 105 [ ints ])
        (const_int 0 [0])) tilesInt.C:258 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 379 53 380 21 (set (pc)
        (label_ref 328)) 650 {jump}
     (nil)
 -> 328)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

(barrier 380 379 353)
;; basic block 22, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 21, next block 1, flags: (RTL)
;;  pred:       2 [21.4%] 
;;              15 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u336(6){ }u337(7){ }u338(16){ }u339(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax]
(code_label 353 380 347 22 27 "" [2 uses])
(note 347 353 340 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 340 347 343 22 (set (reg/i:DI 0 ax)
        (reg/f:DI 107 [ D.11813 ])) tilesInt.C:304 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.11813 ])
        (nil)))
(insn 343 340 0 22 (use (reg/i:DI 0 ax)) tilesInt.C:304 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_GetTilesWrap(PyObject*, PyObject*) (_ZL18tiles_GetTilesWrapP7_objectS0_, funcdef_no=155, decl_uid=11346, cgraph_uid=155)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 26 (  1.1)
rescanning insn with uid = 244.
deleting insn with uid = 244.
deleting insn with uid = 243.
rescanning insn with uid = 201.
deleting insn with uid = 201.
deleting insn with uid = 194.
rescanning insn with uid = 190.
deleting insn with uid = 190.
deleting insn with uid = 189.
rescanning insn with uid = 182.
deleting insn with uid = 182.
deleting insn with uid = 175.
rescanning insn with uid = 152.
deleting insn with uid = 152.
deleting insn with uid = 150.
rescanning insn with uid = 143.
deleting insn with uid = 143.
deleting insn with uid = 141.
rescanning insn with uid = 128.
deleting insn with uid = 128.
deleting insn with uid = 126.
rescanning insn with uid = 116.
deleting insn with uid = 116.
deleting insn with uid = 115.
rescanning insn with uid = 98.
deleting insn with uid = 98.
deleting insn with uid = 96.
rescanning insn with uid = 72.
deleting insn with uid = 72.
deleting insn with uid = 71.
rescanning insn with uid = 54.
deleting insn with uid = 54.
deleting insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 26 (  1.1)
Reg 129: local to bb 2 def dominates all uses has unique first use
Ignoring reg 135, has equiv memory
Reg 63: local to bb 2 def dominates all uses has unique first use
Reg 65 uninteresting
Reg 68 uninteresting (no unique first use)
Reg 143 uninteresting
Reg 72 uninteresting (no unique first use)
Reg 74 uninteresting
Reg 77 uninteresting (no unique first use)
Reg 78 uninteresting
Reg 79 uninteresting
Reg 86 uninteresting
Reg 87 uninteresting
Reg 90 uninteresting (no unique first use)
Reg 91: def dominates all uses has unique first use
Reg 104 uninteresting
Reg 96 uninteresting
Reg 97 uninteresting
Reg 100 uninteresting
Reg 101 uninteresting
Ignoring reg 155, has equiv memory
Reg 156: local to bb 12 def dominates all uses has unique first use
Reg 109: local to bb 13 def dominates all uses has unique first use
Reg 160 uninteresting
Reg 114 uninteresting (no unique first use)
Reg 162 uninteresting
Reg 120 uninteresting
Reg 81 uninteresting
Reg 166 uninteresting
Found def insn 49 for 63 to be not moveable
Reg 91 not local to one basic block
Found def insn 192 for 109 to be not moveable
Found def insn 4 for 129 to be not moveable
Found def insn 174 for 156 to be not moveable
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 3
;;  header 16, latch 16
;;  depth 1, outer 0
;;  nodes: 16
;;
;; Loop 2
;;  header 10, latch 10
;;  depth 1, outer 0
;;  nodes: 10
;;
;; Loop 1
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;; 2 succs { 23 3 }
;; 3 succs { 4 22 }
;; 4 succs { 20 5 }
;; 5 succs { 22 }
;; 6 succs { 6 7 }
;; 7 succs { 10 8 }
;; 8 succs { 12 9 }
;; 9 succs { 13 }
;; 10 succs { 10 11 }
;; 11 succs { 8 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 18 }
;; 15 succs { 16 }
;; 16 succs { 16 17 }
;; 17 succs { 19 }
;; 18 succs { 23 }
;; 19 succs { 23 }
;; 20 succs { 21 7 }
;; 21 succs { 6 }
;; 22 succs { 7 }
;; 23 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 135: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 173 (nil))
Reg 131 had equivalence, but can't be eliminated
Reg 132 had equivalence, but can't be eliminated
Reg 133 had equivalence, but can't be eliminated
Reg 136 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a8 (r167,l0) best DIREG, allocno DIREG
    a9 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r162,l3) best DIREG, allocno DIREG
    a12 (r160,l0) best DIREG, allocno DIREG
    a15 (r156,l0) best DREG, allocno DREG
    a16 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r148,l0) best DIREG, allocno DIREG
    a24 (r145,l0) best DIREG, allocno DIREG
    a25 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r141,l0) best DIREG, allocno DIREG
    a33 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r132,l0) best DREG, allocno DREG
    a31 (r131,l0) best CREG, allocno CREG
    a29 (r129,l0) best SIREG, allocno SIREG
    a38 (r126,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a37 (r124,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r120,l3) best AD_REGS, allocno AD_REGS
    a48 (r116,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a36 (r114,l3) best AREG, allocno AREG
    a10 (r114,l0) best AREG, allocno AREG
    a13 (r109,l0) best AREG, allocno AREG
    a17 (r104,l0) best AREG, allocno AREG
    a49 (r101,l2) best AREG, allocno AREG
    a50 (r100,l2) best AREG, allocno AREG
    a51 (r97,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a52 (r96,l2) best AREG, allocno AREG
    a58 (r92,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a47 (r91,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r90,l2) best AREG, allocno AREG
    a14 (r90,l0) best AREG, allocno AREG
    a59 (r87,l1) best AREG, allocno AREG
    a60 (r86,l1) best AREG, allocno AREG
    a7 (r81,l0) best AREG, allocno AREG
    a20 (r79,l0) best AREG, allocno AREG
    a21 (r78,l0) best DIREG, allocno DIREG
    a57 (r77,l1) best AREG, allocno AREG
    a45 (r77,l2) best AREG, allocno AREG
    a5 (r77,l0) best AREG, allocno AREG
    a23 (r74,l0) best AREG, allocno AREG
    a56 (r72,l1) best AREG, allocno AREG
    a44 (r72,l2) best AREG, allocno AREG
    a35 (r72,l3) best AREG, allocno AREG
    a4 (r72,l0) best AREG, allocno AREG
    a55 (r68,l1) best AREG, allocno AREG
    a43 (r68,l2) best AREG, allocno AREG
    a3 (r68,l0) best AREG, allocno AREG
    a27 (r65,l0) best AREG, allocno AREG
    a28 (r63,l0) best AREG, allocno AREG
    a0 (r62,l0) best AREG, allocno AREG
    a54 (r61,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r61,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a53 (r60,l1) best AREG, allocno AREG
    a41 (r60,l2) best AREG, allocno AREG
    a1 (r60,l0) best AREG, allocno AREG

  a0(r62,l0) costs: AREG:-229,-229 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5616,5616 SSE_REGS:5616,5616 MMX_REGS:5616,5616 FP_TOP_SSE_REGS:3524280,3524280 FP_SECOND_SSE_REGS:3524280,3524280 FLOAT_SSE_REGS:3524280,3524280 FLOAT_INT_REGS:3524280,3524280 INT_SSE_REGS:5616,5616 FLOAT_INT_SSE_REGS:3524280,3524280 ALL_REGS:3524280,3524280 MEM:1499,1499
  a1(r60,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:716,1768
  a2(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r68,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r72,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a5(r77,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a6(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:164,4372
  a7(r81,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a8(r167,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a9(r166,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a10(r114,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,14157 SSE_REGS:2327,14157 MMX_REGS:2327,14157 FP_TOP_SSE_REGS:2524280,3524280 FP_SECOND_SSE_REGS:2524280,3524280 FLOAT_SSE_REGS:2524280,3524280 FLOAT_INT_REGS:2524280,3524280 INT_SSE_REGS:2327,14157 FLOAT_INT_SSE_REGS:2524280,3524280 ALL_REGS:2524280,3524280 MEM:627,3357
  a11(r124,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:324,15794
  a12(r160,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a13(r109,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a14(r90,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a15(r156,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a16(r155,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a17(r104,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a18(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:360,21290
  a19(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a20(r79,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a21(r78,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a22(r148,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a23(r74,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a24(r145,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a25(r143,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a26(r141,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a27(r65,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a28(r63,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a29(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a30(r132,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a31(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a32(r135,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5928,5928 SSE_REGS:5928,5928 MMX_REGS:5928,5928 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:5928,5928 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:798,798
  a33(r136,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a34(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a35(r72,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a36(r114,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a37(r124,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:15470,15470
  a38(r126,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7280,7280
  a39(r120,l3) costs: AREG:-910,-910 DREG:-910,-910 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a40(r162,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a41(r60,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a42(r61,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a43(r68,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a44(r72,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a45(r77,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a46(r90,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a47(r91,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a48(r116,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:20930,20930
  a49(r101,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:7280,7280
  a50(r100,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a51(r97,l2) costs: AREG:24570,24570 DREG:24570,24570 CREG:24570,24570 BREG:24570,24570 SIREG:24570,24570 DIREG:24570,24570 AD_REGS:24570,24570 Q_REGS:24570,24570 NON_Q_REGS:24570,24570 INDEX_REGS:24570,24570 GENERAL_REGS:24570,24570 LEGACY_REGS:24570,24570 CLOBBERED_REGS:24570,24570 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a52(r96,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a53(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a54(r61,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a55(r68,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a56(r72,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a57(r77,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a58(r92,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:4208,4208
  a59(r87,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a60(r86,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841


Pass 1 for finding pseudo/allocno costs

    r167: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r132: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r120,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r114,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r90,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r77,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a45 (r77,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r72,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r72,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a35 (r72,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r68,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a43 (r68,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r60,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a41 (r60,l2) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-229,-229 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5616,5616 SSE_REGS:5616,5616 MMX_REGS:5616,5616 FP_TOP_SSE_REGS:3524280,3524280 FP_SECOND_SSE_REGS:3524280,3524280 FLOAT_SSE_REGS:3524280,3524280 FLOAT_INT_REGS:3524280,3524280 INT_SSE_REGS:5616,5616 FLOAT_INT_SSE_REGS:3524280,3524280 ALL_REGS:3524280,3524280 MEM:1499,1499
  a1(r60,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:716,1768
  a2(r61,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r68,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r72,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a5(r77,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a6(r92,l0) costs: GENERAL_REGS:0,0 MEM:164,4372
  a7(r81,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a8(r167,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a9(r166,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a10(r114,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,14157 SSE_REGS:2327,14157 MMX_REGS:2327,14157 FP_TOP_SSE_REGS:2524280,3524280 FP_SECOND_SSE_REGS:2524280,3524280 FLOAT_SSE_REGS:2524280,3524280 FLOAT_INT_REGS:2524280,3524280 INT_SSE_REGS:2327,14157 FLOAT_INT_SSE_REGS:2524280,3524280 ALL_REGS:2524280,3524280 MEM:627,3357
  a11(r124,l0) costs: GENERAL_REGS:0,0 MEM:324,15794
  a12(r160,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a13(r109,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a14(r90,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a15(r156,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a16(r155,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a17(r104,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a18(r116,l0) costs: GENERAL_REGS:0,0 MEM:360,21290
  a19(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a20(r79,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a21(r78,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a22(r148,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a23(r74,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a24(r145,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a25(r143,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a26(r141,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a27(r65,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a28(r63,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a29(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a30(r132,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a31(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a32(r135,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5928,5928 SSE_REGS:5928,5928 MMX_REGS:5928,5928 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:5928,5928 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:798,798
  a33(r136,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a34(r133,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a35(r72,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a36(r114,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a37(r124,l3) costs: GENERAL_REGS:0,0 MEM:15470,15470
  a38(r126,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7280,7280
  a39(r120,l3) costs: CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a40(r162,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a41(r60,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a42(r61,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a43(r68,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a44(r72,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a45(r77,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a46(r90,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a47(r91,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a48(r116,l2) costs: GENERAL_REGS:0,0 MEM:20930,20930
  a49(r101,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:7280,7280
  a50(r100,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a51(r97,l2) costs: AREG:30940,30940 DREG:30940,30940 CREG:30940,30940 BREG:30940,30940 SIREG:30940,30940 DIREG:30940,30940 AD_REGS:30940,30940 Q_REGS:30940,30940 NON_Q_REGS:30940,30940 INDEX_REGS:30940,30940 GENERAL_REGS:30940,30940 LEGACY_REGS:30940,30940 CLOBBERED_REGS:30940,30940 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a52(r96,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a53(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a54(r61,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a55(r68,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a56(r72,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a57(r77,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a58(r92,l1) costs: GENERAL_REGS:0,0 MEM:4208,4208
  a59(r87,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a60(r86,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841

   Insn 273(l0): point = 0
   Insn 270(l0): point = 2
   Insn 316(l0): point = 5
   Insn 6(l0): point = 7
   Insn 314(l0): point = 10
   Insn 12(l0): point = 12
   Insn 312(l0): point = 15
   Insn 13(l0): point = 17
   Insn 310(l0): point = 20
   Insn 10(l0): point = 23
   Insn 213(l0): point = 26
   Insn 212(l0): point = 28
   Insn 210(l0): point = 30
   Insn 209(l0): point = 32
   Insn 208(l0): point = 34
   Insn 207(l0): point = 36
   Insn 203(l0): point = 39
   Insn 202(l0): point = 41
   Insn 201(l0): point = 43
   Insn 200(l0): point = 45
   Insn 199(l0): point = 47
   Insn 198(l0): point = 49
   Insn 197(l0): point = 51
   Insn 196(l0): point = 53
   Insn 195(l0): point = 55
   Insn 192(l0): point = 57
   Insn 191(l0): point = 59
   Insn 190(l0): point = 61
   Insn 307(l0): point = 64
   Insn 184(l0): point = 66
   Insn 183(l0): point = 68
   Insn 182(l0): point = 70
   Insn 181(l0): point = 72
   Insn 180(l0): point = 74
   Insn 179(l0): point = 76
   Insn 178(l0): point = 78
   Insn 177(l0): point = 80
   Insn 176(l0): point = 82
   Insn 174(l0): point = 84
   Insn 173(l0): point = 86
   Insn 302(l0): point = 89
   Insn 132(l0): point = 92
   Insn 131(l0): point = 94
   Insn 130(l0): point = 96
   Insn 129(l0): point = 98
   Insn 128(l0): point = 100
   Insn 127(l0): point = 102
   Insn 305(l0): point = 105
   Insn 124(l0): point = 108
   Insn 123(l0): point = 110
   Insn 9(l0): point = 112
   Insn 119(l0): point = 114
   Insn 118(l0): point = 116
   Insn 117(l0): point = 118
   Insn 116(l0): point = 120
   Insn 260(l0): point = 123
   Insn 259(l0): point = 125
   Insn 253(l0): point = 127
   Insn 252(l0): point = 129
   Insn 251(l0): point = 131
   Insn 250(l0): point = 133
   Insn 249(l0): point = 135
   Insn 247(l0): point = 137
   Insn 246(l0): point = 139
   Insn 245(l0): point = 141
   Insn 244(l0): point = 143
   Insn 318(l0): point = 146
   Insn 8(l0): point = 148
   Insn 7(l0): point = 150
   Insn 298(l0): point = 153
   Insn 89(l0): point = 156
   Insn 88(l0): point = 158
   Insn 87(l0): point = 160
   Insn 86(l0): point = 162
   Insn 85(l0): point = 164
   Insn 83(l0): point = 167
   Insn 82(l0): point = 169
   Insn 81(l0): point = 171
   Insn 78(l0): point = 173
   Insn 77(l0): point = 175
   Insn 76(l0): point = 177
   Insn 75(l0): point = 179
   Insn 74(l0): point = 181
   Insn 73(l0): point = 183
   Insn 72(l0): point = 185
   Insn 68(l0): point = 187
   Insn 67(l0): point = 189
   Insn 66(l0): point = 191
   Insn 65(l0): point = 193
   Insn 64(l0): point = 195
   Insn 60(l0): point = 197
   Insn 59(l0): point = 199
   Insn 58(l0): point = 201
   Insn 57(l0): point = 203
   Insn 56(l0): point = 205
   Insn 55(l0): point = 207
   Insn 54(l0): point = 209
   Insn 51(l0): point = 212
   Insn 50(l0): point = 214
   Insn 11(l0): point = 216
   Insn 49(l0): point = 218
   Insn 48(l0): point = 220
   Insn 47(l0): point = 222
   Insn 46(l0): point = 224
   Insn 45(l0): point = 226
   Insn 44(l0): point = 228
   Insn 43(l0): point = 230
   Insn 42(l0): point = 232
   Insn 40(l0): point = 234
   Insn 39(l0): point = 236
   Insn 36(l0): point = 238
   Insn 35(l0): point = 240
   Insn 34(l0): point = 242
   Insn 32(l0): point = 244
   Insn 31(l0): point = 246
   Insn 30(l0): point = 248
   Insn 29(l0): point = 250
   Insn 28(l0): point = 252
   Insn 24(l0): point = 254
   Insn 22(l0): point = 256
   Insn 20(l0): point = 258
   Insn 18(l0): point = 260
   Insn 4(l0): point = 262
   Insn 231(l3): point = 265
   Insn 230(l3): point = 267
   Insn 229(l3): point = 269
   Insn 226(l3): point = 271
   Insn 225(l3): point = 273
   Insn 224(l3): point = 275
   Insn 223(l3): point = 277
   Insn 222(l3): point = 279
   Insn 221(l3): point = 281
   Insn 220(l3): point = 283
   Insn 219(l3): point = 285
   Insn 218(l3): point = 287
   Insn 165(l2): point = 290
   Insn 164(l2): point = 292
   Insn 162(l2): point = 294
   Insn 158(l2): point = 296
   Insn 157(l2): point = 298
   Insn 156(l2): point = 300
   Insn 155(l2): point = 302
   Insn 154(l2): point = 304
   Insn 153(l2): point = 306
   Insn 152(l2): point = 308
   Insn 151(l2): point = 310
   Insn 149(l2): point = 312
   Insn 148(l2): point = 314
   Insn 147(l2): point = 316
   Insn 146(l2): point = 318
   Insn 145(l2): point = 320
   Insn 144(l2): point = 322
   Insn 143(l2): point = 324
   Insn 142(l2): point = 326
   Insn 111(l1): point = 329
   Insn 110(l1): point = 331
   Insn 108(l1): point = 333
   Insn 104(l1): point = 335
   Insn 103(l1): point = 337
   Insn 102(l1): point = 339
   Insn 101(l1): point = 341
   Insn 100(l1): point = 343
   Insn 99(l1): point = 345
   Insn 98(l1): point = 347
   Insn 97(l1): point = 349
 a0(r62): [212..216] [15..17] [10..12] [3..4]
 a1(r60): [146..148] [81..127] [54..63] [5..9]
 a2(r61): [146..150] [83..137] [56..63] [5..9]
 a3(r68): [75..197] [48..63] [5..9]
 a4(r72): [23..187] [5..9]
 a5(r77): [79..173] [52..63] [5..9]
 a6(r92): [5..7]
 a7(r81): [126..139]
 a8(r167): [132..133]
 a9(r166): [134..135]
 a10(r114): [18..30] [13..14]
 a11(r124): [23..23]
 a12(r160): [35..36]
 a13(r109): [46..57]
 a14(r90): [77..116] [50..63]
 a15(r156): [73..84]
 a16(r155): [85..86]
 a17(r104): [95..96]
 a18(r116): [108..112]
 a19(r91): [108..114]
 a20(r79): [159..160]
 a21(r78): [165..171]
 a22(r148): [178..179]
 a23(r74): [180..181]
 a24(r145): [192..193]
 a25(r143): [194..195]
 a26(r141): [202..203]
 a27(r65): [204..205]
 a28(r63): [215..218]
 a29(r129): [225..262]
 a30(r132): [229..250]
 a31(r131): [231..252]
 a32(r135): [233..244]
 a33(r136): [239..240]
 a34(r133): [247..248]
 a35(r72): [265..289]
 a36(r114): [265..289]
 a37(r124): [265..289]
 a38(r126): [268..271]
 a39(r120): [280..281]
 a40(r162): [286..287]
 a41(r60): [290..328]
 a42(r61): [290..328]
 a43(r68): [290..328]
 a44(r72): [290..328]
 a45(r77): [290..328]
 a46(r90): [290..328]
 a47(r91): [290..328]
 a48(r116): [290..328]
 a49(r101): [297..298]
 a50(r100): [303..304]
 a51(r97): [313..314]
 a52(r96): [319..320]
 a53(r60): [329..351]
 a54(r61): [329..351]
 a55(r68): [329..351]
 a56(r72): [329..351]
 a57(r77): [329..351]
 a58(r92): [329..351]
 a59(r87): [336..337]
 a60(r86): [342..343]
 Rebuilding regno allocno list for 162
 Rebuilding regno allocno list for 126
      Moving ranges of a37r124 to a11r124:  [265..289]
 Rebuilding regno allocno list for 120
      Moving ranges of a48r116 to a18r116:  [290..328]
      Moving ranges of a36r114 to a10r114:  [265..289]
 Rebuilding regno allocno list for 101
 Rebuilding regno allocno list for 100
 Rebuilding regno allocno list for 97
 Rebuilding regno allocno list for 96
      Moving ranges of a58r92 to a6r92:  [329..351]
      Moving ranges of a47r91 to a19r91:  [290..328]
      Moving ranges of a46r90 to a14r90:  [290..328]
 Rebuilding regno allocno list for 87
 Rebuilding regno allocno list for 86
      Moving ranges of a57r77 to a5r77:  [329..351]
      Moving ranges of a45r77 to a5r77:  [290..328]
      Moving ranges of a56r72 to a4r72:  [329..351]
      Moving ranges of a44r72 to a4r72:  [290..328]
      Moving ranges of a35r72 to a4r72:  [265..289]
      Moving ranges of a55r68 to a3r68:  [329..351]
      Moving ranges of a43r68 to a3r68:  [290..328]
      Moving ranges of a54r61 to a2r61:  [329..351]
      Moving ranges of a42r61 to a2r61:  [290..328]
      Moving ranges of a53r60 to a1r60:  [329..351]
      Moving ranges of a41r60 to a1r60:  [290..328]
Compressing live ranges: from 352 to 73 - 20%
Ranges after the compression:
 a0(r62): [49..50] [8..9] [4..5] [0..1]
 a1(r60): [61..72] [31..32] [15..26] [2..3]
 a2(r61): [61..72] [15..32] [2..3]
 a3(r68): [61..72] [15..44] [2..3]
 a4(r72): [55..72] [11..40] [2..3]
 a5(r77): [61..72] [15..36] [2..3]
 a6(r92): [69..72] [2..3]
 a7(r81): [25..30]
 a8(r167): [27..28]
 a9(r166): [29..30]
 a10(r114): [55..60] [10..12] [6..7]
 a11(r124): [55..60] [11..11]
 a12(r160): [13..14]
 a13(r109): [15..16]
 a14(r90): [61..68] [15..24]
 a15(r156): [17..18]
 a16(r155): [19..20]
 a17(r104): [21..22]
 a18(r116): [61..68] [23..24]
 a19(r91): [61..68] [23..24]
 a20(r79): [33..34]
 a21(r78): [35..36]
 a22(r148): [37..38]
 a23(r74): [39..40]
 a24(r145): [41..42]
 a25(r143): [43..44]
 a26(r141): [45..46]
 a27(r65): [47..48]
 a28(r63): [49..50]
 a29(r129): [51..54]
 a30(r132): [51..54]
 a31(r131): [51..54]
 a32(r135): [51..52]
 a33(r136): [51..52]
 a34(r133): [53..54]
 a38(r126): [55..56]
 a39(r120): [57..58]
 a40(r162): [59..60]
 a49(r101): [61..62]
 a50(r100): [63..64]
 a51(r97): [65..66]
 a52(r96): [67..68]
 a59(r87): [69..70]
 a60(r86): [71..72]
+++Allocating 352 bytes for conflict table (uncompressed size 488)
;; a0(r62,l0) conflicts: a28(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r60,l0) conflicts: a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a6(r92,l0) a13(r109,l0) a14(r90,l0) a15(r156,l0) a16(r155,l0) a17(r104,l0) a18(r116,l0) a19(r91,l0) a7(r81,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0) a59(r87,l0) a60(r86,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a2(r61,l0) conflicts: a1(r60,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a6(r92,l0) a13(r109,l0) a14(r90,l0) a15(r156,l0) a16(r155,l0) a17(r104,l0) a18(r116,l0) a19(r91,l0) a7(r81,l0) a8(r167,l0) a9(r166,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0) a59(r87,l0) a60(r86,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a3(r68,l0) conflicts: a1(r60,l0) a2(r61,l0) a4(r72,l0) a5(r77,l0) a6(r92,l0) a13(r109,l0) a14(r90,l0) a15(r156,l0) a16(r155,l0) a17(r104,l0) a18(r116,l0) a19(r91,l0) a7(r81,l0) a8(r167,l0) a9(r166,l0) a20(r79,l0) a21(r78,l0) a22(r148,l0) a23(r74,l0) a24(r145,l0) a25(r143,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0) a59(r87,l0) a60(r86,l0)
;;     total conflict hard regs: 0 4 5 37 38
;;     conflict hard regs: 0 4 5 37 38

;; a4(r72,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a5(r77,l0) a6(r92,l0) a10(r114,l0) a11(r124,l0) a12(r160,l0) a13(r109,l0) a14(r90,l0) a15(r156,l0) a16(r155,l0) a17(r104,l0) a18(r116,l0) a19(r91,l0) a7(r81,l0) a8(r167,l0) a9(r166,l0) a20(r79,l0) a21(r78,l0) a22(r148,l0) a23(r74,l0) a38(r126,l0) a39(r120,l0) a40(r162,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0) a59(r87,l0) a60(r86,l0)
;;     total conflict hard regs: 0-2 4 5 37 38
;;     conflict hard regs: 0-2 4 5 37 38

;; a5(r77,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a6(r92,l0) a13(r109,l0) a14(r90,l0) a15(r156,l0) a16(r155,l0) a17(r104,l0) a18(r116,l0) a19(r91,l0) a7(r81,l0) a8(r167,l0) a9(r166,l0) a20(r79,l0) a21(r78,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0) a59(r87,l0) a60(r86,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a6(r92,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a59(r87,l0) a60(r86,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a7(r81,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a8(r167,l0) a9(r166,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a8(r167,l0) conflicts: a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a7(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r166,l0) conflicts: a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a7(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r114,l0) conflicts: a4(r72,l0) a11(r124,l0) a38(r126,l0) a39(r120,l0) a40(r162,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a11(r124,l0) conflicts: a4(r72,l0) a10(r114,l0) a38(r126,l0) a39(r120,l0) a40(r162,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a12(r160,l0) conflicts: a4(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r109,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a14(r90,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a13(r109,l0) a15(r156,l0) a16(r155,l0) a17(r104,l0) a18(r116,l0) a19(r91,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0)
;;     total conflict hard regs: 0 4 5 38
;;     conflict hard regs: 0 4 5 38

;; a15(r156,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a16(r155,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r104,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r116,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0) a19(r91,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a19(r91,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0) a18(r116,l0) a49(r101,l0) a50(r100,l0) a52(r96,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a20(r79,l0) conflicts: a3(r68,l0) a4(r72,l0) a5(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r78,l0) conflicts: a3(r68,l0) a4(r72,l0) a5(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r148,l0) conflicts: a3(r68,l0) a4(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r74,l0) conflicts: a3(r68,l0) a4(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r145,l0) conflicts: a3(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r143,l0) conflicts: a3(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r141,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r65,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r63,l0) conflicts: a0(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r129,l0) conflicts: a32(r135,l0) a33(r136,l0) a30(r132,l0) a31(r131,l0) a34(r133,l0)
;;     total conflict hard regs: 1 2 4 37 38
;;     conflict hard regs: 1 2 4 37 38

;; a30(r132,l0) conflicts: a32(r135,l0) a33(r136,l0) a29(r129,l0) a31(r131,l0) a34(r133,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a31(r131,l0) conflicts: a32(r135,l0) a33(r136,l0) a29(r129,l0) a30(r132,l0) a34(r133,l0)
;;     total conflict hard regs: 37 38
;;     conflict hard regs: 37 38

;; a32(r135,l0) conflicts: a33(r136,l0) a29(r129,l0) a30(r132,l0) a31(r131,l0)
;;     total conflict hard regs: 38
;;     conflict hard regs: 38

;; a33(r136,l0) conflicts: a32(r135,l0) a29(r129,l0) a30(r132,l0) a31(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r133,l0) conflicts: a29(r129,l0) a30(r132,l0) a31(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r126,l0) conflicts: a4(r72,l0) a10(r114,l0) a11(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r120,l0) conflicts: a4(r72,l0) a10(r114,l0) a11(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r162,l0) conflicts: a4(r72,l0) a10(r114,l0) a11(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r101,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0) a18(r116,l0) a19(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r100,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0) a18(r116,l0) a19(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r97,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r96,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a14(r90,l0) a18(r116,l0) a19(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r87,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a6(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r86,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r77,l0) a6(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a8(r167)<->a9(r166)@5:shuffle
  cp1:a0(r62)<->a10(r114)@81:move
  cp2:a0(r62)<->a10(r114)@8:move
  cp3:a26(r141)<->a27(r65)@11:shuffle
  cp4:a24(r145)<->a25(r143)@11:shuffle
  cp5:a22(r148)<->a23(r74)@11:shuffle
  regions=4, blocks=24, points=73
    allocnos=61 (big 0), copies=6, conflicts=0, ranges=65

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r62 1r60 2r61 3r68 4r72 5r77 6r92 7r81 8r167 9r166 10r114 11r124 12r160 13r109 14r90 15r156 16r155 17r104 18r116 19r91 20r79 21r78 22r148 23r74 24r145 25r143 26r141 27r65 28r63 29r129 30r132 31r131 32r135 33r136 34r133 38r126 39r120 40r162 49r101 50r100 51r97 52r96 59r87 60r86
    modified regnos: 60 61 62 63 65 68 72 74 77 78 79 81 86 87 90 91 92 96 97 100 101 104 109 114 116 120 124 126 129 131 132 133 135 136 141 143 145 148 155 156 160 162 166 167
    border:
    Pressure: GENERAL_REGS=10 SSE_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 21-28 45-51)@32760
        2:( 0-6 37-44)@145622
          3:( 1-3 6 37-44)@51324
            4:( 2 3 6 37-44)@31588
              5:( 3 6 41-44)@47580
      Allocno a0r62 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r60 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a2r61 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a3r68 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-38 45-51)
      Allocno a4r72 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-38 45-51)
      Allocno a5r77 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a6r92 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a7r81 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-51)
      Allocno a8r167 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a9r166 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a10r114 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a11r124 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a12r160 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a13r109 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a14r90 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 38 45-51)
      Allocno a15r156 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a16r155 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a17r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a18r116 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a19r91 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a20r79 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a21r78 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a22r148 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a23r74 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a24r145 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a25r143 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a26r141 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a27r65 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a28r63 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a29r129 of GENERAL_REGS(15) has 10 avail. regs  0 3 5 6 39-44, ^node:  0-6 37-44 (confl regs =  1 2 4 7-38 45-51)
      Allocno a30r132 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a31r131 of GENERAL_REGS(15) has 13 avail. regs  0-6 39-44, ^node:  0-6 37-44 (confl regs =  7-38 45-51)
      Allocno a32r135 of GENERAL_REGS(15) has 14 avail. regs  0-6 37 39-44, ^node:  0-6 37-44 (confl regs =  7-36 38 45-51)
      Allocno a33r136 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a34r133 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a38r126 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a39r120 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a40r162 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a49r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a50r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a51r97 of SSE_REGS(16) has 16 avail. regs  21-28 45-51, node:  21-28 45-51 (confl regs =  0-20 29-44)
      Allocno a52r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a59r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a60r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a16(r155,l0)(cost 0)
      Pushing a9(r166,l0)(cost 0)
      Pushing a8(r167,l0)(cost 0)
      Pushing a15(r156,l0)(cost 0)
      Pushing a13(r109,l0)(cost 0)
      Pushing a20(r79,l0)(cost 0)
      Pushing a27(r65,l0)(cost 0)
      Pushing a26(r141,l0)(cost 0)
      Pushing a25(r143,l0)(cost 0)
      Pushing a24(r145,l0)(cost 0)
      Pushing a23(r74,l0)(cost 0)
      Pushing a22(r148,l0)(cost 0)
      Pushing a17(r104,l0)(cost 0)
      Pushing a12(r160,l0)(cost 0)
      Pushing a7(r81,l0)(cost 0)
      Pushing a34(r133,l0)(cost 0)
      Pushing a33(r136,l0)(cost 0)
      Pushing a28(r63,l0)(cost 0)
      Pushing a31(r131,l0)(cost 0)
      Pushing a30(r132,l0)(cost 0)
      Pushing a29(r129,l0)(cost 0)
      Pushing a21(r78,l0)(cost 0)
      Pushing a0(r62,l0)(cost 0)
      Pushing a32(r135,l0)(cost 0)
      Pushing a60(r86,l0)(cost 0)
      Pushing a59(r87,l0)(cost 0)
      Pushing a10(r114,l0)(cost 0)
      Pushing a6(r92,l0)(cost 0)
      Pushing a51(r97,l0)(cost 0)
      Pushing a52(r96,l0)(cost 0)
      Pushing a50(r100,l0)(cost 0)
      Pushing a49(r101,l0)(cost 0)
      Pushing a40(r162,l0)(cost 0)
      Pushing a39(r120,l0)(cost 0)
      Pushing a38(r126,l0)(cost 0)
      Pushing a11(r124,l0)(cost 0)
      Pushing a18(r116,l0)(cost 0)
      Pushing a14(r90,l0)(potential spill: pri=1260, cost=1260)
        Making a1(r60,l0) colorable
        Making a2(r61,l0) colorable
        Making a3(r68,l0) colorable
        Making a4(r72,l0) colorable
        Making a5(r77,l0) colorable
        Making a19(r91,l0) colorable
      Pushing a2(r61,l0)(cost 1505)
      Pushing a1(r60,l0)(cost 1768)
      Pushing a19(r91,l0)(cost 3090)
      Pushing a5(r77,l0)(cost 4270)
      Pushing a4(r72,l0)(cost 4270)
      Pushing a3(r68,l0)(cost 4270)
      Popping a3(r68,l0)  -- assign reg 3
      Popping a4(r72,l0)  -- assign reg 6
      Popping a5(r77,l0)  -- assign reg 41
      Popping a19(r91,l0)  -- assign reg 42
      Popping a1(r60,l0)  -- assign reg 43
      Popping a2(r61,l0)  -- assign reg 44
      Popping a14(r90,l0)  -- spill
      Popping a18(r116,l0)  -- assign reg 1
      Popping a11(r124,l0)  -- assign reg 3
      Popping a38(r126,l0)  -- assign reg 1
      Popping a39(r120,l0)  -- assign reg 1
      Popping a40(r162,l0)  -- assign reg 5
      Popping a49(r101,l0)  -- assign reg 0
      Popping a50(r100,l0)  -- assign reg 0
      Popping a52(r96,l0)  -- assign reg 0
      Popping a51(r97,l0)  -- assign reg 21
      Popping a6(r92,l0)  -- assign reg 42
      Popping a10(r114,l0)  -- assign reg 41
      Popping a59(r87,l0)  -- assign reg 0
      Popping a60(r86,l0)  -- assign reg 0
      Popping a32(r135,l0)  -- assign reg 37
      Popping a0(r62,l0)  -- assign reg 41
      Popping a21(r78,l0)  -- assign reg 5
      Popping a29(r129,l0)  -- assign reg 5
      Popping a30(r132,l0)  -- assign reg 1
      Popping a31(r131,l0)  -- assign reg 2
      Popping a28(r63,l0)  -- assign reg 0
      Popping a33(r136,l0)  -- assign reg 0
      Popping a34(r133,l0)  -- assign reg 0
      Popping a7(r81,l0)  -- assign reg 42
      Popping a12(r160,l0)  -- assign reg 5
      Popping a17(r104,l0)  -- assign reg 0
      Popping a22(r148,l0)  -- assign reg 5
      Popping a23(r74,l0)  -- assign reg 0
      Popping a24(r145,l0)  -- assign reg 5
      Popping a25(r143,l0)  -- assign reg 5
      Popping a26(r141,l0)  -- assign reg 5
      Popping a27(r65,l0)  -- assign reg 0
      Popping a20(r79,l0)  -- assign reg 0
      Popping a13(r109,l0)  -- assign reg 0
      Popping a15(r156,l0)  -- assign reg 1
      Popping a8(r167,l0)  -- assign reg 5
      Popping a9(r166,l0)  -- assign reg 5
      Popping a16(r155,l0)  -- assign reg 0
Spilling a2r61 for a18r116
Assigning 44 to a18r116
       a2(r61,l0)  -- assign memory
Disposition:
    1:r60  l0    43    2:r61  l0   mem    0:r62  l0    41   28:r63  l0     0
   27:r65  l0     0    3:r68  l0     3    4:r72  l0     6   23:r74  l0     0
    5:r77  l0    41   21:r78  l0     5   20:r79  l0     0    7:r81  l0    42
   60:r86  l0     0   59:r87  l0     0   14:r90  l0   mem   19:r91  l0    42
    6:r92  l0    42   52:r96  l0     0   51:r97  l0    21   50:r100 l0     0
   49:r101 l0     0   17:r104 l0     0   13:r109 l0     0   10:r114 l0    41
   18:r116 l0    44   39:r120 l0     1   11:r124 l0     3   38:r126 l0     1
   29:r129 l0     5   31:r131 l0     2   30:r132 l0     1   34:r133 l0     0
   32:r135 l0    37   33:r136 l0     0   26:r141 l0     5   25:r143 l0     5
   24:r145 l0     5   22:r148 l0     5   16:r155 l0     0   15:r156 l0     1
   12:r160 l0     5   40:r162 l0     5    9:r166 l0     5    8:r167 l0     5
New iteration of spill/restore move
+++Costs: overall -11494, reg -14259, mem 2765, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* tiles_GetTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={26d,22u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,23u} r7={1d,62u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,22u} r17={45d,10u} r18={23d} r19={23d} r20={1d,50u,9e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r74={1d,1u} r77={1d,4u} r78={1d,2u} r79={1d,1u} r81={1d,4u} r86={1d,1u} r87={1d,1u} r90={1d,5u} r91={1d,1u} r92={2d,6u} r96={1d,1u} r97={1d,1u} r100={1d,1u} r101={1d,1u} r104={1d,1u} r109={1d,2u} r114={1d,3u} r116={2d,8u} r120={1d,1u} r124={2d,5u} r126={1d,2u} r129={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,3u} r136={1d,1u} r141={1d,1u} r143={1d,1u} r145={1d,1u} r148={1d,1u} r155={1d,1u} r156={1d,1u} r160={1d,1u} r162={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1484{1150d,325u,9e} in 193{170 regular + 23 call} insns.
(note 2 0 14 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 129 131 132 133 135 136
(note 14 2 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 14 5 2 (set (reg/v/f:DI 129 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:308 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:309 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:310 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:312 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 19 18 20 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:313 -1
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:315 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:316 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:318 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 23 22 24 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:319 -1
     (nil))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:320 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 25 24 26 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:321 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:322 -1
     (nil))
(note 27 26 28 2 NOTE_INSN_DELETED)
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 30 29 31 2 (parallel [
            (set (reg/f:DI 133)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 31 30 32 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg/f:DI 133)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 32 31 34 2 (set (reg:DI 135)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 34 32 35 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg:DI 135)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:DI 136)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 36 35 39 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 136)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 39 36 40 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 135)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 42 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))) tilesInt.C:328 267 {*leadi}
     (nil))
(insn 42 40 43 2 (set (reg:DI 37 r8)
        (reg:DI 135)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 135)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 43 42 44 2 (set (reg:DI 2 cx)
        (reg/f:DI 131)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 44 43 45 2 (set (reg:DI 1 dx)
        (reg/f:DI 132)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 45 44 46 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b9b8a1b77b8 *.LC2>)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg/v/f:DI 129 [ args ])) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 129 [ args ])
        (nil)))
(insn 47 46 48 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:328 91 {*movqi_internal}
     (nil))
(call_insn 48 47 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 32 [0x20]))) tilesInt.C:328 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (nil)))))))))))))
(insn 49 48 11 2 (set (reg:SI 63 [ D.11852 ])
        (reg:SI 0 ax)) tilesInt.C:328 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 49 50 2 (set (reg/f:DI 62 [ D.11851 ])
        (const_int 0 [0])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 50 11 51 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.11852 ])
            (const_int 0 [0]))) tilesInt.C:325 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 63 [ D.11852 ])
        (nil)))
(jump_insn 51 50 52 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 290)
            (pc))) tilesInt.C:325 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 290)
;;  succ:       23 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 74 77 78 141 143 145 148
(note 52 51 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 54 52 55 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:331 87 {*movdi_internal_rex64}
     (nil))
(call_insn 55 54 56 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:331 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 3 (set (reg:DI 65 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 57 56 58 3 (parallel [
            (set (reg:DI 141 [ D.11854 ])
                (ashift:DI (reg:DI 65 [ D.11853 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:331 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.11853 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 3 (set (reg:DI 5 di)
        (reg:DI 141 [ D.11854 ])) tilesInt.C:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 141 [ D.11854 ])
        (nil)))
(call_insn 59 58 60 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:331 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 62 3 (set (reg/v/f:DI 68 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 142)
            (nil))))
(debug_insn 62 60 63 3 (var_location:DI variables (reg/v/f:DI 68 [ variables ])) tilesInt.C:331 -1
     (nil))
(note 63 62 64 3 NOTE_INSN_DELETED)
(insn 64 63 65 3 (set (reg:DI 143 [ D.11854 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128]))) tilesInt.C:332 149 {*extendsidi2_rex64}
     (nil))
(insn 65 64 66 3 (parallel [
            (set (reg:DI 145 [ D.11854 ])
                (ashift:DI (reg:DI 143 [ D.11854 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:332 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.11854 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 3 (set (reg:DI 5 di)
        (reg:DI 145 [ D.11854 ])) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 145 [ D.11854 ])
        (nil)))
(call_insn 67 66 68 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:332 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 68 67 70 3 (set (reg/v/f:DI 72 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 146)
            (nil))))
(debug_insn 70 68 72 3 (var_location:DI the_tiles (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:332 -1
     (nil))
(insn 72 70 73 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:333 87 {*movdi_internal_rex64}
     (nil))
(call_insn 73 72 74 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:333 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 74 73 75 3 (set (reg:DI 74 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 75 74 76 3 (parallel [
            (set (reg:DI 148 [ D.11854 ])
                (ashift:DI (reg:DI 74 [ D.11853 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:333 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 74 [ D.11853 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 3 (set (reg:DI 5 di)
        (reg:DI 148 [ D.11854 ])) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 148 [ D.11854 ])
        (nil)))
(call_insn 77 76 78 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:333 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 78 77 80 3 (set (reg/v/f:DI 77 [ wrapwidths ])
        (reg:DI 0 ax)) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 149)
            (nil))))
(debug_insn 80 78 81 3 (var_location:DI wrapwidths (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:333 -1
     (nil))
(insn 81 80 82 3 (set (reg/f:DI 78 [ ints_list.18 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 78 [ ints_list.18 ])
            (const_int 0 [0]))) tilesInt.C:334 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 83 82 84 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 265)
            (pc))) tilesInt.C:334 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 265)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              22 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79
(note 84 83 85 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 4 (set (reg:DI 5 di)
        (reg/f:DI 78 [ ints_list.18 ])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ ints_list.18 ])
        (nil)))
(call_insn 86 85 87 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:334 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 87 86 88 4 (set (reg:DI 79 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 88 87 89 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 79 [ D.11853 ])
            (const_int 0 [0]))) tilesInt.C:334 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 79 [ D.11853 ])
        (nil)))
(jump_insn 89 88 297 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) tilesInt.C:334 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 241)
;;  succ:       20 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 297 89 298 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 298 297 299 5 (set (pc)
        (label_ref 265)) 650 {jump}
     (nil)
 -> 265)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77

(barrier 299 298 262)
;; basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              21 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u94(6){ }u95(7){ }u96(16){ }u97(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 92
(code_label 262 299 94 6 47 "" [2 uses])
(note 94 262 95 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 95 94 97 6 (var_location:SI i (subreg:SI (reg:DI 92 [ ivtmp.97 ]) 0)) -1
     (nil))
(insn 97 95 98 6 (set (reg:DI 4 si)
        (reg:DI 92 [ ivtmp.97 ])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (nil))
(call_insn 99 98 100 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:339 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 6 (set (reg/f:DI 86 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 101 100 102 6 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.11851 ])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.11851 ])
        (nil)))
(call_insn 102 101 103 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:339 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 6 (set (reg:DI 87 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 104 103 105 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 92 [ ivtmp.97 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 60 [ ints ])) [0 MEM[base: ints_52, index: ivtmp.97_129, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 87 [ D.11853 ]) 0)) tilesInt.C:339 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.11853 ])
        (nil)))
(debug_insn 105 104 107 6 (var_location:SI D#5 (plus:SI (subreg:SI (reg:DI 92 [ ivtmp.97 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 107 105 108 6 (var_location:SI i (debug_expr:SI D#5)) -1
     (nil))
(insn 108 107 110 6 (parallel [
            (set (reg:DI 92 [ ivtmp.97 ])
                (plus:DI (reg:DI 92 [ ivtmp.97 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 108 111 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 61 [ num_ints ])
            (subreg:SI (reg:DI 92 [ ivtmp.97 ]) 0))) tilesInt.C:338 7 {*cmpsi_1}
     (nil))
(jump_insn 111 110 258 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) tilesInt.C:338 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 262)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       20 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              22 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u118(6){ }u119(7){ }u120(16){ }u121(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 90 91 116
(code_label 258 111 112 7 46 "" [2 uses])
(note 112 258 113 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 113 112 114 7 (var_location:SI num_ints (reg/v:SI 61 [ num_ints ])) -1
     (nil))
(debug_insn 114 113 116 7 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) -1
     (nil))
(insn 116 114 117 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:342 87 {*movdi_internal_rex64}
     (nil))
(call_insn 117 116 118 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:342 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 118 117 119 7 (set (reg:DI 90 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:342 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 119 118 120 7 (set (reg/v:SI 91 [ num_variables ])
        (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:342 89 {*movsi_internal}
     (nil))
(debug_insn 120 119 122 7 (var_location:SI num_variables (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:342 -1
     (nil))
(debug_insn 122 120 9 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 9 122 123 7 (set (reg:DI 116 [ ivtmp.91 ])
        (const_int 0 [0])) tilesInt.C:344 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 123 9 124 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 90 [ D.11853 ]) 0)
            (const_int 0 [0]))) tilesInt.C:344 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 124 123 163 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 292)
            (pc))) tilesInt.C:344 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 292)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 104
(code_label 163 124 125 8 42 "" [1 uses])
(note 125 163 127 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 127 125 128 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:350 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:350 87 {*movdi_internal_rex64}
     (nil))
(call_insn 129 128 130 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:350 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 130 129 131 8 (set (reg:SI 104 [ D.11852 ])
        (reg:SI 0 ax)) tilesInt.C:350 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 131 130 132 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.11852 ])
            (const_int 0 [0]))) tilesInt.C:350 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 104 [ D.11852 ])
        (nil)))
(jump_insn 132 131 300 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) tilesInt.C:350 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 170)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 300 132 302 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 302 300 303 9 (set (pc)
        (label_ref 301)) 650 {jump}
     (nil)
 -> 301)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90

(barrier 303 302 292)
;; basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 77 91 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 97 100 101 116
(code_label 292 303 291 10 54 "" [2 uses])
(note 291 292 139 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 139 291 142 10 (var_location:SI i (subreg:SI (reg:DI 116 [ ivtmp.91 ]) 0)) -1
     (nil))
(insn 142 139 143 10 (set (reg:DI 4 si)
        (reg:DI 116 [ ivtmp.91 ])) tilesInt.C:346 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:346 87 {*movdi_internal_rex64}
     (nil))
(call_insn 144 143 145 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:346 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 145 144 146 10 (set (reg/f:DI 96 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 146 145 147 10 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.11851 ])) tilesInt.C:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.11851 ])
        (nil)))
(call_insn 147 146 148 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:346 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 148 147 149 10 (set (reg:DF 97 [ D.11855 ])
        (reg:DF 21 xmm0)) tilesInt.C:346 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 149 148 151 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 116 [ ivtmp.91 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 68 [ variables ])) [0 MEM[base: variables_29, index: ivtmp.91_130, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 97 [ D.11855 ]))) tilesInt.C:346 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 97 [ D.11855 ])
        (nil)))
(insn 151 149 152 10 (set (reg:DI 4 si)
        (reg:DI 116 [ ivtmp.91 ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 153 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(call_insn 153 152 154 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 10 (set (reg/f:DI 100 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 155 154 156 10 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.11851 ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.11851 ])
        (nil)))
(call_insn 156 155 157 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 157 156 158 10 (set (reg:DI 101 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 158 157 159 10 (set (mem:SI (plus:DI (mult:DI (reg:DI 116 [ ivtmp.91 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 77 [ wrapwidths ])) [0 MEM[base: wrapwidths_41, index: ivtmp.91_130, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 101 [ D.11853 ]) 0)) tilesInt.C:347 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ D.11853 ])
        (nil)))
(debug_insn 159 158 161 10 (var_location:SI D#4 (plus:SI (subreg:SI (reg:DI 116 [ ivtmp.91 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 161 159 162 10 (var_location:SI i (debug_expr:SI D#4)) -1
     (nil))
(insn 162 161 164 10 (parallel [
            (set (reg:DI 116 [ ivtmp.91 ])
                (plus:DI (reg:DI 116 [ ivtmp.91 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 162 165 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 91 [ num_variables ])
            (subreg:SI (reg:DI 116 [ ivtmp.91 ]) 0))) tilesInt.C:344 7 {*cmpsi_1}
     (nil))
(jump_insn 165 164 304 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 292)
            (pc))) tilesInt.C:344 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 292)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 304 165 305 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 305 304 306 11 (set (pc)
        (label_ref 163)) 650 {jump}
     (nil)
 -> 163)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90

(barrier 306 305 170)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 155 156
(code_label 170 306 171 12 40 "" [1 uses])
(note 171 170 172 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 172 171 173 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:352 -1
     (nil))
(insn 173 172 174 12 (set (reg/f:DI 155 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:352 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 174 173 176 12 (set (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 155 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 155 [ memorctable ])
        (nil)))
(insn 176 174 177 12 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:353 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 177 176 178 12 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 178 177 179 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 77 [ wrapwidths ])
        (nil)))
(insn 179 178 180 12 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:353 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.11853 ])
        (nil)))
(insn 180 179 181 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 181 180 182 12 (set (reg:DI 1 dx)
        (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])
        (nil)))
(insn 182 181 183 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:353 89 {*movsi_internal}
     (nil))
(insn 183 182 184 12 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (nil))
(call_insn 184 183 307 12 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a0a6000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:353 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
(jump_insn 307 184 308 12 (set (pc)
        (label_ref 204)) 650 {jump}
     (nil)
 -> 204)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

(barrier 308 307 301)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u210(6){ }u211(7){ }u212(16){ }u213(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 109
(code_label 301 308 188 13 57 "" [1 uses])
(note 188 301 190 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 190 188 191 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:357 87 {*movdi_internal_rex64}
     (nil))
(call_insn 191 190 192 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:357 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 192 191 193 13 (set (reg:DI 109 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 193 192 195 13 (var_location:SI memory_size (subreg:SI (reg:DI 109 [ D.11853 ]) 0)) tilesInt.C:357 -1
     (nil))
(insn 195 193 196 13 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 196 195 197 13 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 197 196 198 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 77 [ wrapwidths ])
        (nil)))
(insn 198 197 199 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.11853 ])
        (nil)))
(insn 199 198 200 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 200 199 201 13 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 109 [ D.11853 ]) 0)) tilesInt.C:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.11853 ])
        (nil)))
(insn 201 200 202 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:358 89 {*movsi_internal}
     (nil))
(insn 202 201 203 13 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (nil))
(call_insn 203 202 204 13 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a09df00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:358 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u240(6){ }u241(7){ }u242(16){ }u243(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 160
(code_label 204 203 205 14 44 "" [1 uses])
(note 205 204 206 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 206 205 207 14 NOTE_INSN_DELETED)
(insn 207 206 208 14 (set (reg:DI 160 [ D.11853 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128]))) tilesInt.C:361 149 {*extendsidi2_rex64}
     (nil))
(insn 208 207 209 14 (set (reg:DI 5 di)
        (reg:DI 160 [ D.11853 ])) tilesInt.C:361 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 160 [ D.11853 ])
        (nil)))
(call_insn 209 208 210 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9b89f7bb00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:361 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 210 209 211 14 (set (reg/v/f:DI 114 [ tiles_list ])
        (reg:DI 0 ax)) tilesInt.C:361 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 211 210 212 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 212 211 213 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:362 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 213 212 214 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) tilesInt.C:362 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 280)
;;  succ:       15 [91.0%]  (FALLTHRU)
;;              18 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [91.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u252(6){ }u253(7){ }u254(16){ }u255(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
(note 214 213 10 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 10 214 233 15 (set (reg:DI 124 [ ivtmp.86 ])
        (const_int 0 [0])) tilesInt.C:362 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

;; basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       16 [91.0%]  (DFS_BACK)
;;              15 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u256(6){ }u257(7){ }u258(16){ }u259(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 120 124 126 162
(code_label 233 10 215 16 45 "" [1 uses])
(note 215 233 216 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 216 215 217 16 (var_location:SI i (subreg:SI (reg:DI 124 [ ivtmp.86 ]) 0)) -1
     (nil))
(note 217 216 218 16 NOTE_INSN_DELETED)
(insn 218 217 219 16 (set (reg:DI 162 [ D.11853 ])
        (sign_extend:DI (mem:SI (plus:DI (mult:DI (reg:DI 124 [ ivtmp.86 ])
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 72 [ the_tiles ])) [0 MEM[base: the_tiles_34, index: ivtmp.86_139, step: 4, offset: 0B]+0 S4 A32]))) tilesInt.C:363 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 220 16 (set (reg:DI 5 di)
        (reg:DI 162 [ D.11853 ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 162 [ D.11853 ])
        (nil)))
(call_insn 220 219 221 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:363 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 221 220 222 16 (set (reg/f:DI 120 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 222 221 223 16 (set (reg:DI 1 dx)
        (reg/f:DI 120 [ D.11851 ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.11851 ])
        (nil)))
(insn 223 222 224 16 (set (reg:DI 4 si)
        (reg:DI 124 [ ivtmp.86 ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 16 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (nil))
(call_insn 225 224 226 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9b89f7be00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:363 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 226 225 228 16 (parallel [
            (set (reg:SI 126 [ D.11852 ])
                (plus:SI (subreg:SI (reg:DI 124 [ ivtmp.86 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 228 226 229 16 (var_location:SI i (reg:SI 126 [ D.11852 ])) -1
     (nil))
(insn 229 228 230 16 (parallel [
            (set (reg:DI 124 [ ivtmp.86 ])
                (plus:DI (reg:DI 124 [ ivtmp.86 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 230 229 231 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])
            (reg:SI 126 [ D.11852 ]))) tilesInt.C:362 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 126 [ D.11852 ])
        (nil)))
(jump_insn 231 230 309 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 233)
            (pc))) tilesInt.C:362 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 233)
;;  succ:       16 [91.0%]  (DFS_BACK)
;;              17 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

;; basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 16, next block 18, flags: (NEW, RTL, MODIFIED)
;;  pred:       16 [9.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 309 231 310 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 310 309 311 17 (set (pc)
        (label_ref 284)) 650 {jump}
     (nil)
 -> 284)
;;  succ:       19 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114

(barrier 311 310 280)
;; basic block 18, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       14 [9.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
(code_label 280 311 279 18 49 "" [1 uses])
(note 279 280 13 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 13 279 312 18 (set (reg/f:DI 62 [ D.11851 ])
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ tiles_list ])
        (nil)))
(jump_insn 312 13 313 18 (set (pc)
        (label_ref 290)) 650 {jump}
     (nil)
 -> 290)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier 313 312 284)
;; basic block 19, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       17 [100.0%]  (LOOP_EXIT)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u286(6){ }u287(7){ }u288(16){ }u289(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
(code_label 284 313 283 19 50 "" [1 uses])
(note 283 284 12 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 12 283 314 19 (set (reg/f:DI 62 [ D.11851 ])
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ tiles_list ])
        (nil)))
(jump_insn 314 12 315 19 (set (pc)
        (label_ref 290)) 650 {jump}
     (nil)
 -> 290)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier 315 314 241)
;; basic block 20, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u291(6){ }u292(7){ }u293(16){ }u294(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 81 166 167
(code_label 241 315 242 20 37 "" [1 uses])
(note 242 241 244 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 244 242 245 20 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:336 87 {*movdi_internal_rex64}
     (nil))
(call_insn 245 244 246 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:336 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 246 245 247 20 (set (reg:DI 81 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:336 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 247 246 248 20 (set (reg/v:SI 61 [ num_ints ])
        (subreg:SI (reg:DI 81 [ D.11853 ]) 0)) tilesInt.C:336 89 {*movsi_internal}
     (nil))
(debug_insn 248 247 249 20 (var_location:SI num_ints (subreg:SI (reg:DI 81 [ D.11853 ]) 0)) tilesInt.C:336 -1
     (nil))
(insn 249 248 250 20 (set (reg:DI 166 [ D.11854 ])
        (sign_extend:DI (subreg:SI (reg:DI 81 [ D.11853 ]) 0))) tilesInt.C:337 149 {*extendsidi2_rex64}
     (nil))
(insn 250 249 251 20 (parallel [
            (set (reg:DI 167 [ D.11854 ])
                (ashift:DI (reg:DI 166 [ D.11854 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:337 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 166 [ D.11854 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 20 (set (reg:DI 5 di)
        (reg:DI 167 [ D.11854 ])) tilesInt.C:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 167 [ D.11854 ])
        (nil)))
(call_insn 252 251 253 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:337 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 253 252 255 20 (set (reg/v/f:DI 60 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 168)
            (nil))))
(debug_insn 255 253 257 20 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) tilesInt.C:337 -1
     (nil))
(debug_insn 257 255 259 20 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 259 257 260 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 81 [ D.11853 ]) 0)
            (const_int 0 [0]))) tilesInt.C:338 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 81 [ D.11853 ])
        (nil)))
(jump_insn 260 259 261 20 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) tilesInt.C:338 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 258)
;;  succ:       21 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

;; basic block 21, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 [91.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u311(6){ }u312(7){ }u313(16){ }u314(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(note 261 260 6 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 6 261 316 21 (set (reg:DI 92 [ ivtmp.97 ])
        (const_int 0 [0])) tilesInt.C:338 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 316 6 317 21 (set (pc)
        (label_ref 262)) 650 {jump}
     (nil)
 -> 262)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

(barrier 317 316 265)
;; basic block 22, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u315(6){ }u316(7){ }u317(16){ }u318(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
(code_label 265 317 266 22 36 "" [2 uses])
(note 266 265 7 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 7 266 8 22 (set (reg/v:SI 61 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:322 89 {*movsi_internal}
     (nil))
(insn 8 7 318 22 (set (reg/v/f:DI 60 [ ints ])
        (const_int 0 [0])) tilesInt.C:321 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 318 8 319 22 (set (pc)
        (label_ref 258)) 650 {jump}
     (nil)
 -> 258)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

(barrier 319 318 290)
;; basic block 23, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 22, next block 1, flags: (RTL)
;;  pred:       18 [100.0%] 
;;              2 [21.4%] 
;;              19 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u319(6){ }u320(7){ }u321(16){ }u322(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
(code_label 290 319 285 23 53 "" [3 uses])
(note 285 290 270 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 270 285 273 23 (set (reg/i:DI 0 ax)
        (reg/f:DI 62 [ D.11851 ])) tilesInt.C:365 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.11851 ])
        (nil)))
(insn 273 270 0 23 (use (reg/i:DI 0 ax)) tilesInt.C:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_LoadTiles(PyObject*, PyObject*) (_ZL15tiles_LoadTilesP7_objectS0_, funcdef_no=152, decl_uid=11255, cgraph_uid=152)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)
rescanning insn with uid = 241.
deleting insn with uid = 241.
deleting insn with uid = 240.
rescanning insn with uid = 221.
deleting insn with uid = 221.
deleting insn with uid = 218.
rescanning insn with uid = 178.
deleting insn with uid = 178.
deleting insn with uid = 172.
rescanning insn with uid = 168.
deleting insn with uid = 168.
deleting insn with uid = 167.
rescanning insn with uid = 160.
deleting insn with uid = 160.
deleting insn with uid = 154.
rescanning insn with uid = 131.
deleting insn with uid = 131.
deleting insn with uid = 129.
rescanning insn with uid = 117.
deleting insn with uid = 117.
deleting insn with uid = 115.
rescanning insn with uid = 105.
deleting insn with uid = 105.
deleting insn with uid = 104.
rescanning insn with uid = 87.
deleting insn with uid = 87.
deleting insn with uid = 85.
rescanning insn with uid = 53.
deleting insn with uid = 53.
deleting insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)
Reg 125: local to bb 2 def dominates all uses has unique first use
Ignoring reg 131, has equiv memory
Reg 64: local to bb 2 def dominates all uses has unique first use
Reg 66 uninteresting
Reg 69 uninteresting (no unique first use)
Reg 140 uninteresting
Reg 73 uninteresting (no unique first use)
Reg 74 uninteresting
Reg 75 uninteresting
Reg 82 uninteresting
Reg 83 uninteresting
Reg 86 uninteresting (no unique first use)
Reg 87: def dominates all uses has unique first use
Reg 96 uninteresting
Reg 92 uninteresting
Reg 93 uninteresting
Ignoring reg 148, has equiv memory
Reg 149: local to bb 12 def dominates all uses has unique first use
Reg 101: local to bb 13 def dominates all uses has unique first use
Ignoring reg 104, has equiv memory
Reg 159 uninteresting
Reg 121: def dominates all uses has unique first use
Reg 161 uninteresting
Reg 110: local to bb 17 def dominates all uses has unique first use
Reg 163: local to bb 17 def dominates all uses has unique first use
Reg 77 uninteresting
Reg 168 uninteresting
Found def insn 48 for 64 to be not moveable
Reg 87 not local to one basic block
Found def insn 170 for 101 to be not moveable
Found def insn 215 for 110 to be not moveable
Reg 121 not local to one basic block
Found def insn 5 for 125 to be not moveable
Found def insn 153 for 149 to be not moveable
Found def insn 217 for 163 to be not moveable
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 3
;;  header 17, latch 17
;;  depth 1, outer 0
;;  nodes: 17
;;
;; Loop 2
;;  header 10, latch 10
;;  depth 1, outer 0
;;  nodes: 10
;;
;; Loop 1
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;; 2 succs { 22 3 }
;; 3 succs { 4 21 }
;; 4 succs { 19 5 }
;; 5 succs { 21 }
;; 6 succs { 6 7 }
;; 7 succs { 10 8 }
;; 8 succs { 12 9 }
;; 9 succs { 13 }
;; 10 succs { 10 11 }
;; 11 succs { 8 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 22 }
;; 16 succs { 17 }
;; 17 succs { 17 18 }
;; 18 succs { 15 }
;; 19 succs { 20 7 }
;; 20 succs { 6 }
;; 21 succs { 7 }
;; 22 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 104: (insn_list:REG_DEP_TRUE 183 (nil))
init_insns for 131: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 152 (nil))
Reg 128 had equivalence, but can't be eliminated
Reg 129 had equivalence, but can't be eliminated
Reg 132 had equivalence, but can't be eliminated
Reg 135 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a7 (r169,l0) best DIREG, allocno DIREG
    a8 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r163,l3) best SIREG, allocno SIREG
    a41 (r161,l3) best DIREG, allocno DIREG
    a11 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r158,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r149,l0) best DREG, allocno DREG
    a19 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r142,l0) best DIREG, allocno DIREG
    a26 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r138,l0) best DIREG, allocno DIREG
    a33 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a31 (r131,l0) best DREG, allocno DREG
    a35 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r128,l0) best CREG, allocno CREG
    a30 (r125,l0) best SIREG, allocno SIREG
    a37 (r121,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a36 (r115,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r110,l3) best AD_REGS, allocno AD_REGS
    a48 (r106,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r104,l0) best NO_REGS, allocno NO_REGS
    a16 (r101,l0) best AREG, allocno AREG
    a20 (r96,l0) best AREG, allocno AREG
    a49 (r93,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a50 (r92,l2) best AREG, allocno AREG
    a55 (r88,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a47 (r87,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r86,l2) best AREG, allocno AREG
    a17 (r86,l0) best AREG, allocno AREG
    a56 (r83,l1) best AREG, allocno AREG
    a57 (r82,l1) best AREG, allocno AREG
    a6 (r77,l0) best AREG, allocno AREG
    a23 (r75,l0) best AREG, allocno AREG
    a24 (r74,l0) best DIREG, allocno DIREG
    a54 (r73,l1) best AREG, allocno AREG
    a45 (r73,l2) best AREG, allocno AREG
    a4 (r73,l0) best AREG, allocno AREG
    a53 (r69,l1) best AREG, allocno AREG
    a44 (r69,l2) best AREG, allocno AREG
    a3 (r69,l0) best AREG, allocno AREG
    a28 (r66,l0) best AREG, allocno AREG
    a29 (r64,l0) best AREG, allocno AREG
    a0 (r63,l0) best AREG, allocno AREG
    a52 (r62,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a43 (r62,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a51 (r61,l1) best AREG, allocno AREG
    a42 (r61,l2) best AREG, allocno AREG
    a1 (r61,l0) best AREG, allocno AREG

  a0(r63,l0) costs: AREG:-319,-319 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5629,5629 SSE_REGS:5629,5629 MMX_REGS:5629,5629 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:5629,5629 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:1503,1503
  a1(r61,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:626,1678
  a2(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r69,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r73,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3393,3393 SSE_REGS:3393,3393 MMX_REGS:3393,3393 FP_TOP_SSE_REGS:8308335,8308335 FP_SECOND_SSE_REGS:8308335,8308335 FLOAT_SSE_REGS:8308335,8308335 FLOAT_INT_REGS:8308335,8308335 INT_SSE_REGS:3393,3393 FLOAT_INT_SSE_REGS:8308335,8308335 ALL_REGS:8308335,8308335 MEM:954,954
  a5(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:164,4372
  a6(r77,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a7(r169,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a8(r168,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a9(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1053,48373 SSE_REGS:1053,48373 MMX_REGS:1053,48373 FP_TOP_SSE_REGS:1000000,63636850 FP_SECOND_SSE_REGS:1000000,63636850 FLOAT_SSE_REGS:1000000,63636850 FLOAT_INT_REGS:1000000,63636850 INT_SSE_REGS:1053,48373 FLOAT_INT_SSE_REGS:1000000,63636850 ALL_REGS:1000000,63636850 MEM:324,12154
  a10(r121,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,60636850 FP_SECOND_SSE_REGS:1000000,60636850 FLOAT_SSE_REGS:1000000,60636850 FLOAT_INT_REGS:1000000,60636850 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,60636850 ALL_REGS:1000000,60636850 MEM:324,3964
  a11(r159,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2106,2106 SSE_REGS:2106,2106 MMX_REGS:2106,2106 FP_TOP_SSE_REGS:6308335,6308335 FP_SECOND_SSE_REGS:6308335,6308335 FLOAT_SSE_REGS:6308335,6308335 FLOAT_INT_REGS:6308335,6308335 INT_SSE_REGS:2106,2106 FLOAT_INT_SSE_REGS:6308335,6308335 ALL_REGS:6308335,6308335 MEM:648,648
  a12(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3276,3276 SSE_REGS:3276,3276 MMX_REGS:3276,3276 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3276,3276 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:756,756
  a13(r158,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:243,2973
  a14(r157,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:4212,4212 SSE_REGS:4212,4212 MMX_REGS:4212,4212 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:4212,4212 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:1053,1053
  a15(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:-90,-90
  a16(r101,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a17(r86,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a18(r149,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a19(r148,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a20(r96,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a21(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:360,14920
  a22(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a23(r75,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a24(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a25(r142,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a26(r140,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a27(r138,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a28(r66,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a29(r64,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a30(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a31(r131,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5928,5928 SSE_REGS:5928,5928 MMX_REGS:5928,5928 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:5928,5928 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:798,798
  a32(r128,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a33(r135,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a34(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a35(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a36(r115,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:47320,47320 SSE_REGS:47320,47320 MMX_REGS:47320,47320 FP_TOP_SSE_REGS:62636850,62636850 FP_SECOND_SSE_REGS:62636850,62636850 FLOAT_SSE_REGS:62636850,62636850 FLOAT_INT_REGS:62636850,62636850 INT_SSE_REGS:47320,47320 FLOAT_INT_SSE_REGS:62636850,62636850 ALL_REGS:62636850,62636850 MEM:11830,11830
  a37(r121,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a38(r158,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a39(r163,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-910,-910 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a40(r110,l3) costs: AREG:-910,-910 DREG:-910,-910 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a41(r161,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a42(r61,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a43(r62,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a44(r69,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a45(r73,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a46(r86,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a47(r87,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a48(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:14560,14560
  a49(r93,l2) costs: AREG:24570,24570 DREG:24570,24570 CREG:24570,24570 BREG:24570,24570 SIREG:24570,24570 DIREG:24570,24570 AD_REGS:24570,24570 Q_REGS:24570,24570 NON_Q_REGS:24570,24570 INDEX_REGS:24570,24570 GENERAL_REGS:24570,24570 LEGACY_REGS:24570,24570 CLOBBERED_REGS:24570,24570 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a50(r92,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a51(r61,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a52(r62,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a53(r69,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a54(r73,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a55(r88,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:4208,4208
  a56(r83,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a57(r82,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841


Pass 1 for finding pseudo/allocno costs

    r169: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r163: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r149: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r142: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r138: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r131: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r128: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r110,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r86,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r73,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a45 (r73,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r69,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r69,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r61,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r61,l2) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r63,l0) costs: AREG:-319,-319 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5629,5629 SSE_REGS:5629,5629 MMX_REGS:5629,5629 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:5629,5629 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:1503,1503
  a1(r61,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:626,1678
  a2(r62,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r69,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r73,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3393,3393 SSE_REGS:3393,3393 MMX_REGS:3393,3393 FP_TOP_SSE_REGS:8308335,8308335 FP_SECOND_SSE_REGS:8308335,8308335 FLOAT_SSE_REGS:8308335,8308335 FLOAT_INT_REGS:8308335,8308335 INT_SSE_REGS:3393,3393 FLOAT_INT_SSE_REGS:8308335,8308335 ALL_REGS:8308335,8308335 MEM:954,954
  a5(r88,l0) costs: GENERAL_REGS:0,0 MEM:164,4372
  a6(r77,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a7(r169,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a8(r168,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a9(r115,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1053,48373 SSE_REGS:1053,48373 MMX_REGS:1053,48373 FP_TOP_SSE_REGS:1000000,63636850 FP_SECOND_SSE_REGS:1000000,63636850 FLOAT_SSE_REGS:1000000,63636850 FLOAT_INT_REGS:1000000,63636850 INT_SSE_REGS:1053,48373 FLOAT_INT_SSE_REGS:1000000,63636850 ALL_REGS:1000000,63636850 MEM:324,12154
  a10(r121,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,60636850 FP_SECOND_SSE_REGS:1000000,60636850 FLOAT_SSE_REGS:1000000,60636850 FLOAT_INT_REGS:1000000,60636850 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,60636850 ALL_REGS:1000000,60636850 MEM:324,3964
  a11(r159,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2106,2106 SSE_REGS:2106,2106 MMX_REGS:2106,2106 FP_TOP_SSE_REGS:6308335,6308335 FP_SECOND_SSE_REGS:6308335,6308335 FLOAT_SSE_REGS:6308335,6308335 FLOAT_INT_REGS:6308335,6308335 INT_SSE_REGS:2106,2106 FLOAT_INT_SSE_REGS:6308335,6308335 ALL_REGS:6308335,6308335 MEM:648,648
  a12(r105,l0) costs: GENERAL_REGS:360,360 SSE_FIRST_REG:3636,3636 SSE_REGS:3636,3636 MMX_REGS:3636,3636 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3636,3636 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:1116,1116
  a13(r158,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1053,12883 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:243,2973
  a14(r157,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4212,4212 SSE_REGS:4212,4212 MMX_REGS:4212,4212 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:4212,4212 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:1053,1053
  a15(r104,l0) costs: GENERAL_REGS:720,720 SSE_FIRST_REG:3060,3060 SSE_REGS:3060,3060 MMX_REGS:3060,3060 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:3060,3060 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a16(r101,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a17(r86,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a18(r149,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a19(r148,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a20(r96,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a21(r106,l0) costs: GENERAL_REGS:0,0 MEM:360,14920
  a22(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a23(r75,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a24(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a25(r142,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a26(r140,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a27(r138,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a28(r66,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a29(r64,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a30(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a31(r131,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5928,5928 SSE_REGS:5928,5928 MMX_REGS:5928,5928 FP_TOP_SSE_REGS:4000000,4000000 FP_SECOND_SSE_REGS:4000000,4000000 FLOAT_SSE_REGS:4000000,4000000 FLOAT_INT_REGS:4000000,4000000 INT_SSE_REGS:5928,5928 FLOAT_INT_SSE_REGS:4000000,4000000 ALL_REGS:4000000,4000000 MEM:798,798
  a32(r128,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a33(r135,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a34(r132,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a35(r129,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a36(r115,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:47320,47320 SSE_REGS:47320,47320 MMX_REGS:47320,47320 FP_TOP_SSE_REGS:62636850,62636850 FP_SECOND_SSE_REGS:62636850,62636850 FLOAT_SSE_REGS:62636850,62636850 FLOAT_INT_REGS:62636850,62636850 INT_SSE_REGS:47320,47320 FLOAT_INT_SSE_REGS:62636850,62636850 ALL_REGS:62636850,62636850 MEM:11830,11830
  a37(r121,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a38(r158,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a39(r163,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-910,-910 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a40(r110,l3) costs: CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a41(r161,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a42(r61,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a43(r62,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a44(r69,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a45(r73,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a46(r86,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a47(r87,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a48(r106,l2) costs: GENERAL_REGS:0,0 MEM:14560,14560
  a49(r93,l2) costs: AREG:30940,30940 DREG:30940,30940 CREG:30940,30940 BREG:30940,30940 SIREG:30940,30940 DIREG:30940,30940 AD_REGS:30940,30940 Q_REGS:30940,30940 NON_Q_REGS:30940,30940 INDEX_REGS:30940,30940 GENERAL_REGS:30940,30940 LEGACY_REGS:30940,30940 CLOBBERED_REGS:30940,30940 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a50(r92,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a51(r61,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a52(r62,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a53(r69,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a54(r73,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a55(r88,l1) costs: GENERAL_REGS:0,0 MEM:4208,4208
  a56(r83,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a57(r82,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841

   Insn 270(l0): point = 0
   Insn 267(l0): point = 2
   Insn 303(l0): point = 5
   Insn 7(l0): point = 7
   Insn 11(l0): point = 10
   Insn 208(l0): point = 12
   Insn 206(l0): point = 14
   Insn 203(l0): point = 16
   Insn 202(l0): point = 18
   Insn 199(l0): point = 20
   Insn 298(l0): point = 23
   Insn 193(l0): point = 25
   Insn 192(l0): point = 27
   Insn 191(l0): point = 29
   Insn 190(l0): point = 31
   Insn 301(l0): point = 34
   Insn 188(l0): point = 37
   Insn 187(l0): point = 39
   Insn 183(l0): point = 41
   Insn 180(l0): point = 44
   Insn 179(l0): point = 46
   Insn 178(l0): point = 48
   Insn 177(l0): point = 50
   Insn 176(l0): point = 52
   Insn 175(l0): point = 54
   Insn 174(l0): point = 56
   Insn 173(l0): point = 58
   Insn 170(l0): point = 60
   Insn 169(l0): point = 62
   Insn 168(l0): point = 64
   Insn 296(l0): point = 67
   Insn 162(l0): point = 69
   Insn 161(l0): point = 71
   Insn 160(l0): point = 73
   Insn 159(l0): point = 75
   Insn 158(l0): point = 77
   Insn 157(l0): point = 79
   Insn 156(l0): point = 81
   Insn 155(l0): point = 83
   Insn 153(l0): point = 85
   Insn 152(l0): point = 87
   Insn 291(l0): point = 90
   Insn 121(l0): point = 93
   Insn 120(l0): point = 95
   Insn 119(l0): point = 97
   Insn 118(l0): point = 99
   Insn 117(l0): point = 101
   Insn 116(l0): point = 103
   Insn 294(l0): point = 106
   Insn 113(l0): point = 109
   Insn 112(l0): point = 111
   Insn 10(l0): point = 113
   Insn 108(l0): point = 115
   Insn 107(l0): point = 117
   Insn 106(l0): point = 119
   Insn 105(l0): point = 121
   Insn 257(l0): point = 124
   Insn 256(l0): point = 126
   Insn 250(l0): point = 128
   Insn 249(l0): point = 130
   Insn 248(l0): point = 132
   Insn 247(l0): point = 134
   Insn 246(l0): point = 136
   Insn 244(l0): point = 138
   Insn 243(l0): point = 140
   Insn 242(l0): point = 142
   Insn 241(l0): point = 144
   Insn 305(l0): point = 147
   Insn 9(l0): point = 149
   Insn 8(l0): point = 151
   Insn 287(l0): point = 154
   Insn 78(l0): point = 157
   Insn 77(l0): point = 159
   Insn 76(l0): point = 161
   Insn 75(l0): point = 163
   Insn 74(l0): point = 165
   Insn 72(l0): point = 168
   Insn 71(l0): point = 170
   Insn 70(l0): point = 172
   Insn 67(l0): point = 174
   Insn 66(l0): point = 176
   Insn 65(l0): point = 178
   Insn 64(l0): point = 180
   Insn 63(l0): point = 182
   Insn 59(l0): point = 184
   Insn 58(l0): point = 186
   Insn 57(l0): point = 188
   Insn 56(l0): point = 190
   Insn 55(l0): point = 192
   Insn 54(l0): point = 194
   Insn 53(l0): point = 196
   Insn 50(l0): point = 199
   Insn 49(l0): point = 201
   Insn 12(l0): point = 203
   Insn 48(l0): point = 205
   Insn 47(l0): point = 207
   Insn 46(l0): point = 209
   Insn 45(l0): point = 211
   Insn 44(l0): point = 213
   Insn 43(l0): point = 215
   Insn 41(l0): point = 217
   Insn 40(l0): point = 219
   Insn 39(l0): point = 221
   Insn 38(l0): point = 223
   Insn 37(l0): point = 225
   Insn 36(l0): point = 227
   Insn 33(l0): point = 229
   Insn 32(l0): point = 231
   Insn 31(l0): point = 233
   Insn 29(l0): point = 235
   Insn 28(l0): point = 237
   Insn 27(l0): point = 239
   Insn 26(l0): point = 241
   Insn 21(l0): point = 243
   Insn 19(l0): point = 245
   Insn 17(l0): point = 247
   Insn 15(l0): point = 249
   Insn 5(l0): point = 251
   Insn 228(l3): point = 254
   Insn 227(l3): point = 256
   Insn 225(l3): point = 258
   Insn 222(l3): point = 260
   Insn 221(l3): point = 262
   Insn 220(l3): point = 264
   Insn 219(l3): point = 266
   Insn 217(l3): point = 268
   Insn 215(l3): point = 270
   Insn 214(l3): point = 272
   Insn 213(l3): point = 274
   Insn 212(l3): point = 276
   Insn 144(l2): point = 279
   Insn 143(l2): point = 281
   Insn 141(l2): point = 283
   Insn 137(l2): point = 285
   Insn 136(l2): point = 287
   Insn 135(l2): point = 289
   Insn 134(l2): point = 291
   Insn 133(l2): point = 293
   Insn 132(l2): point = 295
   Insn 131(l2): point = 297
   Insn 130(l2): point = 299
   Insn 100(l1): point = 302
   Insn 99(l1): point = 304
   Insn 97(l1): point = 306
   Insn 93(l1): point = 308
   Insn 92(l1): point = 310
   Insn 91(l1): point = 312
   Insn 90(l1): point = 314
   Insn 89(l1): point = 316
   Insn 88(l1): point = 318
   Insn 87(l1): point = 320
   Insn 86(l1): point = 322
 a0(r63): [199..203] [23..25] [3..4]
 a1(r61): [147..149] [82..128] [57..66] [5..9]
 a2(r62): [147..151] [84..138] [59..66] [5..9]
 a3(r69): [78..184] [53..66] [5..9]
 a4(r73): [37..174] [13..22] [5..9]
 a5(r88): [5..7]
 a6(r77): [127..140]
 a7(r169): [133..134]
 a8(r168): [135..136]
 a9(r115): [10..10]
 a10(r121): [10..12]
 a11(r159): [13..14]
 a12(r105): [37..39] [15..22]
 a13(r158): [10..16]
 a14(r157): [17..20]
 a15(r104): [40..41]
 a16(r101): [51..60]
 a17(r86): [80..117] [55..66]
 a18(r149): [76..85]
 a19(r148): [86..87]
 a20(r96): [96..97]
 a21(r106): [109..113]
 a22(r87): [109..115]
 a23(r75): [160..161]
 a24(r74): [166..172]
 a25(r142): [179..180]
 a26(r140): [181..182]
 a27(r138): [189..190]
 a28(r66): [191..192]
 a29(r64): [202..205]
 a30(r125): [212..251]
 a31(r131): [216..235]
 a32(r128): [218..241]
 a33(r135): [224..225]
 a34(r132): [230..231]
 a35(r129): [238..239]
 a36(r115): [254..278]
 a37(r121): [254..278]
 a38(r158): [254..278]
 a39(r163): [265..268]
 a40(r110): [267..270]
 a41(r161): [275..276]
 a42(r61): [279..301]
 a43(r62): [279..301]
 a44(r69): [279..301]
 a45(r73): [279..301]
 a46(r86): [279..301]
 a47(r87): [279..301]
 a48(r106): [279..301]
 a49(r93): [286..287]
 a50(r92): [292..293]
 a51(r61): [302..324]
 a52(r62): [302..324]
 a53(r69): [302..324]
 a54(r73): [302..324]
 a55(r88): [302..324]
 a56(r83): [309..310]
 a57(r82): [315..316]
 Rebuilding regno allocno list for 163
 Rebuilding regno allocno list for 161
      Moving ranges of a38r158 to a13r158:  [254..278]
      Moving ranges of a37r121 to a10r121:  [254..278]
      Moving ranges of a36r115 to a9r115:  [254..278]
 Rebuilding regno allocno list for 110
      Moving ranges of a48r106 to a21r106:  [279..301]
 Rebuilding regno allocno list for 93
 Rebuilding regno allocno list for 92
      Moving ranges of a55r88 to a5r88:  [302..324]
      Moving ranges of a47r87 to a22r87:  [279..301]
      Moving ranges of a46r86 to a17r86:  [279..301]
 Rebuilding regno allocno list for 83
 Rebuilding regno allocno list for 82
      Moving ranges of a54r73 to a4r73:  [302..324]
      Moving ranges of a45r73 to a4r73:  [279..301]
      Moving ranges of a53r69 to a3r69:  [302..324]
      Moving ranges of a44r69 to a3r69:  [279..301]
      Moving ranges of a52r62 to a2r62:  [302..324]
      Moving ranges of a43r62 to a2r62:  [279..301]
      Moving ranges of a51r61 to a1r61:  [302..324]
      Moving ranges of a42r61 to a1r61:  [279..301]
Compressing live ranges: from 325 to 68 - 20%
Ranges after the compression:
 a0(r63): [48..49] [12..13] [0..1]
 a1(r61): [60..67] [34..35] [18..29] [2..3]
 a2(r62): [60..67] [18..35] [2..3]
 a3(r69): [60..67] [18..43] [2..3]
 a4(r73): [60..67] [14..39] [6..11] [2..3]
 a5(r88): [64..67] [2..3]
 a6(r77): [28..33]
 a7(r169): [30..31]
 a8(r168): [32..33]
 a9(r115): [56..59] [4..4]
 a10(r121): [56..59] [4..5]
 a11(r159): [6..7]
 a12(r105): [14..15] [8..11]
 a13(r158): [56..59] [4..9]
 a14(r157): [10..11]
 a15(r104): [16..17]
 a16(r101): [18..19]
 a17(r86): [60..63] [18..27]
 a18(r149): [20..21]
 a19(r148): [22..23]
 a20(r96): [24..25]
 a21(r106): [60..63] [26..27]
 a22(r87): [60..63] [26..27]
 a23(r75): [36..37]
 a24(r74): [38..39]
 a25(r142): [40..41]
 a26(r140): [42..43]
 a27(r138): [44..45]
 a28(r66): [46..47]
 a29(r64): [48..49]
 a30(r125): [50..55]
 a31(r131): [50..53]
 a32(r128): [50..55]
 a33(r135): [50..51]
 a34(r132): [52..53]
 a35(r129): [54..55]
 a39(r163): [56..57]
 a40(r110): [56..57]
 a41(r161): [58..59]
 a49(r93): [60..61]
 a50(r92): [62..63]
 a56(r83): [64..65]
 a57(r82): [66..67]
+++Allocating 344 bytes for conflict table (uncompressed size 464)
;; a0(r63,l0) conflicts: a29(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r61,l0) conflicts: a2(r62,l0) a3(r69,l0) a4(r73,l0) a5(r88,l0) a16(r101,l0) a17(r86,l0) a18(r149,l0) a19(r148,l0) a20(r96,l0) a21(r106,l0) a22(r87,l0) a6(r77,l0) a50(r92,l0) a56(r83,l0) a57(r82,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a2(r62,l0) conflicts: a1(r61,l0) a3(r69,l0) a4(r73,l0) a5(r88,l0) a16(r101,l0) a17(r86,l0) a18(r149,l0) a19(r148,l0) a20(r96,l0) a21(r106,l0) a22(r87,l0) a6(r77,l0) a7(r169,l0) a8(r168,l0) a50(r92,l0) a56(r83,l0) a57(r82,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a3(r69,l0) conflicts: a1(r61,l0) a2(r62,l0) a4(r73,l0) a5(r88,l0) a16(r101,l0) a17(r86,l0) a18(r149,l0) a19(r148,l0) a20(r96,l0) a21(r106,l0) a22(r87,l0) a6(r77,l0) a7(r169,l0) a8(r168,l0) a23(r75,l0) a24(r74,l0) a25(r142,l0) a26(r140,l0) a50(r92,l0) a56(r83,l0) a57(r82,l0)
;;     total conflict hard regs: 0 4 5 37 38
;;     conflict hard regs: 0 4 5 37 38

;; a4(r73,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a5(r88,l0) a13(r158,l0) a11(r159,l0) a12(r105,l0) a14(r157,l0) a16(r101,l0) a17(r86,l0) a18(r149,l0) a19(r148,l0) a20(r96,l0) a21(r106,l0) a22(r87,l0) a6(r77,l0) a7(r169,l0) a8(r168,l0) a23(r75,l0) a24(r74,l0) a50(r92,l0) a56(r83,l0) a57(r82,l0)
;;     total conflict hard regs: 0-2 4 5 37 38
;;     conflict hard regs: 0-2 4 5 37 38

;; a5(r88,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a56(r83,l0) a57(r82,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a6(r77,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a7(r169,l0) a8(r168,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a7(r169,l0) conflicts: a2(r62,l0) a3(r69,l0) a4(r73,l0) a6(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r168,l0) conflicts: a2(r62,l0) a3(r69,l0) a4(r73,l0) a6(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r115,l0) conflicts: a10(r121,l0) a13(r158,l0) a39(r163,l0) a40(r110,l0) a41(r161,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a10(r121,l0) conflicts: a9(r115,l0) a13(r158,l0) a39(r163,l0) a40(r110,l0) a41(r161,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a11(r159,l0) conflicts: a4(r73,l0) a13(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r105,l0) conflicts: a4(r73,l0) a13(r158,l0) a14(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r158,l0) conflicts: a4(r73,l0) a9(r115,l0) a10(r121,l0) a11(r159,l0) a12(r105,l0) a39(r163,l0) a40(r110,l0) a41(r161,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a14(r157,l0) conflicts: a4(r73,l0) a12(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r104,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r101,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a17(r86,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a17(r86,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a16(r101,l0) a18(r149,l0) a19(r148,l0) a20(r96,l0) a21(r106,l0) a22(r87,l0) a50(r92,l0)
;;     total conflict hard regs: 0 4 5 38
;;     conflict hard regs: 0 4 5 38

;; a18(r149,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a17(r86,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a19(r148,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a17(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r96,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a17(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r106,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a17(r86,l0) a22(r87,l0) a50(r92,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a22(r87,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a17(r86,l0) a21(r106,l0) a50(r92,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a23(r75,l0) conflicts: a3(r69,l0) a4(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r74,l0) conflicts: a3(r69,l0) a4(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r142,l0) conflicts: a3(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r140,l0) conflicts: a3(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r138,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r66,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r64,l0) conflicts: a0(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r125,l0) conflicts: a33(r135,l0) a31(r131,l0) a32(r128,l0) a34(r132,l0) a35(r129,l0)
;;     total conflict hard regs: 1 2 4 37 38
;;     conflict hard regs: 1 2 4 37 38

;; a31(r131,l0) conflicts: a33(r135,l0) a30(r125,l0) a32(r128,l0) a34(r132,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a32(r128,l0) conflicts: a33(r135,l0) a31(r131,l0) a30(r125,l0) a34(r132,l0) a35(r129,l0)
;;     total conflict hard regs: 37 38
;;     conflict hard regs: 37 38

;; a33(r135,l0) conflicts: a31(r131,l0) a30(r125,l0) a32(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r132,l0) conflicts: a31(r131,l0) a30(r125,l0) a32(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r129,l0) conflicts: a30(r125,l0) a32(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r163,l0) conflicts: a9(r115,l0) a10(r121,l0) a13(r158,l0) a40(r110,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a40(r110,l0) conflicts: a9(r115,l0) a10(r121,l0) a13(r158,l0) a39(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r161,l0) conflicts: a9(r115,l0) a10(r121,l0) a13(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r93,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r92,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a17(r86,l0) a21(r106,l0) a22(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r83,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a5(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r82,l0) conflicts: a1(r61,l0) a2(r62,l0) a3(r69,l0) a4(r73,l0) a5(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r169)<->a8(r168)@5:shuffle
  cp1:a13(r158)<->a14(r157)@10:shuffle
  cp2:a11(r159)<->a12(r105)@10:shuffle
  cp3:a12(r105)<->a15(r104)@11:shuffle
  cp4:a27(r138)<->a28(r66)@11:shuffle
  cp5:a25(r142)<->a26(r140)@11:shuffle
  regions=4, blocks=23, points=68
    allocnos=58 (big 0), copies=6, conflicts=0, ranges=63

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r63 1r61 2r62 3r69 4r73 5r88 6r77 7r169 8r168 9r115 10r121 11r159 12r105 13r158 14r157 15r104 16r101 17r86 18r149 19r148 20r96 21r106 22r87 23r75 24r74 25r142 26r140 27r138 28r66 29r64 30r125 31r131 32r128 33r135 34r132 35r129 39r163 40r110 41r161 49r93 50r92 56r83 57r82
    modified regnos: 61 62 63 64 66 69 73 74 75 77 82 83 86 87 88 92 93 96 101 104 105 106 110 115 121 125 128 129 131 132 135 138 140 142 148 149 157 158 159 161 163 168 169
    border:
    Pressure: GENERAL_REGS=9 SSE_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 21-28 45-51)@32760
        2:( 0-6 37-44)@94908
          3:( 1-3 6 37-44)@38584
            4:( 2 3 6 37-44)@33408
              5:( 3 6 41-44)@39388
      Spill a15(r104,l0)
      Allocno a0r63 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r61 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a2r62 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a3r69 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-38 45-51)
      Allocno a4r73 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-38 45-51)
      Allocno a5r88 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a6r77 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-51)
      Allocno a7r169 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a8r168 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a9r115 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a10r121 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a11r159 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a12r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a13r158 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a14r157 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a16r101 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a17r86 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 38 45-51)
      Allocno a18r149 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a19r148 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a20r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a21r106 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a22r87 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a23r75 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a24r74 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a25r142 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a26r140 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a27r138 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a28r66 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a29r64 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a30r125 of GENERAL_REGS(15) has 10 avail. regs  0 3 5 6 39-44, ^node:  0-6 37-44 (confl regs =  1 2 4 7-38 45-51)
      Allocno a31r131 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a32r128 of GENERAL_REGS(15) has 13 avail. regs  0-6 39-44, ^node:  0-6 37-44 (confl regs =  7-38 45-51)
      Allocno a33r135 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a34r132 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a35r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a39r163 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, ^node:  0-6 37-44 (confl regs =  1 7-36 45-51)
      Allocno a40r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a41r161 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a49r93 of SSE_REGS(16) has 16 avail. regs  21-28 45-51, node:  21-28 45-51 (confl regs =  0-20 29-44)
      Allocno a50r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a56r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a57r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a19(r148,l0)(cost 0)
      Pushing a8(r168,l0)(cost 0)
      Pushing a7(r169,l0)(cost 0)
      Pushing a18(r149,l0)(cost 0)
      Pushing a16(r101,l0)(cost 0)
      Pushing a23(r75,l0)(cost 0)
      Pushing a11(r159,l0)(cost 0)
      Pushing a28(r66,l0)(cost 0)
      Pushing a27(r138,l0)(cost 0)
      Pushing a26(r140,l0)(cost 0)
      Pushing a25(r142,l0)(cost 0)
      Pushing a20(r96,l0)(cost 0)
      Pushing a6(r77,l0)(cost 0)
      Pushing a35(r129,l0)(cost 0)
      Pushing a34(r132,l0)(cost 0)
      Pushing a33(r135,l0)(cost 0)
      Pushing a29(r64,l0)(cost 0)
      Pushing a32(r128,l0)(cost 0)
      Pushing a30(r125,l0)(cost 0)
      Pushing a24(r74,l0)(cost 0)
      Pushing a12(r105,l0)(cost 0)
      Pushing a14(r157,l0)(cost 0)
      Pushing a0(r63,l0)(cost 0)
      Pushing a31(r131,l0)(cost 0)
      Pushing a57(r82,l0)(cost 0)
      Pushing a56(r83,l0)(cost 0)
      Pushing a10(r121,l0)(cost 0)
        Making a13(r158,l0) colorable
      Pushing a13(r158,l0)(cost 2973)
      Pushing a5(r88,l0)(cost 0)
      Pushing a49(r93,l0)(cost 0)
      Pushing a50(r92,l0)(cost 0)
      Pushing a41(r161,l0)(cost 0)
      Pushing a40(r110,l0)(cost 0)
      Pushing a39(r163,l0)(cost 0)
      Pushing a9(r115,l0)(cost 0)
      Pushing a21(r106,l0)(cost 0)
        Making a1(r61,l0) colorable
        Making a2(r62,l0) colorable
        Making a3(r69,l0) colorable
        Making a4(r73,l0) colorable
        Making a17(r86,l0) colorable
        Making a22(r87,l0) colorable
      Pushing a4(r73,l0)(cost 954)
      Pushing a17(r86,l0)(cost 1260)
      Pushing a2(r62,l0)(cost 1505)
      Pushing a1(r61,l0)(cost 1678)
      Pushing a22(r87,l0)(cost 3090)
      Pushing a3(r69,l0)(cost 4270)
      Popping a3(r69,l0)  -- assign reg 3
      Popping a22(r87,l0)  -- assign reg 6
      Popping a1(r61,l0)  -- assign reg 41
      Popping a2(r62,l0)  -- assign reg 42
      Popping a17(r86,l0)  -- assign reg 43
      Popping a4(r73,l0)  -- assign reg 44
      Popping a21(r106,l0)  -- assign reg 1
      Popping a9(r115,l0)  -- assign reg 3
      Popping a39(r163,l0)  -- assign reg 4
      Popping a40(r110,l0)  -- assign reg 0
      Popping a41(r161,l0)  -- assign reg 5
      Popping a50(r92,l0)  -- assign reg 0
      Popping a49(r93,l0)  -- assign reg 21
      Popping a5(r88,l0)  -- assign reg 6
      Popping a13(r158,l0)  -- assign reg 6
      Popping a10(r121,l0)  -- assign reg 41
      Popping a56(r83,l0)  -- assign reg 0
      Popping a57(r82,l0)  -- assign reg 0
      Popping a31(r131,l0)  -- assign reg 1
      Popping a0(r63,l0)  -- assign reg 0
      Popping a14(r157,l0)  -- assign reg 6
      Popping a12(r105,l0)  -- assign reg 0
      Popping a24(r74,l0)  -- assign reg 5
      Popping a30(r125,l0)  -- assign reg 5
      Popping a32(r128,l0)  -- assign reg 2
      Popping a29(r64,l0)  -- assign reg 1
      Popping a33(r135,l0)  -- assign reg 0
      Popping a34(r132,l0)  -- assign reg 0
      Popping a35(r129,l0)  -- assign reg 0
      Popping a6(r77,l0)  -- assign reg 6
      Popping a20(r96,l0)  -- assign reg 0
      Popping a25(r142,l0)  -- assign reg 5
      Popping a26(r140,l0)  -- assign reg 5
      Popping a27(r138,l0)  -- assign reg 5
      Popping a28(r66,l0)  -- assign reg 0
      Popping a11(r159,l0)  -- assign reg 0
      Popping a23(r75,l0)  -- assign reg 0
      Popping a16(r101,l0)  -- assign reg 0
      Popping a18(r149,l0)  -- assign reg 1
      Popping a7(r169,l0)  -- assign reg 5
      Popping a8(r168,l0)  -- assign reg 5
      Popping a19(r148,l0)  -- assign reg 0
Spilling a4r73 for a21r106
Assigning 44 to a21r106
       a4(r73,l0)  -- assign memory
Disposition:
    1:r61  l0    41    2:r62  l0    42    0:r63  l0     0   29:r64  l0     1
   28:r66  l0     0    3:r69  l0     3    4:r73  l0   mem   24:r74  l0     5
   23:r75  l0     0    6:r77  l0     6   57:r82  l0     0   56:r83  l0     0
   17:r86  l0    43   22:r87  l0     6    5:r88  l0     6   50:r92  l0     0
   49:r93  l0    21   20:r96  l0     0   16:r101 l0     0   15:r104 l0   mem
   12:r105 l0     0   21:r106 l0    44   40:r110 l0     0    9:r115 l0     3
   10:r121 l0    41   30:r125 l0     5   32:r128 l0     2   35:r129 l0     0
   31:r131 l0     1   34:r132 l0     0   33:r135 l0     0   27:r138 l0     5
   26:r140 l0     5   25:r142 l0     5   19:r148 l0     0   18:r149 l0     1
   14:r157 l0     6   13:r158 l0     6   11:r159 l0     0   41:r161 l0     5
   39:r163 l0     4    8:r168 l0     5    7:r169 l0     5
New iteration of spill/restore move
+++Costs: overall -9294, reg -10518, mem 1224, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* tiles_LoadTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={23d,19u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,22u} r7={1d,55u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,21u} r17={40d,10u} r18={19d} r19={19d} r20={1d,48u,10e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r61={2d,5u} r62={2d,4u} r63={2d,1u} r64={1d,1u} r66={1d,1u} r69={1d,4u} r73={1d,4u} r74={1d,2u} r75={1d,1u} r77={1d,4u} r82={1d,1u} r83={1d,1u} r86={1d,5u} r87={1d,1u} r88={2d,6u} r92={1d,1u} r93={1d,1u} r96={1d,1u} r101={1d,2u} r104={1d,3u} r105={1d,2u} r106={2d,6u} r110={1d,1u} r115={2d,3u} r121={1d,1u} r125={1d,1u} r128={1d,1u} r129={1d,1u} r131={1d,3u} r132={1d,1u} r135={1d,1u} r138={1d,1u} r140={1d,1u} r142={1d,1u} r148={1d,1u} r149={1d,1u} r157={2d,2u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r163={1d,1u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 1277{968d,299u,10e} in 177{158 regular + 19 call} insns.
(note 3 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 125 128 129 131 132 135
(note 13 3 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 13 6 2 (set (reg/v/f:DI 125 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 6 5 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 6 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:136 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 16 15 17 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:137 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:140 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:141 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:143 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 20 19 21 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:144 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:146 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 22 21 23 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:147 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:148 -1
     (nil))
(note 24 23 25 2 NOTE_INSN_DELETED)
(note 25 24 26 2 NOTE_INSN_DELETED)
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 128)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 28 27 29 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 129)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 29 28 31 2 (set (reg:DI 131)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 31 29 32 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 131)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 33 32 36 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 132)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 36 33 37 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 131)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg/f:DI 135)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 38 37 39 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 135)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 39 38 40 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))) tilesInt.C:155 267 {*leadi}
     (nil))
(insn 40 39 41 2 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))) tilesInt.C:155 267 {*leadi}
     (nil))
(insn 41 40 43 2 (set (reg:DI 2 cx)
        (reg/f:DI 128)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 43 41 44 2 (set (reg:DI 1 dx)
        (reg:DI 131)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 131)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 44 43 45 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b9b8a16a720 *.LC0>)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg/v/f:DI 125 [ args ])) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ args ])
        (nil)))
(insn 46 45 47 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:155 91 {*movqi_internal}
     (nil))
(call_insn 47 46 48 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 40 [0x28]))) tilesInt.C:155 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (nil))))))))))))))
(insn 48 47 12 2 (set (reg:SI 64 [ D.11886 ])
        (reg:SI 0 ax)) tilesInt.C:155 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 48 49 2 (set (reg/f:DI 63 [ D.11885 ])
        (const_int 0 [0])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 49 12 50 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.11886 ])
            (const_int 0 [0]))) tilesInt.C:151 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 64 [ D.11886 ])
        (nil)))
(jump_insn 50 49 51 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 279)
            (pc))) tilesInt.C:151 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 279)
;;  succ:       22 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 69 73 74 138 140 142
(note 51 50 53 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 53 51 54 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:159 87 {*movdi_internal_rex64}
     (nil))
(call_insn 54 53 55 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:159 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 3 (set (reg:DI 66 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 138 [ D.11888 ])
                (ashift:DI (reg:DI 66 [ D.11887 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:159 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 66 [ D.11887 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 3 (set (reg:DI 5 di)
        (reg:DI 138 [ D.11888 ])) tilesInt.C:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 138 [ D.11888 ])
        (nil)))
(call_insn 58 57 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:159 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 69 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 139)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI variables (reg/v/f:DI 69 [ variables ])) tilesInt.C:159 -1
     (nil))
(note 62 61 63 3 NOTE_INSN_DELETED)
(insn 63 62 64 3 (set (reg:DI 140 [ D.11888 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128]))) tilesInt.C:160 149 {*extendsidi2_rex64}
     (nil))
(insn 64 63 65 3 (parallel [
            (set (reg:DI 142 [ D.11888 ])
                (ashift:DI (reg:DI 140 [ D.11888 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:160 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.11888 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 3 (set (reg:DI 5 di)
        (reg:DI 142 [ D.11888 ])) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 142 [ D.11888 ])
        (nil)))
(call_insn 66 65 67 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:160 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 67 66 69 3 (set (reg/v/f:DI 73 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 143)
            (nil))))
(debug_insn 69 67 70 3 (var_location:DI the_tiles (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:160 -1
     (nil))
(insn 70 69 71 3 (set (reg/f:DI 74 [ ints_list.27 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:162 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 74 [ ints_list.27 ])
            (const_int 0 [0]))) tilesInt.C:162 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 72 71 73 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) tilesInt.C:162 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 262)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              21 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75
(note 73 72 74 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 4 (set (reg:DI 5 di)
        (reg/f:DI 74 [ ints_list.27 ])) tilesInt.C:162 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ ints_list.27 ])
        (nil)))
(call_insn 75 74 76 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:162 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 76 75 77 4 (set (reg:DI 75 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:162 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 77 76 78 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 75 [ D.11887 ])
            (const_int 0 [0]))) tilesInt.C:162 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 75 [ D.11887 ])
        (nil)))
(jump_insn 78 77 286 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) tilesInt.C:162 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 238)
;;  succ:       19 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 286 78 287 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 287 286 288 5 (set (pc)
        (label_ref 262)) 650 {jump}
     (nil)
 -> 262)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73

(barrier 288 287 259)
;; basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              20 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 88
(code_label 259 288 83 6 75 "" [2 uses])
(note 83 259 84 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 84 83 86 6 (var_location:SI i (subreg:SI (reg:DI 88 [ ivtmp.117 ]) 0)) -1
     (nil))
(insn 86 84 87 6 (set (reg:DI 4 si)
        (reg:DI 88 [ ivtmp.117 ])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (nil))
(call_insn 88 87 89 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:167 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 89 88 90 6 (set (reg/f:DI 82 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 90 89 91 6 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.11885 ])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 82 [ D.11885 ])
        (nil)))
(call_insn 91 90 92 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:167 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 92 91 93 6 (set (reg:DI 83 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 93 92 94 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 88 [ ivtmp.117 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 61 [ ints ])) [0 MEM[base: ints_45, index: ivtmp.117_115, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 83 [ D.11887 ]) 0)) tilesInt.C:167 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ D.11887 ])
        (nil)))
(debug_insn 94 93 96 6 (var_location:SI D#8 (plus:SI (subreg:SI (reg:DI 88 [ ivtmp.117 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 96 94 97 6 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))
(insn 97 96 99 6 (parallel [
            (set (reg:DI 88 [ ivtmp.117 ])
                (plus:DI (reg:DI 88 [ ivtmp.117 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 97 100 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ num_ints ])
            (subreg:SI (reg:DI 88 [ ivtmp.117 ]) 0))) tilesInt.C:166 7 {*cmpsi_1}
     (nil))
(jump_insn 100 99 255 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) tilesInt.C:166 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 259)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       19 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              21 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u112(6){ }u113(7){ }u114(16){ }u115(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 106
(code_label 255 100 101 7 74 "" [2 uses])
(note 101 255 102 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 102 101 103 7 (var_location:SI num_ints (reg/v:SI 62 [ num_ints ])) -1
     (nil))
(debug_insn 103 102 105 7 (var_location:DI ints (reg/v/f:DI 61 [ ints ])) -1
     (nil))
(insn 105 103 106 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:170 87 {*movdi_internal_rex64}
     (nil))
(call_insn 106 105 107 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:170 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 107 106 108 7 (set (reg:DI 86 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 108 107 109 7 (set (reg/v:SI 87 [ num_variables ])
        (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:170 89 {*movsi_internal}
     (nil))
(debug_insn 109 108 111 7 (var_location:SI num_variables (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:170 -1
     (nil))
(debug_insn 111 109 10 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 10 111 112 7 (set (reg:DI 106 [ ivtmp.112 ])
        (const_int 0 [0])) tilesInt.C:172 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 112 10 113 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 86 [ D.11887 ]) 0)
            (const_int 0 [0]))) tilesInt.C:172 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 142 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) tilesInt.C:172 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 281)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u127(6){ }u128(7){ }u129(16){ }u130(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96
(code_label 142 113 114 8 68 "" [1 uses])
(note 114 142 116 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 116 114 117 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:175 87 {*movdi_internal_rex64}
     (nil))
(insn 117 116 118 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:175 87 {*movdi_internal_rex64}
     (nil))
(call_insn 118 117 119 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:175 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 119 118 120 8 (set (reg:SI 96 [ D.11886 ])
        (reg:SI 0 ax)) tilesInt.C:175 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 120 119 121 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.11886 ])
            (const_int 0 [0]))) tilesInt.C:175 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.11886 ])
        (nil)))
(jump_insn 121 120 289 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) tilesInt.C:175 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 149)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 289 121 291 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 291 289 292 9 (set (pc)
        (label_ref 290)) 650 {jump}
     (nil)
 -> 290)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86

(barrier 292 291 281)
;; basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u139(6){ }u140(7){ }u141(16){ }u142(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 87 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 92 93 106
(code_label 281 292 280 10 80 "" [2 uses])
(note 280 281 128 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 128 280 130 10 (var_location:SI i (subreg:SI (reg:DI 106 [ ivtmp.112 ]) 0)) -1
     (nil))
(insn 130 128 131 10 (set (reg:DI 4 si)
        (reg:DI 106 [ ivtmp.112 ])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 132 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (nil))
(call_insn 132 131 133 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:173 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 133 132 134 10 (set (reg/f:DI 92 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:173 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 134 133 135 10 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.11885 ])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.11885 ])
        (nil)))
(call_insn 135 134 136 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:173 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 136 135 137 10 (set (reg:DF 93 [ D.11889 ])
        (reg:DF 21 xmm0)) tilesInt.C:173 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 137 136 138 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ ivtmp.112 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 69 [ variables ])) [0 MEM[base: variables_29, index: ivtmp.112_116, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 93 [ D.11889 ]))) tilesInt.C:173 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 93 [ D.11889 ])
        (nil)))
(debug_insn 138 137 140 10 (var_location:SI D#7 (plus:SI (subreg:SI (reg:DI 106 [ ivtmp.112 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 140 138 141 10 (var_location:SI i (debug_expr:SI D#7)) -1
     (nil))
(insn 141 140 143 10 (parallel [
            (set (reg:DI 106 [ ivtmp.112 ])
                (plus:DI (reg:DI 106 [ ivtmp.112 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 141 144 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ num_variables ])
            (subreg:SI (reg:DI 106 [ ivtmp.112 ]) 0))) tilesInt.C:172 7 {*cmpsi_1}
     (nil))
(jump_insn 144 143 293 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) tilesInt.C:172 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 281)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 293 144 294 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 294 293 295 11 (set (pc)
        (label_ref 142)) 650 {jump}
     (nil)
 -> 142)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86

(barrier 295 294 149)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u163(6){ }u164(7){ }u165(16){ }u166(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 148 149
(code_label 149 295 150 12 66 "" [1 uses])
(note 150 149 151 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 151 150 152 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:177 -1
     (nil))
(insn 152 151 153 12 (set (reg/f:DI 148 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:177 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 153 152 155 12 (set (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 148 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 148 [ memorctable ])
        (nil)))
(insn 155 153 156 12 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 62 [ num_ints ])) tilesInt.C:178 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 62 [ num_ints ])
        (nil)))
(insn 156 155 157 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 61 [ ints ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ints ])
        (nil)))
(insn 157 156 158 12 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:178 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ D.11887 ])
        (nil)))
(insn 158 157 159 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 69 [ variables ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 69 [ variables ])
        (nil)))
(insn 159 158 160 12 (set (reg:DI 1 dx)
        (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])
        (nil)))
(insn 160 159 161 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:178 89 {*movsi_internal}
     (nil))
(insn 161 160 162 12 (set (reg:DI 5 di)
        (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (nil))
(call_insn 162 161 296 12 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b9b8a092400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:178 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
(jump_insn 296 162 297 12 (set (pc)
        (label_ref 181)) 650 {jump}
     (nil)
 -> 181)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

(barrier 297 296 290)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 101
(code_label 290 297 166 13 83 "" [1 uses])
(note 166 290 168 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 168 166 169 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:182 87 {*movdi_internal_rex64}
     (nil))
(call_insn 169 168 170 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:182 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 13 (set (reg:DI 101 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:182 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 171 170 173 13 (var_location:SI memory_size (subreg:SI (reg:DI 101 [ D.11887 ]) 0)) tilesInt.C:182 -1
     (nil))
(insn 173 171 174 13 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 62 [ num_ints ])) tilesInt.C:183 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 62 [ num_ints ])
        (nil)))
(insn 174 173 175 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 61 [ ints ])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ints ])
        (nil)))
(insn 175 174 176 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:183 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ D.11887 ])
        (nil)))
(insn 176 175 177 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 69 [ variables ])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 69 [ variables ])
        (nil)))
(insn 177 176 178 13 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 101 [ D.11887 ]) 0)) tilesInt.C:183 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ D.11887 ])
        (nil)))
(insn 178 177 179 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:183 89 {*movsi_internal}
     (nil))
(insn 179 178 180 13 (set (reg:DI 5 di)
        (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (nil))
(call_insn 180 179 181 13 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9b8a086b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:183 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u214(6){ }u215(7){ }u216(16){ }u217(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105
(code_label 181 180 182 14 70 "" [1 uses])
(note 182 181 183 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 14 (set (reg:SI 104 [ num_tilings.24 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:186 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])
        (nil)))
(note 184 183 186 14 NOTE_INSN_DELETED)
(debug_insn 186 184 187 14 (var_location:SI i (plus:SI (reg:SI 104 [ num_tilings.24 ])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 187 186 188 14 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg:SI 104 [ num_tilings.24 ])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg/v:SI 105 [ i ])
                (plus:SI (reg:SI 104 [ num_tilings.24 ])
                    (const_int -1 [0xffffffffffffffff])))
        ]) tilesInt.C:186 281 {*addsi_2}
     (expr_list:REG_DEAD (reg:SI 104 [ num_tilings.24 ])
        (nil)))
(jump_insn 188 187 226 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) tilesInt.C:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 196)
;;  succ:       16 [91.0%] 
;;              15 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 [9.0%]  (FALLTHRU)
;;              18 [100.0%]  (LOOP_EXIT)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u223(6){ }u224(7){ }u225(16){ }u226(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63
(code_label 226 188 189 15 72 "" [1 uses])
(note 189 226 190 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:188 87 {*movdi_internal_rex64}
     (nil))
(insn 191 190 192 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:188 91 {*movqi_internal}
     (nil))
(call_insn 192 191 193 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:188 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 193 192 298 15 (set (reg/f:DI 63 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 298 193 299 15 (set (pc)
        (label_ref 279)) 650 {jump}
     (nil)
 -> 279)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

(barrier 299 298 196)
;; basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14 [91.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u231(6){ }u232(7){ }u233(16){ }u234(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  def 	 17 [flags] 115 121 157 158 159
(code_label 196 299 197 16 71 "" [1 uses])
(note 197 196 199 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 199 197 200 16 (set (reg:DI 157)
        (zero_extend:DI (reg/v:SI 105 [ i ]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(note 200 199 202 16 NOTE_INSN_DELETED)
(insn 202 200 203 16 (set (reg:DI 157)
        (not:DI (reg:DI 157))) 496 {*one_cmpldi2_1}
     (nil))
(insn 203 202 206 16 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 157)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 203 207 16 (set (reg:DI 159 [ D.11891 ])
        (sign_extend:DI (reg/v:SI 105 [ i ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 105 [ i ])
        (nil)))
(note 207 206 208 16 NOTE_INSN_DELETED)
(insn 208 207 11 16 (set (reg/f:DI 121 [ D.11893 ])
        (plus:DI (mult:DI (reg:DI 159 [ D.11891 ])
                (const_int 4 [0x4]))
            (reg/v/f:DI 73 [ the_tiles ]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 159 [ D.11891 ])
        (expr_list:REG_DEAD (reg/v/f:DI 73 [ the_tiles ])
            (nil))))
(insn 11 208 230 16 (set (reg:DI 115 [ ivtmp.109 ])
        (const_int 0 [0])) tilesInt.C:186 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

;; basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       17 [91.0%]  (DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u243(6){ }u244(7){ }u245(16){ }u246(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 115 161 163
(code_label 230 11 209 17 73 "" [1 uses])
(note 209 230 210 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 210 209 211 17 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(note 211 210 212 17 NOTE_INSN_DELETED)
(insn 212 211 213 17 (set (reg:DI 161 [ D.11887 ])
        (sign_extend:DI (mem:SI (plus:DI (reg/f:DI 121 [ D.11893 ])
                    (reg:DI 115 [ ivtmp.109 ])) [0 MEM[base: _130, index: ivtmp.109_121, offset: 0B]+0 S4 A32]))) tilesInt.C:187 149 {*extendsidi2_rex64}
     (nil))
(insn 213 212 214 17 (set (reg:DI 5 di)
        (reg:DI 161 [ D.11887 ])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 161 [ D.11887 ])
        (nil)))
(call_insn 214 213 215 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:187 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 17 (set (reg/f:DI 110 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(note 216 215 217 17 NOTE_INSN_DELETED)
(insn 217 216 219 17 (set (reg:DI 163 [ D.11887 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 start_element+0 S4 A128]))) tilesInt.C:187 149 {*extendsidi2_rex64}
     (nil))
(insn 219 217 220 17 (set (reg:DI 1 dx)
        (reg/f:DI 110 [ D.11885 ])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.11885 ])
        (nil)))
(insn 220 219 221 17 (set (reg:DI 4 si)
        (reg:DI 163 [ D.11887 ])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 163 [ D.11887 ])
        (nil)))
(insn 221 220 222 17 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 tiles_list+0 S8 A128])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (nil))
(call_insn 222 221 224 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9b89f7bf00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:187 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 224 222 225 17 (var_location:SI i (debug_expr:SI D#6)) -1
     (nil))
(insn 225 224 227 17 (parallel [
            (set (reg:DI 115 [ ivtmp.109 ])
                (plus:DI (reg:DI 115 [ ivtmp.109 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 227 225 228 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ ivtmp.109 ])
            (reg:DI 158))) tilesInt.C:186 8 {*cmpdi_1}
     (nil))
(jump_insn 228 227 300 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 230)
            (pc))) tilesInt.C:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 230)
;;  succ:       17 [91.0%]  (DFS_BACK)
;;              18 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

;; basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 17, next block 19, flags: (NEW, RTL, MODIFIED)
;;  pred:       17 [9.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 300 228 301 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 301 300 302 18 (set (pc)
        (label_ref 226)) 650 {jump}
     (nil)
 -> 226)
;;  succ:       15 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 302 301 238)
;; basic block 19, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u268(6){ }u269(7){ }u270(16){ }u271(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 77 168 169
(code_label 238 302 239 19 63 "" [1 uses])
(note 239 238 241 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 241 239 242 19 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:164 87 {*movdi_internal_rex64}
     (nil))
(call_insn 242 241 243 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:164 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 19 (set (reg:DI 77 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:164 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 244 243 245 19 (set (reg/v:SI 62 [ num_ints ])
        (subreg:SI (reg:DI 77 [ D.11887 ]) 0)) tilesInt.C:164 89 {*movsi_internal}
     (nil))
(debug_insn 245 244 246 19 (var_location:SI num_ints (subreg:SI (reg:DI 77 [ D.11887 ]) 0)) tilesInt.C:164 -1
     (nil))
(insn 246 245 247 19 (set (reg:DI 168 [ D.11888 ])
        (sign_extend:DI (subreg:SI (reg:DI 77 [ D.11887 ]) 0))) tilesInt.C:165 149 {*extendsidi2_rex64}
     (nil))
(insn 247 246 248 19 (parallel [
            (set (reg:DI 169 [ D.11888 ])
                (ashift:DI (reg:DI 168 [ D.11888 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:165 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 168 [ D.11888 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 248 247 249 19 (set (reg:DI 5 di)
        (reg:DI 169 [ D.11888 ])) tilesInt.C:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 169 [ D.11888 ])
        (nil)))
(call_insn 249 248 250 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:165 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 250 249 252 19 (set (reg/v/f:DI 61 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 170)
            (nil))))
(debug_insn 252 250 254 19 (var_location:DI ints (reg/v/f:DI 61 [ ints ])) tilesInt.C:165 -1
     (nil))
(debug_insn 254 252 256 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 256 254 257 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 77 [ D.11887 ]) 0)
            (const_int 0 [0]))) tilesInt.C:166 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 77 [ D.11887 ])
        (nil)))
(jump_insn 257 256 258 19 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) tilesInt.C:166 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 255)
;;  succ:       20 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

;; basic block 20, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 [91.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u288(6){ }u289(7){ }u290(16){ }u291(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(note 258 257 7 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 7 258 303 20 (set (reg:DI 88 [ ivtmp.117 ])
        (const_int 0 [0])) tilesInt.C:166 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 303 7 304 20 (set (pc)
        (label_ref 259)) 650 {jump}
     (nil)
 -> 259)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

(barrier 304 303 262)
;; basic block 21, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u292(6){ }u293(7){ }u294(16){ }u295(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 62
(code_label 262 304 263 21 62 "" [2 uses])
(note 263 262 8 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 8 263 9 21 (set (reg/v:SI 62 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:148 89 {*movsi_internal}
     (nil))
(insn 9 8 305 21 (set (reg/v/f:DI 61 [ ints ])
        (const_int 0 [0])) tilesInt.C:147 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 305 9 306 21 (set (pc)
        (label_ref 255)) 650 {jump}
     (nil)
 -> 255)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

(barrier 306 305 279)
;; basic block 22, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 21, next block 1, flags: (RTL)
;;  pred:       2 [21.4%] 
;;              15 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u296(6){ }u297(7){ }u298(16){ }u299(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
(code_label 279 306 274 22 79 "" [2 uses])
(note 274 279 267 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 267 274 270 22 (set (reg/i:DI 0 ax)
        (reg/f:DI 63 [ D.11885 ])) tilesInt.C:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.11885 ])
        (nil)))
(insn 270 267 0 22 (use (reg/i:DI 0 ax)) tilesInt.C:189 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_GetTiles(PyObject*, PyObject*) (_ZL14tiles_GetTilesP7_objectS0_, funcdef_no=153, decl_uid=11285, cgraph_uid=153)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 26 (  1.1)
rescanning insn with uid = 213.
deleting insn with uid = 213.
deleting insn with uid = 212.
rescanning insn with uid = 170.
deleting insn with uid = 170.
deleting insn with uid = 164.
rescanning insn with uid = 160.
deleting insn with uid = 160.
deleting insn with uid = 159.
rescanning insn with uid = 152.
deleting insn with uid = 152.
deleting insn with uid = 146.
rescanning insn with uid = 123.
deleting insn with uid = 123.
deleting insn with uid = 121.
rescanning insn with uid = 109.
deleting insn with uid = 109.
deleting insn with uid = 107.
rescanning insn with uid = 97.
deleting insn with uid = 97.
deleting insn with uid = 96.
rescanning insn with uid = 79.
deleting insn with uid = 79.
deleting insn with uid = 77.
rescanning insn with uid = 45.
deleting insn with uid = 45.
deleting insn with uid = 44.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 26 (  1.1)
Reg 120: local to bb 2 def dominates all uses has unique first use
Ignoring reg 126, has equiv memory
Reg 63: local to bb 2 def dominates all uses has unique first use
Reg 65 uninteresting
Reg 68 uninteresting (no unique first use)
Reg 131 uninteresting
Reg 72 uninteresting (no unique first use)
Reg 73 uninteresting
Reg 74 uninteresting
Reg 81 uninteresting
Reg 82 uninteresting
Reg 85 uninteresting (no unique first use)
Reg 86: def dominates all uses has unique first use
Reg 95 uninteresting
Reg 91 uninteresting
Reg 92 uninteresting
Ignoring reg 139, has equiv memory
Reg 140: local to bb 12 def dominates all uses has unique first use
Reg 100: local to bb 13 def dominates all uses has unique first use
Reg 144 uninteresting
Reg 105 uninteresting (no unique first use)
Reg 146 uninteresting
Reg 111 uninteresting
Reg 76 uninteresting
Reg 150 uninteresting
Found def insn 40 for 63 to be not moveable
Reg 86 not local to one basic block
Found def insn 162 for 100 to be not moveable
Found def insn 4 for 120 to be not moveable
Found def insn 145 for 140 to be not moveable
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 3
;;  header 16, latch 16
;;  depth 1, outer 0
;;  nodes: 16
;;
;; Loop 2
;;  header 10, latch 10
;;  depth 1, outer 0
;;  nodes: 10
;;
;; Loop 1
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;; 2 succs { 23 3 }
;; 3 succs { 4 22 }
;; 4 succs { 20 5 }
;; 5 succs { 22 }
;; 6 succs { 6 7 }
;; 7 succs { 10 8 }
;; 8 succs { 12 9 }
;; 9 succs { 13 }
;; 10 succs { 10 11 }
;; 11 succs { 8 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 18 }
;; 15 succs { 16 }
;; 16 succs { 16 17 }
;; 17 succs { 19 }
;; 18 succs { 23 }
;; 19 succs { 23 }
;; 20 succs { 21 7 }
;; 21 succs { 6 }
;; 22 succs { 7 }
;; 23 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 126: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 144 (nil))
Reg 122 had equivalence, but can't be eliminated
Reg 123 had equivalence, but can't be eliminated
Reg 124 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a7 (r151,l0) best DIREG, allocno DIREG
    a8 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a36 (r146,l3) best DIREG, allocno DIREG
    a11 (r144,l0) best DIREG, allocno DIREG
    a14 (r140,l0) best DREG, allocno DREG
    a15 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r133,l0) best DIREG, allocno DIREG
    a22 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r129,l0) best DIREG, allocno DIREG
    a29 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r123,l0) best DREG, allocno DREG
    a28 (r122,l0) best CREG, allocno CREG
    a26 (r120,l0) best SIREG, allocno SIREG
    a34 (r117,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r115,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a35 (r111,l3) best AD_REGS, allocno AD_REGS
    a43 (r107,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r105,l3) best AREG, allocno AREG
    a9 (r105,l0) best AREG, allocno AREG
    a12 (r100,l0) best AREG, allocno AREG
    a16 (r95,l0) best AREG, allocno AREG
    a44 (r92,l2) best SSE_FIRST_REG, allocno SSE_FIRST_REG
    a45 (r91,l2) best AREG, allocno AREG
    a50 (r87,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r86,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a41 (r85,l2) best AREG, allocno AREG
    a13 (r85,l0) best AREG, allocno AREG
    a51 (r82,l1) best AREG, allocno AREG
    a52 (r81,l1) best AREG, allocno AREG
    a6 (r76,l0) best AREG, allocno AREG
    a19 (r74,l0) best AREG, allocno AREG
    a20 (r73,l0) best DIREG, allocno DIREG
    a49 (r72,l1) best AREG, allocno AREG
    a40 (r72,l2) best AREG, allocno AREG
    a31 (r72,l3) best AREG, allocno AREG
    a4 (r72,l0) best AREG, allocno AREG
    a48 (r68,l1) best AREG, allocno AREG
    a39 (r68,l2) best AREG, allocno AREG
    a3 (r68,l0) best AREG, allocno AREG
    a24 (r65,l0) best AREG, allocno AREG
    a25 (r63,l0) best AREG, allocno AREG
    a0 (r62,l0) best AREG, allocno AREG
    a47 (r61,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r61,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r60,l1) best AREG, allocno AREG
    a37 (r60,l2) best AREG, allocno AREG
    a1 (r60,l0) best AREG, allocno AREG

  a0(r62,l0) costs: AREG:-229,-229 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5616,5616 SSE_REGS:5616,5616 MMX_REGS:5616,5616 FP_TOP_SSE_REGS:3524280,3524280 FP_SECOND_SSE_REGS:3524280,3524280 FLOAT_SSE_REGS:3524280,3524280 FLOAT_INT_REGS:3524280,3524280 INT_SSE_REGS:5616,5616 FLOAT_INT_SSE_REGS:3524280,3524280 ALL_REGS:3524280,3524280 MEM:1499,1499
  a1(r60,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:626,1678
  a2(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r68,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r72,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:164,4372
  a6(r76,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a7(r151,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a8(r150,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a9(r105,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,14157 SSE_REGS:2327,14157 MMX_REGS:2327,14157 FP_TOP_SSE_REGS:2524280,3524280 FP_SECOND_SSE_REGS:2524280,3524280 FLOAT_SSE_REGS:2524280,3524280 FLOAT_INT_REGS:2524280,3524280 INT_SSE_REGS:2327,14157 FLOAT_INT_SSE_REGS:2524280,3524280 ALL_REGS:2524280,3524280 MEM:627,3357
  a10(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:324,15794
  a11(r144,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a12(r100,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a13(r85,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a14(r140,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a15(r139,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a16(r95,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a17(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:360,14920
  a18(r86,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a19(r74,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a20(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a21(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a22(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a23(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a24(r65,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a25(r63,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a26(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a27(r123,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a28(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a29(r126,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:4446,4446 SSE_REGS:4446,4446 MMX_REGS:4446,4446 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:4446,4446 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:342,342
  a30(r124,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a31(r72,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a32(r105,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a33(r115,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:15470,15470
  a34(r117,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7280,7280
  a35(r111,l3) costs: AREG:-910,-910 DREG:-910,-910 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a36(r146,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a37(r60,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a38(r61,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r68,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a40(r72,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a41(r85,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a42(r86,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a43(r107,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:14560,14560
  a44(r92,l2) costs: AREG:24570,24570 DREG:24570,24570 CREG:24570,24570 BREG:24570,24570 SIREG:24570,24570 DIREG:24570,24570 AD_REGS:24570,24570 Q_REGS:24570,24570 NON_Q_REGS:24570,24570 INDEX_REGS:24570,24570 GENERAL_REGS:24570,24570 LEGACY_REGS:24570,24570 CLOBBERED_REGS:24570,24570 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a45(r91,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a46(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a47(r61,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a48(r68,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a49(r72,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a50(r87,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:4208,4208
  a51(r82,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a52(r81,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841


Pass 1 for finding pseudo/allocno costs

    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r123: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r111,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r105,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r85,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r72,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r72,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a31 (r72,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r68,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r68,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r60,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a37 (r60,l2) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-229,-229 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:5616,5616 SSE_REGS:5616,5616 MMX_REGS:5616,5616 FP_TOP_SSE_REGS:3524280,3524280 FP_SECOND_SSE_REGS:3524280,3524280 FLOAT_SSE_REGS:3524280,3524280 FLOAT_INT_REGS:3524280,3524280 INT_SSE_REGS:5616,5616 FLOAT_INT_SSE_REGS:3524280,3524280 ALL_REGS:3524280,3524280 MEM:1499,1499
  a1(r60,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,21235705 FP_SECOND_SSE_REGS:4000000,21235705 FLOAT_SSE_REGS:4000000,21235705 FLOAT_INT_REGS:4000000,21235705 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,21235705 ALL_REGS:4000000,21235705 MEM:626,1678
  a2(r61,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2327,5746 SSE_REGS:2327,5746 MMX_REGS:2327,5746 FP_TOP_SSE_REGS:4000000,5000000 FP_SECOND_SSE_REGS:4000000,5000000 FLOAT_SSE_REGS:4000000,5000000 FLOAT_INT_REGS:4000000,5000000 INT_SSE_REGS:2327,5746 FLOAT_INT_SSE_REGS:4000000,5000000 ALL_REGS:4000000,5000000 MEM:716,1505
  a3(r68,l0) costs: AREG:-90,-90 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a4(r72,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 FP_TOP_SSE_REGS:3000000,62636850 FP_SECOND_SSE_REGS:3000000,62636850 FLOAT_SSE_REGS:3000000,62636850 FLOAT_INT_REGS:3000000,62636850 INT_SSE_REGS:2340,14170 FLOAT_INT_SSE_REGS:3000000,62636850 ALL_REGS:3000000,62636850 MEM:630,4270
  a5(r87,l0) costs: GENERAL_REGS:0,0 MEM:164,4372
  a6(r76,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:630,630
  a7(r151,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-45,-45 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:270,270
  a8(r150,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a9(r105,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2327,14157 SSE_REGS:2327,14157 MMX_REGS:2327,14157 FP_TOP_SSE_REGS:2524280,3524280 FP_SECOND_SSE_REGS:2524280,3524280 FLOAT_SSE_REGS:2524280,3524280 FLOAT_INT_REGS:2524280,3524280 INT_SSE_REGS:2327,14157 FLOAT_INT_SSE_REGS:2524280,3524280 ALL_REGS:2524280,3524280 MEM:627,3357
  a10(r115,l0) costs: GENERAL_REGS:0,0 MEM:324,15794
  a11(r144,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a12(r100,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:315,315
  a13(r85,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:1260,1260
  a14(r140,l0) costs: AREG:0,0 DREG:-45,-45 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:315,315
  a15(r139,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 FP_TOP_SSE_REGS:3949075,3949075 FP_SECOND_SSE_REGS:3949075,3949075 FLOAT_SSE_REGS:3949075,3949075 FLOAT_INT_REGS:3949075,3949075 INT_SSE_REGS:1170,1170 FLOAT_INT_SSE_REGS:3949075,3949075 ALL_REGS:3949075,3949075 MEM:0,0
  a16(r95,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:720,720
  a17(r107,l0) costs: GENERAL_REGS:0,0 MEM:360,14920
  a18(r86,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,13000 SSE_REGS:1170,13000 MMX_REGS:1170,13000 FP_TOP_SSE_REGS:1000000,2000000 FP_SECOND_SSE_REGS:1000000,2000000 FLOAT_SSE_REGS:1000000,2000000 FLOAT_INT_REGS:1000000,2000000 INT_SSE_REGS:1170,13000 FLOAT_INT_SSE_REGS:1000000,2000000 ALL_REGS:1000000,2000000 MEM:360,3090
  a19(r74,l0) costs: AREG:-62,-62 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:1612,1612 SSE_REGS:1612,1612 MMX_REGS:1612,1612 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:1612,1612 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:496,496
  a20(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-62,-62 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3146,3146 SSE_REGS:3146,3146 MMX_REGS:3146,3146 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:3146,3146 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:906,906
  a21(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a22(r131,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a23(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:540,540
  a24(r65,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2340,2340 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:630,630
  a25(r63,l0) costs: AREG:-114,-114 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a26(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-114,-114 DIREG:-114,-114 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a27(r123,l0) costs: AREG:0,0 DREG:-114,-114 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a28(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:-114,-114 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:798,798
  a29(r126,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4446,4446 SSE_REGS:4446,4446 MMX_REGS:4446,4446 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:4446,4446 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:342,342
  a30(r124,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2964,2964 SSE_REGS:2964,2964 MMX_REGS:2964,2964 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2964,2964 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:912,912
  a31(r72,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a32(r105,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a33(r115,l3) costs: GENERAL_REGS:0,0 MEM:15470,15470
  a34(r117,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7280,7280
  a35(r111,l3) costs: CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a36(r146,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a37(r60,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a38(r61,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r68,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:59636850,59636850 FP_SECOND_SSE_REGS:59636850,59636850 FLOAT_SSE_REGS:59636850,59636850 FLOAT_INT_REGS:59636850,59636850 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:59636850,59636850 ALL_REGS:59636850,59636850 MEM:3640,3640
  a40(r72,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a41(r85,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:0,0
  a42(r86,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11830,11830 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:2730,2730
  a43(r107,l2) costs: GENERAL_REGS:0,0 MEM:14560,14560
  a44(r92,l2) costs: AREG:30940,30940 DREG:30940,30940 CREG:30940,30940 BREG:30940,30940 SIREG:30940,30940 DIREG:30940,30940 AD_REGS:30940,30940 Q_REGS:30940,30940 NON_Q_REGS:30940,30940 INDEX_REGS:30940,30940 GENERAL_REGS:30940,30940 LEGACY_REGS:30940,30940 CLOBBERED_REGS:30940,30940 FP_TOP_REG:45500,45500 FP_SECOND_REG:45500,45500 FLOAT_REGS:45500,45500 SSE_FIRST_REG:6370,6370 SSE_REGS:7280,7280 FP_TOP_SSE_REGS:45500,45500 FP_SECOND_SSE_REGS:45500,45500 FLOAT_SSE_REGS:45500,45500 FLOAT_INT_REGS:45500,45500 INT_SSE_REGS:30940,30940 FLOAT_INT_SSE_REGS:45500,45500 ALL_REGS:2000000,2000000 MEM:20930,20930
  a45(r91,l2) costs: AREG:-910,-910 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-910,-910 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23660,23660 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6370,6370
  a46(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:17235705,17235705 FP_SECOND_SSE_REGS:17235705,17235705 FLOAT_SSE_REGS:17235705,17235705 FLOAT_INT_REGS:17235705,17235705 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:17235705,17235705 ALL_REGS:17235705,17235705 MEM:1052,1052
  a47(r61,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3419,3419 SSE_REGS:3419,3419 MMX_REGS:3419,3419 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:3419,3419 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:789,789
  a48(r68,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a49(r72,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_SSE_REGS:0,0 FLOAT_INT_REGS:0,0 INT_SSE_REGS:0,0 FLOAT_INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a50(r87,l1) costs: GENERAL_REGS:0,0 MEM:4208,4208
  a51(r82,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:2104,2104
  a52(r81,l1) costs: AREG:-263,-263 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-263,-263 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:6838,6838 SSE_REGS:6838,6838 MMX_REGS:6838,6838 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:6838,6838 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:1841,1841

   Insn 242(l0): point = 0
   Insn 239(l0): point = 2
   Insn 285(l0): point = 5
   Insn 6(l0): point = 7
   Insn 283(l0): point = 10
   Insn 12(l0): point = 12
   Insn 281(l0): point = 15
   Insn 13(l0): point = 17
   Insn 279(l0): point = 20
   Insn 10(l0): point = 23
   Insn 182(l0): point = 26
   Insn 181(l0): point = 28
   Insn 179(l0): point = 30
   Insn 178(l0): point = 32
   Insn 177(l0): point = 34
   Insn 176(l0): point = 36
   Insn 172(l0): point = 39
   Insn 171(l0): point = 41
   Insn 170(l0): point = 43
   Insn 169(l0): point = 45
   Insn 168(l0): point = 47
   Insn 167(l0): point = 49
   Insn 166(l0): point = 51
   Insn 165(l0): point = 53
   Insn 162(l0): point = 55
   Insn 161(l0): point = 57
   Insn 160(l0): point = 59
   Insn 276(l0): point = 62
   Insn 154(l0): point = 64
   Insn 153(l0): point = 66
   Insn 152(l0): point = 68
   Insn 151(l0): point = 70
   Insn 150(l0): point = 72
   Insn 149(l0): point = 74
   Insn 148(l0): point = 76
   Insn 147(l0): point = 78
   Insn 145(l0): point = 80
   Insn 144(l0): point = 82
   Insn 271(l0): point = 85
   Insn 113(l0): point = 88
   Insn 112(l0): point = 90
   Insn 111(l0): point = 92
   Insn 110(l0): point = 94
   Insn 109(l0): point = 96
   Insn 108(l0): point = 98
   Insn 274(l0): point = 101
   Insn 105(l0): point = 104
   Insn 104(l0): point = 106
   Insn 9(l0): point = 108
   Insn 100(l0): point = 110
   Insn 99(l0): point = 112
   Insn 98(l0): point = 114
   Insn 97(l0): point = 116
   Insn 229(l0): point = 119
   Insn 228(l0): point = 121
   Insn 222(l0): point = 123
   Insn 221(l0): point = 125
   Insn 220(l0): point = 127
   Insn 219(l0): point = 129
   Insn 218(l0): point = 131
   Insn 216(l0): point = 133
   Insn 215(l0): point = 135
   Insn 214(l0): point = 137
   Insn 213(l0): point = 139
   Insn 287(l0): point = 142
   Insn 8(l0): point = 144
   Insn 7(l0): point = 146
   Insn 267(l0): point = 149
   Insn 70(l0): point = 152
   Insn 69(l0): point = 154
   Insn 68(l0): point = 156
   Insn 67(l0): point = 158
   Insn 66(l0): point = 160
   Insn 64(l0): point = 163
   Insn 63(l0): point = 165
   Insn 62(l0): point = 167
   Insn 59(l0): point = 169
   Insn 58(l0): point = 171
   Insn 57(l0): point = 173
   Insn 56(l0): point = 175
   Insn 55(l0): point = 177
   Insn 51(l0): point = 179
   Insn 50(l0): point = 181
   Insn 49(l0): point = 183
   Insn 48(l0): point = 185
   Insn 47(l0): point = 187
   Insn 46(l0): point = 189
   Insn 45(l0): point = 191
   Insn 42(l0): point = 194
   Insn 41(l0): point = 196
   Insn 11(l0): point = 198
   Insn 40(l0): point = 200
   Insn 39(l0): point = 202
   Insn 38(l0): point = 204
   Insn 37(l0): point = 206
   Insn 36(l0): point = 208
   Insn 35(l0): point = 210
   Insn 34(l0): point = 212
   Insn 33(l0): point = 214
   Insn 31(l0): point = 216
   Insn 30(l0): point = 218
   Insn 28(l0): point = 220
   Insn 27(l0): point = 222
   Insn 26(l0): point = 224
   Insn 25(l0): point = 226
   Insn 24(l0): point = 228
   Insn 20(l0): point = 230
   Insn 19(l0): point = 232
   Insn 17(l0): point = 234
   Insn 4(l0): point = 236
   Insn 200(l3): point = 239
   Insn 199(l3): point = 241
   Insn 198(l3): point = 243
   Insn 195(l3): point = 245
   Insn 194(l3): point = 247
   Insn 193(l3): point = 249
   Insn 192(l3): point = 251
   Insn 191(l3): point = 253
   Insn 190(l3): point = 255
   Insn 189(l3): point = 257
   Insn 188(l3): point = 259
   Insn 187(l3): point = 261
   Insn 136(l2): point = 264
   Insn 135(l2): point = 266
   Insn 133(l2): point = 268
   Insn 129(l2): point = 270
   Insn 128(l2): point = 272
   Insn 127(l2): point = 274
   Insn 126(l2): point = 276
   Insn 125(l2): point = 278
   Insn 124(l2): point = 280
   Insn 123(l2): point = 282
   Insn 122(l2): point = 284
   Insn 92(l1): point = 287
   Insn 91(l1): point = 289
   Insn 89(l1): point = 291
   Insn 85(l1): point = 293
   Insn 84(l1): point = 295
   Insn 83(l1): point = 297
   Insn 82(l1): point = 299
   Insn 81(l1): point = 301
   Insn 80(l1): point = 303
   Insn 79(l1): point = 305
   Insn 78(l1): point = 307
 a0(r62): [194..198] [15..17] [10..12] [3..4]
 a1(r60): [142..144] [77..123] [52..61] [5..9]
 a2(r61): [142..146] [79..133] [54..61] [5..9]
 a3(r68): [73..179] [48..61] [5..9]
 a4(r72): [23..169] [5..9]
 a5(r87): [5..7]
 a6(r76): [122..135]
 a7(r151): [128..129]
 a8(r150): [130..131]
 a9(r105): [18..30] [13..14]
 a10(r115): [23..23]
 a11(r144): [35..36]
 a12(r100): [46..55]
 a13(r85): [75..112] [50..61]
 a14(r140): [71..80]
 a15(r139): [81..82]
 a16(r95): [91..92]
 a17(r107): [104..108]
 a18(r86): [104..110]
 a19(r74): [155..156]
 a20(r73): [161..167]
 a21(r133): [174..175]
 a22(r131): [176..177]
 a23(r129): [184..185]
 a24(r65): [186..187]
 a25(r63): [197..200]
 a26(r120): [207..236]
 a27(r123): [211..226]
 a28(r122): [213..228]
 a29(r126): [215..220]
 a30(r124): [223..224]
 a31(r72): [239..263]
 a32(r105): [239..263]
 a33(r115): [239..263]
 a34(r117): [242..245]
 a35(r111): [254..255]
 a36(r146): [260..261]
 a37(r60): [264..286]
 a38(r61): [264..286]
 a39(r68): [264..286]
 a40(r72): [264..286]
 a41(r85): [264..286]
 a42(r86): [264..286]
 a43(r107): [264..286]
 a44(r92): [271..272]
 a45(r91): [277..278]
 a46(r60): [287..309]
 a47(r61): [287..309]
 a48(r68): [287..309]
 a49(r72): [287..309]
 a50(r87): [287..309]
 a51(r82): [294..295]
 a52(r81): [300..301]
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 117
      Moving ranges of a33r115 to a10r115:  [239..263]
 Rebuilding regno allocno list for 111
      Moving ranges of a43r107 to a17r107:  [264..286]
      Moving ranges of a32r105 to a9r105:  [239..263]
 Rebuilding regno allocno list for 92
 Rebuilding regno allocno list for 91
      Moving ranges of a50r87 to a5r87:  [287..309]
      Moving ranges of a42r86 to a18r86:  [264..286]
      Moving ranges of a41r85 to a13r85:  [264..286]
 Rebuilding regno allocno list for 82
 Rebuilding regno allocno list for 81
      Moving ranges of a49r72 to a4r72:  [287..309]
      Moving ranges of a40r72 to a4r72:  [264..286]
      Moving ranges of a31r72 to a4r72:  [239..263]
      Moving ranges of a48r68 to a3r68:  [287..309]
      Moving ranges of a39r68 to a3r68:  [264..286]
      Moving ranges of a47r61 to a2r61:  [287..309]
      Moving ranges of a38r61 to a2r61:  [264..286]
      Moving ranges of a46r60 to a1r60:  [287..309]
      Moving ranges of a37r60 to a1r60:  [264..286]
Compressing live ranges: from 310 to 65 - 20%
Ranges after the compression:
 a0(r62): [45..46] [8..9] [4..5] [0..1]
 a1(r60): [57..64] [31..32] [15..26] [2..3]
 a2(r61): [57..64] [15..32] [2..3]
 a3(r68): [57..64] [15..40] [2..3]
 a4(r72): [51..64] [11..36] [2..3]
 a5(r87): [61..64] [2..3]
 a6(r76): [25..30]
 a7(r151): [27..28]
 a8(r150): [29..30]
 a9(r105): [51..56] [10..12] [6..7]
 a10(r115): [51..56] [11..11]
 a11(r144): [13..14]
 a12(r100): [15..16]
 a13(r85): [57..60] [15..24]
 a14(r140): [17..18]
 a15(r139): [19..20]
 a16(r95): [21..22]
 a17(r107): [57..60] [23..24]
 a18(r86): [57..60] [23..24]
 a19(r74): [33..34]
 a20(r73): [35..36]
 a21(r133): [37..38]
 a22(r131): [39..40]
 a23(r129): [41..42]
 a24(r65): [43..44]
 a25(r63): [45..46]
 a26(r120): [47..50]
 a27(r123): [47..50]
 a28(r122): [47..50]
 a29(r126): [47..48]
 a30(r124): [49..50]
 a34(r117): [51..52]
 a35(r111): [53..54]
 a36(r146): [55..56]
 a44(r92): [57..58]
 a45(r91): [59..60]
 a51(r82): [61..62]
 a52(r81): [63..64]
+++Allocating 304 bytes for conflict table (uncompressed size 424)
;; a0(r62,l0) conflicts: a25(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r60,l0) conflicts: a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r87,l0) a12(r100,l0) a13(r85,l0) a14(r140,l0) a15(r139,l0) a16(r95,l0) a17(r107,l0) a18(r86,l0) a6(r76,l0) a45(r91,l0) a51(r82,l0) a52(r81,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a2(r61,l0) conflicts: a1(r60,l0) a3(r68,l0) a4(r72,l0) a5(r87,l0) a12(r100,l0) a13(r85,l0) a14(r140,l0) a15(r139,l0) a16(r95,l0) a17(r107,l0) a18(r86,l0) a6(r76,l0) a7(r151,l0) a8(r150,l0) a45(r91,l0) a51(r82,l0) a52(r81,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a3(r68,l0) conflicts: a1(r60,l0) a2(r61,l0) a4(r72,l0) a5(r87,l0) a12(r100,l0) a13(r85,l0) a14(r140,l0) a15(r139,l0) a16(r95,l0) a17(r107,l0) a18(r86,l0) a6(r76,l0) a7(r151,l0) a8(r150,l0) a19(r74,l0) a20(r73,l0) a21(r133,l0) a22(r131,l0) a45(r91,l0) a51(r82,l0) a52(r81,l0)
;;     total conflict hard regs: 0 4 5 37 38
;;     conflict hard regs: 0 4 5 37 38

;; a4(r72,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a5(r87,l0) a9(r105,l0) a10(r115,l0) a11(r144,l0) a12(r100,l0) a13(r85,l0) a14(r140,l0) a15(r139,l0) a16(r95,l0) a17(r107,l0) a18(r86,l0) a6(r76,l0) a7(r151,l0) a8(r150,l0) a19(r74,l0) a20(r73,l0) a34(r117,l0) a35(r111,l0) a36(r146,l0) a45(r91,l0) a51(r82,l0) a52(r81,l0)
;;     total conflict hard regs: 0-2 4 5 37 38
;;     conflict hard regs: 0-2 4 5 37 38

;; a5(r87,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a51(r82,l0) a52(r81,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a6(r76,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a7(r151,l0) a8(r150,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a7(r151,l0) conflicts: a2(r61,l0) a3(r68,l0) a4(r72,l0) a6(r76,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r150,l0) conflicts: a2(r61,l0) a3(r68,l0) a4(r72,l0) a6(r76,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r105,l0) conflicts: a4(r72,l0) a10(r115,l0) a34(r117,l0) a35(r111,l0) a36(r146,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a10(r115,l0) conflicts: a4(r72,l0) a9(r105,l0) a34(r117,l0) a35(r111,l0) a36(r146,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a11(r144,l0) conflicts: a4(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r100,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a13(r85,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a13(r85,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a12(r100,l0) a14(r140,l0) a15(r139,l0) a16(r95,l0) a17(r107,l0) a18(r86,l0) a45(r91,l0)
;;     total conflict hard regs: 0 4 5 38
;;     conflict hard regs: 0 4 5 38

;; a14(r140,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a13(r85,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a15(r139,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a13(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r95,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a13(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r107,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a13(r85,l0) a18(r86,l0) a45(r91,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a18(r86,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a13(r85,l0) a17(r107,l0) a45(r91,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a19(r74,l0) conflicts: a3(r68,l0) a4(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r73,l0) conflicts: a3(r68,l0) a4(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r133,l0) conflicts: a3(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r131,l0) conflicts: a3(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r129,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r65,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r63,l0) conflicts: a0(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r120,l0) conflicts: a29(r126,l0) a27(r123,l0) a28(r122,l0) a30(r124,l0)
;;     total conflict hard regs: 1 2 4 37 38
;;     conflict hard regs: 1 2 4 37 38

;; a27(r123,l0) conflicts: a29(r126,l0) a26(r120,l0) a28(r122,l0) a30(r124,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a28(r122,l0) conflicts: a29(r126,l0) a26(r120,l0) a27(r123,l0) a30(r124,l0)
;;     total conflict hard regs: 37 38
;;     conflict hard regs: 37 38

;; a29(r126,l0) conflicts: a26(r120,l0) a27(r123,l0) a28(r122,l0)
;;     total conflict hard regs: 38
;;     conflict hard regs: 38

;; a30(r124,l0) conflicts: a26(r120,l0) a27(r123,l0) a28(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r117,l0) conflicts: a4(r72,l0) a9(r105,l0) a10(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r111,l0) conflicts: a4(r72,l0) a9(r105,l0) a10(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r146,l0) conflicts: a4(r72,l0) a9(r105,l0) a10(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r92,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r91,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a13(r85,l0) a17(r107,l0) a18(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r82,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r81,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r68,l0) a4(r72,l0) a5(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r151)<->a8(r150)@5:shuffle
  cp1:a0(r62)<->a9(r105)@81:move
  cp2:a0(r62)<->a9(r105)@8:move
  cp3:a23(r129)<->a24(r65)@11:shuffle
  cp4:a21(r133)<->a22(r131)@11:shuffle
  regions=4, blocks=24, points=65
    allocnos=53 (big 0), copies=5, conflicts=0, ranges=57

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r62 1r60 2r61 3r68 4r72 5r87 6r76 7r151 8r150 9r105 10r115 11r144 12r100 13r85 14r140 15r139 16r95 17r107 18r86 19r74 20r73 21r133 22r131 23r129 24r65 25r63 26r120 27r123 28r122 29r126 30r124 34r117 35r111 36r146 44r92 45r91 51r82 52r81
    modified regnos: 60 61 62 63 65 68 72 73 74 76 81 82 85 86 87 91 92 95 100 105 107 111 115 117 120 122 123 124 126 129 131 133 139 140 144 146 150 151
    border:
    Pressure: GENERAL_REGS=9 SSE_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 21-28 45-51)@32760
        2:( 0-6 37-44)@102158
          3:( 1-3 6 37-44)@38584
            4:( 2 3 6 37-44)@31588
              5:( 3 6 41-44)@38860
      Allocno a0r62 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r60 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a2r61 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a3r68 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-38 45-51)
      Allocno a4r72 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-38 45-51)
      Allocno a5r87 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a6r76 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-51)
      Allocno a7r151 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a8r150 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a9r105 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a10r115 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a11r144 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a12r100 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a13r85 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 38 45-51)
      Allocno a14r140 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a15r139 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a16r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a17r107 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a18r86 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-51)
      Allocno a19r74 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a20r73 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a21r133 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a22r131 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a23r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a24r65 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a25r63 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a26r120 of GENERAL_REGS(15) has 10 avail. regs  0 3 5 6 39-44, ^node:  0-6 37-44 (confl regs =  1 2 4 7-38 45-51)
      Allocno a27r123 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0-6 37-44 (confl regs =  2 7-38 45-51)
      Allocno a28r122 of GENERAL_REGS(15) has 13 avail. regs  0-6 39-44, ^node:  0-6 37-44 (confl regs =  7-38 45-51)
      Allocno a29r126 of GENERAL_REGS(15) has 14 avail. regs  0-6 37 39-44, ^node:  0-6 37-44 (confl regs =  7-36 38 45-51)
      Allocno a30r124 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a34r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a35r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a36r146 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a44r92 of SSE_REGS(16) has 16 avail. regs  21-28 45-51, node:  21-28 45-51 (confl regs =  0-20 29-44)
      Allocno a45r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a51r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a52r81 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a15(r139,l0)(cost 0)
      Pushing a8(r150,l0)(cost 0)
      Pushing a7(r151,l0)(cost 0)
      Pushing a14(r140,l0)(cost 0)
      Pushing a12(r100,l0)(cost 0)
      Pushing a19(r74,l0)(cost 0)
      Pushing a24(r65,l0)(cost 0)
      Pushing a23(r129,l0)(cost 0)
      Pushing a22(r131,l0)(cost 0)
      Pushing a21(r133,l0)(cost 0)
      Pushing a16(r95,l0)(cost 0)
      Pushing a11(r144,l0)(cost 0)
      Pushing a6(r76,l0)(cost 0)
      Pushing a30(r124,l0)(cost 0)
      Pushing a25(r63,l0)(cost 0)
      Pushing a28(r122,l0)(cost 0)
      Pushing a27(r123,l0)(cost 0)
      Pushing a26(r120,l0)(cost 0)
      Pushing a20(r73,l0)(cost 0)
      Pushing a29(r126,l0)(cost 0)
      Pushing a0(r62,l0)(cost 0)
      Pushing a52(r81,l0)(cost 0)
      Pushing a51(r82,l0)(cost 0)
      Pushing a9(r105,l0)(cost 0)
      Pushing a5(r87,l0)(cost 0)
      Pushing a44(r92,l0)(cost 0)
      Pushing a45(r91,l0)(cost 0)
      Pushing a36(r146,l0)(cost 0)
      Pushing a35(r111,l0)(cost 0)
      Pushing a34(r117,l0)(cost 0)
      Pushing a10(r115,l0)(cost 0)
      Pushing a17(r107,l0)(cost 0)
        Making a1(r60,l0) colorable
        Making a2(r61,l0) colorable
        Making a3(r68,l0) colorable
        Making a4(r72,l0) colorable
        Making a13(r85,l0) colorable
        Making a18(r86,l0) colorable
      Pushing a13(r85,l0)(cost 1260)
      Pushing a2(r61,l0)(cost 1505)
      Pushing a1(r60,l0)(cost 1678)
      Pushing a18(r86,l0)(cost 3090)
      Pushing a4(r72,l0)(cost 4270)
      Pushing a3(r68,l0)(cost 4270)
      Popping a3(r68,l0)  -- assign reg 3
      Popping a4(r72,l0)  -- assign reg 6
      Popping a18(r86,l0)  -- assign reg 41
      Popping a1(r60,l0)  -- assign reg 42
      Popping a2(r61,l0)  -- assign reg 43
      Popping a13(r85,l0)  -- assign reg 44
      Popping a17(r107,l0)  -- assign reg 1
      Popping a10(r115,l0)  -- assign reg 3
      Popping a34(r117,l0)  -- assign reg 1
      Popping a35(r111,l0)  -- assign reg 1
      Popping a36(r146,l0)  -- assign reg 5
      Popping a45(r91,l0)  -- assign reg 0
      Popping a44(r92,l0)  -- assign reg 21
      Popping a5(r87,l0)  -- assign reg 41
      Popping a9(r105,l0)  -- assign reg 41
      Popping a51(r82,l0)  -- assign reg 0
      Popping a52(r81,l0)  -- assign reg 0
      Popping a0(r62,l0)  -- assign reg 41
      Popping a29(r126,l0)  -- assign reg 37
      Popping a20(r73,l0)  -- assign reg 5
      Popping a26(r120,l0)  -- assign reg 5
      Popping a27(r123,l0)  -- assign reg 1
      Popping a28(r122,l0)  -- assign reg 2
      Popping a25(r63,l0)  -- assign reg 0
      Popping a30(r124,l0)  -- assign reg 0
      Popping a6(r76,l0)  -- assign reg 41
      Popping a11(r144,l0)  -- assign reg 5
      Popping a16(r95,l0)  -- assign reg 0
      Popping a21(r133,l0)  -- assign reg 5
      Popping a22(r131,l0)  -- assign reg 5
      Popping a23(r129,l0)  -- assign reg 5
      Popping a24(r65,l0)  -- assign reg 0
      Popping a19(r74,l0)  -- assign reg 0
      Popping a12(r100,l0)  -- assign reg 0
      Popping a14(r140,l0)  -- assign reg 1
      Popping a7(r151,l0)  -- assign reg 5
      Popping a8(r150,l0)  -- assign reg 5
      Popping a15(r139,l0)  -- assign reg 0
Spilling a13r85 for a17r107
Assigning 44 to a17r107
       a13(r85,l0)  -- assign memory
Disposition:
    1:r60  l0    42    2:r61  l0    43    0:r62  l0    41   25:r63  l0     0
   24:r65  l0     0    3:r68  l0     3    4:r72  l0     6   20:r73  l0     5
   19:r74  l0     0    6:r76  l0    41   52:r81  l0     0   51:r82  l0     0
   13:r85  l0   mem   18:r86  l0    41    5:r87  l0    41   45:r91  l0     0
   44:r92  l0    21   16:r95  l0     0   12:r100 l0     0    9:r105 l0    41
   17:r107 l0    44   35:r111 l0     1   10:r115 l0     3   34:r117 l0     1
   26:r120 l0     5   28:r122 l0     2   27:r123 l0     1   30:r124 l0     0
   29:r126 l0    37   23:r129 l0     5   22:r131 l0     5   21:r133 l0     5
   15:r139 l0     0   14:r140 l0     1   11:r144 l0     5   36:r146 l0     5
    8:r150 l0     5    7:r151 l0     5
New iteration of spill/restore move
+++Costs: overall -6999, reg -8259, mem 1260, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* tiles_GetTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={22d,18u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,23u} r7={1d,50u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,22u} r17={39d,10u} r18={19d} r19={19d} r20={1d,46u,7e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r73={1d,2u} r74={1d,1u} r76={1d,4u} r81={1d,1u} r82={1d,1u} r85={1d,5u} r86={1d,1u} r87={2d,6u} r91={1d,1u} r92={1d,1u} r95={1d,1u} r100={1d,2u} r105={1d,3u} r107={2d,6u} r111={1d,1u} r115={2d,5u} r117={1d,2u} r120={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r126={1d,2u} r129={1d,1u} r131={1d,1u} r133={1d,1u} r139={1d,1u} r140={1d,1u} r144={1d,1u} r146={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 1256{961d,288u,7e} in 168{149 regular + 19 call} insns.
(note 2 0 14 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 120 122 123 124 126
(note 14 2 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 14 5 2 (set (reg/v/f:DI 120 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:193 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:196 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:197 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:199 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:202 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:203 -1
     (nil))
(debug_insn 22 21 23 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:204 -1
     (nil))
(note 23 22 24 2 NOTE_INSN_DELETED)
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 122)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:209 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 25 24 26 2 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:209 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 124)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:209 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 27 26 28 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 124)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 28 27 30 2 (set (reg:DI 126)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 30 28 31 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 126)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 33 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))) tilesInt.C:209 267 {*leadi}
     (nil))
(insn 33 31 34 2 (set (reg:DI 37 r8)
        (reg:DI 126)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 126)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 34 33 35 2 (set (reg:DI 2 cx)
        (reg/f:DI 122)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 35 34 36 2 (set (reg:DI 1 dx)
        (reg/f:DI 123)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b9b8a243688 *.LC3>)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/v/f:DI 120 [ args ])) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 120 [ args ])
        (nil)))
(insn 38 37 39 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:209 91 {*movqi_internal}
     (nil))
(call_insn 39 38 40 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 16 [0x10]))) tilesInt.C:209 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (nil)))))))))))
(insn 40 39 11 2 (set (reg:SI 63 [ D.11918 ])
        (reg:SI 0 ax)) tilesInt.C:209 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 40 41 2 (set (reg/f:DI 62 [ D.11917 ])
        (const_int 0 [0])) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 41 11 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.11918 ])
            (const_int 0 [0]))) tilesInt.C:207 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 63 [ D.11918 ])
        (nil)))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) tilesInt.C:207 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 259)
;;  succ:       23 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 73 129 131 133
(note 43 42 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 45 43 46 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:212 87 {*movdi_internal_rex64}
     (nil))
(call_insn 46 45 47 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:212 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 3 (set (reg:DI 65 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 48 47 49 3 (parallel [
            (set (reg:DI 129 [ D.11920 ])
                (ashift:DI (reg:DI 65 [ D.11919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:212 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.11919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 3 (set (reg:DI 5 di)
        (reg:DI 129 [ D.11920 ])) tilesInt.C:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 129 [ D.11920 ])
        (nil)))
(call_insn 50 49 51 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:212 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 51 50 53 3 (set (reg/v/f:DI 68 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 130)
            (nil))))
(debug_insn 53 51 54 3 (var_location:DI variables (reg/v/f:DI 68 [ variables ])) tilesInt.C:212 -1
     (nil))
(note 54 53 55 3 NOTE_INSN_DELETED)
(insn 55 54 56 3 (set (reg:DI 131 [ D.11920 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128]))) tilesInt.C:213 149 {*extendsidi2_rex64}
     (nil))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 133 [ D.11920 ])
                (ashift:DI (reg:DI 131 [ D.11920 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:213 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 131 [ D.11920 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 3 (set (reg:DI 5 di)
        (reg:DI 133 [ D.11920 ])) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 133 [ D.11920 ])
        (nil)))
(call_insn 58 57 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:213 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 72 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 134)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI the_tiles (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:213 -1
     (nil))
(insn 62 61 63 3 (set (reg/f:DI 73 [ ints_list.37 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:214 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 73 [ ints_list.37 ])
            (const_int 0 [0]))) tilesInt.C:214 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 234)
            (pc))) tilesInt.C:214 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 234)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              22 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74
(note 65 64 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 4 (set (reg:DI 5 di)
        (reg/f:DI 73 [ ints_list.37 ])) tilesInt.C:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ ints_list.37 ])
        (nil)))
(call_insn 67 66 68 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:214 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 68 67 69 4 (set (reg:DI 74 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 69 68 70 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 74 [ D.11919 ])
            (const_int 0 [0]))) tilesInt.C:214 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 74 [ D.11919 ])
        (nil)))
(jump_insn 70 69 266 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) tilesInt.C:214 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 210)
;;  succ:       20 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 266 70 267 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 267 266 268 5 (set (pc)
        (label_ref 234)) 650 {jump}
     (nil)
 -> 234)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72

(barrier 268 267 231)
;; basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              21 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 87
(code_label 231 268 75 6 99 "" [2 uses])
(note 75 231 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 78 6 (var_location:SI i (subreg:SI (reg:DI 87 [ ivtmp.134 ]) 0)) -1
     (nil))
(insn 78 76 79 6 (set (reg:DI 4 si)
        (reg:DI 87 [ ivtmp.134 ])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (nil))
(call_insn 80 79 81 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:219 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 81 80 82 6 (set (reg/f:DI 81 [ D.11917 ])
        (reg:DI 0 ax)) tilesInt.C:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 82 81 83 6 (set (reg:DI 5 di)
        (reg/f:DI 81 [ D.11917 ])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81 [ D.11917 ])
        (nil)))
(call_insn 83 82 84 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:219 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 6 (set (reg:DI 82 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 85 84 86 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 87 [ ivtmp.134 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 60 [ ints ])) [0 MEM[base: ints_44, index: ivtmp.134_112, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 82 [ D.11919 ]) 0)) tilesInt.C:219 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 82 [ D.11919 ])
        (nil)))
(debug_insn 86 85 88 6 (var_location:SI D#10 (plus:SI (subreg:SI (reg:DI 87 [ ivtmp.134 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 88 86 89 6 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))
(insn 89 88 91 6 (parallel [
            (set (reg:DI 87 [ ivtmp.134 ])
                (plus:DI (reg:DI 87 [ ivtmp.134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 89 92 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 61 [ num_ints ])
            (subreg:SI (reg:DI 87 [ ivtmp.134 ]) 0))) tilesInt.C:218 7 {*cmpsi_1}
     (nil))
(jump_insn 92 91 227 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 231)
            (pc))) tilesInt.C:218 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 231)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       20 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              22 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 86 107
(code_label 227 92 93 7 98 "" [2 uses])
(note 93 227 94 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 7 (var_location:SI num_ints (reg/v:SI 61 [ num_ints ])) -1
     (nil))
(debug_insn 95 94 97 7 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) -1
     (nil))
(insn 97 95 98 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:222 87 {*movdi_internal_rex64}
     (nil))
(call_insn 98 97 99 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:222 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 99 98 100 7 (set (reg:DI 85 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:222 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 100 99 101 7 (set (reg/v:SI 86 [ num_variables ])
        (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:222 89 {*movsi_internal}
     (nil))
(debug_insn 101 100 103 7 (var_location:SI num_variables (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:222 -1
     (nil))
(debug_insn 103 101 9 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 9 103 104 7 (set (reg:DI 107 [ ivtmp.129 ])
        (const_int 0 [0])) tilesInt.C:224 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 104 9 105 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 85 [ D.11919 ]) 0)
            (const_int 0 [0]))) tilesInt.C:224 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 105 104 134 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 261)
            (pc))) tilesInt.C:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 261)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 95
(code_label 134 105 106 8 94 "" [1 uses])
(note 106 134 108 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 108 106 109 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:227 87 {*movdi_internal_rex64}
     (nil))
(insn 109 108 110 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:227 87 {*movdi_internal_rex64}
     (nil))
(call_insn 110 109 111 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:227 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 8 (set (reg:SI 95 [ D.11918 ])
        (reg:SI 0 ax)) tilesInt.C:227 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 112 111 113 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.11918 ])
            (const_int 0 [0]))) tilesInt.C:227 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.11918 ])
        (nil)))
(jump_insn 113 112 269 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) tilesInt.C:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 141)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 269 113 271 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 271 269 272 9 (set (pc)
        (label_ref 270)) 650 {jump}
     (nil)
 -> 270)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85

(barrier 272 271 261)
;; basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u125(6){ }u126(7){ }u127(16){ }u128(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 86 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 92 107
(code_label 261 272 260 10 106 "" [2 uses])
(note 260 261 120 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 120 260 122 10 (var_location:SI i (subreg:SI (reg:DI 107 [ ivtmp.129 ]) 0)) -1
     (nil))
(insn 122 120 123 10 (set (reg:DI 4 si)
        (reg:DI 107 [ ivtmp.129 ])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (nil))
(insn 123 122 124 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (nil))
(call_insn 124 123 125 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:225 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 10 (set (reg/f:DI 91 [ D.11917 ])
        (reg:DI 0 ax)) tilesInt.C:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 126 125 127 10 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.11917 ])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.11917 ])
        (nil)))
(call_insn 127 126 128 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:225 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 128 127 129 10 (set (reg:DF 92 [ D.11921 ])
        (reg:DF 21 xmm0)) tilesInt.C:225 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 129 128 130 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.129 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 68 [ variables ])) [0 MEM[base: variables_28, index: ivtmp.129_113, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 92 [ D.11921 ]))) tilesInt.C:225 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 92 [ D.11921 ])
        (nil)))
(debug_insn 130 129 132 10 (var_location:SI D#9 (plus:SI (subreg:SI (reg:DI 107 [ ivtmp.129 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 132 130 133 10 (var_location:SI i (debug_expr:SI D#9)) -1
     (nil))
(insn 133 132 135 10 (parallel [
            (set (reg:DI 107 [ ivtmp.129 ])
                (plus:DI (reg:DI 107 [ ivtmp.129 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 135 133 136 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 86 [ num_variables ])
            (subreg:SI (reg:DI 107 [ ivtmp.129 ]) 0))) tilesInt.C:224 7 {*cmpsi_1}
     (nil))
(jump_insn 136 135 273 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 261)
            (pc))) tilesInt.C:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 261)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 273 136 274 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 274 273 275 11 (set (pc)
        (label_ref 134)) 650 {jump}
     (nil)
 -> 134)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85

(barrier 275 274 141)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 139 140
(code_label 141 275 142 12 92 "" [1 uses])
(note 142 141 143 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 143 142 144 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:229 -1
     (nil))
(insn 144 143 145 12 (set (reg/f:DI 139 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:229 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 145 144 147 12 (set (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 139 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 139 [ memorctable ])
        (nil)))
(insn 147 145 148 12 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:230 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 148 147 149 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 149 148 150 12 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:230 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.11919 ])
        (nil)))
(insn 150 149 151 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 151 150 152 12 (set (reg:DI 1 dx)
        (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])
        (nil)))
(insn 152 151 153 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:230 89 {*movsi_internal}
     (nil))
(insn 153 152 154 12 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (nil))
(call_insn 154 153 276 12 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b9b8a092400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:230 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
(jump_insn 276 154 277 12 (set (pc)
        (label_ref 173)) 650 {jump}
     (nil)
 -> 173)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

(barrier 277 276 270)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u173(6){ }u174(7){ }u175(16){ }u176(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 100
(code_label 270 277 158 13 109 "" [1 uses])
(note 158 270 160 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 160 158 161 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:234 87 {*movdi_internal_rex64}
     (nil))
(call_insn 161 160 162 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:234 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 162 161 163 13 (set (reg:DI 100 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:234 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 163 162 165 13 (var_location:SI memory_size (subreg:SI (reg:DI 100 [ D.11919 ]) 0)) tilesInt.C:234 -1
     (nil))
(insn 165 163 166 13 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:235 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 166 165 167 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 167 166 168 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:235 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.11919 ])
        (nil)))
(insn 168 167 169 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 169 168 170 13 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 100 [ D.11919 ]) 0)) tilesInt.C:235 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ D.11919 ])
        (nil)))
(insn 170 169 171 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:235 89 {*movsi_internal}
     (nil))
(insn 171 170 172 13 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (nil))
(call_insn 172 171 173 13 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9b8a086b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:235 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u200(6){ }u201(7){ }u202(16){ }u203(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 144
(code_label 173 172 174 14 96 "" [1 uses])
(note 174 173 175 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 175 174 176 14 NOTE_INSN_DELETED)
(insn 176 175 177 14 (set (reg:DI 144 [ D.11919 ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128]))) tilesInt.C:237 149 {*extendsidi2_rex64}
     (nil))
(insn 177 176 178 14 (set (reg:DI 5 di)
        (reg:DI 144 [ D.11919 ])) tilesInt.C:237 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 144 [ D.11919 ])
        (nil)))
(call_insn 178 177 179 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9b89f7bb00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:237 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 14 (set (reg/v/f:DI 105 [ tiles_list ])
        (reg:DI 0 ax)) tilesInt.C:237 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 180 179 181 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 181 180 182 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:238 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 182 181 183 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 249)
            (pc))) tilesInt.C:238 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 249)
;;  succ:       15 [91.0%]  (FALLTHRU)
;;              18 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [91.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u212(6){ }u213(7){ }u214(16){ }u215(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
(note 183 182 10 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 10 183 202 15 (set (reg:DI 115 [ ivtmp.124 ])
        (const_int 0 [0])) tilesInt.C:238 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

;; basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       16 [91.0%]  (DFS_BACK)
;;              15 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u216(6){ }u217(7){ }u218(16){ }u219(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 111 115 117 146
(code_label 202 10 184 16 97 "" [1 uses])
(note 184 202 185 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 185 184 186 16 (var_location:SI i (subreg:SI (reg:DI 115 [ ivtmp.124 ]) 0)) -1
     (nil))
(note 186 185 187 16 NOTE_INSN_DELETED)
(insn 187 186 188 16 (set (reg:DI 146 [ D.11919 ])
        (sign_extend:DI (mem:SI (plus:DI (mult:DI (reg:DI 115 [ ivtmp.124 ])
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 72 [ the_tiles ])) [0 MEM[base: the_tiles_33, index: ivtmp.124_122, step: 4, offset: 0B]+0 S4 A32]))) tilesInt.C:239 149 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 16 (set (reg:DI 5 di)
        (reg:DI 146 [ D.11919 ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 146 [ D.11919 ])
        (nil)))
(call_insn 189 188 190 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:239 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 190 189 191 16 (set (reg/f:DI 111 [ D.11917 ])
        (reg:DI 0 ax)) tilesInt.C:239 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 191 190 192 16 (set (reg:DI 1 dx)
        (reg/f:DI 111 [ D.11917 ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.11917 ])
        (nil)))
(insn 192 191 193 16 (set (reg:DI 4 si)
        (reg:DI 115 [ ivtmp.124 ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 16 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (nil))
(call_insn 194 193 195 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9b89f7be00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:239 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 195 194 197 16 (parallel [
            (set (reg:SI 117 [ D.11918 ])
                (plus:SI (subreg:SI (reg:DI 115 [ ivtmp.124 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 197 195 198 16 (var_location:SI i (reg:SI 117 [ D.11918 ])) -1
     (nil))
(insn 198 197 199 16 (parallel [
            (set (reg:DI 115 [ ivtmp.124 ])
                (plus:DI (reg:DI 115 [ ivtmp.124 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 198 200 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])
            (reg:SI 117 [ D.11918 ]))) tilesInt.C:238 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.11918 ])
        (nil)))
(jump_insn 200 199 278 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 202)
            (pc))) tilesInt.C:238 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 202)
;;  succ:       16 [91.0%]  (DFS_BACK)
;;              17 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

;; basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 16, next block 18, flags: (NEW, RTL, MODIFIED)
;;  pred:       16 [9.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 278 200 279 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 279 278 280 17 (set (pc)
        (label_ref 253)) 650 {jump}
     (nil)
 -> 253)
;;  succ:       19 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105

(barrier 280 279 249)
;; basic block 18, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       14 [9.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
(code_label 249 280 248 18 101 "" [1 uses])
(note 248 249 13 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 13 248 281 18 (set (reg/f:DI 62 [ D.11917 ])
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ tiles_list ])
        (nil)))
(jump_insn 281 13 282 18 (set (pc)
        (label_ref 259)) 650 {jump}
     (nil)
 -> 259)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier 282 281 253)
;; basic block 19, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       17 [100.0%]  (LOOP_EXIT)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u246(6){ }u247(7){ }u248(16){ }u249(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
(code_label 253 282 252 19 102 "" [1 uses])
(note 252 253 12 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 12 252 283 19 (set (reg/f:DI 62 [ D.11917 ])
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ tiles_list ])
        (nil)))
(jump_insn 283 12 284 19 (set (pc)
        (label_ref 259)) 650 {jump}
     (nil)
 -> 259)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier 284 283 210)
;; basic block 20, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u251(6){ }u252(7){ }u253(16){ }u254(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 76 150 151
(code_label 210 284 211 20 89 "" [1 uses])
(note 211 210 213 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 213 211 214 20 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:216 87 {*movdi_internal_rex64}
     (nil))
(call_insn 214 213 215 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:216 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 20 (set (reg:DI 76 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 216 215 217 20 (set (reg/v:SI 61 [ num_ints ])
        (subreg:SI (reg:DI 76 [ D.11919 ]) 0)) tilesInt.C:216 89 {*movsi_internal}
     (nil))
(debug_insn 217 216 218 20 (var_location:SI num_ints (subreg:SI (reg:DI 76 [ D.11919 ]) 0)) tilesInt.C:216 -1
     (nil))
(insn 218 217 219 20 (set (reg:DI 150 [ D.11920 ])
        (sign_extend:DI (subreg:SI (reg:DI 76 [ D.11919 ]) 0))) tilesInt.C:217 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 220 20 (parallel [
            (set (reg:DI 151 [ D.11920 ])
                (ashift:DI (reg:DI 150 [ D.11920 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:217 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.11920 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 221 20 (set (reg:DI 5 di)
        (reg:DI 151 [ D.11920 ])) tilesInt.C:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 151 [ D.11920 ])
        (nil)))
(call_insn 221 220 222 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:217 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 222 221 224 20 (set (reg/v/f:DI 60 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 152)
            (nil))))
(debug_insn 224 222 226 20 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) tilesInt.C:217 -1
     (nil))
(debug_insn 226 224 228 20 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 228 226 229 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 76 [ D.11919 ]) 0)
            (const_int 0 [0]))) tilesInt.C:218 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 76 [ D.11919 ])
        (nil)))
(jump_insn 229 228 230 20 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) tilesInt.C:218 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 227)
;;  succ:       21 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

;; basic block 21, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 [91.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u271(6){ }u272(7){ }u273(16){ }u274(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 230 229 6 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 6 230 285 21 (set (reg:DI 87 [ ivtmp.134 ])
        (const_int 0 [0])) tilesInt.C:218 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 285 6 286 21 (set (pc)
        (label_ref 231)) 650 {jump}
     (nil)
 -> 231)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

(barrier 286 285 234)
;; basic block 22, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u275(6){ }u276(7){ }u277(16){ }u278(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
(code_label 234 286 235 22 88 "" [2 uses])
(note 235 234 7 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 7 235 8 22 (set (reg/v:SI 61 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:204 89 {*movsi_internal}
     (nil))
(insn 8 7 287 22 (set (reg/v/f:DI 60 [ ints ])
        (const_int 0 [0])) tilesInt.C:203 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 287 8 288 22 (set (pc)
        (label_ref 227)) 650 {jump}
     (nil)
 -> 227)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

(barrier 288 287 259)
;; basic block 23, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 22, next block 1, flags: (RTL)
;;  pred:       18 [100.0%] 
;;              2 [21.4%] 
;;              19 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u279(6){ }u280(7){ }u281(16){ }u282(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
(code_label 259 288 254 23 105 "" [3 uses])
(note 254 259 239 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 239 254 242 23 (set (reg/i:DI 0 ax)
        (reg/f:DI 62 [ D.11917 ])) tilesInt.C:241 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.11917 ])
        (nil)))
(insn 242 239 0 23 (use (reg/i:DI 0 ax)) tilesInt.C:241 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int CollisionTable_init(CollisionTable*, PyObject*, PyObject*) (_ZL19CollisionTable_initP14CollisionTableP7_objectS2_, funcdef_no=147, decl_uid=11218, cgraph_uid=147)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 8 (    1)
rescanning insn with uid = 48.
deleting insn with uid = 48.
deleting insn with uid = 46.
scanning new insn with uid = 85.
verify found no changes in insn with uid = 85.
deleting insn with uid = 30.
rescanning insn with uid = 27.
deleting insn with uid = 27.
deleting insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 8 (    1)
Reg 70: def dominates all uses has unique first use
Reg 71: local to bb 2 def dominates all uses has unique first use
Reg 72: local to bb 2 def dominates all uses has unique first use
Reg 61 uninteresting
Reg 77 uninteresting
Reg 81: local to bb 3 def dominates all uses has unique first use
Reg 82 uninteresting
Reg 65 uninteresting (no unique first use)
Reg 83 uninteresting
Reg 87: local to bb 6 def dominates all uses has unique first use
Reg 70 not local to one basic block
Found def insn 3 for 71 to be not moveable
Found def insn 4 for 72 to be not moveable
Found def insn 35 for 81 to be not moveable
Found def insn 78 for 87 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 6 4 }
;; 4 succs { 7 }
;; 5 succs { 7 }
;; 6 succs { }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 77: (insn_list:REG_DEP_TRUE 85 (nil))
Reg 74 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a1 (r87,l0) best AREG, allocno AREG
    a4 (r83,l0) best DREG, allocno DREG
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r80,l0) best CREG, allocno CREG
    a12 (r79,l0) best DIREG, allocno DIREG
    a11 (r78,l0) best SIREG, allocno SIREG
    a8 (r77,l0) best DIREG, allocno DIREG
    a16 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r72,l0) best DREG, allocno DREG
    a14 (r71,l0) best SIREG, allocno SIREG
    a3 (r70,l0) best DIREG, allocno DIREG
    a2 (r65,l0) best AREG, allocno AREG
    a5 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r63,l0) best SIREG, allocno SIREG
    a13 (r61,l0) best AREG, allocno AREG
    a0 (r60,l0) best AREG, allocno AREG

  a0(r60,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:38987,38987 SSE_REGS:38987,38987 MMX_REGS:38987,38987 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:38987,38987 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:9996,9996
  a1(r87,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 FP_TOP_SSE_REGS:131070,131070 FP_SECOND_SSE_REGS:131070,131070 FLOAT_SSE_REGS:131070,131070 FLOAT_INT_REGS:131070,131070 INT_SSE_REGS:26,26 FLOAT_INT_SSE_REGS:131070,131070 ALL_REGS:131070,131070 MEM:7,7
  a2(r65,l0) costs: AREG:-907,-907 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:35386,35386 SSE_REGS:35386,35386 MMX_REGS:35386,35386 FP_TOP_SSE_REGS:3065535,3065535 FP_SECOND_SSE_REGS:3065535,3065535 FLOAT_SSE_REGS:3065535,3065535 FLOAT_INT_REGS:3065535,3065535 INT_SSE_REGS:35386,35386 FLOAT_INT_SSE_REGS:3065535,3065535 ALL_REGS:3065535,3065535 MEM:9980,9980
  a3(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:24791,24791 SSE_REGS:24791,24791 MMX_REGS:24791,24791 FP_TOP_SSE_REGS:60440245,60440245 FP_SECOND_SSE_REGS:60440245,60440245 FLOAT_SSE_REGS:60440245,60440245 FLOAT_INT_REGS:60440245,60440245 INT_SSE_REGS:24791,24791 FLOAT_INT_SSE_REGS:60440245,60440245 ALL_REGS:60440245,60440245 MEM:7628,7628
  a4(r83,l0) costs: AREG:0,0 DREG:-907,-907 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23582,23582 SSE_REGS:23582,23582 MMX_REGS:23582,23582 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23582,23582 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6349,6349
  a5(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 MEM:12698,12698
  a6(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2000000,2000000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5442,5442
  a7(r81,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2000000,2000000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5442,5442
  a8(r77,l0) costs: AREG:1814,1814 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:1814,1814 DIREG:0,0 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:23582,23582 SSE_REGS:23582,23582 MMX_REGS:23582,23582 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23582,23582 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7256,7256
  a9(r63,l0) costs: AREG:907,907 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:0,0 DIREG:1814,1814 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:23582,23582 SSE_REGS:23582,23582 MMX_REGS:23582,23582 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23582,23582 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7256,7256
  a10(r80,l0) costs: AREG:3628,3628 DREG:3628,3628 CREG:0,0 BREG:3628,3628 SIREG:3628,3628 DIREG:3628,3628 AD_REGS:3628,3628 Q_REGS:3628,3628 NON_Q_REGS:3628,3628 INDEX_REGS:3628,3628 GENERAL_REGS:3628,3628 LEGACY_REGS:3628,3628 CLOBBERED_REGS:3628,3628 SSE_FIRST_REG:35373,35373 SSE_REGS:35373,35373 MMX_REGS:35373,35373 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:35373,35373 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:10884,10884
  a11(r78,l0) costs: AREG:1814,1814 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:0,0 DIREG:1814,1814 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:11791,11791 SSE_REGS:11791,11791 MMX_REGS:11791,11791 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11791,11791 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:3628,3628
  a12(r79,l0) costs: AREG:1814,1814 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:1814,1814 DIREG:0,0 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:11791,11791 SSE_REGS:11791,11791 MMX_REGS:11791,11791 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11791,11791 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:3628,3628
  a13(r61,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000
  a14(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a15(r72,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a16(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r80: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r72: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r63: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r60,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:38987,38987 SSE_REGS:38987,38987 MMX_REGS:38987,38987 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:38987,38987 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:9996,9996
  a1(r87,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 FP_TOP_SSE_REGS:131070,131070 FP_SECOND_SSE_REGS:131070,131070 FLOAT_SSE_REGS:131070,131070 FLOAT_INT_REGS:131070,131070 INT_SSE_REGS:26,26 FLOAT_INT_SSE_REGS:131070,131070 ALL_REGS:131070,131070 MEM:7,7
  a2(r65,l0) costs: AREG:-907,-907 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:35386,35386 SSE_REGS:35386,35386 MMX_REGS:35386,35386 FP_TOP_SSE_REGS:3065535,3065535 FP_SECOND_SSE_REGS:3065535,3065535 FLOAT_SSE_REGS:3065535,3065535 FLOAT_INT_REGS:3065535,3065535 INT_SSE_REGS:35386,35386 FLOAT_INT_SSE_REGS:3065535,3065535 ALL_REGS:3065535,3065535 MEM:9980,9980
  a3(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:24791,24791 SSE_REGS:24791,24791 MMX_REGS:24791,24791 FP_TOP_SSE_REGS:60440245,60440245 FP_SECOND_SSE_REGS:60440245,60440245 FLOAT_SSE_REGS:60440245,60440245 FLOAT_INT_REGS:60440245,60440245 INT_SSE_REGS:24791,24791 FLOAT_INT_SSE_REGS:60440245,60440245 ALL_REGS:60440245,60440245 MEM:7628,7628
  a4(r83,l0) costs: AREG:0,0 DREG:-907,-907 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23582,23582 SSE_REGS:23582,23582 MMX_REGS:23582,23582 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23582,23582 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:6349,6349
  a5(r64,l0) costs: GENERAL_REGS:0,0 MEM:12698,12698
  a6(r82,l0) costs: GENERAL_REGS:0,0 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2000000,2000000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5442,5442
  a7(r81,l0) costs: GENERAL_REGS:0,0 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:2000000,2000000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5442,5442
  a8(r77,l0) costs: AREG:1814,1814 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:1814,1814 DIREG:0,0 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:23582,23582 SSE_REGS:23582,23582 MMX_REGS:23582,23582 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23582,23582 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7256,7256
  a9(r63,l0) costs: AREG:907,907 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:0,0 DIREG:1814,1814 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:23582,23582 SSE_REGS:23582,23582 MMX_REGS:23582,23582 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:23582,23582 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7256,7256
  a10(r80,l0) costs: AREG:3628,3628 DREG:3628,3628 CREG:0,0 BREG:3628,3628 SIREG:3628,3628 DIREG:3628,3628 AD_REGS:3628,3628 Q_REGS:3628,3628 NON_Q_REGS:3628,3628 INDEX_REGS:3628,3628 GENERAL_REGS:3628,3628 LEGACY_REGS:3628,3628 CLOBBERED_REGS:3628,3628 SSE_FIRST_REG:35373,35373 SSE_REGS:35373,35373 MMX_REGS:35373,35373 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:35373,35373 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:10884,10884
  a11(r78,l0) costs: AREG:1814,1814 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:0,0 DIREG:1814,1814 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:11791,11791 SSE_REGS:11791,11791 MMX_REGS:11791,11791 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11791,11791 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:3628,3628
  a12(r79,l0) costs: AREG:1814,1814 DREG:1814,1814 CREG:1814,1814 BREG:1814,1814 SIREG:1814,1814 DIREG:0,0 AD_REGS:1814,1814 Q_REGS:1814,1814 NON_Q_REGS:1814,1814 INDEX_REGS:1814,1814 GENERAL_REGS:1814,1814 LEGACY_REGS:1814,1814 CLOBBERED_REGS:1814,1814 SSE_FIRST_REG:11791,11791 SSE_REGS:11791,11791 MMX_REGS:11791,11791 FP_TOP_SSE_REGS:1000000,1000000 FP_SECOND_SSE_REGS:1000000,1000000 FLOAT_SSE_REGS:1000000,1000000 FLOAT_INT_REGS:1000000,1000000 INT_SSE_REGS:11791,11791 FLOAT_INT_SSE_REGS:1000000,1000000 ALL_REGS:1000000,1000000 MEM:3628,3628
  a13(r61,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000
  a14(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a15(r72,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a16(r74,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000

   Insn 70(l0): point = 0
   Insn 67(l0): point = 2
   Insn 64(l0): point = 5
   Insn 63(l0): point = 7
   Insn 61(l0): point = 9
   Insn 60(l0): point = 11
   Insn 78(l0): point = 13
   Insn 83(l0): point = 16
   Insn 6(l0): point = 18
   Insn 81(l0): point = 21
   Insn 7(l0): point = 23
   Insn 52(l0): point = 25
   Insn 50(l0): point = 28
   Insn 49(l0): point = 30
   Insn 48(l0): point = 32
   Insn 47(l0): point = 34
   Insn 45(l0): point = 36
   Insn 43(l0): point = 38
   Insn 42(l0): point = 40
   Insn 41(l0): point = 42
   Insn 40(l0): point = 44
   Insn 38(l0): point = 46
   Insn 37(l0): point = 48
   Insn 36(l0): point = 50
   Insn 35(l0): point = 52
   Insn 34(l0): point = 54
   Insn 85(l0): point = 56
   Insn 33(l0): point = 58
   Insn 29(l0): point = 60
   Insn 28(l0): point = 62
   Insn 27(l0): point = 64
   Insn 24(l0): point = 67
   Insn 23(l0): point = 69
   Insn 22(l0): point = 71
   Insn 21(l0): point = 73
   Insn 20(l0): point = 75
   Insn 19(l0): point = 77
   Insn 18(l0): point = 79
   Insn 17(l0): point = 81
   Insn 16(l0): point = 83
   Insn 15(l0): point = 85
   Insn 14(l0): point = 87
   Insn 12(l0): point = 89
   Insn 11(l0): point = 91
   Insn 4(l0): point = 93
   Insn 3(l0): point = 95
   Insn 2(l0): point = 97
 a0(r60): [21..23] [16..18] [3..4]
 a1(r87): [8..13]
 a2(r65): [26..40] [12..15]
 a3(r70): [26..97]
 a4(r83): [35..36]
 a5(r64): [39..48]
 a6(r82): [49..50]
 a7(r81): [49..52]
 a8(r77): [55..56]
 a9(r63): [55..60]
 a10(r80): [54..58]
 a11(r78): [54..54]
 a12(r79): [54..54]
 a13(r61): [70..71]
 a14(r71): [78..95]
 a15(r72): [80..93]
 a16(r74): [90..91]
Compressing live ranges: from 100 to 21 - 21%
Ranges after the compression:
 a0(r60): [4..7] [0..1]
 a1(r87): [2..3]
 a2(r65): [8..11] [2..3]
 a3(r70): [8..20]
 a4(r83): [8..9]
 a5(r64): [10..11]
 a6(r82): [12..13]
 a7(r81): [12..13]
 a8(r77): [15..16]
 a9(r63): [15..16]
 a10(r80): [14..16]
 a11(r78): [14..14]
 a12(r79): [14..14]
 a13(r61): [17..18]
 a14(r71): [19..20]
 a15(r72): [19..20]
 a16(r74): [19..20]
+++Allocating 136 bytes for conflict table (uncompressed size 136)
;; a0(r60,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r87,l0) conflicts: a2(r65,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a2(r65,l0) conflicts: a1(r87,l0) a4(r83,l0) a3(r70,l0) a5(r64,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a3(r70,l0) conflicts: a2(r65,l0) a4(r83,l0) a5(r64,l0) a6(r82,l0) a7(r81,l0) a11(r78,l0) a12(r79,l0) a10(r80,l0) a8(r77,l0) a9(r63,l0) a13(r61,l0) a14(r71,l0) a15(r72,l0) a16(r74,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r83,l0) conflicts: a2(r65,l0) a3(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r64,l0) conflicts: a2(r65,l0) a3(r70,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a6(r82,l0) conflicts: a3(r70,l0) a7(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r81,l0) conflicts: a3(r70,l0) a6(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r77,l0) conflicts: a3(r70,l0) a10(r80,l0) a9(r63,l0)
;;     total conflict hard regs: 2 4
;;     conflict hard regs: 2 4

;; a9(r63,l0) conflicts: a3(r70,l0) a10(r80,l0) a8(r77,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a10(r80,l0) conflicts: a3(r70,l0) a11(r78,l0) a12(r79,l0) a8(r77,l0) a9(r63,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a11(r78,l0) conflicts: a3(r70,l0) a12(r79,l0) a10(r80,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a12(r79,l0) conflicts: a3(r70,l0) a11(r78,l0) a10(r80,l0)
;;     total conflict hard regs: 2 4
;;     conflict hard regs: 2 4

;; a13(r61,l0) conflicts: a3(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r71,l0) conflicts: a3(r70,l0) a15(r72,l0) a16(r74,l0)
;;     total conflict hard regs: 1 2 4 37 38
;;     conflict hard regs: 1 2 4 37 38

;; a15(r72,l0) conflicts: a3(r70,l0) a14(r71,l0) a16(r74,l0)
;;     total conflict hard regs: 1 2 37 38
;;     conflict hard regs: 1 2 37 38

;; a16(r74,l0) conflicts: a3(r70,l0) a14(r71,l0) a15(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a9(r63)<->a11(r78)@907:constraint
  cp1:a8(r77)<->a12(r79)@907:constraint
  cp2:a10(r80)<->a10(r80)@907:constraint
  cp3:a5(r64)<->a7(r81)@907:constraint
  regions=1, blocks=8, points=21
    allocnos=17 (big 0), copies=4, conflicts=0, ranges=19

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r60 1r87 2r65 3r70 4r83 5r64 6r82 7r81 8r77 9r63 10r80 11r78 12r79 13r61 14r71 15r72 16r74
    modified regnos: 60 61 63 64 65 70 71 72 74 77 78 79 80 81 82 83 87
    border:
    Pressure: GENERAL_REGS=8
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 0-6 37-44)@109900
          2:( 1-4 6 37-44)@25396
            3:( 3 6 41-44)@35223
      Allocno a0r60 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r87 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-51)
      Allocno a2r65 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-51)
      Allocno a3r70 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-51)
      Allocno a4r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a5r64 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-51)
      Allocno a6r82 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a7r81 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a8r77 of GENERAL_REGS(15) has 13 avail. regs  0 1 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  2 4 7-36 45-51)
      Allocno a9r63 of GENERAL_REGS(15) has 13 avail. regs  0 1 3 4 6 37-44, ^node:  0-6 37-44 (confl regs =  2 5 7-36 45-51)
      Allocno a10r80 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, ^node:  0-6 37-44 (confl regs =  4 5 7-36 45-51)
      Allocno a11r78 of GENERAL_REGS(15) has 13 avail. regs  0 1 3 4 6 37-44, ^node:  0-6 37-44 (confl regs =  2 5 7-36 45-51)
      Allocno a12r79 of GENERAL_REGS(15) has 13 avail. regs  0 1 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  2 4 7-36 45-51)
      Allocno a13r61 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a14r71 of GENERAL_REGS(15) has 10 avail. regs  0 3 5 6 39-44, ^node:  0-6 37-44 (confl regs =  1 2 4 7-38 45-51)
      Allocno a15r72 of GENERAL_REGS(15) has 11 avail. regs  0 3-6 39-44, ^node:  0-6 37-44 (confl regs =  1 2 7-38 45-51)
      Allocno a16r74 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a1(r87,l0)(cost 0)
      Pushing a12(r79,l0)(cost 0)
      Pushing a11(r78,l0)(cost 0)
      Pushing a7(r81,l0)(cost 0)
      Pushing a6(r82,l0)(cost 0)
      Pushing a4(r83,l0)(cost 0)
      Pushing a9(r63,l0)(cost 0)
      Pushing a8(r77,l0)(cost 0)
      Pushing a16(r74,l0)(cost 0)
      Pushing a13(r61,l0)(cost 0)
        Making a3(r70,l0) colorable
      Pushing a3(r70,l0)(cost 7628)
      Pushing a15(r72,l0)(cost 0)
      Pushing a14(r71,l0)(cost 0)
      Pushing a10(r80,l0)(cost 0)
      Pushing a2(r65,l0)(cost 0)
      Pushing a0(r60,l0)(cost 0)
      Pushing a5(r64,l0)(cost 0)
      Popping a5(r64,l0)  -- assign reg 3
      Popping a0(r60,l0)  -- assign reg 0
      Popping a2(r65,l0)  -- assign reg 6
      Popping a10(r80,l0)  -- assign reg 2
      Popping a14(r71,l0)  -- assign reg 5
      Popping a15(r72,l0)  -- assign reg 4
      Popping a3(r70,l0)  -- assign reg 41
      Popping a13(r61,l0)  -- assign reg 0
      Popping a16(r74,l0)  -- assign reg 0
      Popping a8(r77,l0)  -- assign reg 5
      Popping a9(r63,l0)  -- assign reg 4
      Popping a4(r83,l0)  -- assign reg 1
      Popping a6(r82,l0)  -- assign reg 0
      Popping a7(r81,l0)  -- assign reg 3
      Popping a11(r78,l0)  -- assign reg 4
      Popping a12(r79,l0)  -- assign reg 5
      Popping a1(r87,l0)  -- assign reg 3
Assigning 0 to a9r63
Disposition:
    0:r60  l0     0   13:r61  l0     0    9:r63  l0     0    5:r64  l0     3
    2:r65  l0     6    3:r70  l0    41   14:r71  l0     5   15:r72  l0     4
   16:r74  l0     0    8:r77  l0     5   11:r78  l0     4   12:r79  l0     5
   10:r80  l0     2    7:r81  l0     3    6:r82  l0     0    4:r83  l0     1
    1:r87  l0     3
New iteration of spill/restore move
+++Costs: overall -18628, reg -18628, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int CollisionTable_init(CollisionTable*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={10d,7u} r1={10d,3u} r2={8d,1u} r4={9d,3u} r5={13d,7u} r6={1d,7u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,6u} r17={11d,4u} r18={6d} r19={6d} r20={1d,11u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,1u} r38={8d,1u} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r60={2d,1u} r61={1d,1u} r63={1d,1u,1e} r64={2d,3u} r65={1d,3u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r74={1d,1u} r77={1d,1u} r78={1d} r79={1d} r80={2d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r87={1d,1u} 
;;    total ref usage 413{325d,85u,3e} in 48{42 regular + 6 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 70 71 72 74
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 70 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 71 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 72 [ kwds ])
        (reg:DI 1 dx [ kwds ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ kwds ])
        (nil)))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 5 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 74)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:37 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 12 11 13 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 74)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(note 13 12 14 2 NOTE_INSN_DELETED)
(insn 14 13 15 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyString_Type") [flags 0x40]  <var_decl 0x2b9b89f66688 PyString_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("PyString_Type") [flags 0x40]  <var_decl 0x2b9b89f66688 PyString_Type>)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))) tilesInt.C:37 267 {*leadi}
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (symbol_ref:DI ("_ZZL19CollisionTable_initP14CollisionTableP7_objectS2_E6kwlist") [flags 0x2]  <var_decl 0x2b9b8a090be0 kwlist>)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b9b8a269980 *.LC4>)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/v/f:DI 72 [ kwds ])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 72 [ kwds ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 71 [ args ])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 71 [ args ])
        (nil)))
(insn 20 19 21 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:37 91 {*movqi_internal}
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTupleAndKeywords") [flags 0x41]  <function_decl 0x2b9b8a018400 PyArg_ParseTupleAndKeywords>) [0 PyArg_ParseTupleAndKeywords S1 A8])
            (const_int 8 [0x8]))) tilesInt.C:37 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (nil))))))))))
(insn 22 21 23 2 (set (reg:SI 61 [ D.11928 ])
        (reg:SI 0 ax)) tilesInt.C:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.11928 ])
            (const_int 0 [0]))) tilesInt.C:37 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.11928 ])
        (nil)))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) tilesInt.C:37 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 926 [0x39e])
            (nil)))
 -> 75)
;;  succ:       5 [9.3%] 
;;              3 [90.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70

;; basic block 3, loop depth 0, count 0, freq 9074, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [90.7%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 77 78 79 80 81 82 83
(note 25 24 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 25 28 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 safety+0 S8 A128])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (nil))
(call_insn 28 27 29 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyString_AsString") [flags 0x41]  <function_decl 0x2b9b89f65c00 PyString_AsString>) [0 PyString_AsString S1 A8])
            (const_int 0 [0]))) tilesInt.C:40 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 29 28 33 3 (set (reg/f:DI 63 [ D.11929 ])
        (reg:DI 0 ax)) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 33 29 85 3 (set (reg:DI 80)
        (const_int 7 [0x7])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 7 [0x7])
        (nil)))
(insn 85 33 34 3 (set (reg/f:DI 77)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b9b8a269a18 *.LC5>)) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b9b8a269a18 *.LC5>)
        (nil)))
(insn 34 85 35 3 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg/f:DI 63 [ D.11929 ]) [0 MEM[(void *)_11]+0 A8])
                    (mem/u/c:BLK (reg/f:DI 77) [0 MEM[(void *)"unsafe"]+0 A8])))
            (use (reg:DI 80))
            (use (const_int 1 [0x1]))
            (clobber (reg/f:DI 78 [ D.11929 ]))
            (clobber (reg/f:DI 79))
            (clobber (reg:DI 80))
        ]) tilesInt.C:40 921 {*cmpstrnqi_nz_1}
     (expr_list:REG_DEAD (reg:DI 80)
        (expr_list:REG_DEAD (reg/f:DI 77)
            (expr_list:REG_DEAD (reg/f:DI 63 [ D.11929 ])
                (expr_list:REG_UNUSED (reg:DI 80)
                    (expr_list:REG_UNUSED (reg/f:DI 79)
                        (expr_list:REG_UNUSED (reg/f:DI 78 [ D.11929 ])
                            (expr_list:REG_EQUAL (compare:CC (mem:BLK (reg/f:DI 63 [ D.11929 ]) [0 MEM[(void *)_11]+0 A8])
                                    (mem/u/c:BLK (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b9b8a269a18 *.LC5>) [0 MEM[(void *)"unsafe"]+0 A8]))
                                (nil)))))))))
(insn 35 34 36 3 (set (reg:QI 81)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (nil))
(insn 36 35 37 3 (set (reg:QI 82)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 3 (parallel [
            (set (subreg:QI (reg:SI 64 [ D.11928 ]) 0)
                (minus:QI (reg:QI 81)
                    (reg:QI 82)))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:40 307 {*subqi_1}
     (expr_list:REG_DEAD (reg:QI 82)
        (expr_list:REG_DEAD (reg:QI 81)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 3 (set (reg:SI 64 [ D.11928 ])
        (sign_extend:SI (subreg:QI (reg:SI 64 [ D.11928 ]) 0))) tilesInt.C:40 155 {extendqisi2}
     (nil))
(debug_insn 39 38 40 3 (var_location:SI isafety (zero_extend:SI (ne:QI (reg:SI 64 [ D.11928 ])
            (const_int 0 [0])))) -1
     (nil))
(insn 40 39 41 3 (set (reg:DI 5 di)
        (const_int 48 [0x30])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (nil))
(call_insn 41 40 42 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x2b9b8963e700 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) tilesInt.C:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 3 (set (reg/f:DI 65 [ D.11930 ])
        (reg:DI 0 ax)) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 43 42 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.11928 ])
            (const_int 0 [0]))) tilesInt.C:40 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 64 [ D.11928 ])
        (nil)))
(note 44 43 45 3 NOTE_INSN_DELETED)
(insn 45 44 47 3 (set (reg:SI 83 [ D.11931 ])
        (ne:SI (reg:CCZ 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 607 {*setcc_si_1_movzbl}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 47 45 48 3 (set (reg:SI 1 dx)
        (reg:SI 83 [ D.11931 ])) tilesInt.C:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.11931 ])
        (nil)))
(insn 48 47 49 3 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S4 A128])) tilesInt.C:44 89 {*movsi_internal}
     (nil))
(insn 49 48 50 3 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.11930 ])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (nil))
(call_insn 50 49 51 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_tableC1Eii") [flags 0x41]  <function_decl 0x2b9b8a092000 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) tilesInt.C:44 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70

;; basic block 4, loop depth 0, count 0, freq 9074, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u62(6){ }u63(7){ }u64(16){ }u65(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; lr  def 	 60
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 7 4 (set (mem/f/j:DI (plus:DI (reg/v/f:DI 70 [ self ])
                (const_int 16 [0x10])) [0 self_17(D)->ct+0 S8 A64])
        (reg/f:DI 65 [ D.11930 ])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 70 [ self ])
        (expr_list:REG_DEAD (reg/f:DI 65 [ D.11930 ])
            (nil))))
(insn 7 52 81 4 (set (reg:SI 60 [ D.11928 ])
        (const_int 0 [0])) tilesInt.C:45 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 81 7 82 4 (set (pc)
        (label_ref 80)) tilesInt.C:45 650 {jump}
     (nil)
 -> 80)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

(barrier 82 81 75)
;; basic block 5, loop depth 0, count 0, freq 926, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2 [9.3%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u68(6){ }u69(7){ }u70(16){ }u71(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60
(code_label 75 82 74 5 115 "" [1 uses])
(note 74 75 6 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 6 74 83 5 (set (reg:SI 60 [ D.11928 ])
        (const_int -1 [0xffffffffffffffff])) tilesInt.C:38 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(jump_insn 83 6 84 5 (set (pc)
        (label_ref 80)) 650 {jump}
     (nil)
 -> 80)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

(barrier 84 83 77)
;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 6 artificial_defs: { d1(0){ }d10(1){ }}
;; bb 6 artificial_uses: { u72(6){ }u73(7){ }u74(16){ }u75(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87
(code_label/s 77 84 79 6 116 "" [1 uses])
(note 79 77 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 78 79 60 6 (set (reg:DI 87)
        (reg:DI 0 ax)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 60 78 61 6 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.11930 ])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.11930 ])
        (nil)))
(call_insn 61 60 63 6 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b9b8963e900 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) tilesInt.C:44 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 63 61 64 6 (set (reg:DI 5 di)
        (reg:DI 87)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 64 63 65 6 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2b9b8963cb00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 65 64 80)
;; basic block 7, loop depth 0, count 0, freq 20000, maybe hot
;; Invalid sum of incoming frequencies 10000, should be 20000
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       4 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
(code_label 80 65 76 7 117 "" [2 uses])
(note 76 80 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 76 70 7 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ D.11928 ])) tilesInt.C:46 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 60 [ D.11928 ])
        (nil)))
(insn 70 67 0 7 (use (reg/i:SI 0 ax)) tilesInt.C:46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* CollisionTable_restore(CollisionTable*, PyObject*) (_ZL22CollisionTable_restoreP14CollisionTableP7_object, funcdef_no=151, decl_uid=11248, cgraph_uid=151)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 20.
deleting insn with uid = 20.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 64: def dominates all uses has unique first use
Reg 65: local to bb 2 def dominates all uses has unique first use
Reg 60: local to bb 2 def dominates all uses has unique first use
Reg 68: local to bb 3 def dominates all uses has unique first use
Found def insn 14 for 60 to be not moveable
Reg 64 not local to one basic block
Found def insn 3 for 65 to be not moveable
Found def insn 19 for 68 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 66 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a1 (r68,l0) best DIREG, allocno DIREG
    a5 (r66,l0) best DREG, allocno DREG
    a4 (r65,l0) best SIREG, allocno SIREG
    a2 (r64,l0) best DIREG, allocno DIREG
    a3 (r60,l0) best AREG, allocno AREG
    a0 (r59,l0) best AREG, allocno AREG

  a0(r59,l0) costs: AREG:-1786,-1786 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:36218,36218 SSE_REGS:36218,36218 MMX_REGS:36218,36218 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:36218,36218 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:10144,10144
  a1(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-786,-786 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:20436,20436 SSE_REGS:20436,20436 MMX_REGS:20436,20436 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:20436,20436 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5502,5502
  a2(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23218,23218 SSE_REGS:23218,23218 MMX_REGS:23218,23218 FP_TOP_SSE_REGS:52510510,52510510 FP_SECOND_SSE_REGS:52510510,52510510 FLOAT_SSE_REGS:52510510,52510510 FLOAT_INT_REGS:52510510,52510510 INT_SSE_REGS:23218,23218 FLOAT_INT_SSE_REGS:52510510,52510510 ALL_REGS:52510510,52510510 MEM:7144,7144
  a3(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000
  a4(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a5(r66,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000


Pass 1 for finding pseudo/allocno costs

    r68: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r59,l0) costs: AREG:-1786,-1786 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:36218,36218 SSE_REGS:36218,36218 MMX_REGS:36218,36218 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:36218,36218 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:10144,10144
  a1(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-786,-786 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:20436,20436 SSE_REGS:20436,20436 MMX_REGS:20436,20436 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:20436,20436 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5502,5502
  a2(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23218,23218 SSE_REGS:23218,23218 MMX_REGS:23218,23218 FP_TOP_SSE_REGS:52510510,52510510 FP_SECOND_SSE_REGS:52510510,52510510 FLOAT_SSE_REGS:52510510,52510510 FLOAT_INT_REGS:52510510,52510510 INT_SSE_REGS:23218,23218 FLOAT_INT_SSE_REGS:52510510,52510510 ALL_REGS:52510510,52510510 MEM:7144,7144
  a3(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000
  a4(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a5(r66,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000

   Insn 36(l0): point = 0
   Insn 33(l0): point = 2
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 22(l0): point = 13
   Insn 21(l0): point = 15
   Insn 20(l0): point = 17
   Insn 19(l0): point = 19
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 5(l0): point = 26
   Insn 14(l0): point = 28
   Insn 13(l0): point = 30
   Insn 12(l0): point = 32
   Insn 11(l0): point = 34
   Insn 10(l0): point = 36
   Insn 9(l0): point = 38
   Insn 8(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r59): [22..26] [3..5]
 a1(r68): [16..19]
 a2(r64): [20..44]
 a3(r60): [25..28]
 a4(r65): [35..42]
 a5(r66): [39..40]
Compressing live ranges: from 47 to 8 - 17%
Ranges after the compression:
 a0(r59): [4..5] [0..1]
 a1(r68): [2..3]
 a2(r64): [4..7]
 a3(r60): [4..5]
 a4(r65): [6..7]
 a5(r66): [6..7]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r59,l0) conflicts: a3(r60,l0) a2(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r68,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a2(r64,l0) conflicts: a0(r59,l0) a3(r60,l0) a4(r65,l0) a5(r66,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a3(r60,l0) conflicts: a0(r59,l0) a2(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r65,l0) conflicts: a2(r64,l0) a5(r66,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a5(r66,l0) conflicts: a2(r64,l0) a4(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=5, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r59 1r68 2r64 3r60 4r65 5r66
    modified regnos: 59 60 64 65 66 68
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 0-6 37-44)@73004
          2:( 0-3 5 6 37-44)@15720
            3:( 0 2 3 5 6 37-44)@20000
              4:( 3 6 41-44)@14288
      Allocno a0r59 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r68 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-51)
      Allocno a2r64 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a3r60 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a4r65 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-51)
      Allocno a5r66 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a1(r68,l0)(cost 0)
      Pushing a2(r64,l0)(cost 0)
      Pushing a5(r66,l0)(cost 0)
      Pushing a3(r60,l0)(cost 0)
      Pushing a4(r65,l0)(cost 0)
      Pushing a0(r59,l0)(cost 0)
      Popping a0(r59,l0)  -- assign reg 0
      Popping a4(r65,l0)  -- assign reg 0
      Popping a3(r60,l0)  -- assign reg 1
      Popping a5(r66,l0)  -- assign reg 1
      Popping a2(r64,l0)  -- assign reg 3
      Popping a1(r68,l0)  -- assign reg 5
Assigning 5 to a4r65
Disposition:
    0:r59  l0     0    3:r60  l0     1    2:r64  l0     3    4:r65  l0     5
    5:r66  l0     1    1:r68  l0     5
New iteration of spill/restore move
+++Costs: overall -13716, reg -13716, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* CollisionTable_restore(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={5d,1u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,6u,2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r68={1d,1u} 
;;    total ref usage 212{169d,41u,2e} in 22{19 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 64 65 66
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 64 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 65 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (parallel [
            (set (reg/f:DI 66)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:74 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/f:DI 66)) tilesInt.C:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b9b8a2834c0 *.LC6>)) tilesInt.C:74 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 65 [ args ])) tilesInt.C:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 65 [ args ])
        (nil)))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:74 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) tilesInt.C:74 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 14 13 5 2 (set (reg:SI 60 [ D.11937 ])
        (reg:SI 0 ax)) tilesInt.C:74 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 5 14 15 2 (set (reg/f:DI 59 [ D.11936 ])
        (const_int 0 [0])) tilesInt.C:75 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 15 5 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.11937 ])
            (const_int 0 [0]))) tilesInt.C:74 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.11937 ])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) tilesInt.C:74 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 27)
;;  succ:       4 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64

;; basic block 3, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 68
(note 17 16 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 20 3 (set (reg/f:DI 68 [ self_8(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 64 [ self ])
                (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])) tilesInt.C:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 64 [ self ])
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 file+0 S4 A128])) tilesInt.C:76 89 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/f:DI 68 [ self_8(D)->ct ])) tilesInt.C:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ self_8(D)->ct ])
        (nil)))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table7restoreEi") [flags 0x41]  <function_decl 0x2b9b8a086a00 restore>) [0 restore S1 A8])
        (const_int 0 [0])) tilesInt.C:76 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:77 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:77 91 {*movqi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:77 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 26 25 27 3 (set (reg/f:DI 59 [ D.11936 ])
        (reg:DI 0 ax)) tilesInt.C:77 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [21.4%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
(code_label 27 26 28 4 120 "" [1 uses])
(note 28 27 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 28 36 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 59 [ D.11936 ])) tilesInt.C:78 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.11936 ])
        (nil)))
(insn 36 33 0 4 (use (reg/i:DI 0 ax)) tilesInt.C:78 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* CollisionTable_save(CollisionTable*, PyObject*) (_ZL19CollisionTable_saveP14CollisionTableP7_object, funcdef_no=150, decl_uid=11243, cgraph_uid=150)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 20.
deleting insn with uid = 20.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 64: def dominates all uses has unique first use
Reg 65: local to bb 2 def dominates all uses has unique first use
Reg 60: local to bb 2 def dominates all uses has unique first use
Reg 68: local to bb 3 def dominates all uses has unique first use
Found def insn 14 for 60 to be not moveable
Reg 64 not local to one basic block
Found def insn 3 for 65 to be not moveable
Found def insn 19 for 68 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 66 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a1 (r68,l0) best DIREG, allocno DIREG
    a5 (r66,l0) best DREG, allocno DREG
    a4 (r65,l0) best SIREG, allocno SIREG
    a2 (r64,l0) best DIREG, allocno DIREG
    a3 (r60,l0) best AREG, allocno AREG
    a0 (r59,l0) best AREG, allocno AREG

  a0(r59,l0) costs: AREG:-1786,-1786 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:36218,36218 SSE_REGS:36218,36218 MMX_REGS:36218,36218 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:36218,36218 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:10144,10144
  a1(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-786,-786 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:20436,20436 SSE_REGS:20436,20436 MMX_REGS:20436,20436 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:20436,20436 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5502,5502
  a2(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23218,23218 SSE_REGS:23218,23218 MMX_REGS:23218,23218 FP_TOP_SSE_REGS:52510510,52510510 FP_SECOND_SSE_REGS:52510510,52510510 FLOAT_SSE_REGS:52510510,52510510 FLOAT_INT_REGS:52510510,52510510 INT_SSE_REGS:23218,23218 FLOAT_INT_SSE_REGS:52510510,52510510 ALL_REGS:52510510,52510510 MEM:7144,7144
  a3(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000
  a4(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a5(r66,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000


Pass 1 for finding pseudo/allocno costs

    r68: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r59,l0) costs: AREG:-1786,-1786 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:36218,36218 SSE_REGS:36218,36218 MMX_REGS:36218,36218 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:36218,36218 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:10144,10144
  a1(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-786,-786 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:20436,20436 SSE_REGS:20436,20436 MMX_REGS:20436,20436 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:20436,20436 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:5502,5502
  a2(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:23218,23218 SSE_REGS:23218,23218 MMX_REGS:23218,23218 FP_TOP_SSE_REGS:52510510,52510510 FP_SECOND_SSE_REGS:52510510,52510510 FLOAT_SSE_REGS:52510510,52510510 FLOAT_INT_REGS:52510510,52510510 INT_SSE_REGS:23218,23218 FLOAT_INT_SSE_REGS:52510510,52510510 ALL_REGS:52510510,52510510 MEM:7144,7144
  a3(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000
  a4(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a5(r66,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000

   Insn 36(l0): point = 0
   Insn 33(l0): point = 2
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 22(l0): point = 13
   Insn 21(l0): point = 15
   Insn 20(l0): point = 17
   Insn 19(l0): point = 19
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 5(l0): point = 26
   Insn 14(l0): point = 28
   Insn 13(l0): point = 30
   Insn 12(l0): point = 32
   Insn 11(l0): point = 34
   Insn 10(l0): point = 36
   Insn 9(l0): point = 38
   Insn 8(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r59): [22..26] [3..5]
 a1(r68): [16..19]
 a2(r64): [20..44]
 a3(r60): [25..28]
 a4(r65): [35..42]
 a5(r66): [39..40]
Compressing live ranges: from 47 to 8 - 17%
Ranges after the compression:
 a0(r59): [4..5] [0..1]
 a1(r68): [2..3]
 a2(r64): [4..7]
 a3(r60): [4..5]
 a4(r65): [6..7]
 a5(r66): [6..7]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r59,l0) conflicts: a3(r60,l0) a2(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r68,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a2(r64,l0) conflicts: a0(r59,l0) a3(r60,l0) a4(r65,l0) a5(r66,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a3(r60,l0) conflicts: a0(r59,l0) a2(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r65,l0) conflicts: a2(r64,l0) a5(r66,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a5(r66,l0) conflicts: a2(r64,l0) a4(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=5, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r59 1r68 2r64 3r60 4r65 5r66
    modified regnos: 59 60 64 65 66 68
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 0-6 37-44)@73004
          2:( 0-3 5 6 37-44)@15720
            3:( 0 2 3 5 6 37-44)@20000
              4:( 3 6 41-44)@14288
      Allocno a0r59 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r68 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-51)
      Allocno a2r64 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-51)
      Allocno a3r60 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a4r65 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-51)
      Allocno a5r66 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a1(r68,l0)(cost 0)
      Pushing a2(r64,l0)(cost 0)
      Pushing a5(r66,l0)(cost 0)
      Pushing a3(r60,l0)(cost 0)
      Pushing a4(r65,l0)(cost 0)
      Pushing a0(r59,l0)(cost 0)
      Popping a0(r59,l0)  -- assign reg 0
      Popping a4(r65,l0)  -- assign reg 0
      Popping a3(r60,l0)  -- assign reg 1
      Popping a5(r66,l0)  -- assign reg 1
      Popping a2(r64,l0)  -- assign reg 3
      Popping a1(r68,l0)  -- assign reg 5
Assigning 5 to a4r65
Disposition:
    0:r59  l0     0    3:r60  l0     1    2:r64  l0     3    4:r65  l0     5
    5:r66  l0     1    1:r68  l0     5
New iteration of spill/restore move
+++Costs: overall -13716, reg -13716, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* CollisionTable_save(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={5d,1u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,6u,2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r68={1d,1u} 
;;    total ref usage 212{169d,41u,2e} in 22{19 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 64 65 66
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 64 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 65 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (parallel [
            (set (reg/f:DI 66)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:65 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/f:DI 66)) tilesInt.C:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b9b8a2834c0 *.LC6>)) tilesInt.C:65 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 65 [ args ])) tilesInt.C:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 65 [ args ])
        (nil)))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:65 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) tilesInt.C:65 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 14 13 5 2 (set (reg:SI 60 [ D.11943 ])
        (reg:SI 0 ax)) tilesInt.C:65 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 5 14 15 2 (set (reg/f:DI 59 [ D.11942 ])
        (const_int 0 [0])) tilesInt.C:66 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 15 5 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.11943 ])
            (const_int 0 [0]))) tilesInt.C:65 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.11943 ])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) tilesInt.C:65 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 27)
;;  succ:       4 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64

;; basic block 3, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 68
(note 17 16 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 20 3 (set (reg/f:DI 68 [ self_8(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 64 [ self ])
                (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])) tilesInt.C:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 64 [ self ])
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 file+0 S4 A128])) tilesInt.C:67 89 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/f:DI 68 [ self_8(D)->ct ])) tilesInt.C:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ self_8(D)->ct ])
        (nil)))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table4saveEi") [flags 0x41]  <function_decl 0x2b9b8a086500 save>) [0 save S1 A8])
        (const_int 0 [0])) tilesInt.C:67 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:68 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:68 91 {*movqi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:68 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 26 25 27 3 (set (reg/f:DI 59 [ D.11942 ])
        (reg:DI 0 ax)) tilesInt.C:68 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [21.4%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
(code_label 27 26 28 4 125 "" [1 uses])
(note 28 27 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 28 36 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 59 [ D.11942 ])) tilesInt.C:69 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.11942 ])
        (nil)))
(insn 36 33 0 4 (use (reg/i:DI 0 ax)) tilesInt.C:69 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* CollisionTable_usage(CollisionTable*) (_ZL20CollisionTable_usageP14CollisionTable, funcdef_no=149, decl_uid=11238, cgraph_uid=149)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 64 uninteresting
Reg 65 uninteresting
Reg 60 uninteresting
Reg 66 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r66,l0) best DIREG, allocno DIREG
    a2 (r65,l0) best DIREG, allocno DIREG
    a3 (r64,l0) best DIREG, allocno DIREG
    a1 (r60,l0) best AREG, allocno AREG

  a0(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a1(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a2(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a3(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:66535000,66535000 FP_SECOND_SSE_REGS:66535000,66535000 FLOAT_SSE_REGS:66535000,66535000 FLOAT_INT_REGS:66535000,66535000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:66535000,66535000 ALL_REGS:66535000,66535000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a1(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a2(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a3(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:66535000,66535000 FP_SECOND_SSE_REGS:66535000,66535000 FLOAT_SSE_REGS:66535000,66535000 FLOAT_INT_REGS:66535000,66535000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:66535000,66535000 ALL_REGS:66535000,66535000 MEM:8000,8000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r66): [3..4]
 a1(r60): [5..6]
 a2(r65): [11..12]
 a3(r64): [13..14]
Compressing live ranges: from 17 to 8 - 47%
Ranges after the compression:
 a0(r66): [0..1]
 a1(r60): [2..3]
 a2(r65): [4..5]
 a3(r64): [6..7]
+++Allocating 0 bytes for conflict table (uncompressed size 32)
;; a0(r66,l0) conflicts:;; a1(r60,l0) conflicts:;; a2(r65,l0) conflicts:;; a3(r64,l0) conflicts:  cp0:a0(r66)<->a1(r60)@125:shuffle
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=1, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r66 1r60 2r65 3r64
    modified regnos: 60 64 65 66
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 0-6 37-44)@82000
      Allocno a0r66 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r60 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a2r65 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a3r64 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a3(r64,l0)(cost 0)
      Pushing a2(r65,l0)(cost 0)
      Pushing a1(r60,l0)(cost 0)
      Pushing a0(r66,l0)(cost 0)
      Popping a0(r66,l0)  -- assign reg 5
      Popping a1(r60,l0)  -- assign reg 0
      Popping a2(r65,l0)  -- assign reg 5
      Popping a3(r64,l0)  -- assign reg 5
Disposition:
    1:r60  l0     0    3:r64  l0     5    2:r65  l0     5    0:r66  l0     5
New iteration of spill/restore move
+++Costs: overall -12000, reg -12000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* CollisionTable_usage(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r60={1d,2u} r64={1d,1u} r65={1d,1u} r66={1d,1u} 
;;    total ref usage 132{113d,19u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 64 65 66
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 64 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:55 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 65 [ self_2(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 64 [ self ])
                (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])) tilesInt.C:58 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 64 [ self ])
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 65 [ self_2(D)->ct ])) tilesInt.C:58 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ self_2(D)->ct ])
        (nil)))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x41]  <function_decl 0x2b9b8a086f00 usage>) [0 usage S1 A8])
            (const_int 0 [0]))) tilesInt.C:58 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/v:SI 60 [ ret ])
        (reg:SI 0 ax)) tilesInt.C:58 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 10 9 11 2 (var_location:SI ret (reg/v:SI 60 [ ret ])) tilesInt.C:58 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 66 [ D.11948 ])
        (sign_extend:DI (reg/v:SI 60 [ ret ]))) tilesInt.C:59 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 60 [ ret ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 66 [ D.11948 ])) tilesInt.C:59 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66 [ D.11948 ])
        (nil)))
(call_insn/j 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:59 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 14 13 0)

;; Function PyObject* CollisionTable_reset(CollisionTable*) (_ZL20CollisionTable_resetP14CollisionTable, funcdef_no=148, decl_uid=11235, cgraph_uid=148)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 62 uninteresting
Reg 63 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r63,l0) best DIREG, allocno DIREG
    a1 (r62,l0) best DIREG, allocno DIREG

  a0(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a1(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:66535000,66535000 FP_SECOND_SSE_REGS:66535000,66535000 FLOAT_SSE_REGS:66535000,66535000 FLOAT_INT_REGS:66535000,66535000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:66535000,66535000 ALL_REGS:66535000,66535000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r63: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:7000,7000
  a1(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:66535000,66535000 FP_SECOND_SSE_REGS:66535000,66535000 FLOAT_SSE_REGS:66535000,66535000 FLOAT_INT_REGS:66535000,66535000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:66535000,66535000 ALL_REGS:66535000,66535000 MEM:8000,8000

   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 2(l0): point = 12
 a0(r63): [9..10]
 a1(r62): [11..12]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r63): [0..1]
 a1(r62): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r63,l0) conflicts:;; a1(r62,l0) conflicts:  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r63 1r62
    modified regnos: 62 63
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 0-6 37-44)@42000
      Allocno a0r63 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Allocno a1r62 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a1(r62,l0)(cost 0)
      Pushing a0(r63,l0)(cost 0)
      Popping a0(r63,l0)  -- assign reg 5
      Popping a1(r62,l0)  -- assign reg 5
Disposition:
    1:r62  l0     5    0:r63  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


PyObject* CollisionTable_reset(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r62={1d,1u} r63={1d,1u} 
;;    total ref usage 128{112d,16u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 62 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 63 [ self_2(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 62 [ self ])
                (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])) tilesInt.C:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ self ])
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 63 [ self_2(D)->ct ])) tilesInt.C:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ self_2(D)->ct ])
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x41]  <function_decl 0x2b9b8a086e00 reset>) [0 reset S1 A8])
        (const_int 0 [0])) tilesInt.C:50 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:51 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:51 91 {*movqi_internal}
     (nil))
(call_insn/j 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:51 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 12 11 0)

;; Function void inittiles() (inittiles, funcdef_no=156, decl_uid=11376, cgraph_uid=156)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 59 uninteresting
Reg 60 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 1 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r60,l0) best AREG, allocno AREG
    a1 (r59,l0) best AREG, allocno AREG

  a0(r60,l0) costs: AREG:-633,-633 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-496,-496 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:22906,22906 SSE_REGS:22906,22906 MMX_REGS:22906,22906 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:22906,22906 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:6552,6552
  a1(r59,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r60,l0) costs: AREG:-633,-633 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-496,-496 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:22906,22906 SSE_REGS:22906,22906 MMX_REGS:22906,22906 FP_TOP_SSE_REGS:3000000,3000000 FP_SECOND_SSE_REGS:3000000,3000000 FLOAT_SSE_REGS:3000000,3000000 FLOAT_INT_REGS:3000000,3000000 INT_SSE_REGS:22906,22906 FLOAT_INT_SSE_REGS:3000000,3000000 ALL_REGS:3000000,3000000 MEM:6552,6552
  a1(r59,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 INDEX_REGS:0,0 GENERAL_REGS:0,0 LEGACY_REGS:0,0 CLOBBERED_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 FP_TOP_SSE_REGS:2000000,2000000 FP_SECOND_SSE_REGS:2000000,2000000 FLOAT_SSE_REGS:2000000,2000000 FLOAT_INT_REGS:2000000,2000000 INT_SSE_REGS:26000,26000 FLOAT_INT_SSE_REGS:2000000,2000000 ALL_REGS:2000000,2000000 MEM:8000,8000

   Insn 38(l0): point = 1
   Insn 37(l0): point = 3
   Insn 36(l0): point = 5
   Insn 35(l0): point = 7
   Insn 34(l0): point = 9
   Insn 25(l0): point = 12
   Insn 24(l0): point = 14
   Insn 21(l0): point = 16
   Insn 20(l0): point = 18
   Insn 19(l0): point = 20
   Insn 18(l0): point = 22
   Insn 17(l0): point = 24
   Insn 16(l0): point = 26
   Insn 15(l0): point = 28
   Insn 9(l0): point = 31
   Insn 8(l0): point = 33
   Insn 7(l0): point = 35
   Insn 6(l0): point = 37
   Insn 5(l0): point = 39
 a0(r60): [4..16]
 a1(r59): [34..35]
Compressing live ranges: from 42 to 4 - 9%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r60,l0) conflicts:;; a1(r59,l0) conflicts:  regions=1, blocks=6, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r60 1r59
    modified regnos: 59 60
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-6 8-15 21-51)@0
        1:( 0-6 37-44)@22000
          2:( 0 2 3 5 6 37-44)@16902
      Allocno a0r60 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-51)
      Allocno a1r59 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-51)
      Pushing a0(r60,l0)(cost 0)
      Pushing a1(r59,l0)(cost 0)
      Popping a1(r59,l0)  -- assign reg 0
      Popping a0(r60,l0)  -- assign reg 0
Disposition:
    1:r59  l0     0    0:r60  l0     0
New iteration of spill/restore move
+++Costs: overall -4899, reg -4899, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void inittiles()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={4d,2u} r1={6d,2u} r2={5d,1u} r4={6d,2u} r5={7d,3u} r6={1d,5u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,4u} r17={6d,2u} r18={3d} r19={3d} r20={1d,5u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,3u} 
;;    total ref usage 204{165d,39u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:380 87 {*movdi_internal_rex64}
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyType_Ready") [flags 0x41]  <function_decl 0x2b9b89e48c00 PyType_Ready>) [0 PyType_Ready S1 A8])
            (const_int 0 [0]))) tilesInt.C:380 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 59 [ D.11956 ])
        (reg:SI 0 ax)) tilesInt.C:380 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 8 7 9 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 59 [ D.11956 ])
            (const_int 0 [0]))) tilesInt.C:380 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.11956 ])
        (nil)))
(jump_insn 9 8 14 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) tilesInt.C:380 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3667 [0xe53])
            (nil)))
 -> 42)
;;  succ:       5 [36.7%] 
;;              3 [63.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 6333, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [63.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60
(note 14 9 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 37 r8)
        (const_int 1013 [0x3f5])) tilesInt.C:382 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:DI 1 dx)
        (const_int 0 [0])) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL12TilesMethods") [flags 0x2]  <var_decl 0x2b9b8a0c44c0 TilesMethods>)) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b9b8a29bb48 *.LC7>)) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x2b9b8a018f00 Py_InitModule4_64>) [0 Py_InitModule4_64 S1 A8])
            (const_int 0 [0]))) tilesInt.C:382 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (nil)))))))
(insn 21 20 22 3 (set (reg/v/f:DI 60 [ m ])
        (reg:DI 0 ax)) tilesInt.C:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 22 21 24 3 (var_location:DI m (reg/v/f:DI 60 [ m ])) tilesInt.C:382 -1
     (nil))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 60 [ m ])
            (const_int 0 [0]))) tilesInt.C:384 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) tilesInt.C:384 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2164 [0x874])
            (nil)))
 -> 42)
;;  succ:       5 [21.6%] 
;;              4 [78.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 4, loop depth 0, count 0, freq 4963, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [78.4%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 26 25 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 32 26 33 4 NOTE_INSN_DELETED)
(note 33 32 34 4 NOTE_INSN_DELETED)
(insn 34 33 35 4 (parallel [
            (set (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])
                (plus:DI (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:387 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:388 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b9b8a29bbe0 *.LC8>)) tilesInt.C:388 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg/v/f:DI 60 [ m ])) tilesInt.C:388 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ m ])
        (nil)))
(call_insn/j 38 37 39 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyModule_AddObject") [flags 0x41]  <function_decl 0x2b9b8a018c00 PyModule_AddObject>) [0 PyModule_AddObject S1 A8])
            (const_int 0 [0]))) tilesInt.C:388 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 39 38 42)
;; basic block 5, loop depth 0, count 0, freq 5037, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       3 [21.6%] 
;;              2 [36.7%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 42 39 43 5 133 "" [2 uses])
(note 43 42 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

