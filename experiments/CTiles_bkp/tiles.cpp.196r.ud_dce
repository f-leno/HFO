
;; Function int hash_UNH(int*, int, long int, int) (_Z8hash_UNHPiili, funcdef_no=1063, decl_uid=23699, cgraph_uid=307)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 20 (  1.2)


int hash_UNH(int*, int, long int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={2d,1u} r6={1d,15u} r7={1d,16u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,14u} r17={19d,7u} r18={1d} r19={1d} r20={1d,15u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r87={1d,1u} r90={2d,2u} r91={2d,4u,1e} r96={1d,2u} r99={1d,2u} r104={2d,6u} r105={2d,6u} r107={2d,7u} r108={2d,2u} r109={3d,1u} r110={1d,1u} r114={1d,1u} r115={1d,2u} r116={1d,3u} r117={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r128={1d,1u} r130={1d,2u} r131={1d} r133={1d,1u} 
;;    total ref usage 246{117d,127u,2e} in 72{71 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81
;;  reg->defs[] map:	0[0,2] 1[3,4] 2[5,6] 4[7,8] 5[9,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,40] 18[41,41] 19[42,42] 20[43,43] 21[44,45] 22[46,47] 23[48,49] 24[50,51] 25[52,53] 26[54,55] 27[56,57] 28[58,59] 29[60,60] 30[61,61] 31[62,62] 32[63,63] 33[64,64] 34[65,65] 35[66,66] 36[67,67] 37[68,69] 38[70,71] 39[72,72] 40[73,73] 45[74,74] 46[75,75] 47[76,76] 48[77,77] 49[78,78] 50[79,79] 51[80,80] 52[81,81] 87[82,82] 90[83,84] 91[85,86] 96[87,87] 99[88,88] 104[89,90] 105[91,92] 107[93,94] 108[95,96] 109[97,99] 110[100,100] 114[101,101] 115[102,102] 116[103,103] 117[104,104] 119[105,105] 120[106,106] 121[107,107] 122[108,108] 123[109,109] 124[110,110] 125[111,111] 126[112,112] 128[113,113] 130[114,114] 131[115,115] 133[116,116] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d43(20){ }d45(21){ }d47(22){ }d49(23){ }d51(24){ }d53(25){ }d55(26){ }d57(27){ }d59(28){ }d69(37){ }d71(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[4],2[6],4[8],5[10],6[11],7[12],16[21],20[43],21[45],22[47],23[49],24[51],25[53],26[55],27[57],28[59],37[69],38[71]
;; rd  kill	(35) 0[0,1,2],1[3,4],2[5,6],4[7,8],5[9,10],6[11],7[12],16[21],20[43],21[44,45],22[46,47],23[48,49],24[50,51],25[52,53],26[54,55],27[56,57],28[58,59],37[68,69],38[70,71]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(8) 1[4],2[6],4[8],5[10],6[11],7[12],16[21],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 8 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114 115 116 117
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 114 115 116 117
;; live  kill	
;; rd  in  	(8) 1[4],2[6],4[8],5[10],6[11],7[12],16[21],20[43]
;; rd  gen 	(5) 17[40],114[101],115[102],116[103],117[104]
;; rd  kill	(23) 17[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; rd  out 	(8) 6[11],7[12],16[21],20[43],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ d11(bb 0 insn -1) }u10(7){ d12(bb 0 insn -1) }u11(16){ d21(bb 0 insn -1) }u12(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	 91 110
;; live  kill	
;; rd  in  	(8) 6[11],7[12],16[21],20[43],114[101],115[102],116[103],117[104]
;; rd  gen 	(2) 91[85],110[100]
;; rd  kill	(3) 91[85,86],110[100]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; rd  out 	(10) 6[11],7[12],16[21],20[43],91[85],110[100],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 6 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ d11(bb 0 insn -1) }u14(7){ d12(bb 0 insn -1) }u15(16){ d21(bb 0 insn -1) }u16(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 90 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  gen 	 90 108
;; live  kill	
;; rd  in  	(12) 6[11],7[12],16[21],17[33],20[43],91[85,86],110[100],114[101],115[102],116[103],117[104]
;; rd  gen 	(2) 90[84],108[96]
;; rd  kill	(4) 90[83,84],108[95,96]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; rd  out 	(13) 6[11],7[12],16[21],20[43],90[84],91[85,86],108[96],110[100],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 5 4 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(6){ d11(bb 0 insn -1) }u19(7){ d12(bb 0 insn -1) }u20(16){ d21(bb 0 insn -1) }u21(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87 90 108 119 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; live  gen 	 0 [ax] 17 [flags] 87 90 108 119 120
;; live  kill	 17 [flags]
;; rd  in  	(20) 0[1],6[11],7[12],16[21],17[35],20[43],87[82],90[83,84],91[85,86],108[95,96],110[100],114[101],115[102],116[103],117[104],119[105],120[106]
;; rd  gen 	(7) 0[1],17[35],87[82],90[83],108[95],119[105],120[106]
;; rd  kill	(29) 0[0,1,2],17[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],87[82],90[83,84],108[95,96],119[105],120[106]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; rd  out 	(13) 6[11],7[12],16[21],20[43],90[83],91[85,86],108[95],110[100],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 5 )->[6]->( 4 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(6){ d11(bb 0 insn -1) }u34(7){ d12(bb 0 insn -1) }u35(16){ d21(bb 0 insn -1) }u36(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110
;; lr  def 	 17 [flags] 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  gen 	 17 [flags] 91
;; live  kill	 17 [flags]
;; rd  in  	(13) 6[11],7[12],16[21],20[43],90[83],91[85,86],108[95],110[100],114[101],115[102],116[103],117[104]
;; rd  gen 	(2) 17[33],91[86]
;; rd  kill	(21) 17[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],91[85,86]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; rd  out 	(10) 6[11],7[12],16[21],20[43],91[86],110[100],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(6){ d11(bb 0 insn -1) }u43(7){ d12(bb 0 insn -1) }u44(16){ d21(bb 0 insn -1) }u45(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	
;; live  kill	
;; rd  in  	(10) 6[11],7[12],16[21],20[43],91[86],110[100],114[101],115[102],116[103],117[104]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; rd  out 	(8) 6[11],7[12],16[21],20[43],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 7 )->[8]->( 9 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(6){ d11(bb 0 insn -1) }u47(7){ d12(bb 0 insn -1) }u48(16){ d21(bb 0 insn -1) }u49(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(8) 6[11],7[12],16[21],20[43],114[101],115[102],116[103],117[104]
;; rd  gen 	(1) 17[32]
;; rd  kill	(19) 17[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; rd  out 	(8) 6[11],7[12],16[21],20[43],114[101],115[102],116[103],117[104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(6){ d11(bb 0 insn -1) }u53(7){ d12(bb 0 insn -1) }u54(16){ d21(bb 0 insn -1) }u55(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104 105 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	 104 105 133
;; live  kill	
;; rd  in  	(8) 6[11],7[12],16[21],20[43],114[101],115[102],116[103],117[104]
;; rd  gen 	(3) 104[90],105[92],133[116]
;; rd  kill	(5) 104[89,90],105[91,92],133[116]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; rd  out 	(11) 6[11],7[12],16[21],20[43],104[90],105[92],114[101],115[102],116[103],117[104],133[116]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 10 9 )->[10]->( 10 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u56(6){ d11(bb 0 insn -1) }u57(7){ d12(bb 0 insn -1) }u58(16){ d21(bb 0 insn -1) }u59(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 117 133
;; lr  def 	 17 [flags] 96 99 104 105 121 122 123 124 125 126 128
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; live  gen 	 17 [flags] 96 99 104 105 121 122 123 124 125 126 128
;; live  kill	 17 [flags]
;; rd  in  	(23) 6[11],7[12],16[21],17[26],20[43],96[87],99[88],104[89,90],105[91,92],114[101],115[102],116[103],117[104],121[107],122[108],123[109],124[110],125[111],126[112],128[113],133[116]
;; rd  gen 	(12) 17[26],96[87],99[88],104[89],105[91],121[107],122[108],123[109],124[110],125[111],126[112],128[113]
;; rd  kill	(32) 17[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],96[87],99[88],104[89,90],105[91,92],121[107],122[108],123[109],124[110],125[111],126[112],128[113]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; rd  out 	(11) 6[11],7[12],16[21],20[43],104[89],105[91],114[101],115[102],116[103],117[104],133[116]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 10 )->[11]->( 12 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(6){ d11(bb 0 insn -1) }u88(7){ d12(bb 0 insn -1) }u89(16){ d21(bb 0 insn -1) }u90(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 116
;; lr  def 	 17 [flags] 107 109 130 131
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 116
;; live  gen 	 17 [flags] 107 109 130 131
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[11],7[12],16[21],20[43],104[89],105[91],114[101],115[102],116[103],117[104],133[116]
;; rd  gen 	(5) 17[24],107[93],109[99],130[114],131[115]
;; rd  kill	(26) 17[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],107[93,94],109[97,98,99],130[114],131[115]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 116
;; rd  out 	(7) 6[11],7[12],16[21],20[43],107[93],109[99],116[103]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 11 12 )->[12]->( 12 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u100(6){ d11(bb 0 insn -1) }u101(7){ d12(bb 0 insn -1) }u102(16){ d21(bb 0 insn -1) }u103(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; lr  def 	 17 [flags] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; live  gen 	 17 [flags] 107
;; live  kill	 17 [flags]
;; rd  in  	(9) 6[11],7[12],16[21],17[22],20[43],107[93,94],109[99],116[103]
;; rd  gen 	(2) 17[22],107[94]
;; rd  kill	(21) 17[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],107[93,94]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; rd  out 	(6) 6[11],7[12],16[21],20[43],107[94],116[103]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u110(6){ d11(bb 0 insn -1) }u111(7){ d12(bb 0 insn -1) }u112(16){ d21(bb 0 insn -1) }u113(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 109
;; live  kill	
;; rd  in  	(6) 6[11],7[12],16[21],20[43],107[94],116[103]
;; rd  gen 	(1) 109[98]
;; rd  kill	(3) 109[97,98,99]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; rd  out 	(5) 6[11],7[12],16[21],20[43],109[98]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 8 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u115(6){ d11(bb 0 insn -1) }u116(7){ d12(bb 0 insn -1) }u117(16){ d21(bb 0 insn -1) }u118(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 109
;; live  kill	
;; rd  in  	(8) 6[11],7[12],16[21],20[43],114[101],115[102],116[103],117[104]
;; rd  gen 	(1) 109[97]
;; rd  kill	(3) 109[97,98,99]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; rd  out 	(5) 6[11],7[12],16[21],20[43],109[97]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 14 11 13 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u119(6){ d11(bb 0 insn -1) }u120(7){ d12(bb 0 insn -1) }u121(16){ d21(bb 0 insn -1) }u122(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(9) 6[11],7[12],16[21],20[43],107[93],109[97,98,99],116[103]
;; rd  gen 	(1) 0[0]
;; rd  kill	(3) 0[0,1,2]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[11],7[12],16[21],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u125(0){ d0(bb 15 insn 156) }u126(6){ d11(bb 0 insn -1) }u127(7){ d12(bb 0 insn -1) }u128(20){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[11],7[12],16[21],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 15 insn 156) }
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 42 to worklist
  Adding insn 50 to worklist
  Adding insn 65 to worklist
  Adding insn 60 to worklist
  Adding insn 55 to worklist
  Adding insn 77 to worklist
  Adding insn 84 to worklist
  Adding insn 91 to worklist
  Adding insn 117 to worklist
  Adding insn 130 to worklist
  Adding insn 142 to worklist
  Adding insn 159 to worklist
Finished finding needed instructions:
  Adding insn 156 to worklist
Processing use of (reg 109 [ D.25966 ]) in insn 156:
  Adding insn 125 to worklist
  Adding insn 149 to worklist
  Adding insn 37 to worklist
Processing use of (subreg (reg 107 [ index ]) 0) in insn 149:
  Adding insn 138 to worklist
Processing use of (reg 107 [ index ]) in insn 138:
  Adding insn 126 to worklist
Processing use of (reg 116 [ m ]) in insn 138:
  Adding insn 30 to worklist
Processing use of (reg 1 dx) in insn 30:
Processing use of (subreg (reg 130 [ D.25969 ]) 0) in insn 126:
  Adding insn 124 to worklist
Processing use of (reg 104 [ sum ]) in insn 124:
  Adding insn 110 to worklist
Processing use of (reg 104 [ sum ]) in insn 124:
Processing use of (reg 116 [ m ]) in insn 124:
Processing use of (reg 116 [ m ]) in insn 124:
Processing use of (reg 104 [ sum ]) in insn 110:
  Adding insn 35 to worklist
Processing use of (reg 128 [ D.25969 ]) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 126 [ index ]) in insn 109:
  Adding insn 107 to worklist
Processing use of (reg 133) in insn 109:
  Adding insn 168 to worklist
Processing use of (subreg (reg 125 [ index ]) 0) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 99 [ index ]) in insn 106:
  Adding insn 102 to worklist
Processing use of (reg 96 [ index ]) in insn 102:
  Adding insn 98 to worklist
Processing use of (reg 124 [ D.25969 ]) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 123 [ D.25966 ]) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 105 [ i ]) in insn 100:
  Adding insn 36 to worklist
  Adding insn 112 to worklist
Processing use of (reg 117 [ increment ]) in insn 100:
  Adding insn 31 to worklist
Processing use of (reg 2 cx) in insn 31:
Processing use of (reg 105 [ i ]) in insn 112:
Processing use of (reg 122 [ *_29 ]) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 114 [ ints ]) in insn 97:
  Adding insn 28 to worklist
Processing use of (reg 121 [ D.25967 ]) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 105 [ i ]) in insn 96:
Processing use of (reg 5 di) in insn 28:
Processing use of (subreg (reg 130 [ D.25969 ]) 0) in insn 125:
Processing use of (reg 0 ax) in insn 159:
Processing use of (reg 17 flags) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 107 [ index ]) in insn 141:
Processing use of (reg 17 flags) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 107 [ index ]) in insn 129:
Processing use of (reg 17 flags) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 105 [ i ]) in insn 116:
Processing use of (reg 115 [ num_ints ]) in insn 116:
  Adding insn 29 to worklist
Processing use of (reg 4 si) in insn 29:
Processing use of (reg 17 flags) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 115 [ num_ints ]) in insn 90:
Processing use of (reg 17 flags) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 91 [ ivtmp.78 ]) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 110 [ D.25971 ]) in insn 76:
  Adding insn 46 to worklist
Processing use of (reg 91 [ ivtmp.78 ]) in insn 75:
  Adding insn 169 to worklist
Processing use of (reg 7 sp) in insn 55:
Processing use of (reg 90 [ D.25965 ]) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 91 [ ivtmp.78 ]) in insn 60:
Processing use of (reg 119 [ D.25965 ]) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 120 [ D.25965 ]) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 90 [ D.25965 ]) in insn 58:
  Adding insn 34 to worklist
Processing use of (subreg (reg 87 [ D.25966 ]) 0) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 0 ax) in insn 56:
Processing use of (reg 17 flags) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 108 [ D.25970 ]) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 108 [ D.25970 ]) in insn 63:
  Adding insn 33 to worklist
Processing use of (reg 91 [ ivtmp.78 ]) in insn 50:
Processing use of (reg 17 flags) in insn 42:
  Adding insn 41 to worklist
starting the processing of deferred insns
ending the processing of deferred insns


int hash_UNH(int*, int, long int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={2d,1u} r6={1d,15u} r7={1d,16u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,14u} r17={19d,7u} r18={1d} r19={1d} r20={1d,15u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r87={1d,1u} r90={2d,2u} r91={2d,4u,1e} r96={1d,2u} r99={1d,2u} r104={2d,6u} r105={2d,6u} r107={2d,7u} r108={2d,2u} r109={3d,1u} r110={1d,1u} r114={1d,1u} r115={1d,2u} r116={1d,3u} r117={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r128={1d,1u} r130={1d,2u} r131={1d} r133={1d,1u} 
;;    total ref usage 246{117d,127u,2e} in 72{71 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114 115 116 117
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 114 115 116 117
;; live  kill	
(note 38 0 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 28 38 29 2 (set (reg/v/f:DI 114 [ ints ])
        (reg:DI 5 di [ ints ])) tiles.cpp:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ ints ])
        (nil)))
(insn 29 28 30 2 (set (reg/v:SI 115 [ num_ints ])
        (reg:SI 4 si [ num_ints ])) tiles.cpp:129 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_ints ])
        (nil)))
(insn 30 29 31 2 (set (reg/v:DI 116 [ m ])
        (reg:DI 1 dx [ m ])) tiles.cpp:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ m ])
        (nil)))
(insn 31 30 32 2 (set (reg/v:SI 117 [ increment ])
        (reg:SI 2 cx [ increment ])) tiles.cpp:129 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ increment ])
        (nil)))
(note 32 31 40 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 40 32 41 2 (var_location:DI sum (const_int 0 [0])) tiles.cpp:134 -1
     (nil))
(insn 41 40 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b82f1f7d688 first_call>) [0 first_call+0 S4 A128])
            (const_int 0 [0]))) tiles.cpp:137 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) tiles.cpp:137 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 85)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117

;; basic block 3, loop depth 0, count 0, freq 20, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	 91 110
;; live  kill	
(note 43 42 169 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 169 43 46 3 (set (reg:DI 91 [ ivtmp.78 ])
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) 87 {*movdi_internal_rex64}
     (nil))
(insn 46 169 79 3 (set (reg/f:DI 110 [ D.25971 ])
        (const:DI (plus:DI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)
                (const_int 8192 [0x2000])))) 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117

;; basic block 4, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [99.0%]  (FALLTHRU,DFS_BACK)
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 90 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  gen 	 90 108
;; live  kill	
(code_label 79 46 47 4 6 "" [0 uses])
(note 47 79 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 48 47 50 4 (var_location:SI k (clobber (const_int 0 [0]))) -1
     (nil))
(insn 50 48 52 4 (set (mem:SI (reg:DI 91 [ ivtmp.78 ]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) tiles.cpp:139 89 {*movsi_internal}
     (nil))
(debug_insn 52 50 33 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 33 52 34 4 (set (reg:SI 108 [ D.25970 ])
        (const_int 4 [0x4])) tiles.cpp:139 89 {*movsi_internal}
     (nil))
(insn 34 33 68 4 (set (reg:SI 90 [ D.25965 ])
        (const_int 0 [0])) tiles.cpp:139 89 {*movsi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117

;; basic block 5, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [75.0%]  (FALLTHRU,DFS_BACK)
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87 90 108 119 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; live  gen 	 0 [ax] 17 [flags] 87 90 108 119 120
;; live  kill	 17 [flags]
(code_label 68 34 53 5 4 "" [0 uses])
(note 53 68 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 5 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(call_insn 55 54 56 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x2b82f1e2a500 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) tiles.cpp:141 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 56 55 57 5 (set (reg:SI 87 [ D.25966 ])
        (reg:SI 0 ax)) tiles.cpp:141 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 57 56 58 5 (set (reg:SI 119 [ D.25965 ])
        (zero_extend:SI (subreg:QI (reg:SI 87 [ D.25966 ]) 0))) tiles.cpp:141 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 87 [ D.25966 ])
        (nil)))
(insn 58 57 59 5 (parallel [
            (set (reg:SI 120 [ D.25965 ])
                (ashift:SI (reg:SI 90 [ D.25965 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 512 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.25965 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 59 58 60 5 (parallel [
            (set (reg:SI 90 [ D.25965 ])
                (ior:SI (reg:SI 119 [ D.25965 ])
                    (reg:SI 120 [ D.25965 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 412 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 120 [ D.25965 ])
        (expr_list:REG_DEAD (reg:SI 119 [ D.25965 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 60 59 62 5 (set (mem:SI (reg:DI 91 [ ivtmp.78 ]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (reg:SI 90 [ D.25965 ])) tiles.cpp:141 89 {*movsi_internal}
     (nil))
(debug_insn 62 60 63 5 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(insn 63 62 64 5 (parallel [
            (set (reg:SI 108 [ D.25970 ])
                (plus:SI (reg:SI 108 [ D.25970 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 64 63 65 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.25970 ])
            (const_int 0 [0]))) tiles.cpp:140 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 71 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) tiles.cpp:140 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil)))
 -> 71)
;;  succ:       5 [75.0%]  (FALLTHRU,DFS_BACK)
;;              6 [25.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 91 108 110 114 115 116 117

;; basic block 6, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [25.0%]  (LOOP_EXIT)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110
;; lr  def 	 17 [flags] 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  gen 	 17 [flags] 91
;; live  kill	 17 [flags]
(code_label 71 65 72 6 3 "" [1 uses])
(note 72 71 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 74 72 75 6 (var_location:SI k (debug_expr:SI D#2)) -1
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg:DI 91 [ ivtmp.78 ])
                (plus:DI (reg:DI 91 [ ivtmp.78 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 76 75 77 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ ivtmp.78 ])
            (reg/f:DI 110 [ D.25971 ]))) tiles.cpp:138 8 {*cmpdi_1}
     (expr_list:REG_EQUAL (compare:CCZ (reg:DI 91 [ ivtmp.78 ])
            (const:DI (plus:DI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)
                    (const_int 8192 [0x2000]))))
        (nil)))
(jump_insn 77 76 82 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) tiles.cpp:138 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 101 [0x65])
            (nil)))
 -> 82)
;;  succ:       4 [99.0%]  (FALLTHRU,DFS_BACK)
;;              7 [1.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 110 114 115 116 117

;; basic block 7, loop depth 0, count 0, freq 20, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [1.0%]  (LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	
;; live  kill	
(code_label 82 77 83 7 5 "" [1 uses])
(note 83 82 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 7 (set (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b82f1f7d688 first_call>) [0 first_call+0 S4 A128])
        (const_int 0 [0])) tiles.cpp:143 89 {*movsi_internal}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117

;; basic block 8, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 85 84 86 8 2 "" [1 uses])
(note 86 85 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 88 86 89 8 (var_location:DI sum (const_int 0 [0])) -1
     (nil))
(debug_insn 89 88 90 8 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 90 89 91 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 115 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:146 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 91 90 92 8 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) tiles.cpp:146 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 164)
;;  succ:       9 [91.0%]  (FALLTHRU)
;;              14 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117

;; basic block 9, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [91.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104 105 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117
;; live  gen 	 104 105 133
;; live  kill	
(note 92 91 35 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 35 92 36 9 (set (reg/v:DI 104 [ sum ])
        (const_int 0 [0])) tiles.cpp:134 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 168 9 (set (reg/v:SI 105 [ i ])
        (const_int 0 [0])) tiles.cpp:146 89 {*movsi_internal}
     (nil))
(insn 168 36 119 9 (set (reg/f:DI 133)
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133

;; basic block 10, loop depth 0, count 0, freq 409, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [91.0%]  (FALLTHRU,DFS_BACK)
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 117 133
;; lr  def 	 17 [flags] 96 99 104 105 121 122 123 124 125 126 128
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; live  gen 	 17 [flags] 96 99 104 105 121 122 123 124 125 126 128
;; live  kill	 17 [flags]
(code_label 119 168 93 10 9 "" [0 uses])
(note 93 119 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 10 (var_location:DI sum (reg/v:DI 104 [ sum ])) -1
     (nil))
(debug_insn 95 94 96 10 (var_location:SI i (reg/v:SI 105 [ i ])) -1
     (nil))
(insn 96 95 97 10 (set (reg:DI 121 [ D.25967 ])
        (sign_extend:DI (reg/v:SI 105 [ i ]))) tiles.cpp:148 149 {*extendsidi2_rex64}
     (nil))
(insn 97 96 98 10 (set (reg:SI 122 [ *_29 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 121 [ D.25967 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 114 [ ints ])) [0 *_29+0 S4 A32])) tiles.cpp:148 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 121 [ D.25967 ])
        (nil)))
(insn 98 97 99 10 (set (reg/v:DI 96 [ index ])
        (sign_extend:DI (reg:SI 122 [ *_29 ]))) tiles.cpp:148 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 122 [ *_29 ])
        (nil)))
(debug_insn 99 98 100 10 (var_location:DI index (reg/v:DI 96 [ index ])) tiles.cpp:148 -1
     (nil))
(insn 100 99 101 10 (parallel [
            (set (reg:SI 123 [ D.25966 ])
                (mult:SI (reg/v:SI 117 [ increment ])
                    (reg/v:SI 105 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:149 344 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 100 102 10 (set (reg:DI 124 [ D.25969 ])
        (sign_extend:DI (reg:SI 123 [ D.25966 ]))) tiles.cpp:149 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123 [ D.25966 ])
        (nil)))
(insn 102 101 105 10 (parallel [
            (set (reg/v:DI 99 [ index ])
                (plus:DI (reg:DI 124 [ D.25969 ])
                    (reg/v:DI 96 [ index ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:149 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.25969 ])
        (expr_list:REG_DEAD (reg/v:DI 96 [ index ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(debug_insn 105 102 106 10 (var_location:DI index (and:DI (reg/v:DI 99 [ index ])
        (const_int 2047 [0x7ff]))) -1
     (nil))
(insn 106 105 107 10 (parallel [
            (set (reg:DI 125 [ index ])
                (and:DI (reg/v:DI 99 [ index ])
                    (const_int 2047 [0x7ff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:151 392 {*anddi_1}
     (expr_list:REG_DEAD (reg/v:DI 99 [ index ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 107 106 109 10 (set (reg:DI 126 [ index ])
        (sign_extend:DI (subreg:SI (reg:DI 125 [ index ]) 0))) tiles.cpp:155 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 125 [ index ])
        (nil)))
(insn 109 107 110 10 (set (reg:DI 128 [ D.25969 ])
        (zero_extend:DI (mem/j:SI (plus:DI (mult:DI (reg:DI 126 [ index ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 133)) [0 rndseq S4 A32]))) tiles.cpp:155 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 126 [ index ])
        (expr_list:REG_EQUAL (zero_extend:DI (mem/j:SI (plus:DI (mult:DI (reg:DI 126 [ index ])
                            (const_int 4 [0x4]))
                        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b82f1f7d5f0 rndseq>)) [0 rndseq S4 A32]))
            (nil))))
(insn 110 109 111 10 (parallel [
            (set (reg/v:DI 104 [ sum ])
                (plus:DI (reg/v:DI 104 [ sum ])
                    (reg:DI 128 [ D.25969 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:155 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 128 [ D.25969 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 111 110 112 10 (var_location:DI sum (reg/v:DI 104 [ sum ])) tiles.cpp:155 -1
     (nil))
(insn 112 111 114 10 (parallel [
            (set (reg/v:SI 105 [ i ])
                (plus:SI (reg/v:SI 105 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:146 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 114 112 115 10 (var_location:DI sum (reg/v:DI 104 [ sum ])) -1
     (nil))
(debug_insn 115 114 116 10 (var_location:SI i (reg/v:SI 105 [ i ])) -1
     (nil))
(insn 116 115 117 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 115 [ num_ints ])
            (reg/v:SI 105 [ i ]))) tiles.cpp:146 7 {*cmpsi_1}
     (nil))
(jump_insn 117 116 122 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) tiles.cpp:146 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 122)
;;  succ:       10 [91.0%]  (FALLTHRU,DFS_BACK)
;;              11 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 114 115 116 117 133

;; basic block 11, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (LOOP_EXIT)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 116
;; lr  def 	 17 [flags] 107 109 130 131
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 116
;; live  gen 	 17 [flags] 107 109 130 131
;; live  kill	 17 [flags]
(code_label 122 117 123 11 8 "" [1 uses])
(note 123 122 124 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 11 (parallel [
            (set (reg:DI 131)
                (div:DI (reg/v:DI 104 [ sum ])
                    (reg/v:DI 116 [ m ])))
            (set (reg:DI 130 [ D.25969 ])
                (mod:DI (reg/v:DI 104 [ sum ])
                    (reg/v:DI 116 [ m ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:157 367 {*divmoddi4}
     (expr_list:REG_DEAD (reg/v:DI 104 [ sum ])
        (expr_list:REG_UNUSED (reg:DI 131)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 125 124 126 11 (set (reg:SI 109 [ D.25966 ])
        (subreg:SI (reg:DI 130 [ D.25969 ]) 0)) tiles.cpp:157 89 {*movsi_internal}
     (nil))
(insn 126 125 128 11 (set (reg/v:DI 107 [ index ])
        (sign_extend:DI (subreg:SI (reg:DI 130 [ D.25969 ]) 0))) tiles.cpp:157 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 130 [ D.25969 ])
        (nil)))
(debug_insn 128 126 129 11 (var_location:DI index (reg/v:DI 107 [ index ])) -1
     (nil))
(insn 129 128 130 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 107 [ index ])
            (const_int 0 [0]))) tiles.cpp:158 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 130 129 171 11 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 171)
            (pc))) tiles.cpp:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil)))
 -> 171)
;;  succ:       12 [100.0%] 
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 116

;; basic block 12, loop depth 0, count 0, freq 409, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%] 
;;              12 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u100(6){ }u101(7){ }u102(16){ }u103(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; lr  def 	 17 [flags] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; live  gen 	 17 [flags] 107
;; live  kill	 17 [flags]
(code_label 171 130 170 12 14 "" [1 uses])
(note 170 171 137 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 137 170 138 12 (var_location:DI index (reg/v:DI 107 [ index ])) -1
     (nil))
(insn 138 137 140 12 (parallel [
            (set (reg/v:DI 107 [ index ])
                (plus:DI (reg/v:DI 107 [ index ])
                    (reg/v:DI 116 [ m ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:158 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 140 138 141 12 (var_location:DI index (reg/v:DI 107 [ index ])) -1
     (nil))
(insn 141 140 142 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 107 [ index ])
            (const_int 0 [0]))) tiles.cpp:158 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 142 141 147 12 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) tiles.cpp:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 147)
;;  succ:       12 [91.0%]  (FALLTHRU,DFS_BACK)
;;              13 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 116

;; basic block 13, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [9.0%]  (LOOP_EXIT)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u110(6){ }u111(7){ }u112(16){ }u113(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 109
;; live  kill	
(code_label 147 142 148 13 11 "" [1 uses])
(note 148 147 149 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 164 13 (set (reg:SI 109 [ D.25966 ])
        (subreg:SI (reg/v:DI 107 [ index ]) 0)) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:DI 107 [ index ])
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109

;; basic block 14, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 109
;; live  kill	
(code_label 164 149 163 14 13 "" [1 uses])
(note 163 164 37 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 37 163 150 14 (set (reg:SI 109 [ D.25966 ])
        (const_int 0 [0])) tiles.cpp:146 89 {*movsi_internal}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109

;; basic block 15, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 14, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              11 (FALLTHRU)
;;              13 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u119(6){ }u120(7){ }u121(16){ }u122(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 150 37 151 15 7 "" [0 uses])
(note 151 150 156 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 156 151 159 15 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ D.25966 ])) tiles.cpp:163 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109 [ D.25966 ])
        (nil)))
(insn 159 156 0 15 (use (reg/i:SI 0 ax)) tiles.cpp:163 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, int, float*, int, int*, int) (_Z5tilesPiiiPfiS_i, funcdef_no=1061, decl_uid=23639, cgraph_uid=305)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 27 count 23 (  1.1)


void tiles(int*, int, int, float*, int, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={6d,2u} r4={8d,4u} r5={8d,4u} r6={1d,19u} r7={1d,23u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,19u,1e} r17={42d,8u} r18={4d} r19={4d} r20={1d,26u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r84={1d,2u} r85={2d,6u} r88={1d,1u} r93={1d,1u} r94={2d,2u} r99={1d,1u} r100={1d,5u} r101={1d,4u} r104={2d,1u} r114={2d,2u} r115={2d,4u} r118={1d,1u} r119={2d,5u} r120={2d,1u} r121={1d,1u} r125={1d,1u} r131={1d,1u} r132={1d,8u} r133={1d,1u} r134={1d,1u} r135={1d,8u} r136={1d,1u} r137={1d,3u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r169={1d,2u} r171={1d,1u} r172={1d} r173={1d,1u} r174={1d,1u} r175={1d,2u} r177={1d,1u} r178={1d} r179={1d,1u} r182={1d,1u} r183={1d,1u} r185={2d,2u} r186={2d,3u} r187={2d,3u} 
;;    total ref usage 522{308d,211u,3e} in 109{105 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
;;  reg->defs[] map:	0[0,4] 1[5,12] 2[13,18] 4[19,26] 5[27,34] 6[35,35] 7[36,36] 8[37,40] 9[41,44] 10[45,48] 11[49,52] 12[53,56] 13[57,60] 14[61,64] 15[65,68] 16[69,69] 17[70,111] 18[112,115] 19[116,119] 20[120,120] 21[121,126] 22[127,131] 23[132,136] 24[137,141] 25[142,146] 26[147,151] 27[152,156] 28[157,161] 29[162,165] 30[166,169] 31[170,173] 32[174,177] 33[178,181] 34[182,185] 35[186,189] 36[190,193] 37[194,198] 38[199,203] 39[204,207] 40[208,211] 45[212,215] 46[216,219] 47[220,223] 48[224,227] 49[228,231] 50[232,235] 51[236,239] 52[240,243] 84[244,244] 85[245,246] 88[247,247] 93[248,248] 94[249,250] 99[251,251] 100[252,252] 101[253,253] 104[254,255] 114[256,257] 115[258,259] 118[260,260] 119[261,262] 120[263,264] 121[265,265] 125[266,266] 131[267,267] 132[268,268] 133[269,269] 134[270,270] 135[271,271] 136[272,272] 137[273,273] 138[274,274] 140[275,275] 141[276,276] 142[277,277] 143[278,278] 144[279,279] 145[280,280] 151[281,281] 152[282,282] 153[283,283] 154[284,284] 156[285,285] 157[286,286] 158[287,287] 164[288,288] 165[289,289] 166[290,290] 169[291,291] 171[292,292] 172[293,293] 173[294,294] 174[295,295] 175[296,296] 177[297,297] 178[298,298] 179[299,299] 182[300,300] 183[301,301] 185[302,303] 186[304,305] 187[306,307] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d12(1){ }d18(2){ }d26(4){ }d34(5){ }d35(6){ }d36(7){ }d69(16){ }d120(20){ }d126(21){ }d131(22){ }d136(23){ }d141(24){ }d146(25){ }d151(26){ }d156(27){ }d161(28){ }d198(37){ }d203(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[4],1[12],2[18],4[26],5[34],6[35],7[36],16[69],20[120],21[126],22[131],23[136],24[141],25[146],26[151],27[156],28[161],37[198],38[203]
;; rd  kill	(90) 0[0,1,2,3,4],1[5,6,7,8,9,10,11,12],2[13,14,15,16,17,18],4[19,20,21,22,23,24,25,26],5[27,28,29,30,31,32,33,34],6[35],7[36],16[69],20[120],21[121,122,123,124,125,126],22[127,128,129,130,131],23[132,133,134,135,136],24[137,138,139,140,141],25[142,143,144,145,146],26[147,148,149,150,151],27[152,153,154,155,156],28[157,158,159,160,161],37[194,195,196,197,198],38[199,200,201,202,203]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[12],2[18],4[26],5[34],6[35],7[36],16[69],20[120],37[198],38[203]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d35(bb 0 insn -1) }u1(7){ d36(bb 0 insn -1) }u2(16){ d69(bb 0 insn -1) }u3(20){ d120(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 84 131 132 133 134 135 136 137 138
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 84 131 132 133 134 135 136 137 138
;; live  kill	 17 [flags]
;; rd  in  	(10) 1[12],2[18],4[26],5[34],6[35],7[36],16[69],20[120],37[198],38[203]
;; rd  gen 	(10) 17[109],84[244],131[267],132[268],133[269],134[270],135[271],136[272],137[273],138[274]
;; rd  kill	(9) 84[244],131[267],132[268],133[269],134[270],135[271],136[272],137[273],138[274]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137
;; rd  out 	(12) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],134[270],135[271],136[272],137[273]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 2 4 )->[3]->( 6 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ d35(bb 0 insn -1) }u19(7){ d36(bb 0 insn -1) }u20(16){ d69(bb 0 insn -1) }u21(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(12) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],134[270],135[271],136[272],137[273]
;; rd  gen 	(1) 17[108]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; rd  out 	(10) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],134[270],135[271]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 2 )->[4]->( 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ d35(bb 0 insn -1) }u25(7){ d36(bb 0 insn -1) }u26(16){ d69(bb 0 insn -1) }u27(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 136 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 140 141 142 143 144 145 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 140 141 142 143 144 145 186
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],134[270],135[271],136[272],137[273]
;; rd  gen 	(8) 0[3],140[275],141[276],142[277],143[278],144[279],145[280],186[305]
;; rd  kill	(13) 0[0,1,2,3,4],140[275],141[276],142[277],143[278],144[279],145[280],186[304,305]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; rd  out 	(10) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],134[270],135[271]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 8 3 )->[5]->( 9 19 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(6){ d35(bb 0 insn -1) }u44(7){ d36(bb 0 insn -1) }u45(16){ d69(bb 0 insn -1) }u46(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(10) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],134[270],135[271]
;; rd  gen 	(1) 17[103]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; rd  out 	(9) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],135[271]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 3 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ d35(bb 0 insn -1) }u50(7){ d36(bb 0 insn -1) }u51(16){ d69(bb 0 insn -1) }u52(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 135
;; lr  def 	 17 [flags] 99 115 125 151 152 153 185
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  gen 	 99 115 125 151 152 153 185
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],134[270],135[271]
;; rd  gen 	(7) 99[251],115[259],125[266],151[281],152[282],153[283],185[303]
;; rd  kill	(9) 99[251],115[258,259],125[266],151[281],152[282],153[283],185[302,303]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; rd  out 	(14) 6[35],7[36],16[69],20[120],84[244],99[251],115[259],125[266],131[267],132[268],133[269],134[270],135[271],185[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 7 6 )->[7]->( 7 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(6){ d35(bb 0 insn -1) }u60(7){ d36(bb 0 insn -1) }u61(16){ d69(bb 0 insn -1) }u62(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 115 125 134 185
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 88 115 154 156
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; live  gen 	 17 [flags] 21 [xmm0] 88 115 154 156
;; live  kill	 17 [flags]
;; rd  in  	(20) 6[35],7[36],16[69],17[97],20[120],21[123],84[244],88[247],99[251],115[258,259],125[266],131[267],132[268],133[269],134[270],135[271],154[284],156[285],185[303]
;; rd  gen 	(6) 17[97],21[123],88[247],115[258],154[284],156[285]
;; rd  kill	(11) 21[121,122,123,124,125,126],88[247],115[258,259],154[284],156[285]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; rd  out 	(14) 6[35],7[36],16[69],20[120],84[244],99[251],115[258],125[266],131[267],132[268],133[269],134[270],135[271],185[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 7 )->[8]->( 5 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(6){ d35(bb 0 insn -1) }u79(7){ d36(bb 0 insn -1) }u80(16){ d69(bb 0 insn -1) }u81(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 157 158 187
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 157 158 187
;; live  kill	 17 [flags]
;; rd  in  	(14) 6[35],7[36],16[69],20[120],84[244],99[251],115[258],125[266],131[267],132[268],133[269],134[270],135[271],185[303]
;; rd  gen 	(4) 0[1],157[286],158[287],187[307]
;; rd  kill	(9) 0[0,1,2,3,4],157[286],158[287],187[306,307]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; rd  out 	(9) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],135[271]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 5 )->[9]->( 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(6){ d35(bb 0 insn -1) }u93(7){ d36(bb 0 insn -1) }u94(16){ d69(bb 0 insn -1) }u95(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 133 135
;; lr  def 	 17 [flags] 93 114 119 121 164 165 166 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  gen 	 93 114 119 121 164 165 166 186
;; live  kill	 17 [flags]
;; rd  in  	(9) 6[35],7[36],16[69],20[120],84[244],131[267],132[268],133[269],135[271]
;; rd  gen 	(8) 93[248],114[257],119[262],121[265],164[288],165[289],166[290],186[304]
;; rd  kill	(11) 93[248],114[256,257],119[261,262],121[265],164[288],165[289],166[290],186[304,305]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; rd  out 	(12) 6[35],7[36],16[69],20[120],84[244],93[248],114[257],119[262],121[265],132[268],135[271],186[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 13 18 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u103(6){ d35(bb 0 insn -1) }u104(7){ d36(bb 0 insn -1) }u105(16){ d69(bb 0 insn -1) }u106(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 185 187
;; lr  def 	 17 [flags] 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; live  gen 	 17 [flags] 100 101
;; live  kill	
;; rd  in  	(22) 6[35],7[36],16[69],17[78],20[120],84[244],85[245,246],93[248],94[249,250],114[256,257],119[261,262],121[265],132[268],135[271],182[300],185[302],186[304],187[306]
;; rd  gen 	(3) 17[91],100[252],101[253]
;; rd  kill	(2) 100[252],101[253]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; rd  out 	(22) 6[35],7[36],16[69],20[120],84[244],85[245,246],93[248],94[249,250],100[252],101[253],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u114(6){ d35(bb 0 insn -1) }u115(7){ d36(bb 0 insn -1) }u116(16){ d69(bb 0 insn -1) }u117(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 132
;; lr  def 	 17 [flags] 104 169 171 172
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; live  gen 	 104 169 171 172
;; live  kill	 17 [flags]
;; rd  in  	(22) 6[35],7[36],16[69],20[120],84[244],85[245,246],93[248],94[249,250],100[252],101[253],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;; rd  gen 	(4) 104[255],169[291],171[292],172[293]
;; rd  kill	(5) 104[254,255],169[291],171[292],172[293]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; rd  out 	(22) 6[35],7[36],16[69],20[120],84[244],85[245,246],93[248],94[249,250],101[253],104[255],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u126(6){ d35(bb 0 insn -1) }u127(7){ d36(bb 0 insn -1) }u128(16){ d69(bb 0 insn -1) }u129(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 132
;; lr  def 	 17 [flags] 104 173 174 175 177 178 179
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; live  gen 	 104 173 174 175 177 178 179
;; live  kill	 17 [flags]
;; rd  in  	(22) 6[35],7[36],16[69],20[120],84[244],85[245,246],93[248],94[249,250],100[252],101[253],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;; rd  gen 	(7) 104[254],173[294],174[295],175[296],177[297],178[298],179[299]
;; rd  kill	(8) 104[254,255],173[294],174[295],175[296],177[297],178[298],179[299]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; rd  out 	(22) 6[35],7[36],16[69],20[120],84[244],85[245,246],93[248],94[249,250],101[253],104[254],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 11 12 )->[13]->( 10 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u142(6){ d35(bb 0 insn -1) }u143(7){ d36(bb 0 insn -1) }u144(16){ d69(bb 0 insn -1) }u145(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 93 94 101 104 186 187
;; lr  def 	 17 [flags] 85 94 182
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; live  gen 	 17 [flags] 85 94 182
;; live  kill	 17 [flags]
;; rd  in  	(23) 6[35],7[36],16[69],20[120],84[244],85[245,246],93[248],94[249,250],101[253],104[254,255],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;; rd  gen 	(4) 17[78],85[246],94[250],182[300]
;; rd  kill	(5) 85[245,246],94[249,250],182[300]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; rd  out 	(18) 6[35],7[36],16[69],20[120],84[244],85[246],93[248],94[250],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u159(6){ d35(bb 0 insn -1) }u160(7){ d36(bb 0 insn -1) }u161(16){ d69(bb 0 insn -1) }u162(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 120
;; live  kill	
;; rd  in  	(18) 6[35],7[36],16[69],20[120],84[244],85[246],93[248],94[250],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;; rd  gen 	(1) 120[264]
;; rd  kill	(2) 120[263,264]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; rd  out 	(15) 6[35],7[36],16[69],20[120],84[244],93[248],114[256,257],119[261,262],120[264],121[265],132[268],135[271],186[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 17 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u164(6){ d35(bb 0 insn -1) }u165(7){ d36(bb 0 insn -1) }u166(16){ d69(bb 0 insn -1) }u167(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 120
;; live  kill	
;; rd  in  	(14) 6[35],7[36],16[69],20[120],84[244],93[248],114[256,257],119[261,262],121[265],132[268],135[271],186[304]
;; rd  gen 	(1) 120[263]
;; rd  kill	(2) 120[263,264]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; rd  out 	(15) 6[35],7[36],16[69],20[120],84[244],93[248],114[256,257],119[261,262],120[263],121[265],132[268],135[271],186[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 15 14 )->[16]->( 17 19 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u168(6){ d35(bb 0 insn -1) }u169(7){ d36(bb 0 insn -1) }u170(16){ d69(bb 0 insn -1) }u171(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 114 119 120 121 132 186
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 118 119 183
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 114 118 119 183
;; live  kill	 17 [flags]
;; rd  in  	(16) 6[35],7[36],16[69],20[120],84[244],93[248],114[256,257],119[261,262],120[263,264],121[265],132[268],135[271],186[304]
;; rd  gen 	(6) 0[0],17[74],114[256],118[260],119[261],183[301]
;; rd  kill	(11) 0[0,1,2,3,4],114[256,257],118[260],119[261,262],183[301]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; rd  out 	(12) 6[35],7[36],16[69],20[120],84[244],93[248],114[256],119[261],121[265],132[268],135[271],186[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 16 9 )->[17]->( 18 15 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u194(6){ d35(bb 0 insn -1) }u195(7){ d36(bb 0 insn -1) }u196(16){ d69(bb 0 insn -1) }u197(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(18) 0[0],6[35],7[36],16[69],17[74],20[120],84[244],93[248],114[256,257],118[260],119[261,262],121[265],132[268],135[271],183[301],186[304]
;; rd  gen 	(1) 17[73]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; rd  out 	(14) 6[35],7[36],16[69],20[120],84[244],93[248],114[256,257],119[261,262],121[265],132[268],135[271],186[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 17 )->[18]->( 10 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u201(6){ d35(bb 0 insn -1) }u202(7){ d36(bb 0 insn -1) }u203(16){ d69(bb 0 insn -1) }u204(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 85 94 185 187
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 85 94 185 187
;; live  kill	
;; rd  in  	(14) 6[35],7[36],16[69],20[120],84[244],93[248],114[256,257],119[261,262],121[265],132[268],135[271],186[304]
;; rd  gen 	(4) 85[245],94[249],185[302],187[306]
;; rd  kill	(8) 85[245,246],94[249,250],185[302,303],187[306,307]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; rd  out 	(18) 6[35],7[36],16[69],20[120],84[244],85[245],93[248],94[249],114[256,257],119[261,262],121[265],132[268],135[271],185[302],186[304],187[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 16 5 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u207(6){ d35(bb 0 insn -1) }u208(7){ d36(bb 0 insn -1) }u209(16){ d69(bb 0 insn -1) }u210(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(14) 6[35],7[36],16[69],20[120],84[244],93[248],114[256],119[261],121[265],131[267],132[268],133[269],135[271],186[304]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[35],7[36],16[69],20[120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u211(6){ d35(bb 0 insn -1) }u212(7){ d36(bb 0 insn -1) }u213(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[35],7[36],16[69],20[120]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 48 to worklist
  Adding insn 52 to worklist
  Adding insn 71 to worklist
  Adding insn 81 to worklist
  Adding insn 105 to worklist
  Adding insn 100 to worklist
  Adding insn 120 to worklist
  Adding insn 143 to worklist
  Adding insn 171 to worklist
  Adding insn 164 to worklist
  Adding insn 161 to worklist
  Adding insn 188 to worklist
  Adding insn 182 to worklist
  Adding insn 180 to worklist
  Adding insn 174 to worklist
  Adding insn 196 to worklist
Finished finding needed instructions:
Processing use of (reg 17 flags) in insn 196:
  Adding insn 195 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 195:
  Adding insn 30 to worklist
Processing use of (reg 37 r8) in insn 30:
Processing use of (reg 20 frame) in insn 174:
Processing use of (reg 119 [ j ]) in insn 174:
  Adding insn 39 to worklist
  Adding insn 183 to worklist
Processing use of (reg 183 [ num_floats ]) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 120 [ num_floats ]) in insn 173:
  Adding insn 37 to worklist
  Adding insn 38 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 37:
Processing use of (reg 119 [ j ]) in insn 183:
Processing use of (reg 7 sp) in insn 180:
Processing use of (reg 1 dx) in insn 180:
  Adding insn 177 to worklist
Processing use of (reg 2 cx) in insn 180:
  Adding insn 176 to worklist
Processing use of (reg 4 si) in insn 180:
  Adding insn 178 to worklist
Processing use of (reg 5 di) in insn 180:
  Adding insn 179 to worklist
Processing use of (reg 186) in insn 179:
  Adding insn 217 to worklist
Processing use of (reg 20 frame) in insn 217:
Processing use of (reg 84 [ num_coordinates ]) in insn 178:
  Adding insn 43 to worklist
Processing use of (reg 138 [ D.26001 ]) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 42:
Processing use of (reg 137 [ num_ints ]) in insn 42:
  Adding insn 32 to worklist
Processing use of (reg 16 argp) in insn 32:
Processing use of (reg 121 [ D.26006 ]) in insn 177:
  Adding insn 127 to worklist
Processing use of (reg 133 [ memory_size ]) in insn 127:
  Adding insn 28 to worklist
Processing use of (reg 1 dx) in insn 28:
Processing use of (reg 114 [ ivtmp.98 ]) in insn 182:
  Adding insn 128 to worklist
  Adding insn 186 to worklist
Processing use of (reg 118 [ D.26001 ]) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 0 ax) in insn 181:
Processing use of (reg 114 [ ivtmp.98 ]) in insn 186:
Processing use of (reg 131 [ the_tiles ]) in insn 128:
  Adding insn 26 to worklist
Processing use of (reg 5 di) in insn 26:
Processing use of (reg 17 flags) in insn 188:
  Adding insn 187 to worklist
Processing use of (reg 119 [ j ]) in insn 187:
Processing use of (reg 132 [ num_tilings ]) in insn 187:
  Adding insn 27 to worklist
Processing use of (reg 4 si) in insn 27:
Processing use of (reg 85 [ ivtmp.87 ]) in insn 161:
  Adding insn 167 to worklist
  Adding insn 36 to worklist
Processing use of (reg 104 [ D.26001 ]) in insn 161:
  Adding insn 147 to worklist
  Adding insn 157 to worklist
Processing use of (reg 186) in insn 161:
Processing use of (reg 132 [ num_tilings ]) in insn 157:
Processing use of (reg 179 [ D.26001 ]) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 173 [ D.26001 ]) in insn 156:
  Adding insn 152 to worklist
Processing use of (reg 177 [ D.26001 ]) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 132 [ num_tilings ]) in insn 155:
Processing use of (reg 132 [ num_tilings ]) in insn 155:
Processing use of (reg 175 [ D.26001 ]) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 175 [ D.26001 ]) in insn 155:
Processing use of (reg 174 [ D.26001 ]) in insn 154:
  Adding insn 153 to worklist
Processing use of (reg 100 [ D.26001 ]) in insn 153:
  Adding insn 139 to worklist
Processing use of (reg 101 [ D.26001 ]) in insn 153:
  Adding insn 141 to worklist
Processing use of (reg 85 [ ivtmp.87 ]) in insn 141:
Processing use of (reg 187) in insn 141:
  Adding insn 219 to worklist
Processing use of (reg 20 frame) in insn 219:
Processing use of (reg 85 [ ivtmp.87 ]) in insn 139:
Processing use of (reg 185) in insn 139:
  Adding insn 218 to worklist
Processing use of (reg 20 frame) in insn 218:
Processing use of (reg 100 [ D.26001 ]) in insn 152:
Processing use of (reg 100 [ D.26001 ]) in insn 147:
Processing use of (reg 171 [ D.26001 ]) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 132 [ num_tilings ]) in insn 146:
Processing use of (reg 132 [ num_tilings ]) in insn 146:
Processing use of (reg 169 [ D.26001 ]) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 169 [ D.26001 ]) in insn 146:
Processing use of (reg 100 [ D.26001 ]) in insn 145:
Processing use of (reg 101 [ D.26001 ]) in insn 145:
Processing use of (reg 85 [ ivtmp.87 ]) in insn 167:
Processing use of (reg 85 [ ivtmp.87 ]) in insn 164:
Processing use of (reg 182) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 187) in insn 164:
Processing use of (reg 94 [ ivtmp.93 ]) in insn 163:
  Adding insn 168 to worklist
  Adding insn 35 to worklist
Processing use of (reg 101 [ D.26001 ]) in insn 163:
Processing use of (reg 94 [ ivtmp.93 ]) in insn 168:
Processing use of (reg 17 flags) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 85 [ ivtmp.87 ]) in insn 170:
Processing use of (reg 93 [ D.26004 ]) in insn 170:
  Adding insn 132 to worklist
Processing use of (reg 166 [ D.26004 ]) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 165 [ D.26004 ]) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 164 [ D.26003 ]) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 129:
Processing use of (reg 17 flags) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 100 [ D.26001 ]) in insn 142:
Processing use of (reg 101 [ D.26001 ]) in insn 142:
Processing use of (reg 7 sp) in insn 120:
Processing use of (reg 1 dx) in insn 120:
  Adding insn 117 to worklist
Processing use of (reg 4 si) in insn 120:
  Adding insn 118 to worklist
Processing use of (reg 5 di) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 187) in insn 119:
  Adding insn 114 to worklist
Processing use of (reg 20 frame) in insn 114:
Processing use of (reg 158 [ D.26004 ]) in insn 117:
  Adding insn 113 to worklist
Processing use of (reg 157 [ D.26004 ]) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 112:
Processing use of (reg 115 [ ivtmp.104 ]) in insn 100:
  Adding insn 34 to worklist
  Adding insn 103 to worklist
Processing use of (reg 156) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 185) in insn 100:
  Adding insn 216 to worklist
Processing use of (reg 20 frame) in insn 216:
Processing use of (reg 88 [ D.26002 ]) in insn 99:
  Adding insn 97 to worklist
Processing use of (reg 21 xmm0) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 7 sp) in insn 96:
Processing use of (reg 21 xmm0) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 154 [ D.26002 ]) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 115 [ ivtmp.104 ]) in insn 94:
Processing use of (reg 125 [ D.26002 ]) in insn 94:
  Adding insn 87 to worklist
Processing use of (reg 134 [ floats ]) in insn 94:
  Adding insn 29 to worklist
Processing use of (reg 2 cx) in insn 29:
Processing use of (reg 132 [ num_tilings ]) in insn 87:
Processing use of (reg 115 [ ivtmp.104 ]) in insn 103:
Processing use of (reg 17 flags) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 99 [ D.26004 ]) in insn 104:
  Adding insn 91 to worklist
Processing use of (reg 115 [ ivtmp.104 ]) in insn 104:
Processing use of (reg 153 [ D.26004 ]) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 152 [ D.26004 ]) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 151 [ D.26003 ]) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 88:
Processing use of (reg 17 flags) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 132 [ num_tilings ]) in insn 80:
Processing use of (reg 7 sp) in insn 71:
Processing use of (reg 1 dx) in insn 71:
  Adding insn 68 to worklist
Processing use of (reg 4 si) in insn 71:
  Adding insn 69 to worklist
Processing use of (reg 5 di) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 143 [ D.26007 ]) in insn 70:
  Adding insn 62 to worklist
Processing use of (reg 142 [ D.26008 ]) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 186) in insn 62:
  Adding insn 58 to worklist
Processing use of (reg 20 frame) in insn 58:
Processing use of (reg 141 [ D.26004 ]) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 140 [ D.26004 ]) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 59:
Processing use of (reg 136 [ ints ]) in insn 69:
  Adding insn 31 to worklist
Processing use of (reg 38 r9) in insn 31:
Processing use of (reg 145 [ D.26004 ]) in insn 68:
  Adding insn 64 to worklist
Processing use of (reg 144 [ D.26004 ]) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 137 [ num_ints ]) in insn 63:
Processing use of (reg 17 flags) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 135 [ num_floats ]) in insn 51:
Processing use of (reg 17 flags) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 137 [ num_ints ]) in insn 47:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, int, float*, int, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={6d,2u} r4={8d,4u} r5={8d,4u} r6={1d,19u} r7={1d,23u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,19u,1e} r17={42d,8u} r18={4d} r19={4d} r20={1d,26u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r84={1d,2u} r85={2d,6u} r88={1d,1u} r93={1d,1u} r94={2d,2u} r99={1d,1u} r100={1d,5u} r101={1d,4u} r104={2d,1u} r114={2d,2u} r115={2d,4u} r118={1d,1u} r119={2d,5u} r120={2d,1u} r121={1d,1u} r125={1d,1u} r131={1d,1u} r132={1d,8u} r133={1d,1u} r134={1d,1u} r135={1d,8u} r136={1d,1u} r137={1d,3u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r169={1d,2u} r171={1d,1u} r172={1d} r173={1d,1u} r174={1d,1u} r175={1d,2u} r177={1d,1u} r178={1d} r179={1d,1u} r182={1d,1u} r183={1d,1u} r185={2d,2u} r186={2d,3u} r187={2d,3u} 
;;    total ref usage 522{308d,211u,3e} in 109{105 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 84 131 132 133 134 135 136 137 138
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 84 131 132 133 134 135 136 137 138
;; live  kill	 17 [flags]
(note 40 0 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 26 40 27 2 (set (reg/v/f:DI 131 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 27 26 28 2 (set (reg/v:SI 132 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 28 27 29 2 (set (reg/v:SI 133 [ memory_size ])
        (reg:SI 1 dx [ memory_size ])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory_size ])
        (nil)))
(insn 29 28 30 2 (set (reg/v/f:DI 134 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 30 29 31 2 (set (reg/v:SI 135 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 31 30 32 2 (set (reg/v/f:DI 136 [ ints ])
        (reg:DI 38 r9 [ ints ])) tiles.cpp:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ ints ])
        (nil)))
(insn 32 31 33 2 (set (reg/v:SI 137 [ num_ints ])
        (mem/c:SI (reg/f:DI 16 argp) [0 num_ints+0 S4 A64])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 num_ints+0 S4 A64])
        (nil)))
(note 33 32 42 2 NOTE_INSN_FUNCTION_BEG)
(insn 42 33 43 2 (parallel [
            (set (reg:SI 138 [ D.26001 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (reg/v:SI 137 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:42 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 43 42 44 2 (parallel [
            (set (reg/v:SI 84 [ num_coordinates ])
                (plus:SI (reg:SI 138 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:42 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 138 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 44 43 46 2 (var_location:SI num_coordinates (reg/v:SI 84 [ num_coordinates ])) tiles.cpp:42 -1
     (nil))
(debug_insn 46 44 47 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 47 46 48 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 137 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:44 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 74 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) tiles.cpp:44 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
            (nil)))
 -> 56)
;;  succ:       4 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137

;; basic block 3, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 74 48 49 3 21 "" [0 uses])
(note 49 74 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 50 49 51 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 51 50 52 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 135 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:47 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 56 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) tiles.cpp:47 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 85)
;;  succ:       6 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135

;; basic block 4, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 136 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 140 141 142 143 144 145 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135 136 137
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 140 141 142 143 144 145 186
;; live  kill	 17 [flags]
(code_label 56 52 57 4 18 "" [1 uses])
(note 57 56 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 4 (parallel [
            (set (reg/f:DI 186)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 60 4 (set (reg:DI 140 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 135 [ num_floats ]))) tiles.cpp:44 149 {*extendsidi2_rex64}
     (nil))
(insn 60 59 61 4 (parallel [
            (set (reg:DI 141 [ D.26004 ])
                (ashift:DI (reg:DI 140 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 4 (parallel [
            (set (reg:DI 142 [ D.26008 ])
                (plus:DI (reg:DI 141 [ D.26004 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 4 (parallel [
            (set (reg:DI 143 [ D.26007 ])
                (plus:DI (reg/f:DI 186)
                    (reg:DI 142 [ D.26008 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 186)
        (expr_list:REG_DEAD (reg:DI 142 [ D.26008 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 63 62 64 4 (set (reg:DI 144 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 137 [ num_ints ]))) tiles.cpp:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 137 [ num_ints ])
        (nil)))
(insn 64 63 68 4 (parallel [
            (set (reg:DI 145 [ D.26004 ])
                (ashift:DI (reg:DI 144 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 144 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 64 69 4 (set (reg:DI 1 dx)
        (reg:DI 145 [ D.26004 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 145 [ D.26004 ])
        (nil)))
(insn 69 68 70 4 (set (reg:DI 4 si)
        (reg/v/f:DI 136 [ ints ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 136 [ ints ])
        (nil)))
(insn 70 69 71 4 (set (reg:DI 5 di)
        (reg:DI 143 [ D.26007 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 143 [ D.26007 ])
        (nil)))
(call_insn 71 70 77 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135

;; basic block 5, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              3 [4.8%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 77 71 78 5 20 "" [0 uses])
(note 78 77 79 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 79 78 80 5 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 80 79 81 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 132 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:53 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 81 80 85 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) tiles.cpp:53 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 125)
;;  succ:       9 [91.0%] 
;;              19 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135

;; basic block 6, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 135
;; lr  def 	 17 [flags] 99 115 125 151 152 153 185
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 134 135
;; live  gen 	 99 115 125 151 152 153 185
;; live  kill	 17 [flags]
(code_label 85 81 86 6 19 "" [1 uses])
(note 86 85 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 6 (set (reg:SF 125 [ D.26002 ])
        (float:SF (reg/v:SI 132 [ num_tilings ]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 88 87 89 6 (parallel [
            (set (reg:SI 151 [ D.26003 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 6 (set (reg:DI 152 [ D.26004 ])
        (zero_extend:DI (reg:SI 151 [ D.26003 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 151 [ D.26003 ])
        (nil)))
(insn 90 89 91 6 (parallel [
            (set (reg:DI 153 [ D.26004 ])
                (plus:DI (reg:DI 152 [ D.26004 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 34 6 (parallel [
            (set (reg:DI 99 [ D.26004 ])
                (ashift:DI (reg:DI 153 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 153 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 91 216 6 (set (reg:DI 115 [ ivtmp.104 ])
        (const_int 0 [0])) tiles.cpp:47 87 {*movdi_internal_rex64}
     (nil))
(insn 216 34 107 6 (set (reg/f:DI 185)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))) 267 {*leadi}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185

;; basic block 7, loop depth 0, count 0, freq 942, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 115 125 134 185
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 88 115 154 156
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; live  gen 	 17 [flags] 21 [xmm0] 88 115 154 156
;; live  kill	 17 [flags]
(code_label 107 216 92 7 25 "" [0 uses])
(note 92 107 93 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 93 92 94 7 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 94 93 95 7 (set (reg:SF 154 [ D.26002 ])
        (mult:SF (reg:SF 125 [ D.26002 ])
            (mem:SF (plus:DI (reg/v/f:DI 134 [ floats ])
                    (reg:DI 115 [ ivtmp.104 ])) [0 MEM[base: floats_26(D), index: ivtmp.104_58, offset: 0B]+0 S4 A32]))) tiles.cpp:48 777 {*fop_sf_comm_sse}
     (nil))
(insn 95 94 96 7 (set (reg:SF 21 xmm0)
        (reg:SF 154 [ D.26002 ])) tiles.cpp:48 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 154 [ D.26002 ])
        (nil)))
(call_insn/u 96 95 97 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:48 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 97 96 99 7 (set (reg:SF 88 [ D.26002 ])
        (reg:SF 21 xmm0)) tiles.cpp:48 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 99 97 100 7 (set (reg:SI 156)
        (fix:SI (reg:SF 88 [ D.26002 ]))) tiles.cpp:48 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 88 [ D.26002 ])
        (nil)))
(insn 100 99 102 7 (set (mem:SI (plus:DI (reg/f:DI 185)
                (reg:DI 115 [ ivtmp.104 ])) [0 MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B]+0 S4 A32])
        (reg:SI 156)) tiles.cpp:48 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(debug_insn 102 100 103 7 (var_location:SI i (debug_expr:SI D#6)) -1
     (nil))
(insn 103 102 104 7 (parallel [
            (set (reg:DI 115 [ ivtmp.104 ])
                (plus:DI (reg:DI 115 [ ivtmp.104 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 104 103 105 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ ivtmp.104 ])
            (reg:DI 99 [ D.26004 ]))) tiles.cpp:47 8 {*cmpdi_1}
     (nil))
(jump_insn 105 104 110 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) tiles.cpp:47 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 110)
;;  succ:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              8 [4.8%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 99 115 125 131 132 133 134 135 185

;; basic block 8, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.8%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 157 158 187
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 157 158 187
;; live  kill	 17 [flags]
(code_label 110 105 111 8 24 "" [1 uses])
(note 111 110 112 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 8 (set (reg:DI 157 [ D.26004 ])
        (sign_extend:DI (reg/v:SI 135 [ num_floats ]))) tiles.cpp:49 149 {*extendsidi2_rex64}
     (nil))
(insn 113 112 114 8 (parallel [
            (set (reg:DI 158 [ D.26004 ])
                (ashift:DI (reg:DI 157 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:49 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 117 8 (parallel [
            (set (reg/f:DI 187)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 117 114 118 8 (set (reg:DI 1 dx)
        (reg:DI 158 [ D.26004 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 158 [ D.26004 ])
        (nil)))
(insn 118 117 119 8 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 119 118 120 8 (set (reg:DI 5 di)
        (reg/f:DI 187)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00]))
            (nil))))
(call_insn 120 119 125 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135

;; basic block 9, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131 133 135
;; lr  def 	 17 [flags] 93 114 119 121 164 165 166 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 131 132 133 135
;; live  gen 	 93 114 119 121 164 165 166 186
;; live  kill	 17 [flags]
(code_label 125 120 126 9 22 "" [1 uses])
(note 126 125 127 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 9 (set (reg:DI 121 [ D.26006 ])
        (sign_extend:DI (reg/v:SI 133 [ memory_size ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 133 [ memory_size ])
        (nil)))
(insn 128 127 129 9 (set (reg:DI 114 [ ivtmp.98 ])
        (reg/v/f:DI 131 [ the_tiles ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 131 [ the_tiles ])
        (nil)))
(insn 129 128 130 9 (parallel [
            (set (reg:SI 164 [ D.26003 ])
                (plus:SI (reg/v:SI 135 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 9 (set (reg:DI 165 [ D.26004 ])
        (zero_extend:DI (reg:SI 164 [ D.26003 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 164 [ D.26003 ])
        (nil)))
(insn 131 130 132 9 (parallel [
            (set (reg:DI 166 [ D.26004 ])
                (plus:DI (reg:DI 165 [ D.26004 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 165 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 39 9 (parallel [
            (set (reg:DI 93 [ D.26004 ])
                (ashift:DI (reg:DI 166 [ D.26004 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 166 [ D.26004 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 132 217 9 (set (reg/v:SI 119 [ j ])
        (const_int 0 [0])) tiles.cpp:53 89 {*movsi_internal}
     (nil))
(insn 217 39 198 9 (set (reg/f:DI 186)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))) 267 {*leadi}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186

;; basic block 10, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [95.2%]  (DFS_BACK)
;;              18 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 185 187
;; lr  def 	 17 [flags] 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; live  gen 	 17 [flags] 100 101
;; live  kill	
(code_label 198 217 136 10 31 "" [1 uses])
(note 136 198 137 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 137 136 139 10 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 139 137 141 10 (set (reg:SI 100 [ D.26001 ])
        (mem:SI (plus:DI (reg/f:DI 185)
                (reg:DI 85 [ ivtmp.87 ])) [0 MEM[symbol: qstate, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 89 {*movsi_internal}
     (nil))
(insn 141 139 142 10 (set (reg:SI 101 [ D.26001 ])
        (mem:SI (plus:DI (reg/f:DI 187)
                (reg:DI 85 [ ivtmp.87 ])) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 89 {*movsi_internal}
     (nil))
(insn 142 141 143 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 100 [ D.26001 ])
            (reg:SI 101 [ D.26001 ]))) tiles.cpp:59 7 {*cmpsi_1}
     (nil))
(jump_insn 143 142 144 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) tiles.cpp:59 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 150)
;;  succ:       11 [50.0%]  (FALLTHRU)
;;              12 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187

;; basic block 11, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u114(6){ }u115(7){ }u116(16){ }u117(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 132
;; lr  def 	 17 [flags] 104 169 171 172
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; live  gen 	 104 169 171 172
;; live  kill	 17 [flags]
(note 144 143 145 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 11 (parallel [
            (set (reg:SI 169 [ D.26001 ])
                (minus:SI (reg:SI 100 [ D.26001 ])
                    (reg:SI 101 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 309 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 146 145 147 11 (parallel [
            (set (reg:SI 172)
                (div:SI (reg:SI 169 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (set (reg:SI 171 [ D.26001 ])
                (mod:SI (reg:SI 169 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 169 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:SI 172)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 147 146 150 11 (parallel [
            (set (reg:SI 104 [ D.26001 ])
                (minus:SI (reg:SI 100 [ D.26001 ])
                    (reg:SI 171 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 171 [ D.26001 ])
        (expr_list:REG_DEAD (reg:SI 100 [ D.26001 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187

;; basic block 12, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 132
;; lr  def 	 17 [flags] 104 173 174 175 177 178 179
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 100 101 114 119 121 132 135 185 186 187
;; live  gen 	 104 173 174 175 177 178 179
;; live  kill	 17 [flags]
(code_label 150 147 151 12 27 "" [1 uses])
(note 151 150 152 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 12 (parallel [
            (set (reg:SI 173 [ D.26001 ])
                (plus:SI (reg:SI 100 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 154 12 (parallel [
            (set (reg:SI 174 [ D.26001 ])
                (minus:SI (reg:SI 101 [ D.26001 ])
                    (reg:SI 100 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 155 12 (parallel [
            (set (reg:SI 175 [ D.26001 ])
                (plus:SI (reg:SI 174 [ D.26001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 174 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 12 (parallel [
            (set (reg:SI 178)
                (div:SI (reg:SI 175 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (set (reg:SI 177 [ D.26001 ])
                (mod:SI (reg:SI 175 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 175 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:SI 178)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 156 155 157 12 (parallel [
            (set (reg:SI 179 [ D.26001 ])
                (plus:SI (reg:SI 173 [ D.26001 ])
                    (reg:SI 177 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 177 [ D.26001 ])
        (expr_list:REG_DEAD (reg:SI 173 [ D.26001 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 157 156 158 12 (parallel [
            (set (reg:SI 104 [ D.26001 ])
                (minus:SI (reg:SI 179 [ D.26001 ])
                    (reg/v:SI 132 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 179 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187

;; basic block 13, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 93 94 101 104 186 187
;; lr  def 	 17 [flags] 85 94 182
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 101 104 114 119 121 132 135 185 186 187
;; live  gen 	 17 [flags] 85 94 182
;; live  kill	 17 [flags]
(code_label 158 157 159 13 28 "" [0 uses])
(note 159 158 161 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 161 159 163 13 (set (mem:SI (plus:DI (reg/f:DI 186)
                (reg:DI 85 [ ivtmp.87 ])) [0 MEM[symbol: coordinates, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 104 [ D.26001 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ D.26001 ])
        (nil)))
(insn 163 161 164 13 (parallel [
            (set (reg:SI 182)
                (plus:SI (reg:SI 101 [ D.26001 ])
                    (reg:SI 94 [ ivtmp.93 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:65 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 166 13 (set (mem:SI (plus:DI (reg/f:DI 187)
                (reg:DI 85 [ ivtmp.87 ])) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 182)) tiles.cpp:65 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 182)
        (nil)))
(debug_insn 166 164 167 13 (var_location:SI i (debug_expr:SI D#5)) -1
     (nil))
(insn 167 166 168 13 (parallel [
            (set (reg:DI 85 [ ivtmp.87 ])
                (plus:DI (reg:DI 85 [ ivtmp.87 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 168 167 170 13 (parallel [
            (set (reg:SI 94 [ ivtmp.93 ])
                (plus:SI (reg:SI 94 [ ivtmp.93 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 170 168 171 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 85 [ ivtmp.87 ])
            (reg:DI 93 [ D.26004 ]))) tiles.cpp:56 8 {*cmpdi_1}
     (nil))
(jump_insn 171 170 205 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 198)
            (pc))) tiles.cpp:56 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 198)
;;  succ:       10 [95.2%]  (DFS_BACK)
;;              14 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187

;; basic block 14, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u159(6){ }u160(7){ }u161(16){ }u162(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 120
;; live  kill	
(note 205 171 37 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 37 205 209 14 (set (reg/v:SI 120 [ num_floats ])
        (reg/v:SI 135 [ num_floats ])) 89 {*movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186

;; basic block 15, loop depth 0, count 0, freq 23, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [4.8%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u164(6){ }u165(7){ }u166(16){ }u167(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 120
;; live  kill	
(code_label 209 37 208 15 32 "" [1 uses])
(note 208 209 38 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 38 208 194 15 (set (reg/v:SI 120 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:56 89 {*movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186

;; basic block 16, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u168(6){ }u169(7){ }u170(16){ }u171(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 114 119 120 121 132 186
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 118 119 183
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 120 121 132 135 186
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 114 118 119 183
;; live  kill	 17 [flags]
(code_label 194 38 172 16 30 "" [0 uses])
(note 172 194 173 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 16 (set (reg:DI 183 [ num_floats ])
        (sign_extend:DI (reg/v:SI 120 [ num_floats ]))) tiles.cpp:68 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 120 [ num_floats ])
        (nil)))
(insn 174 173 176 16 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 183 [ num_floats ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 119 [ j ])) tiles.cpp:68 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 183 [ num_floats ])
        (nil)))
(insn 176 174 177 16 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:70 89 {*movsi_internal}
     (nil))
(insn 177 176 178 16 (set (reg:DI 1 dx)
        (reg:DI 121 [ D.26006 ])) tiles.cpp:70 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 16 (set (reg:SI 4 si)
        (reg/v:SI 84 [ num_coordinates ])) tiles.cpp:70 89 {*movsi_internal}
     (nil))
(insn 179 178 180 16 (set (reg:DI 5 di)
        (reg/f:DI 186)) tiles.cpp:70 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 180 179 181 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:70 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 181 180 182 16 (set (reg:SI 118 [ D.26001 ])
        (reg:SI 0 ax)) tiles.cpp:70 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 182 181 183 16 (set (mem:SI (reg:DI 114 [ ivtmp.98 ]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 118 [ D.26001 ])) tiles.cpp:70 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118 [ D.26001 ])
        (nil)))
(insn 183 182 185 16 (parallel [
            (set (reg/v:SI 119 [ j ])
                (plus:SI (reg/v:SI 119 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:53 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 185 183 186 16 (var_location:SI j (reg/v:SI 119 [ j ])) -1
     (nil))
(insn 186 185 187 16 (parallel [
            (set (reg:DI 114 [ ivtmp.98 ])
                (plus:DI (reg:DI 114 [ ivtmp.98 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 187 186 188 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 119 [ j ])
            (reg/v:SI 132 [ num_tilings ]))) tiles.cpp:53 7 {*cmpsi_1}
     (nil))
(jump_insn 188 187 190 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 203)
            (pc))) tiles.cpp:53 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 203)
;;  succ:       17 [91.0%]  (FALLTHRU,DFS_BACK)
;;              19 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186

;; basic block 17, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [91.0%]  (FALLTHRU,DFS_BACK)
;;              9 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 190 188 191 17 26 "" [0 uses])
(note 191 190 192 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 192 191 193 17 (var_location:SI j (reg/v:SI 119 [ j ])) -1
     (nil))
(debug_insn 193 192 195 17 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 195 193 196 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 135 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:56 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 196 195 197 17 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 209)
            (pc))) tiles.cpp:56 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 209)
;;  succ:       18 [95.2%]  (FALLTHRU)
;;              15 [4.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186

;; basic block 18, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [95.2%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 85 94 185 187
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 114 119 121 132 135 186
;; live  gen 	 85 94 185 187
;; live  kill	
(note 197 196 35 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 35 197 36 18 (set (reg:SI 94 [ ivtmp.93 ])
        (const_int 1 [0x1])) tiles.cpp:56 89 {*movsi_internal}
     (nil))
(insn 36 35 218 18 (set (reg:DI 85 [ ivtmp.87 ])
        (const_int 0 [0])) tiles.cpp:56 87 {*movdi_internal_rex64}
     (nil))
(insn 218 36 219 18 (set (reg/f:DI 185)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))) 267 {*leadi}
     (nil))
(insn 219 218 203 18 (set (reg/f:DI 187)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -256 [0xffffffffffffff00]))) 267 {*leadi}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 85 93 94 114 119 121 132 135 185 186 187

;; basic block 19, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 18, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [9.0%]  (LOOP_EXIT)
;;              5 [9.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 203 219 204 19 17 "" [1 uses])
(note 204 203 0 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int hash(int*, int, collision_table*) (_Z4hashPiiP15collision_table, funcdef_no=1064, decl_uid=23703, cgraph_uid=308)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 20 count 21 (  1.3)


int hash(int*, int, collision_table*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,7u} r1={9d,4u} r2={9d,3u} r4={10d,5u} r5={11d,6u} r6={1d,15u} r7={1d,20u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,14u} r17={26d,6u} r18={5d} r19={5d} r20={1d,15u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r59={2d,3u} r63={1d,1u} r64={1d,5u} r68={1d,2u} r69={1d,2u} r77={1d,1u} r80={1d,2u} r81={2d,4u} r89={1d,2u} r90={1d,2u} r91={1d,3u} r92={1d,3u} r98={1d,3u} r99={1d,3u} r100={1d,15u,1e} r102={1d,1u,1e} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r110={1d,2u} r111={1d,4u} r112={1d} r113={1d,1u} r115={2d,2u} 
;;    total ref usage 471{307d,162u,2e} in 82{77 regular + 5 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276
;;  reg->defs[] map:	0[0,7] 1[8,16] 2[17,25] 4[26,35] 5[36,46] 6[47,47] 7[48,48] 8[49,53] 9[54,58] 10[59,63] 11[64,68] 12[69,73] 13[74,78] 14[79,83] 15[84,88] 16[89,89] 17[90,115] 18[116,120] 19[121,125] 20[126,126] 21[127,132] 22[133,138] 23[139,144] 24[145,150] 25[151,156] 26[157,162] 27[163,168] 28[169,174] 29[175,179] 30[180,184] 31[185,189] 32[190,194] 33[195,199] 34[200,204] 35[205,209] 36[210,214] 37[215,220] 38[221,226] 39[227,231] 40[232,236] 45[237,241] 46[242,246] 47[247,251] 48[252,256] 49[257,261] 50[262,266] 51[267,271] 52[272,276] 59[277,278] 63[279,279] 64[280,280] 68[281,281] 69[282,282] 77[283,283] 80[284,284] 81[285,286] 89[287,287] 90[288,288] 91[289,289] 92[290,290] 98[291,291] 99[292,292] 100[293,293] 102[294,294] 103[295,295] 104[296,296] 105[297,297] 106[298,298] 107[299,299] 108[300,300] 110[301,301] 111[302,302] 112[303,303] 113[304,304] 115[305,306] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d16(1){ }d25(2){ }d35(4){ }d46(5){ }d47(6){ }d48(7){ }d89(16){ }d126(20){ }d132(21){ }d138(22){ }d144(23){ }d150(24){ }d156(25){ }d162(26){ }d168(27){ }d174(28){ }d220(37){ }d226(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[7],1[16],2[25],4[35],5[46],6[47],7[48],16[89],20[126],21[132],22[138],23[144],24[150],25[156],26[162],27[168],28[174],37[220],38[226]
;; rd  kill	(111) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],2[17,18,19,20,21,22,23,24,25],4[26,27,28,29,30,31,32,33,34,35],5[36,37,38,39,40,41,42,43,44,45,46],6[47],7[48],16[89],20[126],21[127,128,129,130,131,132],22[133,134,135,136,137,138],23[139,140,141,142,143,144],24[145,146,147,148,149,150],25[151,152,153,154,155,156],26[157,158,159,160,161,162],27[163,164,165,166,167,168],28[169,170,171,172,173,174],37[215,216,217,218,219,220],38[221,222,223,224,225,226]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[16],4[35],5[46],6[47],7[48],16[89],20[126]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d47(bb 0 insn -1) }u1(7){ d48(bb 0 insn -1) }u2(16){ d89(bb 0 insn -1) }u3(20){ d126(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 63 64 68 69 98 99 100 102 103 115
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 63 64 68 69 98 99 100 102 103 115
;; live  kill	 17 [flags]
;; rd  in  	(7) 1[16],4[35],5[46],6[47],7[48],16[89],20[126]
;; rd  gen 	(13) 0[5],17[111],59[278],63[279],64[280],68[281],69[282],98[291],99[292],100[293],102[294],103[295],115[306]
;; rd  kill	(47) 0[0,1,2,3,4,5,6,7],17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],59[277,278],63[279],64[280],68[281],69[282],98[291],99[292],100[293],102[294],103[295],115[305,306]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115
;; rd  out 	(12) 6[47],7[48],16[89],20[126],59[278],64[280],68[281],69[282],98[291],99[292],100[293],115[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 2 )->[3]->( 15 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u40(6){ d47(bb 0 insn -1) }u41(7){ d48(bb 0 insn -1) }u42(16){ d89(bb 0 insn -1) }u43(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; live  gen 	
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[47],7[48],16[89],20[126],59[278],64[280],68[281],69[282],98[291],99[292],100[293],115[306]
;; rd  gen 	(0) 
;; rd  kill	(26) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; rd  out 	(5) 6[47],7[48],16[89],20[126],59[278]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u46(6){ d47(bb 0 insn -1) }u47(7){ d48(bb 0 insn -1) }u48(16){ d89(bb 0 insn -1) }u49(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(12) 6[47],7[48],16[89],20[126],59[278],64[280],68[281],69[282],98[291],99[292],100[293],115[306]
;; rd  gen 	(1) 17[109]
;; rd  kill	(26) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 98 99 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 98 99 100 115
;; rd  out 	(11) 6[47],7[48],16[89],20[126],59[278],64[280],68[281],98[291],99[292],100[293],115[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 4 )->[5]->( 15 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(6){ d47(bb 0 insn -1) }u53(7){ d48(bb 0 insn -1) }u54(16){ d89(bb 0 insn -1) }u55(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 68 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 100
;; live  gen 	
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[47],7[48],16[89],20[126],59[278],64[280],68[281],98[291],99[292],100[293],115[306]
;; rd  gen 	(0) 
;; rd  kill	(26) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; rd  out 	(5) 6[47],7[48],16[89],20[126],59[278]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u60(6){ d47(bb 0 insn -1) }u61(7){ d48(bb 0 insn -1) }u62(16){ d89(bb 0 insn -1) }u63(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[47],7[48],16[89],20[126],59[278],64[280],68[281],98[291],99[292],100[293],115[306]
;; rd  gen 	(1) 17[107]
;; rd  kill	(26) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115
;; rd  out 	(10) 6[47],7[48],16[89],20[126],59[278],64[280],98[291],99[292],100[293],115[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 6 )->[7]->( 15 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(6){ d47(bb 0 insn -1) }u67(7){ d48(bb 0 insn -1) }u68(16){ d89(bb 0 insn -1) }u69(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; live  gen 	
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[47],7[48],16[89],20[126],59[278],64[280],98[291],99[292],100[293],115[306]
;; rd  gen 	(0) 
;; rd  kill	(26) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; rd  out 	(5) 6[47],7[48],16[89],20[126],59[278]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 6 )->[8]->( 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(6){ d47(bb 0 insn -1) }u73(7){ d48(bb 0 insn -1) }u74(16){ d89(bb 0 insn -1) }u75(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 98 99 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 77 80 81 91 92 104 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 98 99 100 115
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 77 80 81 91 92 104 105
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[47],7[48],16[89],20[126],59[278],64[280],98[291],99[292],100[293],115[306]
;; rd  gen 	(8) 0[4],77[283],80[284],81[286],91[289],92[290],104[296],105[297]
;; rd  kill	(42) 0[0,1,2,3,4,5,6,7],17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],77[283],80[284],81[285,286],91[289],92[290],104[296],105[297]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; rd  out 	(11) 6[47],7[48],16[89],20[126],64[280],80[284],81[286],91[289],92[290],100[293],115[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 14 )->[9]->( )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u91(6){ d47(bb 0 insn -1) }u92(7){ d48(bb 0 insn -1) }u93(16){ d89(bb 0 insn -1) }u94(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(13) 6[47],7[48],16[89],20[126],59[277],64[280],80[284],81[285,286],91[289],92[290],100[293],111[302]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[48],16[89],20[126]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 14 )->[10]->( 15 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(6){ d47(bb 0 insn -1) }u102(7){ d48(bb 0 insn -1) }u103(16){ d89(bb 0 insn -1) }u104(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 100 111
;; lr  def 	 17 [flags] 89 90 106 107 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111
;; live  gen 	 17 [flags] 89 90 106 107 108
;; live  kill	 17 [flags]
;; rd  in  	(13) 6[47],7[48],16[89],20[126],59[277],64[280],80[284],81[285,286],91[289],92[290],100[293],111[302]
;; rd  gen 	(6) 17[97],89[287],90[288],106[298],107[299],108[300]
;; rd  kill	(31) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],89[287],90[288],106[298],107[299],108[300]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100
;; rd  out 	(14) 6[47],7[48],16[89],20[126],59[277],64[280],80[284],81[285,286],89[287],90[288],91[289],92[290],100[293]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u114(6){ d47(bb 0 insn -1) }u115(7){ d48(bb 0 insn -1) }u116(16){ d89(bb 0 insn -1) }u117(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 90
;; lr  def 	 17 [flags] 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100
;; live  gen 	 17 [flags] 81
;; live  kill	 17 [flags]
;; rd  in  	(18) 6[47],7[48],16[89],17[97],20[126],59[277],64[280],80[284],81[285,286],89[287],90[288],91[289],92[290],100[293],106[298],107[299],108[300]
;; rd  gen 	(2) 17[95],81[285]
;; rd  kill	(28) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],81[285,286]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 91 92 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 91 92 100
;; rd  out 	(12) 6[47],7[48],16[89],20[126],59[277],64[280],80[284],81[285],89[287],91[289],92[290],100[293]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 11 )->[12]->( 15 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(6){ d47(bb 0 insn -1) }u122(7){ d48(bb 0 insn -1) }u123(16){ d89(bb 0 insn -1) }u124(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 89
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 89
;; live  gen 	
;; live  kill	
;; rd  in  	(12) 6[47],7[48],16[89],20[126],59[277],64[280],80[284],81[285],89[287],91[289],92[290],100[293]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; rd  out 	(5) 6[47],7[48],16[89],20[126],59[277]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(6){ d47(bb 0 insn -1) }u128(7){ d48(bb 0 insn -1) }u129(16){ d89(bb 0 insn -1) }u130(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100
;; live  gen 	 115
;; live  kill	
;; rd  in  	(12) 6[47],7[48],16[89],20[126],59[277],64[280],80[284],81[285],89[287],91[289],92[290],100[293]
;; rd  gen 	(1) 115[305]
;; rd  kill	(2) 115[305,306]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; rd  out 	(11) 6[47],7[48],16[89],20[126],64[280],80[284],81[285],91[289],92[290],100[293],115[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 8 13 )->[14]->( 9 10 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u132(6){ d47(bb 0 insn -1) }u133(7){ d48(bb 0 insn -1) }u134(16){ d89(bb 0 insn -1) }u135(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 81 91 92 100 115
;; lr  def 	 17 [flags] 59 110 111 112 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; live  gen 	 17 [flags] 59 110 111 112 113
;; live  kill	 17 [flags]
;; rd  in  	(13) 6[47],7[48],16[89],20[126],64[280],80[284],81[285,286],91[289],92[290],100[293],115[305,306]
;; rd  gen 	(6) 17[92],59[277],110[301],111[302],112[303],113[304]
;; rd  kill	(32) 17[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],59[277,278],110[301],111[302],112[303],113[304]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111
;; rd  out 	(13) 6[47],7[48],16[89],20[126],59[277],64[280],80[284],81[285,286],91[289],92[290],100[293],111[302]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 3 5 7 10 12 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u154(6){ d47(bb 0 insn -1) }u155(7){ d48(bb 0 insn -1) }u156(16){ d89(bb 0 insn -1) }u157(20){ d126(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(15) 6[47],7[48],16[89],20[126],59[277,278],64[280],80[284],81[285,286],89[287],90[288],91[289],92[290],100[293]
;; rd  gen 	(1) 0[0]
;; rd  kill	(8) 0[0,1,2,3,4,5,6,7]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[47],7[48],16[89],20[126]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 16 { d89(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

( 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u160(0){ d0(bb 15 insn 124) }u161(6){ d47(bb 0 insn -1) }u162(7){ d48(bb 0 insn -1) }u163(20){ d126(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[47],7[48],16[89],20[126]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 15 insn 124) }
;;   reg 6 { d47(bb 0 insn -1) }
;;   reg 7 { d48(bb 0 insn -1) }
;;   reg 20 { d126(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 20 to worklist
  Adding insn 13 to worklist
  Adding insn 8 to worklist
  Adding insn 32 to worklist
  Adding insn 38 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 47 to worklist
  Adding insn 49 to worklist
  Adding insn 58 to worklist
  Adding insn 77 to worklist
  Adding insn 75 to worklist
  Adding insn 86 to worklist
  Adding insn 90 to worklist
  Adding insn 92 to worklist
  Adding insn 112 to worklist
  Adding insn 102 to worklist
  Adding insn 127 to worklist
Finished finding needed instructions:
  Adding insn 124 to worklist
Processing use of (reg 59 [ j ]) in insn 124:
  Adding insn 14 to worklist
  Adding insn 107 to worklist
Processing use of (subreg (reg 111) 0) in insn 107:
  Adding insn 105 to worklist
Processing use of (reg 91 [ D.26024 ]) in insn 105:
  Adding insn 66 to worklist
Processing use of (reg 91 [ D.26024 ]) in insn 105:
Processing use of (reg 110 [ D.26024 ]) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 110 [ D.26024 ]) in insn 105:
Processing use of (reg 80 [ h2 ]) in insn 104:
  Adding insn 62 to worklist
Processing use of (reg 115 [ D.26024 ]) in insn 104:
  Adding insn 24 to worklist
  Adding insn 131 to worklist
Processing use of (reg 59 [ j ]) in insn 131:
Processing use of (reg 59 [ j ]) in insn 24:
Processing use of (reg 105 [ D.26025 ]) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 104 [ D.26025 ]) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 77 [ D.26025 ]) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 0 ax) in insn 59:
Processing use of (reg 100 [ ct ]) in insn 66:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 0 ax) in insn 14:
Processing use of (reg 0 ax) in insn 127:
Processing use of (reg 81 [ ivtmp.112 ]) in insn 102:
  Adding insn 67 to worklist
  Adding insn 88 to worklist
Processing use of (reg 100 [ ct ]) in insn 102:
Processing use of (reg 81 [ ivtmp.112 ]) in insn 88:
Processing use of (reg 92 [ D.26024 ]) in insn 67:
  Adding insn 65 to worklist
Processing use of (reg 100 [ ct ]) in insn 65:
Processing use of (reg 17 flags) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 91 [ D.26024 ]) in insn 111:
Processing use of (reg 113 [ D.26028 ]) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 81 [ ivtmp.112 ]) in insn 110:
Processing use of (reg 92 [ D.26024 ]) in insn 110:
Processing use of (reg 64 [ ccheck ]) in insn 92:
  Adding insn 22 to worklist
Processing use of (reg 89 [ D.26026 ]) in insn 92:
  Adding insn 83 to worklist
Processing use of (reg 107 [ D.26027 ]) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 108 [ ct_7(D)->data ]) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 100 [ ct ]) in insn 82:
Processing use of (reg 106 [ D.26027 ]) in insn 81:
  Adding insn 80 to worklist
Processing use of (subreg (reg 111) 0) in insn 80:
Processing use of (reg 63 [ D.26025 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 0 ax) in insn 21:
Processing use of (reg 17 flags) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 90 [ D.26024 ]) in insn 89:
  Adding insn 84 to worklist
Processing use of (reg 89 [ D.26026 ]) in insn 84:
Processing use of (reg 17 flags) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 64 [ ccheck ]) in insn 85:
Processing use of (reg 90 [ D.26024 ]) in insn 85:
Processing use of (reg 7 sp) in insn 75:
Processing use of (reg 0 ax) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 4 si) in insn 75:
  Adding insn 72 to worklist
Processing use of (reg 5 di) in insn 75:
  Adding insn 73 to worklist
Processing use of (reg 7 sp) in insn 77:
Processing use of (reg 5 di) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 7 sp) in insn 58:
Processing use of (reg 1 dx) in insn 58:
  Adding insn 55 to worklist
Processing use of (reg 2 cx) in insn 58:
  Adding insn 54 to worklist
Processing use of (reg 4 si) in insn 58:
  Adding insn 56 to worklist
Processing use of (reg 5 di) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 98 [ ints ]) in insn 57:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 99 [ num_ints ]) in insn 56:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 100 [ ct ]) in insn 49:
Processing use of (reg 100 [ ct ]) in insn 49:
Processing use of (reg 17 flags) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 100 [ ct ]) in insn 46:
Processing use of (reg 100 [ ct ]) in insn 40:
Processing use of (reg 100 [ ct ]) in insn 40:
Processing use of (reg 64 [ ccheck ]) in insn 41:
Processing use of (reg 68 [ D.26026 ]) in insn 41:
  Adding insn 27 to worklist
Processing use of (reg 102 [ D.26027 ]) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 103 [ ct_7(D)->data ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 100 [ ct ]) in insn 26:
Processing use of (reg 115 [ D.26024 ]) in insn 25:
Processing use of (reg 17 flags) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 69 [ D.26024 ]) in insn 37:
  Adding insn 28 to worklist
Processing use of (reg 68 [ D.26026 ]) in insn 28:
Processing use of (reg 100 [ ct ]) in insn 32:
Processing use of (reg 100 [ ct ]) in insn 32:
Processing use of (reg 100 [ ct ]) in insn 8:
Processing use of (reg 100 [ ct ]) in insn 8:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 1 dx) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 2 cx) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 4 si) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 98 [ ints ]) in insn 12:
Processing use of (reg 99 [ num_ints ]) in insn 11:
Processing use of (reg 100 [ ct ]) in insn 10:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 1 dx) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 2 cx) in insn 20:
  Adding insn 16 to worklist
Processing use of (reg 4 si) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 5 di) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 98 [ ints ]) in insn 19:
Processing use of (reg 99 [ num_ints ]) in insn 18:
Processing use of (reg 17 flags) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 64 [ ccheck ]) in insn 29:
Processing use of (reg 69 [ D.26024 ]) in insn 29:
starting the processing of deferred insns
ending the processing of deferred insns


int hash(int*, int, collision_table*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,7u} r1={9d,4u} r2={9d,3u} r4={10d,5u} r5={11d,6u} r6={1d,15u} r7={1d,20u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,14u} r17={26d,6u} r18={5d} r19={5d} r20={1d,15u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r59={2d,3u} r63={1d,1u} r64={1d,5u} r68={1d,2u} r69={1d,2u} r77={1d,1u} r80={1d,2u} r81={2d,4u} r89={1d,2u} r90={1d,2u} r91={1d,3u} r92={1d,3u} r98={1d,3u} r99={1d,3u} r100={1d,15u,1e} r102={1d,1u,1e} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r110={1d,2u} r111={1d,4u} r112={1d} r113={1d,1u} r115={2d,2u} 
;;    total ref usage 471{307d,162u,2e} in 82{77 regular + 5 call} insns.
;; basic block 2, loop depth 0, count 0, freq 2177, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 63 64 68 69 98 99 100 102 103 115
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 59 63 64 68 69 98 99 100 102 103 115
;; live  kill	 17 [flags]
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 98 [ ints ])
        (reg:DI 5 di [ ints ])) tiles.cpp:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ ints ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 99 [ num_ints ])
        (reg:SI 4 si [ num_ints ])) tiles.cpp:172 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_ints ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 100 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:176 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:177 89 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (mem/j:DI (reg/v/f:DI 100 [ ct ]) [0 ct_7(D)->m+0 S8 A64])) tiles.cpp:177 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:177 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:177 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 134 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:177 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(debug_insn 134 13 14 2 (var_location:SI D#7 (reg:SI 0 ax)) -1
     (nil))
(insn 14 134 15 2 (set (reg/v:SI 59 [ j ])
        (reg:SI 0 ax)) tiles.cpp:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 15 14 16 2 (var_location:SI j (debug_expr:SI D#7)) tiles.cpp:177 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 2 cx)
        (const_int 457 [0x1c9])) tiles.cpp:178 89 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (const_int 2147483647 [0x7fffffff])) tiles.cpp:178 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:178 89 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:178 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:178 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 21 20 22 2 (set (reg:SI 63 [ D.26025 ])
        (reg:SI 0 ax)) tiles.cpp:178 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 22 21 23 2 (set (reg/v:DI 64 [ ccheck ])
        (sign_extend:DI (reg:SI 63 [ D.26025 ]))) tiles.cpp:178 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 63 [ D.26025 ])
        (nil)))
(debug_insn 23 22 24 2 (var_location:DI ccheck (reg/v:DI 64 [ ccheck ])) tiles.cpp:178 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 115 [ D.26024 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) tiles.cpp:179 149 {*extendsidi2_rex64}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 102 [ D.26027 ])
                (ashift:DI (reg:DI 115 [ D.26024 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:179 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 103 [ ct_7(D)->data ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:179 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 68 [ D.26026 ])
                (plus:DI (reg:DI 102 [ D.26027 ])
                    (reg/f:DI 103 [ ct_7(D)->data ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:179 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 103 [ ct_7(D)->data ])
        (expr_list:REG_DEAD (reg:DI 102 [ D.26027 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])
                        (reg:DI 102 [ D.26027 ]))
                    (nil))))))
(insn 28 27 29 2 (set (reg:DI 69 [ D.26024 ])
        (mem:DI (reg/f:DI 68 [ D.26026 ]) [0 *_22+0 S8 A64])) tiles.cpp:179 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 69 [ D.26024 ])
            (reg/v:DI 64 [ ccheck ]))) tiles.cpp:179 8 {*cmpdi_1}
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) tiles.cpp:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
            (nil)))
 -> 35)
;;  succ:       3 [19.9%]  (FALLTHRU)
;;              4 [80.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115

;; basic block 3, loop depth 0, count 0, freq 433, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [19.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u40(6){ }u41(7){ }u42(16){ }u43(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; live  gen 	
;; live  kill	 17 [flags]
(note 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 35 3 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:180 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ ct ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 4, loop depth 0, count 0, freq 1743, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [80.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 69 98 99 100 115
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 35 32 36 4 37 "" [1 uses])
(note 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 69 [ D.26024 ])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:181 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.26024 ])
        (nil)))
(jump_insn 38 37 39 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) tiles.cpp:181 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
            (nil)))
 -> 44)
;;  succ:       5 [19.9%]  (FALLTHRU)
;;              6 [80.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 98 99 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 98 99 100 115

;; basic block 5, loop depth 0, count 0, freq 347, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [19.9%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 68 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 68 100
;; live  gen 	
;; live  kill	 17 [flags]
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:182 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ ct ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 44 5 (set (mem:DI (reg/f:DI 68 [ D.26026 ]) [0 *_22+0 S8 A64])
        (reg/v:DI 64 [ ccheck ])) tiles.cpp:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.26026 ])
        (expr_list:REG_DEAD (reg/v:DI 64 [ ccheck ])
            (nil))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 6, loop depth 0, count 0, freq 1396, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [80.1%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 44 41 45 6 39 "" [1 uses])
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:SI (plus:DI (reg/v/f:DI 100 [ ct ])
                    (const_int 16 [0x10])) [0 ct_7(D)->safe+0 S4 A64])
            (const_int 0 [0]))) tiles.cpp:184 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) tiles.cpp:184 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
            (nil)))
 -> 52)
;;  succ:       7 [61.0%]  (FALLTHRU)
;;              8 [39.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 98 99 100 115

;; basic block 7, loop depth 0, count 0, freq 852, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [61.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 100
;; live  gen 	
;; live  kill	 17 [flags]
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 52 7 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                        (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                            (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:185 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ ct ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 8, loop depth 0, count 0, freq 544, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [39.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(6){ }u73(7){ }u74(16){ }u75(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 98 99 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 77 80 81 91 92 104 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 98 99 100 115
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 77 80 81 91 92 104 105
;; live  kill	 17 [flags]
(code_label 52 49 53 8 40 "" [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:187 89 {*movsi_internal}
     (nil))
(insn 55 54 56 8 (set (reg:DI 1 dx)
        (const_int 536870911 [0x1fffffff])) tiles.cpp:187 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 8 (set (reg:SI 4 si)
        (reg/v:SI 99 [ num_ints ])) tiles.cpp:187 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 99 [ num_ints ])
        (nil)))
(insn 57 56 58 8 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ ints ])) tiles.cpp:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ ints ])
        (nil)))
(call_insn 58 57 59 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:187 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 59 58 60 8 (set (reg:SI 77 [ D.26025 ])
        (reg:SI 0 ax)) tiles.cpp:187 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 60 59 61 8 (parallel [
            (set (reg:SI 104 [ D.26025 ])
                (ashift:SI (reg:SI 77 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:187 512 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 77 [ D.26025 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 8 (parallel [
            (set (reg:SI 105 [ D.26025 ])
                (plus:SI (reg:SI 104 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:187 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ D.26025 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 8 (set (reg/v:DI 80 [ h2 ])
        (sign_extend:DI (reg:SI 105 [ D.26025 ]))) tiles.cpp:187 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 105 [ D.26025 ])
        (nil)))
(debug_insn 63 62 64 8 (var_location:DI h2 (reg/v:DI 80 [ h2 ])) tiles.cpp:187 -1
     (nil))
(debug_insn 64 63 65 8 (var_location:SI i (const_int 0 [0])) tiles.cpp:188 -1
     (nil))
(insn 65 64 66 8 (set (reg:DI 92 [ D.26024 ])
        (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 8 (set (reg:DI 91 [ D.26024 ])
        (mem/j:DI (reg/v/f:DI 100 [ ct ]) [0 ct_7(D)->m+0 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 109 8 (parallel [
            (set (reg:DI 81 [ ivtmp.112 ])
                (plus:DI (reg:DI 92 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115

;; basic block 9, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [0.0%]  (LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 109 67 70 9 43 "" [1 uses])
(note 70 109 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 9 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b82f8519da8 *.LC0>)) -1
     (nil))
(insn 72 71 73 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b82f8519da8 *.LC0>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 9 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (nil))
(insn 74 73 75 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 91 {*movqi_internal}
     (nil))
(call_insn 75 74 76 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 76 75 77 9 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:193 89 {*movsi_internal}
     (nil))
(call_insn 77 76 79 9 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b82f08ee700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:193 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 9896, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(6){ }u102(7){ }u103(16){ }u104(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 100 111
;; lr  def 	 17 [flags] 89 90 106 107 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111
;; live  gen 	 17 [flags] 89 90 106 107 108
;; live  kill	 17 [flags]
(note 79 77 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 10 (set (reg:DI 106 [ D.26027 ])
        (sign_extend:DI (subreg:SI (reg:DI 111) 0))) tiles.cpp:194 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(insn 81 80 82 10 (parallel [
            (set (reg:DI 107 [ D.26027 ])
                (ashift:DI (reg:DI 106 [ D.26027 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:194 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.26027 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 10 (set (reg/f:DI 108 [ ct_7(D)->data ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:194 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 10 (parallel [
            (set (reg/f:DI 89 [ D.26026 ])
                (plus:DI (reg:DI 107 [ D.26027 ])
                    (reg/f:DI 108 [ ct_7(D)->data ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:194 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108 [ ct_7(D)->data ])
        (expr_list:REG_DEAD (reg:DI 107 [ D.26027 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 84 83 85 10 (set (reg:DI 90 [ D.26024 ])
        (mem:DI (reg/f:DI 89 [ D.26026 ]) [0 *_55+0 S8 A64])) tiles.cpp:194 87 {*movdi_internal_rex64}
     (nil))
(insn 85 84 86 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 90 [ D.26024 ])
            (reg/v:DI 64 [ ccheck ]))) tiles.cpp:194 8 {*cmpdi_1}
     (nil))
(jump_insn 86 85 87 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) tiles.cpp:194 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 225 [0xe1])
            (nil)))
 -> 117)
;;  succ:       15 [2.2%]  (LOOP_EXIT)
;;              11 [97.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100

;; basic block 11, loop depth 0, count 0, freq 9673, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [97.8%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u114(6){ }u115(7){ }u116(16){ }u117(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 90
;; lr  def 	 17 [flags] 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 90 91 92 100
;; live  gen 	 17 [flags] 81
;; live  kill	 17 [flags]
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (parallel [
            (set (reg:DI 81 [ ivtmp.112 ])
                (plus:DI (reg:DI 81 [ ivtmp.112 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 90 [ D.26024 ])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:195 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.26024 ])
        (nil)))
(jump_insn 90 89 91 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) tiles.cpp:195 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
            (nil)))
 -> 95)
;;  succ:       12 [2.2%]  (FALLTHRU,LOOP_EXIT)
;;              13 [97.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 91 92 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 89 91 92 100

;; basic block 12, loop depth 0, count 0, freq 218, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [2.2%]  (FALLTHRU,LOOP_EXIT)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(6){ }u122(7){ }u123(16){ }u124(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 89
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 89
;; live  gen 	
;; live  kill	
(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 95 12 (set (mem:DI (reg/f:DI 89 [ D.26026 ]) [0 *_78+0 S8 A64])
        (reg/v:DI 64 [ ccheck ])) tiles.cpp:195 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.26026 ])
        (expr_list:REG_DEAD (reg/v:DI 64 [ ccheck ])
            (nil))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 13, loop depth 0, count 0, freq 9455, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [97.8%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(6){ }u128(7){ }u129(16){ }u130(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100
;; live  gen 	 115
;; live  kill	
(code_label 95 92 96 13 42 "" [1 uses])
(note 96 95 131 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 131 96 97 13 (set (reg:DI 115 [ D.26024 ])
        (sign_extend:DI (reg/v:SI 59 [ j ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 59 [ j ])
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115

;; basic block 14, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              13 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u132(6){ }u133(7){ }u134(16){ }u135(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 81 91 92 100 115
;; lr  def 	 17 [flags] 59 110 111 112 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80 81 91 92 100 115
;; live  gen 	 17 [flags] 59 110 111 112 113
;; live  kill	 17 [flags]
(code_label 97 131 98 14 41 "" [0 uses])
(note 98 97 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 100 98 101 14 (var_location:SI j (debug_expr:SI D#7)) -1
     (nil))
(debug_insn 101 100 102 14 (var_location:SI i (minus:SI (subreg:SI (reg:DI 81 [ ivtmp.112 ]) 0)
        (subreg:SI (reg:DI 92 [ D.26024 ]) 0))) tiles.cpp:189 -1
     (nil))
(insn 102 101 104 14 (set (mem/j:DI (plus:DI (reg/v/f:DI 100 [ ct ])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
        (reg:DI 81 [ ivtmp.112 ])) tiles.cpp:190 87 {*movdi_internal_rex64}
     (nil))
(insn 104 102 105 14 (parallel [
            (set (reg:DI 110 [ D.26024 ])
                (plus:DI (reg:DI 115 [ D.26024 ])
                    (reg/v:DI 80 [ h2 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 115 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 133 14 (parallel [
            (set (reg:DI 112)
                (div:DI (reg:DI 110 [ D.26024 ])
                    (reg:DI 91 [ D.26024 ])))
            (set (reg:DI 111)
                (mod:DI (reg:DI 110 [ D.26024 ])
                    (reg:DI 91 [ D.26024 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 367 {*divmoddi4}
     (expr_list:REG_DEAD (reg:DI 110 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:DI 112)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(debug_insn 133 105 107 14 (var_location:SI D#7 (subreg:SI (reg:DI 111) 0)) -1
     (nil))
(insn 107 133 108 14 (set (reg/v:SI 59 [ j ])
        (subreg:SI (reg:DI 111) 0)) tiles.cpp:191 89 {*movsi_internal}
     (nil))
(debug_insn 108 107 110 14 (var_location:SI j (subreg:SI (reg:DI 111) 0)) tiles.cpp:191 -1
     (nil))
(insn 110 108 111 14 (parallel [
            (set (reg:DI 113 [ D.26028 ])
                (minus:DI (reg:DI 81 [ ivtmp.112 ])
                    (reg:DI 92 [ D.26024 ])))
            (clobber (reg:CC 17 flags))
        ]) 310 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 111 110 112 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 91 [ D.26024 ])
            (reg:DI 113 [ D.26028 ]))) tiles.cpp:193 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.26028 ])
        (nil)))
(jump_insn 112 111 117 14 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) tiles.cpp:193 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil)))
 -> 109)
;;  succ:       9 [0.0%]  (LOOP_EXIT)
;;              10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 80 81 91 92 100 111

;; basic block 15, loop depth 0, count 0, freq 2173, maybe hot
;;  prev block 14, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (FALLTHRU)
;;              7 [100.0%]  (FALLTHRU)
;;              10 [2.2%]  (LOOP_EXIT)
;;              12 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 117 112 118 15 38 "" [1 uses])
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 119 118 124 15 (var_location:SI j (debug_expr:SI D#7)) -1
     (nil))
(insn 124 119 127 15 (set (reg/i:SI 0 ax)
        (reg/v:SI 59 [ j ])) tiles.cpp:199 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 59 [ j ])
        (nil)))
(insn 127 124 0 15 (use (reg/i:SI 0 ax)) tiles.cpp:199 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, collision_table*, float*, int, int*, int) (_Z5tilesPiiP15collision_tablePfiS_i, funcdef_no=1062, decl_uid=23694, cgraph_uid=306)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 27 count 23 (  1.1)


void tiles(int*, int, collision_table*, float*, int, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={5d,1u} r4={8d,4u} r5={8d,4u} r6={1d,19u} r7={1d,23u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,19u,1e} r17={42d,8u} r18={4d} r19={4d} r20={1d,26u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r62={1d,2u} r63={2d,6u} r66={1d,1u} r71={1d,1u} r72={2d,2u} r77={1d,1u} r78={1d,5u} r79={1d,4u} r82={2d,1u} r91={2d,2u} r92={2d,4u} r94={1d,1u} r95={2d,5u} r96={2d,1u} r102={1d,1u} r108={1d,1u} r109={1d,8u} r110={1d,1u} r111={1d,1u} r112={1d,8u} r113={1d,1u} r114={1d,3u} r115={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r146={1d,2u} r148={1d,1u} r149={1d} r150={1d,1u} r151={1d,1u} r152={1d,2u} r154={1d,1u} r155={1d} r156={1d,1u} r159={1d,1u} r160={1d,1u} r162={2d,3u} r163={2d,3u} r164={2d,2u} 
;;    total ref usage 518{306d,209u,3e} in 107{103 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242
;;  reg->defs[] map:	0[0,4] 1[5,12] 2[13,17] 4[18,25] 5[26,33] 6[34,34] 7[35,35] 8[36,39] 9[40,43] 10[44,47] 11[48,51] 12[52,55] 13[56,59] 14[60,63] 15[64,67] 16[68,68] 17[69,110] 18[111,114] 19[115,118] 20[119,119] 21[120,125] 22[126,130] 23[131,135] 24[136,140] 25[141,145] 26[146,150] 27[151,155] 28[156,160] 29[161,164] 30[165,168] 31[169,172] 32[173,176] 33[177,180] 34[181,184] 35[185,188] 36[189,192] 37[193,197] 38[198,202] 39[203,206] 40[207,210] 45[211,214] 46[215,218] 47[219,222] 48[223,226] 49[227,230] 50[231,234] 51[235,238] 52[239,242] 62[243,243] 63[244,245] 66[246,246] 71[247,247] 72[248,249] 77[250,250] 78[251,251] 79[252,252] 82[253,254] 91[255,256] 92[257,258] 94[259,259] 95[260,261] 96[262,263] 102[264,264] 108[265,265] 109[266,266] 110[267,267] 111[268,268] 112[269,269] 113[270,270] 114[271,271] 115[272,272] 117[273,273] 118[274,274] 119[275,275] 120[276,276] 121[277,277] 122[278,278] 128[279,279] 129[280,280] 130[281,281] 131[282,282] 133[283,283] 134[284,284] 135[285,285] 141[286,286] 142[287,287] 143[288,288] 146[289,289] 148[290,290] 149[291,291] 150[292,292] 151[293,293] 152[294,294] 154[295,295] 155[296,296] 156[297,297] 159[298,298] 160[299,299] 162[300,301] 163[302,303] 164[304,305] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d12(1){ }d17(2){ }d25(4){ }d33(5){ }d34(6){ }d35(7){ }d68(16){ }d119(20){ }d125(21){ }d130(22){ }d135(23){ }d140(24){ }d145(25){ }d150(26){ }d155(27){ }d160(28){ }d197(37){ }d202(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[4],1[12],2[17],4[25],5[33],6[34],7[35],16[68],20[119],21[125],22[130],23[135],24[140],25[145],26[150],27[155],28[160],37[197],38[202]
;; rd  kill	(89) 0[0,1,2,3,4],1[5,6,7,8,9,10,11,12],2[13,14,15,16,17],4[18,19,20,21,22,23,24,25],5[26,27,28,29,30,31,32,33],6[34],7[35],16[68],20[119],21[120,121,122,123,124,125],22[126,127,128,129,130],23[131,132,133,134,135],24[136,137,138,139,140],25[141,142,143,144,145],26[146,147,148,149,150],27[151,152,153,154,155],28[156,157,158,159,160],37[193,194,195,196,197],38[198,199,200,201,202]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[12],2[17],4[25],5[33],6[34],7[35],16[68],20[119],37[197],38[202]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d34(bb 0 insn -1) }u1(7){ d35(bb 0 insn -1) }u2(16){ d68(bb 0 insn -1) }u3(20){ d119(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 62 108 109 110 111 112 113 114 115
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 62 108 109 110 111 112 113 114 115
;; live  kill	 17 [flags]
;; rd  in  	(10) 1[12],2[17],4[25],5[33],6[34],7[35],16[68],20[119],37[197],38[202]
;; rd  gen 	(10) 17[108],62[243],108[265],109[266],110[267],111[268],112[269],113[270],114[271],115[272]
;; rd  kill	(9) 62[243],108[265],109[266],110[267],111[268],112[269],113[270],114[271],115[272]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114
;; rd  out 	(12) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],111[268],112[269],113[270],114[271]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 2 4 )->[3]->( 6 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ d34(bb 0 insn -1) }u19(7){ d35(bb 0 insn -1) }u20(16){ d68(bb 0 insn -1) }u21(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(12) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],111[268],112[269],113[270],114[271]
;; rd  gen 	(1) 17[107]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; rd  out 	(10) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],111[268],112[269]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 2 )->[4]->( 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ d34(bb 0 insn -1) }u25(7){ d35(bb 0 insn -1) }u26(16){ d68(bb 0 insn -1) }u27(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 117 118 119 120 121 122 162
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 117 118 119 120 121 122 162
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],111[268],112[269],113[270],114[271]
;; rd  gen 	(8) 0[3],117[273],118[274],119[275],120[276],121[277],122[278],162[301]
;; rd  kill	(13) 0[0,1,2,3,4],117[273],118[274],119[275],120[276],121[277],122[278],162[300,301]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; rd  out 	(10) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],111[268],112[269]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 8 3 )->[5]->( 9 19 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(6){ d34(bb 0 insn -1) }u44(7){ d35(bb 0 insn -1) }u45(16){ d68(bb 0 insn -1) }u46(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(10) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],111[268],112[269]
;; rd  gen 	(1) 17[102]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; rd  out 	(9) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],112[269]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 3 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ d34(bb 0 insn -1) }u50(7){ d35(bb 0 insn -1) }u51(16){ d68(bb 0 insn -1) }u52(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 112
;; lr  def 	 17 [flags] 77 92 102 128 129 130 164
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  gen 	 77 92 102 128 129 130 164
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],111[268],112[269]
;; rd  gen 	(7) 77[250],92[258],102[264],128[279],129[280],130[281],164[305]
;; rd  kill	(9) 77[250],92[257,258],102[264],128[279],129[280],130[281],164[304,305]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; rd  out 	(14) 6[34],7[35],16[68],20[119],62[243],77[250],92[258],102[264],108[265],109[266],110[267],111[268],112[269],164[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 7 6 )->[7]->( 7 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(6){ d34(bb 0 insn -1) }u60(7){ d35(bb 0 insn -1) }u61(16){ d68(bb 0 insn -1) }u62(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 77 92 102 111 164
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 92 131 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; live  gen 	 17 [flags] 21 [xmm0] 66 92 131 133
;; live  kill	 17 [flags]
;; rd  in  	(20) 6[34],7[35],16[68],17[96],20[119],21[122],62[243],66[246],77[250],92[257,258],102[264],108[265],109[266],110[267],111[268],112[269],131[282],133[283],164[305]
;; rd  gen 	(6) 17[96],21[122],66[246],92[257],131[282],133[283]
;; rd  kill	(11) 21[120,121,122,123,124,125],66[246],92[257,258],131[282],133[283]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; rd  out 	(14) 6[34],7[35],16[68],20[119],62[243],77[250],92[257],102[264],108[265],109[266],110[267],111[268],112[269],164[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 7 )->[8]->( 5 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(6){ d34(bb 0 insn -1) }u79(7){ d35(bb 0 insn -1) }u80(16){ d68(bb 0 insn -1) }u81(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 134 135 163
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 134 135 163
;; live  kill	 17 [flags]
;; rd  in  	(14) 6[34],7[35],16[68],20[119],62[243],77[250],92[257],102[264],108[265],109[266],110[267],111[268],112[269],164[305]
;; rd  gen 	(4) 0[1],134[284],135[285],163[303]
;; rd  kill	(9) 0[0,1,2,3,4],134[284],135[285],163[302,303]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; rd  out 	(9) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],112[269]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 5 )->[9]->( 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(6){ d34(bb 0 insn -1) }u93(7){ d35(bb 0 insn -1) }u94(16){ d68(bb 0 insn -1) }u95(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108 112
;; lr  def 	 17 [flags] 71 91 95 141 142 143 162
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  gen 	 71 91 95 141 142 143 162
;; live  kill	 17 [flags]
;; rd  in  	(9) 6[34],7[35],16[68],20[119],62[243],108[265],109[266],110[267],112[269]
;; rd  gen 	(7) 71[247],91[256],95[261],141[286],142[287],143[288],162[300]
;; rd  kill	(10) 71[247],91[255,256],95[260,261],141[286],142[287],143[288],162[300,301]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; rd  out 	(12) 6[34],7[35],16[68],20[119],62[243],71[247],91[256],95[261],109[266],110[267],112[269],162[300]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 13 18 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u102(6){ d34(bb 0 insn -1) }u103(7){ d35(bb 0 insn -1) }u104(16){ d68(bb 0 insn -1) }u105(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 163 164
;; lr  def 	 17 [flags] 78 79
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; live  gen 	 17 [flags] 78 79
;; live  kill	
;; rd  in  	(22) 6[34],7[35],16[68],17[77],20[119],62[243],63[244,245],71[247],72[248,249],91[255,256],95[260,261],109[266],110[267],112[269],159[298],162[300],163[302],164[304]
;; rd  gen 	(3) 17[90],78[251],79[252]
;; rd  kill	(2) 78[251],79[252]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; rd  out 	(22) 6[34],7[35],16[68],20[119],62[243],63[244,245],71[247],72[248,249],78[251],79[252],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u113(6){ d34(bb 0 insn -1) }u114(7){ d35(bb 0 insn -1) }u115(16){ d68(bb 0 insn -1) }u116(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 79 109
;; lr  def 	 17 [flags] 82 146 148 149
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; live  gen 	 82 146 148 149
;; live  kill	 17 [flags]
;; rd  in  	(22) 6[34],7[35],16[68],20[119],62[243],63[244,245],71[247],72[248,249],78[251],79[252],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;; rd  gen 	(4) 82[254],146[289],148[290],149[291]
;; rd  kill	(5) 82[253,254],146[289],148[290],149[291]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; rd  out 	(22) 6[34],7[35],16[68],20[119],62[243],63[244,245],71[247],72[248,249],79[252],82[254],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u125(6){ d34(bb 0 insn -1) }u126(7){ d35(bb 0 insn -1) }u127(16){ d68(bb 0 insn -1) }u128(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 79 109
;; lr  def 	 17 [flags] 82 150 151 152 154 155 156
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; live  gen 	 82 150 151 152 154 155 156
;; live  kill	 17 [flags]
;; rd  in  	(22) 6[34],7[35],16[68],20[119],62[243],63[244,245],71[247],72[248,249],78[251],79[252],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;; rd  gen 	(7) 82[253],150[292],151[293],152[294],154[295],155[296],156[297]
;; rd  kill	(8) 82[253,254],150[292],151[293],152[294],154[295],155[296],156[297]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; rd  out 	(22) 6[34],7[35],16[68],20[119],62[243],63[244,245],71[247],72[248,249],79[252],82[253],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 11 12 )->[13]->( 10 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u141(6){ d34(bb 0 insn -1) }u142(7){ d35(bb 0 insn -1) }u143(16){ d68(bb 0 insn -1) }u144(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 79 82 162 163
;; lr  def 	 17 [flags] 63 72 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; live  gen 	 17 [flags] 63 72 159
;; live  kill	 17 [flags]
;; rd  in  	(23) 6[34],7[35],16[68],20[119],62[243],63[244,245],71[247],72[248,249],79[252],82[253,254],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;; rd  gen 	(4) 17[77],63[245],72[249],159[298]
;; rd  kill	(5) 63[244,245],72[248,249],159[298]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; rd  out 	(18) 6[34],7[35],16[68],20[119],62[243],63[245],71[247],72[249],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u158(6){ d34(bb 0 insn -1) }u159(7){ d35(bb 0 insn -1) }u160(16){ d68(bb 0 insn -1) }u161(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 96
;; live  kill	
;; rd  in  	(18) 6[34],7[35],16[68],20[119],62[243],63[245],71[247],72[249],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;; rd  gen 	(1) 96[263]
;; rd  kill	(2) 96[262,263]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; rd  out 	(15) 6[34],7[35],16[68],20[119],62[243],71[247],91[255,256],95[260,261],96[263],109[266],110[267],112[269],162[300]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 17 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u163(6){ d34(bb 0 insn -1) }u164(7){ d35(bb 0 insn -1) }u165(16){ d68(bb 0 insn -1) }u166(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 96
;; live  kill	
;; rd  in  	(14) 6[34],7[35],16[68],20[119],62[243],71[247],91[255,256],95[260,261],109[266],110[267],112[269],162[300]
;; rd  gen 	(1) 96[262]
;; rd  kill	(2) 96[262,263]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; rd  out 	(15) 6[34],7[35],16[68],20[119],62[243],71[247],91[255,256],95[260,261],96[262],109[266],110[267],112[269],162[300]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 15 14 )->[16]->( 17 19 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u167(6){ d34(bb 0 insn -1) }u168(7){ d35(bb 0 insn -1) }u169(16){ d68(bb 0 insn -1) }u170(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 91 95 96 109 110 162
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 94 95 160
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 91 94 95 160
;; live  kill	 17 [flags]
;; rd  in  	(16) 6[34],7[35],16[68],20[119],62[243],71[247],91[255,256],95[260,261],96[262,263],109[266],110[267],112[269],162[300]
;; rd  gen 	(6) 0[0],17[73],91[255],94[259],95[260],160[299]
;; rd  kill	(11) 0[0,1,2,3,4],91[255,256],94[259],95[260,261],160[299]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; rd  out 	(12) 6[34],7[35],16[68],20[119],62[243],71[247],91[255],95[260],109[266],110[267],112[269],162[300]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 16 9 )->[17]->( 18 15 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u192(6){ d34(bb 0 insn -1) }u193(7){ d35(bb 0 insn -1) }u194(16){ d68(bb 0 insn -1) }u195(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(18) 0[0],6[34],7[35],16[68],17[73],20[119],62[243],71[247],91[255,256],94[259],95[260,261],109[266],110[267],112[269],160[299],162[300]
;; rd  gen 	(1) 17[72]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; rd  out 	(14) 6[34],7[35],16[68],20[119],62[243],71[247],91[255,256],95[260,261],109[266],110[267],112[269],162[300]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 17 )->[18]->( 10 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u199(6){ d34(bb 0 insn -1) }u200(7){ d35(bb 0 insn -1) }u201(16){ d68(bb 0 insn -1) }u202(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63 72 163 164
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 63 72 163 164
;; live  kill	
;; rd  in  	(14) 6[34],7[35],16[68],20[119],62[243],71[247],91[255,256],95[260,261],109[266],110[267],112[269],162[300]
;; rd  gen 	(4) 63[244],72[248],163[302],164[304]
;; rd  kill	(8) 63[244,245],72[248,249],163[302,303],164[304,305]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; rd  out 	(18) 6[34],7[35],16[68],20[119],62[243],63[244],71[247],72[248],91[255,256],95[260,261],109[266],110[267],112[269],162[300],163[302],164[304]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 16 5 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u205(6){ d34(bb 0 insn -1) }u206(7){ d35(bb 0 insn -1) }u207(16){ d68(bb 0 insn -1) }u208(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(13) 6[34],7[35],16[68],20[119],62[243],71[247],91[255],95[260],108[265],109[266],110[267],112[269],162[300]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[34],7[35],16[68],20[119]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

( 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u209(6){ d34(bb 0 insn -1) }u210(7){ d35(bb 0 insn -1) }u211(20){ d119(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[34],7[35],16[68],20[119]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 20 { d119(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 30 to worklist
  Adding insn 49 to worklist
  Adding insn 59 to worklist
  Adding insn 83 to worklist
  Adding insn 78 to worklist
  Adding insn 98 to worklist
  Adding insn 120 to worklist
  Adding insn 148 to worklist
  Adding insn 141 to worklist
  Adding insn 138 to worklist
  Adding insn 164 to worklist
  Adding insn 158 to worklist
  Adding insn 156 to worklist
  Adding insn 151 to worklist
  Adding insn 172 to worklist
Finished finding needed instructions:
Processing use of (reg 17 flags) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 171:
  Adding insn 8 to worklist
Processing use of (reg 37 r8) in insn 8:
Processing use of (reg 20 frame) in insn 151:
Processing use of (reg 95 [ j ]) in insn 151:
  Adding insn 17 to worklist
  Adding insn 159 to worklist
Processing use of (reg 160 [ num_floats ]) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 96 [ num_floats ]) in insn 150:
  Adding insn 15 to worklist
  Adding insn 16 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 15:
Processing use of (reg 95 [ j ]) in insn 159:
Processing use of (reg 7 sp) in insn 156:
Processing use of (reg 1 dx) in insn 156:
  Adding insn 153 to worklist
Processing use of (reg 4 si) in insn 156:
  Adding insn 154 to worklist
Processing use of (reg 5 di) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 162) in insn 155:
  Adding insn 193 to worklist
Processing use of (reg 20 frame) in insn 193:
Processing use of (reg 62 [ num_coordinates ]) in insn 154:
  Adding insn 21 to worklist
Processing use of (reg 115 [ D.26056 ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 20:
Processing use of (reg 114 [ num_ints ]) in insn 20:
  Adding insn 10 to worklist
Processing use of (reg 16 argp) in insn 10:
Processing use of (reg 110 [ ctable ]) in insn 153:
  Adding insn 6 to worklist
Processing use of (reg 1 dx) in insn 6:
Processing use of (reg 91 [ ivtmp.132 ]) in insn 158:
  Adding insn 105 to worklist
  Adding insn 162 to worklist
Processing use of (reg 94 [ D.26056 ]) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 0 ax) in insn 157:
Processing use of (reg 91 [ ivtmp.132 ]) in insn 162:
Processing use of (reg 108 [ the_tiles ]) in insn 105:
  Adding insn 4 to worklist
Processing use of (reg 5 di) in insn 4:
Processing use of (reg 17 flags) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 95 [ j ]) in insn 163:
Processing use of (reg 109 [ num_tilings ]) in insn 163:
  Adding insn 5 to worklist
Processing use of (reg 4 si) in insn 5:
Processing use of (reg 63 [ ivtmp.121 ]) in insn 138:
  Adding insn 144 to worklist
  Adding insn 14 to worklist
Processing use of (reg 82 [ D.26056 ]) in insn 138:
  Adding insn 124 to worklist
  Adding insn 134 to worklist
Processing use of (reg 162) in insn 138:
Processing use of (reg 109 [ num_tilings ]) in insn 134:
Processing use of (reg 156 [ D.26056 ]) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 150 [ D.26056 ]) in insn 133:
  Adding insn 129 to worklist
Processing use of (reg 154 [ D.26056 ]) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 109 [ num_tilings ]) in insn 132:
Processing use of (reg 109 [ num_tilings ]) in insn 132:
Processing use of (reg 152 [ D.26056 ]) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 152 [ D.26056 ]) in insn 132:
Processing use of (reg 151 [ D.26056 ]) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 78 [ D.26056 ]) in insn 130:
  Adding insn 116 to worklist
Processing use of (reg 79 [ D.26056 ]) in insn 130:
  Adding insn 118 to worklist
Processing use of (reg 63 [ ivtmp.121 ]) in insn 118:
Processing use of (reg 163) in insn 118:
  Adding insn 195 to worklist
Processing use of (reg 20 frame) in insn 195:
Processing use of (reg 63 [ ivtmp.121 ]) in insn 116:
Processing use of (reg 164) in insn 116:
  Adding insn 194 to worklist
Processing use of (reg 20 frame) in insn 194:
Processing use of (reg 78 [ D.26056 ]) in insn 129:
Processing use of (reg 78 [ D.26056 ]) in insn 124:
Processing use of (reg 148 [ D.26056 ]) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 109 [ num_tilings ]) in insn 123:
Processing use of (reg 109 [ num_tilings ]) in insn 123:
Processing use of (reg 146 [ D.26056 ]) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 146 [ D.26056 ]) in insn 123:
Processing use of (reg 78 [ D.26056 ]) in insn 122:
Processing use of (reg 79 [ D.26056 ]) in insn 122:
Processing use of (reg 63 [ ivtmp.121 ]) in insn 144:
Processing use of (reg 63 [ ivtmp.121 ]) in insn 141:
Processing use of (reg 159) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 163) in insn 141:
Processing use of (reg 72 [ ivtmp.127 ]) in insn 140:
  Adding insn 145 to worklist
  Adding insn 13 to worklist
Processing use of (reg 79 [ D.26056 ]) in insn 140:
Processing use of (reg 72 [ ivtmp.127 ]) in insn 145:
Processing use of (reg 17 flags) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 63 [ ivtmp.121 ]) in insn 147:
Processing use of (reg 71 [ D.26059 ]) in insn 147:
  Adding insn 109 to worklist
Processing use of (reg 143 [ D.26059 ]) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 142 [ D.26059 ]) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 141 [ D.26058 ]) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 106:
Processing use of (reg 17 flags) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 78 [ D.26056 ]) in insn 119:
Processing use of (reg 79 [ D.26056 ]) in insn 119:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 1 dx) in insn 98:
  Adding insn 95 to worklist
Processing use of (reg 4 si) in insn 98:
  Adding insn 96 to worklist
Processing use of (reg 5 di) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 163) in insn 97:
  Adding insn 92 to worklist
Processing use of (reg 20 frame) in insn 92:
Processing use of (reg 135 [ D.26059 ]) in insn 95:
  Adding insn 91 to worklist
Processing use of (reg 134 [ D.26059 ]) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 90:
Processing use of (reg 92 [ ivtmp.138 ]) in insn 78:
  Adding insn 12 to worklist
  Adding insn 81 to worklist
Processing use of (reg 133) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 164) in insn 78:
  Adding insn 192 to worklist
Processing use of (reg 20 frame) in insn 192:
Processing use of (reg 66 [ D.26057 ]) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 21 xmm0) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 7 sp) in insn 74:
Processing use of (reg 21 xmm0) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 131 [ D.26057 ]) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 92 [ ivtmp.138 ]) in insn 72:
Processing use of (reg 102 [ D.26057 ]) in insn 72:
  Adding insn 65 to worklist
Processing use of (reg 111 [ floats ]) in insn 72:
  Adding insn 7 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 109 [ num_tilings ]) in insn 65:
Processing use of (reg 92 [ ivtmp.138 ]) in insn 81:
Processing use of (reg 17 flags) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 77 [ D.26059 ]) in insn 82:
  Adding insn 69 to worklist
Processing use of (reg 92 [ ivtmp.138 ]) in insn 82:
Processing use of (reg 130 [ D.26059 ]) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 129 [ D.26059 ]) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 128 [ D.26058 ]) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 66:
Processing use of (reg 17 flags) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 109 [ num_tilings ]) in insn 58:
Processing use of (reg 7 sp) in insn 49:
Processing use of (reg 1 dx) in insn 49:
  Adding insn 46 to worklist
Processing use of (reg 4 si) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 5 di) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 120 [ D.26061 ]) in insn 48:
  Adding insn 40 to worklist
Processing use of (reg 119 [ D.26062 ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 162) in insn 40:
  Adding insn 36 to worklist
Processing use of (reg 20 frame) in insn 36:
Processing use of (reg 118 [ D.26059 ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 117 [ D.26059 ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 37:
Processing use of (reg 113 [ ints ]) in insn 47:
  Adding insn 9 to worklist
Processing use of (reg 38 r9) in insn 9:
Processing use of (reg 122 [ D.26059 ]) in insn 46:
  Adding insn 42 to worklist
Processing use of (reg 121 [ D.26059 ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 114 [ num_ints ]) in insn 41:
Processing use of (reg 17 flags) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 112 [ num_floats ]) in insn 29:
Processing use of (reg 17 flags) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 114 [ num_ints ]) in insn 25:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, collision_table*, float*, int, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={5d,1u} r4={8d,4u} r5={8d,4u} r6={1d,19u} r7={1d,23u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,19u,1e} r17={42d,8u} r18={4d} r19={4d} r20={1d,26u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r62={1d,2u} r63={2d,6u} r66={1d,1u} r71={1d,1u} r72={2d,2u} r77={1d,1u} r78={1d,5u} r79={1d,4u} r82={2d,1u} r91={2d,2u} r92={2d,4u} r94={1d,1u} r95={2d,5u} r96={2d,1u} r102={1d,1u} r108={1d,1u} r109={1d,8u} r110={1d,1u} r111={1d,1u} r112={1d,8u} r113={1d,1u} r114={1d,3u} r115={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r146={1d,2u} r148={1d,1u} r149={1d} r150={1d,1u} r151={1d,1u} r152={1d,2u} r154={1d,1u} r155={1d} r156={1d,1u} r159={1d,1u} r160={1d,1u} r162={2d,3u} r163={2d,3u} r164={2d,2u} 
;;    total ref usage 518{306d,209u,3e} in 107{103 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 62 108 109 110 111 112 113 114 115
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 62 108 109 110 111 112 113 114 115
;; live  kill	 17 [flags]
(note 18 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 18 5 2 (set (reg/v/f:DI 108 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SI 109 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:84 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 110 [ ctable ])
        (reg:DI 1 dx [ ctable ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ctable ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 111 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 112 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:84 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 9 8 10 2 (set (reg/v/f:DI 113 [ ints ])
        (reg:DI 38 r9 [ ints ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ ints ])
        (nil)))
(insn 10 9 11 2 (set (reg/v:SI 114 [ num_ints ])
        (mem/c:SI (reg/f:DI 16 argp) [0 num_ints+0 S4 A64])) tiles.cpp:84 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 num_ints+0 S4 A64])
        (nil)))
(note 11 10 20 2 NOTE_INSN_FUNCTION_BEG)
(insn 20 11 21 2 (parallel [
            (set (reg:SI 115 [ D.26056 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (reg/v:SI 114 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:89 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg/v:SI 62 [ num_coordinates ])
                (plus:SI (reg:SI 115 [ D.26056 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:89 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ D.26056 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 22 21 24 2 (var_location:SI num_coordinates (reg/v:SI 62 [ num_coordinates ])) tiles.cpp:89 -1
     (nil))
(debug_insn 24 22 25 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 25 24 26 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 114 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:91 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 52 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) tiles.cpp:91 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
            (nil)))
 -> 34)
;;  succ:       4 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114

;; basic block 3, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 52 26 27 3 54 "" [0 uses])
(note 27 52 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 28 27 29 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 29 28 30 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 112 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:94 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 30 29 34 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) tiles.cpp:94 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 63)
;;  succ:       6 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112

;; basic block 4, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 117 118 119 120 121 122 162
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112 113 114
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 117 118 119 120 121 122 162
;; live  kill	 17 [flags]
(code_label 34 30 35 4 51 "" [1 uses])
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (parallel [
            (set (reg/f:DI 162)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 4 (set (reg:DI 117 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 112 [ num_floats ]))) tiles.cpp:91 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 118 [ D.26059 ])
                (ashift:DI (reg:DI 117 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 119 [ D.26062 ])
                (plus:DI (reg:DI 118 [ D.26059 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 120 [ D.26061 ])
                (plus:DI (reg/f:DI 162)
                    (reg:DI 119 [ D.26062 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 162)
        (expr_list:REG_DEAD (reg:DI 119 [ D.26062 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 41 40 42 4 (set (reg:DI 121 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 114 [ num_ints ]))) tiles.cpp:91 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 114 [ num_ints ])
        (nil)))
(insn 42 41 46 4 (parallel [
            (set (reg:DI 122 [ D.26059 ])
                (ashift:DI (reg:DI 121 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 42 47 4 (set (reg:DI 1 dx)
        (reg:DI 122 [ D.26059 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 122 [ D.26059 ])
        (nil)))
(insn 47 46 48 4 (set (reg:DI 4 si)
        (reg/v/f:DI 113 [ ints ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 113 [ ints ])
        (nil)))
(insn 48 47 49 4 (set (reg:DI 5 di)
        (reg:DI 120 [ D.26061 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 120 [ D.26061 ])
        (nil)))
(call_insn 49 48 55 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112

;; basic block 5, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              3 [4.8%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 55 49 56 5 53 "" [0 uses])
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 57 56 58 5 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 58 57 59 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 109 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:100 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 63 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) tiles.cpp:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 103)
;;  succ:       9 [91.0%] 
;;              19 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112

;; basic block 6, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 112
;; lr  def 	 17 [flags] 77 92 102 128 129 130 164
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 111 112
;; live  gen 	 77 92 102 128 129 130 164
;; live  kill	 17 [flags]
(code_label 63 59 64 6 52 "" [1 uses])
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 6 (set (reg:SF 102 [ D.26057 ])
        (float:SF (reg/v:SI 109 [ num_tilings ]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 66 65 67 6 (parallel [
            (set (reg:SI 128 [ D.26058 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 67 66 68 6 (set (reg:DI 129 [ D.26059 ])
        (zero_extend:DI (reg:SI 128 [ D.26058 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 128 [ D.26058 ])
        (nil)))
(insn 68 67 69 6 (parallel [
            (set (reg:DI 130 [ D.26059 ])
                (plus:DI (reg:DI 129 [ D.26059 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 12 6 (parallel [
            (set (reg:DI 77 [ D.26059 ])
                (ashift:DI (reg:DI 130 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 69 192 6 (set (reg:DI 92 [ ivtmp.138 ])
        (const_int 0 [0])) tiles.cpp:94 87 {*movdi_internal_rex64}
     (nil))
(insn 192 12 85 6 (set (reg/f:DI 164)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))) 267 {*leadi}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164

;; basic block 7, loop depth 0, count 0, freq 942, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 77 92 102 111 164
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 92 131 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; live  gen 	 17 [flags] 21 [xmm0] 66 92 131 133
;; live  kill	 17 [flags]
(code_label 85 192 70 7 58 "" [0 uses])
(note 70 85 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 7 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 72 71 73 7 (set (reg:SF 131 [ D.26057 ])
        (mult:SF (reg:SF 102 [ D.26057 ])
            (mem:SF (plus:DI (reg/v/f:DI 111 [ floats ])
                    (reg:DI 92 [ ivtmp.138 ])) [0 MEM[base: floats_26(D), index: ivtmp.138_58, offset: 0B]+0 S4 A32]))) tiles.cpp:95 777 {*fop_sf_comm_sse}
     (nil))
(insn 73 72 74 7 (set (reg:SF 21 xmm0)
        (reg:SF 131 [ D.26057 ])) tiles.cpp:95 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 131 [ D.26057 ])
        (nil)))
(call_insn/u 74 73 75 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:95 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 75 74 77 7 (set (reg:SF 66 [ D.26057 ])
        (reg:SF 21 xmm0)) tiles.cpp:95 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 77 75 78 7 (set (reg:SI 133)
        (fix:SI (reg:SF 66 [ D.26057 ]))) tiles.cpp:95 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 66 [ D.26057 ])
        (nil)))
(insn 78 77 80 7 (set (mem:SI (plus:DI (reg/f:DI 164)
                (reg:DI 92 [ ivtmp.138 ])) [0 MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B]+0 S4 A32])
        (reg:SI 133)) tiles.cpp:95 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(debug_insn 80 78 81 7 (var_location:SI i (debug_expr:SI D#9)) -1
     (nil))
(insn 81 80 82 7 (parallel [
            (set (reg:DI 92 [ ivtmp.138 ])
                (plus:DI (reg:DI 92 [ ivtmp.138 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 82 81 83 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ ivtmp.138 ])
            (reg:DI 77 [ D.26059 ]))) tiles.cpp:94 8 {*cmpdi_1}
     (nil))
(jump_insn 83 82 88 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) tiles.cpp:94 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 88)
;;  succ:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              8 [4.8%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 77 92 102 108 109 110 111 112 164

;; basic block 8, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.8%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 134 135 163
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 134 135 163
;; live  kill	 17 [flags]
(code_label 88 83 89 8 57 "" [1 uses])
(note 89 88 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 8 (set (reg:DI 134 [ D.26059 ])
        (sign_extend:DI (reg/v:SI 112 [ num_floats ]))) tiles.cpp:96 149 {*extendsidi2_rex64}
     (nil))
(insn 91 90 92 8 (parallel [
            (set (reg:DI 135 [ D.26059 ])
                (ashift:DI (reg:DI 134 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:96 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 134 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 92 91 95 8 (parallel [
            (set (reg/f:DI 163)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 95 92 96 8 (set (reg:DI 1 dx)
        (reg:DI 135 [ D.26059 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 135 [ D.26059 ])
        (nil)))
(insn 96 95 97 8 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 97 96 98 8 (set (reg:DI 5 di)
        (reg/f:DI 163)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00]))
            (nil))))
(call_insn 98 97 103 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112

;; basic block 9, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108 112
;; lr  def 	 17 [flags] 71 91 95 141 142 143 162
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 108 109 110 112
;; live  gen 	 71 91 95 141 142 143 162
;; live  kill	 17 [flags]
(code_label 103 98 104 9 55 "" [1 uses])
(note 104 103 105 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 9 (set (reg:DI 91 [ ivtmp.132 ])
        (reg/v/f:DI 108 [ the_tiles ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 108 [ the_tiles ])
        (nil)))
(insn 106 105 107 9 (parallel [
            (set (reg:SI 141 [ D.26058 ])
                (plus:SI (reg/v:SI 112 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 107 106 108 9 (set (reg:DI 142 [ D.26059 ])
        (zero_extend:DI (reg:SI 141 [ D.26058 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141 [ D.26058 ])
        (nil)))
(insn 108 107 109 9 (parallel [
            (set (reg:DI 143 [ D.26059 ])
                (plus:DI (reg:DI 142 [ D.26059 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 17 9 (parallel [
            (set (reg:DI 71 [ D.26059 ])
                (ashift:DI (reg:DI 143 [ D.26059 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.26059 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 109 193 9 (set (reg/v:SI 95 [ j ])
        (const_int 0 [0])) tiles.cpp:100 89 {*movsi_internal}
     (nil))
(insn 193 17 174 9 (set (reg/f:DI 162)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))) 267 {*leadi}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162

;; basic block 10, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [95.2%]  (DFS_BACK)
;;              18 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 163 164
;; lr  def 	 17 [flags] 78 79
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; live  gen 	 17 [flags] 78 79
;; live  kill	
(code_label 174 193 113 10 64 "" [1 uses])
(note 113 174 114 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 114 113 116 10 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 116 114 118 10 (set (reg:SI 78 [ D.26056 ])
        (mem:SI (plus:DI (reg/f:DI 164)
                (reg:DI 63 [ ivtmp.121 ])) [0 MEM[symbol: qstate, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 89 {*movsi_internal}
     (nil))
(insn 118 116 119 10 (set (reg:SI 79 [ D.26056 ])
        (mem:SI (plus:DI (reg/f:DI 163)
                (reg:DI 63 [ ivtmp.121 ])) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 89 {*movsi_internal}
     (nil))
(insn 119 118 120 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 78 [ D.26056 ])
            (reg:SI 79 [ D.26056 ]))) tiles.cpp:106 7 {*cmpsi_1}
     (nil))
(jump_insn 120 119 121 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) tiles.cpp:106 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 127)
;;  succ:       11 [50.0%]  (FALLTHRU)
;;              12 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164

;; basic block 11, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 79 109
;; lr  def 	 17 [flags] 82 146 148 149
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; live  gen 	 82 146 148 149
;; live  kill	 17 [flags]
(note 121 120 122 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 11 (parallel [
            (set (reg:SI 146 [ D.26056 ])
                (minus:SI (reg:SI 78 [ D.26056 ])
                    (reg:SI 79 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 309 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 123 122 124 11 (parallel [
            (set (reg:SI 149)
                (div:SI (reg:SI 146 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (set (reg:SI 148 [ D.26056 ])
                (mod:SI (reg:SI 146 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 146 [ D.26056 ])
        (expr_list:REG_UNUSED (reg:SI 149)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 124 123 127 11 (parallel [
            (set (reg:SI 82 [ D.26056 ])
                (minus:SI (reg:SI 78 [ D.26056 ])
                    (reg:SI 148 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 148 [ D.26056 ])
        (expr_list:REG_DEAD (reg:SI 78 [ D.26056 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164

;; basic block 12, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u125(6){ }u126(7){ }u127(16){ }u128(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 79 109
;; lr  def 	 17 [flags] 82 150 151 152 154 155 156
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 78 79 91 95 109 110 112 162 163 164
;; live  gen 	 82 150 151 152 154 155 156
;; live  kill	 17 [flags]
(code_label 127 124 128 12 60 "" [1 uses])
(note 128 127 129 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 12 (parallel [
            (set (reg:SI 150 [ D.26056 ])
                (plus:SI (reg:SI 78 [ D.26056 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 12 (parallel [
            (set (reg:SI 151 [ D.26056 ])
                (minus:SI (reg:SI 79 [ D.26056 ])
                    (reg:SI 78 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 78 [ D.26056 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 131 130 132 12 (parallel [
            (set (reg:SI 152 [ D.26056 ])
                (plus:SI (reg:SI 151 [ D.26056 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 151 [ D.26056 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 133 12 (parallel [
            (set (reg:SI 155)
                (div:SI (reg:SI 152 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (set (reg:SI 154 [ D.26056 ])
                (mod:SI (reg:SI 152 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 152 [ D.26056 ])
        (expr_list:REG_UNUSED (reg:SI 155)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 133 132 134 12 (parallel [
            (set (reg:SI 156 [ D.26056 ])
                (plus:SI (reg:SI 150 [ D.26056 ])
                    (reg:SI 154 [ D.26056 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 154 [ D.26056 ])
        (expr_list:REG_DEAD (reg:SI 150 [ D.26056 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 134 133 135 12 (parallel [
            (set (reg:SI 82 [ D.26056 ])
                (minus:SI (reg:SI 156 [ D.26056 ])
                    (reg/v:SI 109 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 156 [ D.26056 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164

;; basic block 13, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u141(6){ }u142(7){ }u143(16){ }u144(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 79 82 162 163
;; lr  def 	 17 [flags] 63 72 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 79 82 91 95 109 110 112 162 163 164
;; live  gen 	 17 [flags] 63 72 159
;; live  kill	 17 [flags]
(code_label 135 134 136 13 61 "" [0 uses])
(note 136 135 138 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 138 136 140 13 (set (mem:SI (plus:DI (reg/f:DI 162)
                (reg:DI 63 [ ivtmp.121 ])) [0 MEM[symbol: coordinates, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 82 [ D.26056 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ D.26056 ])
        (nil)))
(insn 140 138 141 13 (parallel [
            (set (reg:SI 159)
                (plus:SI (reg:SI 79 [ D.26056 ])
                    (reg:SI 72 [ ivtmp.127 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:112 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 79 [ D.26056 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 141 140 143 13 (set (mem:SI (plus:DI (reg/f:DI 163)
                (reg:DI 63 [ ivtmp.121 ])) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 159)) tiles.cpp:112 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 159)
        (nil)))
(debug_insn 143 141 144 13 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))
(insn 144 143 145 13 (parallel [
            (set (reg:DI 63 [ ivtmp.121 ])
                (plus:DI (reg:DI 63 [ ivtmp.121 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 145 144 147 13 (parallel [
            (set (reg:SI 72 [ ivtmp.127 ])
                (plus:SI (reg:SI 72 [ ivtmp.127 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 145 148 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 63 [ ivtmp.121 ])
            (reg:DI 71 [ D.26059 ]))) tiles.cpp:103 8 {*cmpdi_1}
     (nil))
(jump_insn 148 147 181 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 174)
            (pc))) tiles.cpp:103 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 174)
;;  succ:       10 [95.2%]  (DFS_BACK)
;;              14 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164

;; basic block 14, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u158(6){ }u159(7){ }u160(16){ }u161(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 96
;; live  kill	
(note 181 148 15 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 15 181 185 14 (set (reg/v:SI 96 [ num_floats ])
        (reg/v:SI 112 [ num_floats ])) 89 {*movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162

;; basic block 15, loop depth 0, count 0, freq 23, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [4.8%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u163(6){ }u164(7){ }u165(16){ }u166(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 96
;; live  kill	
(code_label 185 15 184 15 65 "" [1 uses])
(note 184 185 16 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 16 184 170 15 (set (reg/v:SI 96 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:103 89 {*movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162

;; basic block 16, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u167(6){ }u168(7){ }u169(16){ }u170(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 91 95 96 109 110 162
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 94 95 160
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 96 109 110 112 162
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 91 94 95 160
;; live  kill	 17 [flags]
(code_label 170 16 149 16 63 "" [0 uses])
(note 149 170 150 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 16 (set (reg:DI 160 [ num_floats ])
        (sign_extend:DI (reg/v:SI 96 [ num_floats ]))) tiles.cpp:115 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 96 [ num_floats ])
        (nil)))
(insn 151 150 153 16 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 160 [ num_floats ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 95 [ j ])) tiles.cpp:115 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 160 [ num_floats ])
        (nil)))
(insn 153 151 154 16 (set (reg:DI 1 dx)
        (reg/v/f:DI 110 [ ctable ])) tiles.cpp:117 87 {*movdi_internal_rex64}
     (nil))
(insn 154 153 155 16 (set (reg:SI 4 si)
        (reg/v:SI 62 [ num_coordinates ])) tiles.cpp:117 89 {*movsi_internal}
     (nil))
(insn 155 154 156 16 (set (reg:DI 5 di)
        (reg/f:DI 162)) tiles.cpp:117 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 156 155 157 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b82f1f16800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:117 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 157 156 158 16 (set (reg:SI 94 [ D.26056 ])
        (reg:SI 0 ax)) tiles.cpp:117 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 158 157 159 16 (set (mem:SI (reg:DI 91 [ ivtmp.132 ]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 94 [ D.26056 ])) tiles.cpp:117 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ D.26056 ])
        (nil)))
(insn 159 158 161 16 (parallel [
            (set (reg/v:SI 95 [ j ])
                (plus:SI (reg/v:SI 95 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:100 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 161 159 162 16 (var_location:SI j (reg/v:SI 95 [ j ])) -1
     (nil))
(insn 162 161 163 16 (parallel [
            (set (reg:DI 91 [ ivtmp.132 ])
                (plus:DI (reg:DI 91 [ ivtmp.132 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 163 162 164 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ j ])
            (reg/v:SI 109 [ num_tilings ]))) tiles.cpp:100 7 {*cmpsi_1}
     (nil))
(jump_insn 164 163 166 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 179)
            (pc))) tiles.cpp:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 179)
;;  succ:       17 [91.0%]  (FALLTHRU,DFS_BACK)
;;              19 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162

;; basic block 17, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [91.0%]  (FALLTHRU,DFS_BACK)
;;              9 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u192(6){ }u193(7){ }u194(16){ }u195(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 166 164 167 17 59 "" [0 uses])
(note 167 166 168 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 168 167 169 17 (var_location:SI j (reg/v:SI 95 [ j ])) -1
     (nil))
(debug_insn 169 168 171 17 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 171 169 172 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 112 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:103 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 172 171 173 17 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 185)
            (pc))) tiles.cpp:103 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 185)
;;  succ:       18 [95.2%]  (FALLTHRU)
;;              15 [4.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162

;; basic block 18, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [95.2%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u199(6){ }u200(7){ }u201(16){ }u202(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63 72 163 164
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 91 95 109 110 112 162
;; live  gen 	 63 72 163 164
;; live  kill	
(note 173 172 13 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 13 173 14 18 (set (reg:SI 72 [ ivtmp.127 ])
        (const_int 1 [0x1])) tiles.cpp:103 89 {*movsi_internal}
     (nil))
(insn 14 13 194 18 (set (reg:DI 63 [ ivtmp.121 ])
        (const_int 0 [0])) tiles.cpp:103 87 {*movdi_internal_rex64}
     (nil))
(insn 194 14 195 18 (set (reg/f:DI 164)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))) 267 {*leadi}
     (nil))
(insn 195 194 179 18 (set (reg/f:DI 163)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -256 [0xffffffffffffff00]))) 267 {*leadi}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 71 72 91 95 109 110 112 162 163 164

;; basic block 19, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 18, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [9.0%]  (LOOP_EXIT)
;;              5 [9.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u205(6){ }u206(7){ }u207(16){ }u208(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 179 195 180 19 50 "" [1 uses])
(note 180 179 0 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void collision_table::reset() (_ZN15collision_table5resetEv, funcdef_no=1065, decl_uid=23655, cgraph_uid=309)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)


void collision_table::reset()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={4d,2u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r63={2d,4u} r65={2d,2u} r66={1d,6u} r67={1d,1u} 
;;    total ref usage 66{30d,36u,0e} in 19{19 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,11] 20[12,12] 21[13,13] 22[14,14] 23[15,15] 24[16,16] 25[17,17] 26[18,18] 27[19,19] 28[20,20] 37[21,21] 38[22,22] 59[23,23] 63[24,25] 65[26,27] 66[28,28] 67[29,29] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d12(20){ }d13(21){ }d14(22){ }d15(23){ }d16(24){ }d17(25){ }d18(26){ }d19(27){ }d20(28){ }d21(37){ }d22(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[12],21[13],22[14],23[15],24[16],25[17],26[18],27[19],28[20],37[21],38[22]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[12],21[13],22[14],23[15],24[16],25[17],26[18],27[19],28[20],37[21],38[22]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[4],6[5],7[6],16[7],20[12]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d12(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 65 66
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 63 65 66
;; live  kill	
;; rd  in  	(5) 5[4],6[5],7[6],16[7],20[12]
;; rd  gen 	(4) 17[11],63[25],65[27],66[28]
;; rd  kill	(9) 17[8,9,10,11],63[24,25],65[26,27],66[28]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; rd  out 	(7) 6[5],7[6],16[7],20[12],63[25],65[27],66[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d12(bb 0 insn -1) }

( 2 4 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ d5(bb 0 insn -1) }u8(7){ d6(bb 0 insn -1) }u9(16){ d7(bb 0 insn -1) }u10(20){ d12(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; live  gen 	
;; live  kill	
;; rd  in  	(9) 6[5],7[6],16[7],20[12],63[24,25],65[26,27],66[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[12]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d12(bb 0 insn -1) }

( 2 4 )->[4]->( 4 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ d5(bb 0 insn -1) }u15(7){ d6(bb 0 insn -1) }u16(16){ d7(bb 0 insn -1) }u17(20){ d12(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; lr  def 	 17 [flags] 59 63 65 67
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; live  gen 	 17 [flags] 59 63 65 67
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[5],7[6],16[7],17[8],20[12],59[23],63[24,25],65[26,27],66[28],67[29]
;; rd  gen 	(5) 17[8],59[23],63[24],65[26],67[29]
;; rd  kill	(10) 17[8,9,10,11],59[23],63[24,25],65[26,27],67[29]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; rd  out 	(7) 6[5],7[6],16[7],20[12],63[24],65[26],66[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d12(bb 0 insn -1) }

( 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(6){ d5(bb 0 insn -1) }u30(7){ d6(bb 0 insn -1) }u31(16){ d7(bb 0 insn -1) }u32(20){ d12(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[12]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[12]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d12(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(6){ d5(bb 0 insn -1) }u34(7){ d6(bb 0 insn -1) }u35(20){ d12(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[12]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d12(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 33 to worklist
  Adding insn 24 to worklist
Finished finding needed instructions:
Processing use of (reg 65 [ ivtmp.146 ]) in insn 24:
  Adding insn 5 to worklist
  Adding insn 29 to worklist
Processing use of (reg 67 [ this_5(D)->data ]) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 66 [ this ]) in insn 22:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 65 [ ivtmp.146 ]) in insn 29:
Processing use of (reg 17 flags) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 59 [ D.26075 ]) in insn 32:
  Adding insn 28 to worklist
Processing use of (reg 66 [ this ]) in insn 32:
Processing use of (reg 63 [ ivtmp.147 ]) in insn 28:
  Adding insn 4 to worklist
  Adding insn 30 to worklist
Processing use of (reg 63 [ ivtmp.147 ]) in insn 30:
Processing use of (reg 66 [ this ]) in insn 13:
Processing use of (reg 66 [ this ]) in insn 14:
Processing use of (reg 66 [ this ]) in insn 15:
Processing use of (reg 17 flags) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 66 [ this ]) in insn 10:
starting the processing of deferred insns
ending the processing of deferred insns


void collision_table::reset()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={4d,2u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r63={2d,4u} r65={2d,2u} r66={1d,6u} r67={1d,1u} 
;;    total ref usage 66{30d,36u,0e} in 19{19 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 65 66
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 63 65 66
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 66 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:201 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 3 4 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 4 9 5 2 (set (reg:DI 63 [ ivtmp.147 ])
        (const_int 1 [0x1])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (nil))
(insn 5 4 10 2 (set (reg:DI 65 [ ivtmp.146 ])
        (const_int 0 [0])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (nil))
(insn 10 5 11 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/j:DI (reg/f:DI 66 [ this ]) [0 this_5(D)->m+0 S8 A64])
            (const_int 0 [0]))) tiles.cpp:202 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 31 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) tiles.cpp:202 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 41)
;;  succ:       4 [91.0%] 
;;              3 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%]  (FALLTHRU)
;;              4 [9.0%]  (LOOP_EXIT)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; live  gen 	
;; live  kill	
(code_label 31 11 12 3 71 "" [1 uses])
(note 12 31 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 24 [0x18])) [0 this_5(D)->calls+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:203 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 32 [0x20])) [0 this_5(D)->clearhits+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:204 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 41 3 (set (mem/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 40 [0x28])) [0 this_5(D)->collisions+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:205 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ this ])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%] 
;;              4 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; lr  def 	 17 [flags] 59 63 65 67
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; live  gen 	 17 [flags] 59 63 65 67
;; live  kill	 17 [flags]
(code_label 41 15 40 4 73 "" [1 uses])
(note 40 41 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 40 22 4 (var_location:SI i (plus:SI (subreg:SI (reg:DI 63 [ ivtmp.147 ]) 0)
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 22 21 24 4 (set (reg/f:DI 67 [ this_5(D)->data ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ this ])
                (const_int 8 [0x8])) [0 this_5(D)->data+0 S8 A64])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (nil))
(insn 24 22 25 4 (set (mem:DI (plus:DI (reg/f:DI 67 [ this_5(D)->data ])
                (reg:DI 65 [ ivtmp.146 ])) [0 *_10+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67 [ this_5(D)->data ])
        (nil)))
(debug_insn 25 24 27 4 (var_location:SI D#10 (subreg:SI (reg:DI 63 [ ivtmp.147 ]) 0)) -1
     (nil))
(debug_insn 27 25 28 4 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 59 [ D.26075 ])
        (reg:DI 63 [ ivtmp.147 ])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 65 [ ivtmp.146 ])
                (plus:DI (reg:DI 65 [ ivtmp.146 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 32 4 (parallel [
            (set (reg:DI 63 [ ivtmp.147 ])
                (plus:DI (reg:DI 63 [ ivtmp.147 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 30 33 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 59 [ D.26075 ])
            (mem/j:DI (reg/f:DI 66 [ this ]) [0 this_5(D)->m+0 S8 A64]))) tiles.cpp:202 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.26075 ])
        (nil)))
(jump_insn 33 32 39 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) tiles.cpp:202 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 31)
;;  succ:       4 [91.0%]  (FALLTHRU,DFS_BACK)
;;              3 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66

;; basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 39 33 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function collision_table::collision_table(int, int) (_ZN15collision_tableC2Eii, funcdef_no=1067, decl_uid=23671, cgraph_uid=311)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 12 (  1.3)


collision_table::collision_table(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={6d,2u} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={13d,5u,1e} r18={4d} r19={4d} r20={1d,8u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r62={2d,5u} r64={1d,1u} r68={1d,4u} r69={1d,6u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r75={1d,3u,1e} r76={1d,1u,1e} r77={1d,1u} 
;;    total ref usage 304{224d,77u,3e} in 40{36 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210
;;  reg->defs[] map:	0[0,5] 1[6,11] 2[12,16] 4[17,22] 5[23,31] 6[32,32] 7[33,33] 8[34,37] 9[38,41] 10[42,45] 11[46,49] 12[50,53] 13[54,57] 14[58,61] 15[62,65] 16[66,66] 17[67,79] 18[80,83] 19[84,87] 20[88,88] 21[89,93] 22[94,98] 23[99,103] 24[104,108] 25[109,113] 26[114,118] 27[119,123] 28[124,128] 29[129,132] 30[133,136] 31[137,140] 32[141,144] 33[145,148] 34[149,152] 35[153,156] 36[157,160] 37[161,165] 38[166,170] 39[171,174] 40[175,178] 45[179,182] 46[183,186] 47[187,190] 48[191,194] 49[195,198] 50[199,202] 51[203,206] 52[207,210] 59[211,211] 62[212,213] 64[214,214] 68[215,215] 69[216,216] 70[217,217] 71[218,218] 72[219,219] 73[220,220] 75[221,221] 76[222,222] 77[223,223] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d11(1){ }d16(2){ }d22(4){ }d31(5){ }d32(6){ }d33(7){ }d66(16){ }d88(20){ }d93(21){ }d98(22){ }d103(23){ }d108(24){ }d113(25){ }d118(26){ }d123(27){ }d128(28){ }d165(37){ }d170(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[5],1[11],2[16],4[22],5[31],6[32],7[33],16[66],20[88],21[93],22[98],23[103],24[108],25[113],26[118],27[123],28[128],37[165],38[170]
;; rd  kill	(86) 0[0,1,2,3,4,5],1[6,7,8,9,10,11],2[12,13,14,15,16],4[17,18,19,20,21,22],5[23,24,25,26,27,28,29,30,31],6[32],7[33],16[66],20[88],21[89,90,91,92,93],22[94,95,96,97,98],23[99,100,101,102,103],24[104,105,106,107,108],25[109,110,111,112,113],26[114,115,116,117,118],27[119,120,121,122,123],28[124,125,126,127,128],37[161,162,163,164,165],38[166,167,168,169,170]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[11],4[22],5[31],6[32],7[33],16[66],20[88]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 8 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d32(bb 0 insn -1) }u1(7){ d33(bb 0 insn -1) }u2(16){ d66(bb 0 insn -1) }u3(20){ d88(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	
;; rd  in  	(7) 1[11],4[22],5[31],6[32],7[33],16[66],20[88]
;; rd  gen 	(4) 17[79],68[215],69[216],70[217]
;; rd  kill	(16) 17[67,68,69,70,71,72,73,74,75,76,77,78,79],68[215],69[216],70[217]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; rd  out 	(7) 6[32],7[33],16[66],20[88],68[215],69[216],70[217]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 2 )->[3]->( 5 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ d32(bb 0 insn -1) }u11(7){ d33(bb 0 insn -1) }u12(16){ d66(bb 0 insn -1) }u13(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 17 [flags] 71
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  gen 	 17 [flags] 71
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[32],7[33],16[66],20[88],68[215],69[216],70[217]
;; rd  gen 	(2) 17[77],71[218]
;; rd  kill	(14) 17[67,68,69,70,71,72,73,74,75,76,77,78,79],71[218]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; rd  out 	(7) 6[32],7[33],16[66],20[88],68[215],69[216],70[217]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 7 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ d32(bb 0 insn -1) }u18(7){ d33(bb 0 insn -1) }u19(16){ d66(bb 0 insn -1) }u20(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 17 [flags] 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  gen 	 17 [flags] 72
;; live  kill	 17 [flags]
;; rd  in  	(9) 6[32],7[33],16[66],17[71],20[88],62[212],68[215],69[216],70[217]
;; rd  gen 	(2) 17[75],72[219]
;; rd  kill	(14) 17[67,68,69,70,71,72,73,74,75,76,77,78,79],72[219]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; rd  out 	(8) 6[32],7[33],16[66],20[88],62[212],68[215],69[216],70[217]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 4 3 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(6){ d32(bb 0 insn -1) }u25(7){ d33(bb 0 insn -1) }u26(16){ d66(bb 0 insn -1) }u27(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(8) 6[32],7[33],16[66],20[88],62[212],68[215],69[216],70[217]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[33],16[66],20[88]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 3 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(6){ d32(bb 0 insn -1) }u37(7){ d33(bb 0 insn -1) }u38(16){ d66(bb 0 insn -1) }u39(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  gen 	 62
;; live  kill	
;; rd  in  	(7) 6[32],7[33],16[66],20[88],68[215],69[216],70[217]
;; rd  gen 	(1) 62[213]
;; rd  kill	(2) 62[212,213]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; rd  out 	(8) 6[32],7[33],16[66],20[88],62[213],68[215],69[216],70[217]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 4 6 )->[7]->( 4 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(6){ d32(bb 0 insn -1) }u42(7){ d33(bb 0 insn -1) }u43(16){ d66(bb 0 insn -1) }u44(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 17 [flags] 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  gen 	 17 [flags] 62
;; live  kill	 17 [flags]
;; rd  in  	(9) 6[32],7[33],16[66],20[88],62[212,213],68[215],69[216],70[217]
;; rd  gen 	(2) 17[71],62[212]
;; rd  kill	(15) 17[67,68,69,70,71,72,73,74,75,76,77,78,79],62[212,213]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; rd  out 	(8) 6[32],7[33],16[66],20[88],62[212],68[215],69[216],70[217]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 7 2 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(6){ d32(bb 0 insn -1) }u51(7){ d33(bb 0 insn -1) }u52(16){ d66(bb 0 insn -1) }u53(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 64 73 75 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 59 64 73 75 76 77
;; live  kill	 17 [flags]
;; rd  in  	(8) 6[32],7[33],16[66],20[88],62[212],68[215],69[216],70[217]
;; rd  gen 	(6) 59[211],64[214],73[220],75[221],76[222],77[223]
;; rd  kill	(6) 59[211],64[214],73[220],75[221],76[222],77[223]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[32],7[33],16[66],20[88]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u77(6){ d32(bb 0 insn -1) }u78(7){ d33(bb 0 insn -1) }u79(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[32],7[33],16[66],20[88]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 17 to worklist
  Adding insn 24 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 49 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 61:
Processing use of (reg 5 di) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 59 [ iftmp.7 ]) in insn 60:
  Adding insn 81 to worklist
Processing use of (reg 17 flags) in insn 81:
  Adding insn 79 to worklist
Processing use of (reg 76) in insn 81:
  Adding insn 78 to worklist
Processing use of (reg 77) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 75 [ size ]) in insn 78:
  Adding insn 52 to worklist
Processing use of (reg 69 [ size ]) in insn 52:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 73) in insn 79:
  Adding insn 53 to worklist
Processing use of (reg 75 [ size ]) in insn 79:
Processing use of (reg 64 [ D.26081 ]) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 68 [ this ]) in insn 63:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 0 ax) in insn 62:
Processing use of (reg 68 [ this ]) in insn 65:
Processing use of (reg 75 [ size ]) in insn 65:
Processing use of (reg 68 [ this ]) in insn 66:
Processing use of (reg 70 [ safety ]) in insn 66:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 7 sp) in insn 68:
Processing use of (reg 5 di) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 68 [ this ]) in insn 67:
Processing use of (reg 17 flags) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 62 [ size ]) in insn 48:
  Adding insn 44 to worklist
Processing use of (reg 62 [ size ]) in insn 44:
  Adding insn 6 to worklist
Processing use of (reg 69 [ size ]) in insn 6:
Processing use of (reg 7 sp) in insn 35:
Processing use of (reg 0 ax) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 1 dx) in insn 35:
  Adding insn 31 to worklist
Processing use of (reg 4 si) in insn 35:
  Adding insn 32 to worklist
Processing use of (reg 5 di) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 69 [ size ]) in insn 31:
Processing use of (reg 7 sp) in insn 37:
Processing use of (reg 5 di) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 17 flags) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 72 [ D.26079 ]) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 62 [ size ]) in insn 22:
Processing use of (reg 17 flags) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 71 [ D.26079 ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 69 [ size ]) in insn 15:
Processing use of (reg 17 flags) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 69 [ size ]) in insn 12:
starting the processing of deferred insns
ending the processing of deferred insns


collision_table::collision_table(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={6d,2u} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={13d,5u,1e} r18={4d} r19={4d} r20={1d,8u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r62={2d,5u} r64={1d,1u} r68={1d,4u} r69={1d,6u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r75={1d,3u,1e} r76={1d,1u,1e} r77={1d,1u} 
;;    total ref usage 304{224d,77u,3e} in 40{36 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 454, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68 69 70
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 68 69 70
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 68 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:208 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 69 [ size ])
        (reg:SI 4 si [ size ])) tiles.cpp:208 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 70 [ safety ])
        (reg:SI 1 dx [ safety ])) tiles.cpp:208 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ safety ])
        (nil)))
(note 5 4 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 5 12 2 (var_location:SI tmp (reg/v:SI 69 [ size ])) -1
     (nil))
(insn 12 11 13 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 69 [ size ])
            (const_int 2 [0x2]))) tiles.cpp:210 7 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) tiles.cpp:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil)))
 -> 50)
;;  succ:       3 [95.5%]  (FALLTHRU)
;;              8 [4.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70

;; basic block 3, loop depth 0, count 0, freq 430, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [95.5%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 17 [flags] 71
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  gen 	 17 [flags] 71
;; live  kill	 17 [flags]
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (parallel [
            (set (reg:SI 71 [ D.26079 ])
                (and:SI (reg/v:SI 69 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:211 393 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71 [ D.26079 ])
            (const_int 0 [0]))) tiles.cpp:211 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 71 [ D.26079 ])
        (nil)))
(jump_insn 17 16 47 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) tiles.cpp:211 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil)))
 -> 28)
;;  succ:       5 [0.0%] 
;;              6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70

;; basic block 4, loop depth 0, count 0, freq 9120, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 17 [flags] 72
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  gen 	 17 [flags] 72
;; live  kill	 17 [flags]
(code_label 47 17 21 4 80 "" [1 uses])
(note 21 47 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (parallel [
            (set (reg:SI 72 [ D.26079 ])
                (and:SI (reg/v:SI 62 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:211 393 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72 [ D.26079 ])
            (const_int 0 [0]))) tiles.cpp:211 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 72 [ D.26079 ])
        (nil)))
(jump_insn 24 23 28 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) tiles.cpp:211 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil)))
 -> 28)
;;  succ:       5 [0.0%]  (LOOP_EXIT)
;;              7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70

;; basic block 5, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [0.0%]  (LOOP_EXIT)
;;              3 [0.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 28 24 29 5 77 "" [2 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 30 29 31 5 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b82f85a0130 *.LC1>)) -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 1 dx)
        (reg/v:SI 69 [ size ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 69 [ size ])
        (nil)))
(insn 32 31 33 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b82f85a0130 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 5 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 91 {*movqi_internal}
     (nil))
(call_insn 35 34 36 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
(insn 36 35 37 5 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:213 89 {*movsi_internal}
     (nil))
(call_insn 37 36 40 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b82f08ee700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:213 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 430, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  gen 	 62
;; live  kill	
(note 40 37 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 40 41 6 (set (reg/v:SI 62 [ size ])
        (reg/v:SI 69 [ size ])) tiles.cpp:211 89 {*movsi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70

;; basic block 7, loop depth 0, count 0, freq 9546, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(6){ }u42(7){ }u43(16){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 17 [flags] 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  gen 	 17 [flags] 62
;; live  kill	 17 [flags]
(code_label 41 6 42 7 79 "" [0 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 7 (var_location:SI tmp (reg/v:SI 62 [ size ])) -1
     (nil))
(insn 44 43 46 7 (parallel [
            (set (reg/v:SI 62 [ size ])
                (ashiftrt:SI (reg/v:SI 62 [ size ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:215 546 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 46 44 48 7 (var_location:SI tmp (reg/v:SI 62 [ size ])) -1
     (nil))
(insn 48 46 49 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ size ])
            (const_int 2 [0x2]))) tiles.cpp:210 7 {*cmpsi_1}
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) tiles.cpp:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil)))
 -> 47)
;;  succ:       4 [95.5%] 
;;              8 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 68 69 70

;; basic block 8, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              2 [4.5%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 64 73 75 76 77
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 59 64 73 75 76 77
;; live  kill	 17 [flags]
(code_label 50 49 51 8 76 "" [1 uses])
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 8 (set (reg:DI 75 [ size ])
        (sign_extend:DI (reg/v:SI 69 [ size ]))) tiles.cpp:217 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 69 [ size ])
        (nil)))
(insn 53 52 78 8 (set (reg:DI 73)
        (const_int 1143914305352105984 [0xfe0000000000000])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (nil))
(insn 78 53 80 8 (parallel [
            (set (reg:DI 76)
                (ashift:DI (reg:DI 75 [ size ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:217 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 80 78 79 8 (set (reg:DI 77)
        (const_int -1 [0xffffffffffffffff])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (nil))
(insn 79 80 81 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 75 [ size ])
            (reg:DI 73))) tiles.cpp:217 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 73)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 75 [ size ])
                (const_int 1143914305352105984 [0xfe0000000000000]))
            (nil))))
(insn 81 79 60 8 (set (reg:DI 59 [ iftmp.7 ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 76)
            (reg:DI 77))) tiles.cpp:217 934 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 77)
        (expr_list:REG_DEAD (reg:DI 76)
            (expr_list:REG_DEAD (reg:CC 17 flags)
                (expr_list:REG_EQUAL (if_then_else:DI (leu (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:DI 76)
                        (const_int -1 [0xffffffffffffffff]))
                    (nil))))))
(insn 60 81 61 8 (set (reg:DI 5 di)
        (reg:DI 59 [ iftmp.7 ])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 59 [ iftmp.7 ])
        (nil)))
(call_insn 61 60 62 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x2b82f096c800 operator new []>) [0 operator new [] S1 A8])
            (const_int 0 [0]))) tiles.cpp:217 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 62 61 63 8 (set (reg/f:DI 64 [ D.26081 ])
        (reg:DI 0 ax)) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 63 62 65 8 (set (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_14(D)->data+0 S8 A64])
        (reg/f:DI 64 [ D.26081 ])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.26081 ])
        (nil)))
(insn 65 63 66 8 (set (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_14(D)->m+0 S8 A64])
        (reg:DI 75 [ size ])) tiles.cpp:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 75 [ size ])
        (nil)))
(insn 66 65 67 8 (set (mem/j:SI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 16 [0x10])) [0 this_14(D)->safe+0 S4 A64])
        (reg/v:SI 70 [ safety ])) tiles.cpp:219 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 70 [ safety ])
        (nil)))
(insn 67 66 68 8 (set (reg:DI 5 di)
        (reg/f:DI 68 [ this ])) tiles.cpp:220 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ this ])
        (nil)))
(call_insn/j 68 67 0 8 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x1]  <function_decl 0x2b82f1f05500 reset>) [0 reset S1 A8])
        (const_int 0 [0])) tiles.cpp:220 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function collision_table::~collision_table() (_ZN15collision_tableD2Ev, funcdef_no=1070, decl_uid=23678, cgraph_uid=314)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


collision_table::~collision_table()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,2u} r60={1d,1u} 
;;    total ref usage 89{67d,22u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,23] 18[24,24] 19[25,25] 20[26,26] 21[27,28] 22[29,30] 23[31,32] 24[33,34] 25[35,36] 26[37,38] 27[39,40] 28[41,42] 29[43,43] 30[44,44] 31[45,45] 32[46,46] 33[47,47] 34[48,48] 35[49,49] 36[50,50] 37[51,52] 38[53,54] 39[55,55] 40[56,56] 45[57,57] 46[58,58] 47[59,59] 48[60,60] 49[61,61] 50[62,62] 51[63,63] 52[64,64] 59[65,65] 60[66,66] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d26(20){ }d28(21){ }d30(22){ }d32(23){ }d34(24){ }d36(25){ }d38(26){ }d40(27){ }d42(28){ }d52(37){ }d54(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[26],21[28],22[30],23[32],24[34],25[36],26[38],27[40],28[42],37[52],38[54]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[26],21[27,28],22[29,30],23[31,32],24[33,34],25[35,36],26[37,38],27[39,40],28[41,42],37[51,52],38[53,54]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[26]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d26(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 59 60
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[26]
;; rd  gen 	(3) 17[23],59[65],60[66]
;; rd  kill	(4) 17[22,23],59[65],60[66]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; rd  out 	(5) 6[11],7[12],16[21],20[26],59[65]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d11(bb 0 insn -1) }u9(7){ d12(bb 0 insn -1) }u10(16){ d21(bb 0 insn -1) }u11(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[11],7[12],16[21],20[26],59[65]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ d11(bb 0 insn -1) }u16(7){ d12(bb 0 insn -1) }u17(16){ d21(bb 0 insn -1) }u18(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 6[11],7[12],16[21],20[26],59[65]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(6){ d11(bb 0 insn -1) }u20(7){ d12(bb 0 insn -1) }u21(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[26]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 5 di) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 59 [ D.26086 ]) in insn 10:
  Adding insn 6 to worklist
Processing use of (reg 60 [ this ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 17 flags) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 59 [ D.26086 ]) in insn 7:
starting the processing of deferred insns
ending the processing of deferred insns


collision_table::~collision_table()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,2u} r60={1d,1u} 
;;    total ref usage 89{67d,22u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 59 60
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 60 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 59 [ D.26086 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 60 [ this ])
                (const_int 8 [0x8])) [0 this_3(D)->data+0 S8 A64])) tiles.cpp:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ this ])
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.26086 ])
            (const_int 0 [0]))) tiles.cpp:224 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) tiles.cpp:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil)))
 -> 15)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 5 [di]
;; live  kill	
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.26086 ])) tiles.cpp:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.26086 ])
        (nil)))
(call_insn/j 11 10 15 3 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x2b82f096ca00 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) tiles.cpp:224 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 15 11 16 4 85 "" [1 uses])
(note 16 15 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int collision_table::usage() (_ZN15collision_table5usageEv, funcdef_no=1072, decl_uid=23657, cgraph_uid=316)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 8 (  1.1)


int collision_table::usage()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={7d,3u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r81={3d,4u} r84={2d,4u} r86={1d,1u} r87={1d,2u} r88={1d,1u} r92={1d,2u} r93={1d,1u} 
;;    total ref usage 81{37d,44u,0e} in 24{24 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
;;  reg->defs[] map:	0[0,1] 1[2,2] 2[3,3] 4[4,4] 5[5,5] 6[6,6] 7[7,7] 16[8,8] 17[9,15] 20[16,16] 21[17,17] 22[18,18] 23[19,19] 24[20,20] 25[21,21] 26[22,22] 27[23,23] 28[24,24] 37[25,25] 38[26,26] 81[27,29] 84[30,31] 86[32,32] 87[33,33] 88[34,34] 92[35,35] 93[36,36] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(4){ }d5(5){ }d6(6){ }d7(7){ }d8(16){ }d16(20){ }d17(21){ }d18(22){ }d19(23){ }d20(24){ }d21(25){ }d22(26){ }d23(27){ }d24(28){ }d25(37){ }d26(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],20[16],21[17],22[18],23[19],24[20],25[21],26[22],27[23],28[24],37[25],38[26]
;; rd  kill	(20) 0[0,1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],20[16],21[17],22[18],23[19],24[20],25[21],26[22],27[23],28[24],37[25],38[26]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[5],6[6],7[7],16[8],20[16]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d6(bb 0 insn -1) }u1(7){ d7(bb 0 insn -1) }u2(16){ d8(bb 0 insn -1) }u3(20){ d16(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 92
;; live  kill	
;; rd  in  	(5) 5[5],6[6],7[7],16[8],20[16]
;; rd  gen 	(3) 17[15],87[33],92[35]
;; rd  kill	(9) 17[9,10,11,12,13,14,15],87[33],92[35]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; rd  out 	(6) 6[6],7[7],16[8],20[16],87[33],92[35]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 20 { d16(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d6(bb 0 insn -1) }u9(7){ d7(bb 0 insn -1) }u10(16){ d8(bb 0 insn -1) }u11(20){ d16(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; lr  def 	 17 [flags] 81 84 88 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; live  gen 	 81 84 88 93
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[6],7[7],16[8],20[16],87[33],92[35]
;; rd  gen 	(4) 81[29],84[31],88[34],93[36]
;; rd  kill	(14) 17[9,10,11,12,13,14,15],81[27,28,29],84[30,31],88[34],93[36]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; rd  out 	(7) 6[6],7[7],16[8],20[16],81[29],84[31],88[34]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 20 { d16(bb 0 insn -1) }

( 4 3 )->[4]->( 4 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ d6(bb 0 insn -1) }u17(7){ d7(bb 0 insn -1) }u18(16){ d8(bb 0 insn -1) }u19(20){ d16(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; lr  def 	 17 [flags] 81 84 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; live  gen 	 17 [flags] 81 84 86
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[6],7[7],16[8],17[9],20[16],81[27,29],84[30,31],86[32],88[34]
;; rd  gen 	(4) 17[9],81[27],84[30],86[32]
;; rd  kill	(13) 17[9,10,11,12,13,14,15],81[27,28,29],84[30,31],86[32]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; rd  out 	(7) 6[6],7[7],16[8],20[16],81[27],84[30],88[34]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 20 { d16(bb 0 insn -1) }

( 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ d6(bb 0 insn -1) }u31(7){ d7(bb 0 insn -1) }u32(16){ d8(bb 0 insn -1) }u33(20){ d16(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 81
;; live  kill	
;; rd  in  	(6) 6[6],7[7],16[8],20[16],87[33],92[35]
;; rd  gen 	(1) 81[28]
;; rd  kill	(3) 81[27,28,29]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; rd  out 	(5) 6[6],7[7],16[8],20[16],81[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 20 { d16(bb 0 insn -1) }

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(6){ d6(bb 0 insn -1) }u35(7){ d7(bb 0 insn -1) }u36(16){ d8(bb 0 insn -1) }u37(20){ d16(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(8) 6[6],7[7],16[8],20[16],81[27,28],84[30],88[34]
;; rd  gen 	(1) 0[0]
;; rd  kill	(2) 0[0,1]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[6],7[7],16[8],20[16]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 20 { d16(bb 0 insn -1) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u40(0){ d0(bb 6 insn 66) }u41(6){ d6(bb 0 insn -1) }u42(7){ d7(bb 0 insn -1) }u43(20){ d16(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[6],7[7],16[8],20[16]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 6 insn 66) }
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 20 { d16(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 55 to worklist
  Adding insn 69 to worklist
Finished finding needed instructions:
  Adding insn 66 to worklist
Processing use of (reg 81 [ count ]) in insn 66:
  Adding insn 27 to worklist
  Adding insn 47 to worklist
Processing use of (reg 17 flags) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 81 [ count ]) in insn 47:
  Adding insn 26 to worklist
Processing use of (reg 86 [ count ]) in insn 47:
  Adding insn 44 to worklist
Processing use of (reg 81 [ count ]) in insn 44:
Processing use of (reg 84 [ ivtmp.157 ]) in insn 46:
  Adding insn 38 to worklist
  Adding insn 53 to worklist
Processing use of (reg 84 [ ivtmp.157 ]) in insn 53:
Processing use of (reg 92 [ this ]) in insn 38:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 24:
Processing use of (reg 0 ax) in insn 69:
Processing use of (reg 17 flags) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 84 [ ivtmp.157 ]) in insn 54:
Processing use of (reg 88 [ D.26095 ]) in insn 54:
  Adding insn 40 to worklist
Processing use of (reg 84 [ ivtmp.157 ]) in insn 40:
Processing use of (reg 93 [ D.26095 ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 87 [ D.26097 ]) in insn 39:
  Adding insn 34 to worklist
Processing use of (reg 92 [ this ]) in insn 34:
Processing use of (reg 17 flags) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 87 [ D.26097 ]) in insn 35:
starting the processing of deferred insns
ending the processing of deferred insns


int collision_table::usage()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={7d,3u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r81={3d,4u} r84={2d,4u} r86={1d,1u} r87={1d,2u} r88={1d,1u} r92={1d,2u} r93={1d,1u} 
;;    total ref usage 81{37d,44u,0e} in 24{24 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 92
;; live  kill	
(note 28 0 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 28 25 2 (set (reg/f:DI 92 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:227 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 25 24 32 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 32 25 33 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 33 32 34 2 (var_location:SI count (const_int 0 [0])) -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 87 [ D.26097 ])
        (mem/j:DI (reg/f:DI 92 [ this ]) [0 this_6(D)->m+0 S8 A64])) tiles.cpp:229 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 87 [ D.26097 ])
            (const_int 0 [0]))) tiles.cpp:229 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 36 35 37 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 72)
            (pc))) tiles.cpp:229 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 72)
;;  succ:       3 [91.0%]  (FALLTHRU)
;;              5 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92

;; basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; lr  def 	 17 [flags] 81 84 88 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 92
;; live  gen 	 81 84 88 93
;; live  kill	 17 [flags]
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 3 (set (reg:DI 84 [ ivtmp.157 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 8 [0x8])) [0 this_6(D)->data+0 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this ])
        (nil)))
(insn 39 38 40 3 (parallel [
            (set (reg:DI 93 [ D.26095 ])
                (ashift:DI (reg:DI 87 [ D.26097 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.26097 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 26 3 (parallel [
            (set (reg:DI 88 [ D.26095 ])
                (plus:DI (reg:DI 84 [ ivtmp.157 ])
                    (reg:DI 93 [ D.26095 ])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.26095 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 40 57 3 (set (reg/v:SI 81 [ count ])
        (const_int 0 [0])) tiles.cpp:228 89 {*movsi_internal}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88

;; basic block 4, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [91.0%]  (FALLTHRU,DFS_BACK)
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; lr  def 	 17 [flags] 81 84 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; live  gen 	 17 [flags] 81 84 86
;; live  kill	 17 [flags]
(code_label 57 26 41 4 89 "" [0 uses])
(note 41 57 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 42 41 43 4 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 43 42 44 4 (var_location:SI count (clobber (const_int 0 [0]))) -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/v:SI 86 [ count ])
                (plus:SI (reg/v:SI 81 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:232 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 45 44 46 4 (var_location:SI count (clobber (const_int 0 [0]))) tiles.cpp:232 -1
     (nil))
(insn 46 45 47 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (reg:DI 84 [ ivtmp.157 ]) [0 MEM[base: _3, offset: 0B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) 8 {*cmpdi_1}
     (nil))
(insn 47 46 51 4 (set (reg/v:SI 81 [ count ])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 86 [ count ])
            (reg/v:SI 81 [ count ]))) 933 {*movsicc_noc}
     (expr_list:REG_DEAD (reg/v:SI 86 [ count ])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
(debug_insn 51 47 52 4 (var_location:SI i (debug_expr:SI D#11)) -1
     (nil))
(debug_insn 52 51 53 4 (var_location:SI count (reg/v:SI 81 [ count ])) -1
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 84 [ ivtmp.157 ])
                (plus:DI (reg:DI 84 [ ivtmp.157 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 84 [ ivtmp.157 ])
            (reg:DI 88 [ D.26095 ]))) tiles.cpp:229 8 {*cmpdi_1}
     (nil))
(jump_insn 55 54 72 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) tiles.cpp:229 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 60)
;;  succ:       4 [91.0%]  (FALLTHRU,DFS_BACK)
;;              6 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 84 88

;; basic block 5, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 81
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 81
;; live  kill	
(code_label 72 55 71 5 90 "" [1 uses])
(note 71 72 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 71 60 5 (set (reg/v:SI 81 [ count ])
        (const_int 0 [0])) tiles.cpp:228 89 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [9.0%]  (LOOP_EXIT)
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 60 27 61 6 88 "" [1 uses])
(note 61 60 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 61 69 6 (set (reg/i:SI 0 ax)
        (reg/v:SI 81 [ count ])) tiles.cpp:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 81 [ count ])
        (nil)))
(insn 69 66 0 6 (use (reg/i:SI 0 ax)) tiles.cpp:236 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void collision_table::print() (_ZN15collision_table5printEv, funcdef_no=1073, decl_uid=23659, cgraph_uid=317)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void collision_table::print()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,1u} r38={4d,1u} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r64={1d,5u} r65={1d,1u} 
;;    total ref usage 152{121d,31u,0e} in 18{16 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114
;;  reg->defs[] map:	0[0,3] 1[4,7] 2[8,11] 4[12,15] 5[16,20] 6[21,21] 7[22,22] 8[23,24] 9[25,26] 10[27,28] 11[29,30] 12[31,32] 13[33,34] 14[35,36] 15[37,38] 16[39,39] 17[40,41] 18[42,43] 19[44,45] 20[46,46] 21[47,49] 22[50,52] 23[53,55] 24[56,58] 25[59,61] 26[62,64] 27[65,67] 28[68,70] 29[71,72] 30[73,74] 31[75,76] 32[77,78] 33[79,80] 34[81,82] 35[83,84] 36[85,86] 37[87,90] 38[91,94] 39[95,96] 40[97,98] 45[99,100] 46[101,102] 47[103,104] 48[105,106] 49[107,108] 50[109,110] 51[111,112] 52[113,114] 59[115,115] 60[116,116] 61[117,117] 62[118,118] 64[119,119] 65[120,120] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d11(2){ }d15(4){ }d20(5){ }d21(6){ }d22(7){ }d39(16){ }d46(20){ }d49(21){ }d52(22){ }d55(23){ }d58(24){ }d61(25){ }d64(26){ }d67(27){ }d70(28){ }d90(37){ }d94(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[7],2[11],4[15],5[20],6[21],7[22],16[39],20[46],21[49],22[52],23[55],24[58],25[61],26[64],27[67],28[70],37[90],38[94]
;; rd  kill	(57) 0[0,1,2,3],1[4,5,6,7],2[8,9,10,11],4[12,13,14,15],5[16,17,18,19,20],6[21],7[22],16[39],20[46],21[47,48,49],22[50,51,52],23[53,54,55],24[56,57,58],25[59,60,61],26[62,63,64],27[65,66,67],28[68,69,70],37[87,88,89,90],38[91,92,93,94]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[20],6[21],7[22],16[39],20[46]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d21(bb 0 insn -1) }u1(7){ d22(bb 0 insn -1) }u2(16){ d39(bb 0 insn -1) }u3(20){ d46(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 64 65
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 64 65
;; live  kill	
;; rd  in  	(5) 5[20],6[21],7[22],16[39],20[46]
;; rd  gen 	(7) 0[0],59[115],60[116],61[117],62[118],64[119],65[120]
;; rd  kill	(10) 0[0,1,2,3],59[115],60[116],61[117],62[118],64[119],65[120]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[21],7[22],16[39],20[46]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d21(bb 0 insn -1) }
;;   reg 7 { d22(bb 0 insn -1) }
;;   reg 16 { d39(bb 0 insn -1) }
;;   reg 20 { d46(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u28(6){ d21(bb 0 insn -1) }u29(7){ d22(bb 0 insn -1) }u30(20){ d46(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[21],7[22],16[39],20[46]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d21(bb 0 insn -1) }
;;   reg 7 { d22(bb 0 insn -1) }
;;   reg 20 { d46(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 14 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 64 [ this ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 59 [ D.26101 ]) in insn 14:
  Adding insn 6 to worklist
Processing use of (reg 64 [ this ]) in insn 6:
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 0 ax) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 1 dx) in insn 22:
  Adding insn 18 to worklist
Processing use of (reg 2 cx) in insn 22:
  Adding insn 17 to worklist
Processing use of (reg 4 si) in insn 22:
  Adding insn 19 to worklist
Processing use of (reg 5 di) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 37 r8) in insn 22:
  Adding insn 16 to worklist
Processing use of (reg 38 r9) in insn 22:
  Adding insn 15 to worklist
Processing use of (reg 60 [ D.26101 ]) in insn 15:
  Adding insn 7 to worklist
Processing use of (reg 64 [ this ]) in insn 7:
Processing use of (reg 61 [ D.26101 ]) in insn 16:
  Adding insn 8 to worklist
Processing use of (reg 64 [ this ]) in insn 8:
Processing use of (reg 62 [ D.26102 ]) in insn 17:
  Adding insn 11 to worklist
Processing use of (reg 0 ax) in insn 11:
Processing use of (reg 65 [ this_2(D)->safe ]) in insn 18:
  Adding insn 13 to worklist
Processing use of (reg 64 [ this ]) in insn 13:
starting the processing of deferred insns
ending the processing of deferred insns


void collision_table::print()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,1u} r38={4d,1u} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r64={1d,5u} r65={1d,1u} 
;;    total ref usage 152{121d,31u,0e} in 18{16 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 64 65
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 64 65
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 64 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 59 [ D.26101 ])
        (mem/j:DI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 40 [0x28])) [0 this_2(D)->collisions+0 S8 A64])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 60 [ D.26101 ])
        (mem/j:DI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 24 [0x18])) [0 this_2(D)->calls+0 S8 A64])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 61 [ D.26101 ])
        (mem/j:DI (reg/f:DI 64 [ this ]) [0 this_2(D)->m+0 S8 A64])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 64 [ this ])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x1]  <function_decl 0x2b82f1f05900 usage>) [0 usage S1 A8])
            (const_int 0 [0]))) tiles.cpp:239 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 62 [ D.26102 ])
        (reg:SI 0 ax)) tiles.cpp:239 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 12 11 13 2 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b82f85b8c78 *.LC2>)) tiles.cpp:239 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 65 [ this_2(D)->safe ])
        (mem/j:SI (plus:DI (reg/f:DI 64 [ this ])
                (const_int 16 [0x10])) [0 this_2(D)->safe+0 S4 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 64 [ this ])
        (nil)))
(insn 14 13 15 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 59 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 59 [ D.26101 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 38 r9)
        (reg:DI 60 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.26101 ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 37 r8)
        (reg:DI 61 [ D.26101 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 61 [ D.26101 ])
        (nil)))
(insn 17 16 18 2 (set (reg:SI 2 cx)
        (reg:SI 62 [ D.26102 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ D.26102 ])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (reg:SI 65 [ this_2(D)->safe ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 65 [ this_2(D)->safe ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b82f85b8c78 *.LC2>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 91 {*movqi_internal}
     (nil))
(call_insn 22 21 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b82f0908600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 8 [0x8]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:SI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (nil))))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void collision_table::save(int) (_ZN15collision_table4saveEi, funcdef_no=1074, decl_uid=23662, cgraph_uid=318)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void collision_table::save(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d} r1={13d,6u} r2={7d} r4={13d,7u} r5={13d,7u} r6={1d,2u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,1u} r17={11d} r18={6d} r19={6d} r20={1d,2u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r68={1d,7u,1e} r69={1d,6u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} 
;;    total ref usage 369{315d,53u,1e} in 33{27 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305
;;  reg->defs[] map:	0[0,6] 1[7,19] 2[20,26] 4[27,39] 5[40,52] 6[53,53] 7[54,54] 8[55,60] 9[61,66] 10[67,72] 11[73,78] 12[79,84] 13[85,90] 14[91,96] 15[97,102] 16[103,103] 17[104,114] 18[115,120] 19[121,126] 20[127,127] 21[128,134] 22[135,141] 23[142,148] 24[149,155] 25[156,162] 26[163,169] 27[170,176] 28[177,183] 29[184,189] 30[190,195] 31[196,201] 32[202,207] 33[208,213] 34[214,219] 35[220,225] 36[226,231] 37[232,238] 38[239,245] 39[246,251] 40[252,257] 45[258,263] 46[264,269] 47[270,275] 48[276,281] 49[282,287] 50[288,293] 51[294,299] 52[300,305] 68[306,306] 69[307,307] 70[308,308] 71[309,309] 72[310,310] 73[311,311] 74[312,312] 75[313,313] 76[314,314] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d19(1){ }d26(2){ }d39(4){ }d52(5){ }d53(6){ }d54(7){ }d103(16){ }d127(20){ }d134(21){ }d141(22){ }d148(23){ }d155(24){ }d162(25){ }d169(26){ }d176(27){ }d183(28){ }d238(37){ }d245(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[19],2[26],4[39],5[52],6[53],7[54],16[103],20[127],21[134],22[141],23[148],24[155],25[162],26[169],27[176],28[183],37[238],38[245]
;; rd  kill	(127) 0[0,1,2,3,4,5,6],1[7,8,9,10,11,12,13,14,15,16,17,18,19],2[20,21,22,23,24,25,26],4[27,28,29,30,31,32,33,34,35,36,37,38,39],5[40,41,42,43,44,45,46,47,48,49,50,51,52],6[53],7[54],16[103],20[127],21[128,129,130,131,132,133,134],22[135,136,137,138,139,140,141],23[142,143,144,145,146,147,148],24[149,150,151,152,153,154,155],25[156,157,158,159,160,161,162],26[163,164,165,166,167,168,169],27[170,171,172,173,174,175,176],28[177,178,179,180,181,182,183],37[232,233,234,235,236,237,238],38[239,240,241,242,243,244,245]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[39],5[52],6[53],7[54],16[103],20[127]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d53(bb 0 insn -1) }u1(7){ d54(bb 0 insn -1) }u2(16){ d103(bb 0 insn -1) }u3(20){ d127(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 70 71 72 73 74 75 76
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 68 69 70 71 72 73 74 75 76
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[39],5[52],6[53],7[54],16[103],20[127]
;; rd  gen 	(10) 0[0],68[306],69[307],70[308],71[309],72[310],73[311],74[312],75[313],76[314]
;; rd  kill	(16) 0[0,1,2,3,4,5,6],68[306],69[307],70[308],71[309],72[310],73[311],74[312],75[313],76[314]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[53],7[54],16[103],20[127]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d53(bb 0 insn -1) }
;;   reg 7 { d54(bb 0 insn -1) }
;;   reg 16 { d103(bb 0 insn -1) }
;;   reg 20 { d127(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u51(6){ d53(bb 0 insn -1) }u52(7){ d54(bb 0 insn -1) }u53(20){ d127(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[53],7[54],16[103],20[127]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d53(bb 0 insn -1) }
;;   reg 7 { d54(bb 0 insn -1) }
;;   reg 20 { d127(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 37 to worklist
  Adding insn 30 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 1 dx) in insn 10:
  Adding insn 7 to worklist
Processing use of (reg 4 si) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 69 [ file ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 68 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 15:
Processing use of (reg 1 dx) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 4 si) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 5 di) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 69 [ file ]) in insn 14:
Processing use of (reg 70 [ D.26107 ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 68 [ this ]) in insn 11:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 1 dx) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 4 si) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 5 di) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 69 [ file ]) in insn 19:
Processing use of (reg 71 [ D.26106 ]) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 68 [ this ]) in insn 16:
Processing use of (reg 7 sp) in insn 25:
Processing use of (reg 1 dx) in insn 25:
  Adding insn 22 to worklist
Processing use of (reg 4 si) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 5 di) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 69 [ file ]) in insn 24:
Processing use of (reg 72 [ D.26106 ]) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 68 [ this ]) in insn 21:
Processing use of (reg 7 sp) in insn 30:
Processing use of (reg 1 dx) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 4 si) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 5 di) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 69 [ file ]) in insn 29:
Processing use of (reg 73 [ D.26106 ]) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 68 [ this ]) in insn 26:
Processing use of (reg 7 sp) in insn 37:
Processing use of (reg 1 dx) in insn 37:
  Adding insn 34 to worklist
Processing use of (reg 4 si) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 5 di) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 69 [ file ]) in insn 36:
Processing use of (reg 76 [ this_1(D)->data ]) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 68 [ this ]) in insn 33:
Processing use of (reg 74 [ D.26109 ]) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 75 [ this_1(D)->m ]) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 68 [ this ]) in insn 31:
starting the processing of deferred insns
ending the processing of deferred insns


void collision_table::save(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d} r1={13d,6u} r2={7d} r4={13d,7u} r5={13d,7u} r6={1d,2u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,1u} r17={11d} r18={6d} r19={6d} r20={1d,2u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r68={1d,7u,1e} r69={1d,6u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} 
;;    total ref usage 369{315d,53u,1e} in 33{27 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 70 71 72 73 74 75 76
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 68 69 70 71 72 73 74 75 76
;; live  kill	 17 [flags]
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 68 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:242 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 69 [ file ])
        (reg:SI 4 si [ file ])) tiles.cpp:242 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ file ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:243 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/f:DI 68 [ this ])) tiles.cpp:243 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:243 89 {*movsi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:243 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 70 [ D.26107 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:244 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tiles.cpp:244 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/f:DI 70 [ D.26107 ])) tiles.cpp:244 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.26107 ])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:244 89 {*movsi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:244 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 71 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:245 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:245 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/f:DI 71 [ D.26106 ])) tiles.cpp:245 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.26106 ])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:245 89 {*movsi_internal}
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:245 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 22 2 (parallel [
            (set (reg/f:DI 72 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:246 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:246 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg/f:DI 72 [ D.26106 ])) tiles.cpp:246 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.26106 ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:246 89 {*movsi_internal}
     (nil))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:246 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 73 [ D.26106 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:247 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:247 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg/f:DI 73 [ D.26106 ])) tiles.cpp:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ D.26106 ])
        (nil)))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:247 89 {*movsi_internal}
     (nil))
(call_insn 30 29 31 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:247 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 2 (set (reg:DI 75 [ this_1(D)->m ])
        (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:DI 74 [ D.26109 ])
                (ashift:DI (reg:DI 75 [ this_1(D)->m ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:248 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 75 [ this_1(D)->m ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 33 32 34 2 (set (reg/f:DI 76 [ this_1(D)->data ])
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ this ])
        (nil)))
(insn 34 33 35 2 (set (reg:DI 1 dx)
        (reg:DI 74 [ D.26109 ])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 74 [ D.26109 ])
        (nil)))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg/f:DI 76 [ this_1(D)->data ])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ this_1(D)->data ])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) tiles.cpp:248 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 69 [ file ])
        (nil)))
(call_insn/j 37 36 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b82f1e8d900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:248 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void collision_table::restore(int) (_ZN15collision_table7restoreEi, funcdef_no=1075, decl_uid=23665, cgraph_uid=319)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void collision_table::restore(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d} r1={13d,6u} r2={7d} r4={13d,7u} r5={13d,7u} r6={1d,2u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,1u} r17={11d} r18={6d} r19={6d} r20={1d,2u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r68={1d,14u,1e} r69={1d,12u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} 
;;    total ref usage 382{315d,66u,1e} in 51{45 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305
;;  reg->defs[] map:	0[0,6] 1[7,19] 2[20,26] 4[27,39] 5[40,52] 6[53,53] 7[54,54] 8[55,60] 9[61,66] 10[67,72] 11[73,78] 12[79,84] 13[85,90] 14[91,96] 15[97,102] 16[103,103] 17[104,114] 18[115,120] 19[121,126] 20[127,127] 21[128,134] 22[135,141] 23[142,148] 24[149,155] 25[156,162] 26[163,169] 27[170,176] 28[177,183] 29[184,189] 30[190,195] 31[196,201] 32[202,207] 33[208,213] 34[214,219] 35[220,225] 36[226,231] 37[232,238] 38[239,245] 39[246,251] 40[252,257] 45[258,263] 46[264,269] 47[270,275] 48[276,281] 49[282,287] 50[288,293] 51[294,299] 52[300,305] 68[306,306] 69[307,307] 70[308,308] 71[309,309] 72[310,310] 73[311,311] 74[312,312] 75[313,313] 76[314,314] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d19(1){ }d26(2){ }d39(4){ }d52(5){ }d53(6){ }d54(7){ }d103(16){ }d127(20){ }d134(21){ }d141(22){ }d148(23){ }d155(24){ }d162(25){ }d169(26){ }d176(27){ }d183(28){ }d238(37){ }d245(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[19],2[26],4[39],5[52],6[53],7[54],16[103],20[127],21[134],22[141],23[148],24[155],25[162],26[169],27[176],28[183],37[238],38[245]
;; rd  kill	(127) 0[0,1,2,3,4,5,6],1[7,8,9,10,11,12,13,14,15,16,17,18,19],2[20,21,22,23,24,25,26],4[27,28,29,30,31,32,33,34,35,36,37,38,39],5[40,41,42,43,44,45,46,47,48,49,50,51,52],6[53],7[54],16[103],20[127],21[128,129,130,131,132,133,134],22[135,136,137,138,139,140,141],23[142,143,144,145,146,147,148],24[149,150,151,152,153,154,155],25[156,157,158,159,160,161,162],26[163,164,165,166,167,168,169],27[170,171,172,173,174,175,176],28[177,178,179,180,181,182,183],37[232,233,234,235,236,237,238],38[239,240,241,242,243,244,245]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[39],5[52],6[53],7[54],16[103],20[127]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d53(bb 0 insn -1) }u1(7){ d54(bb 0 insn -1) }u2(16){ d103(bb 0 insn -1) }u3(20){ d127(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 70 71 72 73 74 75 76
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 68 69 70 71 72 73 74 75 76
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[39],5[52],6[53],7[54],16[103],20[127]
;; rd  gen 	(10) 0[0],68[306],69[307],70[308],71[309],72[310],73[311],74[312],75[313],76[314]
;; rd  kill	(16) 0[0,1,2,3,4,5,6],68[306],69[307],70[308],71[309],72[310],73[311],74[312],75[313],76[314]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[53],7[54],16[103],20[127]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d53(bb 0 insn -1) }
;;   reg 7 { d54(bb 0 insn -1) }
;;   reg 16 { d103(bb 0 insn -1) }
;;   reg 20 { d127(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u64(6){ d53(bb 0 insn -1) }u65(7){ d54(bb 0 insn -1) }u66(20){ d127(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[53],7[54],16[103],20[127]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d53(bb 0 insn -1) }
;;   reg 7 { d54(bb 0 insn -1) }
;;   reg 20 { d127(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 55 to worklist
  Adding insn 45 to worklist
  Adding insn 37 to worklist
  Adding insn 29 to worklist
  Adding insn 21 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 1 dx) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 4 si) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 69 [ file ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 68 [ this ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 1 dx) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 4 si) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 5 di) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 69 [ file ]) in insn 20:
Processing use of (reg 70 [ D.26113 ]) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 68 [ this ]) in insn 17:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 1 dx) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 4 si) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 69 [ file ]) in insn 28:
Processing use of (reg 71 [ D.26112 ]) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 68 [ this ]) in insn 25:
Processing use of (reg 7 sp) in insn 37:
Processing use of (reg 1 dx) in insn 37:
  Adding insn 34 to worklist
Processing use of (reg 4 si) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 5 di) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 69 [ file ]) in insn 36:
Processing use of (reg 72 [ D.26112 ]) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 68 [ this ]) in insn 33:
Processing use of (reg 7 sp) in insn 45:
Processing use of (reg 1 dx) in insn 45:
  Adding insn 42 to worklist
Processing use of (reg 4 si) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 5 di) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 69 [ file ]) in insn 44:
Processing use of (reg 73 [ D.26112 ]) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 68 [ this ]) in insn 41:
Processing use of (reg 7 sp) in insn 55:
Processing use of (reg 1 dx) in insn 55:
  Adding insn 52 to worklist
Processing use of (reg 4 si) in insn 55:
  Adding insn 53 to worklist
Processing use of (reg 5 di) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 69 [ file ]) in insn 54:
Processing use of (reg 76 [ this_1(D)->data ]) in insn 53:
  Adding insn 51 to worklist
Processing use of (reg 68 [ this ]) in insn 51:
Processing use of (reg 74 [ D.26115 ]) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 75 [ this_1(D)->m ]) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 68 [ this ]) in insn 49:
starting the processing of deferred insns
ending the processing of deferred insns


void collision_table::restore(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d} r1={13d,6u} r2={7d} r4={13d,7u} r5={13d,7u} r6={1d,2u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,1u} r17={11d} r18={6d} r19={6d} r20={1d,2u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r68={1d,14u,1e} r69={1d,12u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} 
;;    total ref usage 382{315d,66u,1e} in 51{45 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 70 71 72 73 74 75 76
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 68 69 70 71 72 73 74 75 76
;; live  kill	 17 [flags]
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 68 [ this ])
        (reg:DI 5 di [ this ])) tiles.cpp:251 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 69 [ file ])
        (reg:SI 4 si [ file ])) tiles.cpp:251 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ file ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:252 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:DI __buf (reg/f:DI 68 [ this ])) tiles.cpp:252 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:252 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 68 [ this ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 14 13 15 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:253 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 16 [0x10]))) tiles.cpp:253 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:DI __nbytes (const_int 4 [0x4])) tiles.cpp:253 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 70 [ D.26113 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:253 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 70 [ D.26113 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.26113 ])
        (nil)))
(insn 20 19 21 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 22 21 23 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:254 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 24 [0x18]))) tiles.cpp:254 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:254 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg/f:DI 71 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:254 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg/f:DI 71 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.26112 ])
        (nil)))
(insn 28 27 29 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 30 29 31 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:255 -1
     (nil))
(debug_insn 31 30 32 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 32 [0x20]))) tiles.cpp:255 -1
     (nil))
(debug_insn 32 31 33 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:255 -1
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:DI 72 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:255 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 35 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg/f:DI 72 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.26112 ])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 38 37 39 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:256 -1
     (nil))
(debug_insn 39 38 40 2 (var_location:DI __buf (plus:DI (reg/f:DI 68 [ this ])
        (const_int 40 [0x28]))) tiles.cpp:256 -1
     (nil))
(debug_insn 40 39 41 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:256 -1
     (nil))
(insn 41 40 42 2 (parallel [
            (set (reg/f:DI 73 [ D.26112 ])
                (plus:DI (reg/f:DI 68 [ this ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:256 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 2 (set (reg:DI 4 si)
        (reg/f:DI 73 [ D.26112 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ D.26112 ])
        (nil)))
(insn 44 43 45 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 45 44 46 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 46 45 47 2 (var_location:SI __fd (reg/v:SI 69 [ file ])) tiles.cpp:257 -1
     (nil))
(debug_insn 47 46 48 2 (var_location:DI __buf (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
            (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) tiles.cpp:257 -1
     (nil))
(debug_insn 48 47 49 2 (var_location:DI __nbytes (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
        (const_int 3 [0x3]))) tiles.cpp:257 -1
     (nil))
(insn 49 48 50 2 (set (reg:DI 75 [ this_1(D)->m ])
        (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:257 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (parallel [
            (set (reg:DI 74 [ D.26115 ])
                (ashift:DI (reg:DI 75 [ this_1(D)->m ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:257 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 75 [ this_1(D)->m ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 68 [ this ]) [0 this_1(D)->m+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 51 50 52 2 (set (reg/f:DI 76 [ this_1(D)->data ])
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ this ])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ this ])
        (nil)))
(insn 52 51 53 2 (set (reg:DI 1 dx)
        (reg:DI 74 [ D.26115 ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 74 [ D.26115 ])
        (nil)))
(insn 53 52 54 2 (set (reg:DI 4 si)
        (reg/f:DI 76 [ this_1(D)->data ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ this_1(D)->data ])
        (nil)))
(insn 54 53 55 2 (set (reg:SI 5 di)
        (reg/v:SI 69 [ file ])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 69 [ file ])
        (nil)))
(call_insn/j 55 54 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b82f1ee4500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, int, float*, int) (_Z5tilesPiiiPfi, funcdef_no=1076, decl_uid=23709, cgraph_uid=320)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 14{13 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; rd  out 	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
;; rd  in  	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55]
;; rd  gen 	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;; rd  kill	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(6){ d14(bb 0 insn -1) }u25(7){ d15(bb 0 insn -1) }u26(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 7 sp) in insn 18:
Processing use of (reg 1 dx) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 2 cx) in insn 18:
  Adding insn 14 to worklist
Processing use of (reg 4 si) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 5 di) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 7 sp) in insn 18:
Processing use of (reg 37 r8) in insn 18:
  Adding insn 13 to worklist
Processing use of (reg 38 r9) in insn 18:
  Adding insn 12 to worklist
Processing use of (reg 64) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 63 [ nf ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 17:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 16:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 14:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ memory ]) in insn 15:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, int, float*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 14{13 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:276 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:276 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 13 12 14 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:276 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:276 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:276 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 18 17 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:276 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, collision_table*, float*, int) (_Z5tilesPiiP15collision_tablePfi, funcdef_no=1077, decl_uid=23715, cgraph_uid=321)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 14{13 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; rd  out 	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
;; rd  in  	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55]
;; rd  gen 	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;; rd  kill	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(6){ d14(bb 0 insn -1) }u25(7){ d15(bb 0 insn -1) }u26(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 7 sp) in insn 18:
Processing use of (reg 1 dx) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 2 cx) in insn 18:
  Adding insn 14 to worklist
Processing use of (reg 4 si) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 5 di) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 7 sp) in insn 18:
Processing use of (reg 37 r8) in insn 18:
  Adding insn 13 to worklist
Processing use of (reg 38 r9) in insn 18:
  Adding insn 12 to worklist
Processing use of (reg 64) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 63 [ nf ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 17:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 16:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 14:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ ct ]) in insn 15:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, collision_table*, float*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 14{13 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:279 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 13 12 14 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 18 17 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:279 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, int, float*, int, int) (_Z5tilesPiiiPfii, funcdef_no=1078, decl_uid=23722, cgraph_uid=322)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 16{15 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;; rd  gen 	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;; rd  kill	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(6){ d14(bb 0 insn -1) }u28(7){ d15(bb 0 insn -1) }u29(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 64 [ h1 ]) in insn 12:
  Adding insn 7 to worklist
Processing use of (reg 65) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 1 dx) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 2 cx) in insn 21:
  Adding insn 17 to worklist
Processing use of (reg 4 si) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 5 di) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 37 r8) in insn 21:
  Adding insn 16 to worklist
Processing use of (reg 38 r9) in insn 21:
  Adding insn 15 to worklist
Processing use of (reg 65) in insn 15:
Processing use of (reg 63 [ nf ]) in insn 16:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 19:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 17:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ memory ]) in insn 18:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, int, float*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 16{15 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:284 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:284 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 13 12 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:285 89 {*movsi_internal}
     (nil))
(insn 15 13 16 2 (set (reg:DI 38 r9)
        (reg/f:DI 65)) tiles.cpp:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 16 15 17 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:285 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:285 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:285 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 21 20 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:285 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, collision_table*, float*, int, int) (_Z5tilesPiiP15collision_tablePfii, funcdef_no=1079, decl_uid=23729, cgraph_uid=323)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 16{15 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;; rd  gen 	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;; rd  kill	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(6){ d14(bb 0 insn -1) }u28(7){ d15(bb 0 insn -1) }u29(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 64 [ h1 ]) in insn 12:
  Adding insn 7 to worklist
Processing use of (reg 65) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 1 dx) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 2 cx) in insn 21:
  Adding insn 17 to worklist
Processing use of (reg 4 si) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 5 di) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 37 r8) in insn 21:
  Adding insn 16 to worklist
Processing use of (reg 38 r9) in insn 21:
  Adding insn 15 to worklist
Processing use of (reg 65) in insn 15:
Processing use of (reg 63 [ nf ]) in insn 16:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 19:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 17:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ ct ]) in insn 18:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, collision_table*, float*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 16{15 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:287 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:287 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:287 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:288 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:288 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 13 12 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:289 89 {*movsi_internal}
     (nil))
(insn 15 13 16 2 (set (reg:DI 38 r9)
        (reg/f:DI 65)) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 16 15 17 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:289 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:289 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 21 20 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:289 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, int, float*, int, int, int) (_Z5tilesPiiiPfiii, funcdef_no=1080, decl_uid=23737, cgraph_uid=324)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 18{17 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;; rd  gen 	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;; rd  kill	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(6){ d14(bb 0 insn -1) }u31(7){ d15(bb 0 insn -1) }u32(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 64 [ h1 ]) in insn 13:
  Adding insn 7 to worklist
Processing use of (reg 66) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 15:
  Adding insn 8 to worklist
Processing use of (reg 66) in insn 15:
Processing use of (reg 16 argp) in insn 8:
Processing use of (reg 16 argp) in insn 16:
Processing use of (reg 7 sp) in insn 24:
Processing use of (reg 1 dx) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 2 cx) in insn 24:
  Adding insn 20 to worklist
Processing use of (reg 4 si) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 5 di) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 16 argp) in insn 24:
Processing use of (reg 37 r8) in insn 24:
  Adding insn 19 to worklist
Processing use of (reg 38 r9) in insn 24:
  Adding insn 18 to worklist
Processing use of (reg 66) in insn 18:
Processing use of (reg 63 [ nf ]) in insn 19:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 23:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 22:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 20:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ memory ]) in insn 21:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, int, float*, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 18{17 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])) tiles.cpp:293 89 {*movsi_internal}
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:294 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 15 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:294 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 15 13 16 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:295 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 16 15 18 2 (set (mem:SI (reg/f:DI 16 argp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:296 89 {*movsi_internal}
     (nil))
(insn 18 16 19 2 (set (reg:DI 38 r9)
        (reg/f:DI 66)) tiles.cpp:296 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:296 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:296 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:296 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:296 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:296 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn/j 24 23 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:296 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, collision_table*, float*, int, int, int) (_Z5tilesPiiP15collision_tablePfiii, funcdef_no=1081, decl_uid=23745, cgraph_uid=325)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 18{17 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;; rd  gen 	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;; rd  kill	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(6){ d14(bb 0 insn -1) }u31(7){ d15(bb 0 insn -1) }u32(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 64 [ h1 ]) in insn 13:
  Adding insn 7 to worklist
Processing use of (reg 66) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 15:
  Adding insn 8 to worklist
Processing use of (reg 66) in insn 15:
Processing use of (reg 16 argp) in insn 8:
Processing use of (reg 16 argp) in insn 16:
Processing use of (reg 7 sp) in insn 24:
Processing use of (reg 1 dx) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 2 cx) in insn 24:
  Adding insn 20 to worklist
Processing use of (reg 4 si) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 5 di) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 16 argp) in insn 24:
Processing use of (reg 37 r8) in insn 24:
  Adding insn 19 to worklist
Processing use of (reg 38 r9) in insn 24:
  Adding insn 18 to worklist
Processing use of (reg 66) in insn 18:
Processing use of (reg 63 [ nf ]) in insn 19:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 23:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 22:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 20:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ ct ]) in insn 21:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, collision_table*, float*, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 18{17 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])) tiles.cpp:298 89 {*movsi_internal}
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:299 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 15 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 15 13 16 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:300 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 16 15 18 2 (set (mem:SI (reg/f:DI 16 argp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:301 89 {*movsi_internal}
     (nil))
(insn 18 16 19 2 (set (reg:DI 38 r9)
        (reg/f:DI 66)) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:301 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:301 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn/j 24 23 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:301 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, int, float*, int, int, int, int) (_Z5tilesPiiiPfiiii, funcdef_no=1082, decl_uid=23754, cgraph_uid=326)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 20{19 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 67[77,77] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;; rd  gen 	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;; rd  kill	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(6){ d14(bb 0 insn -1) }u34(7){ d15(bb 0 insn -1) }u35(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 27 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 64 [ h1 ]) in insn 14:
  Adding insn 7 to worklist
Processing use of (reg 67) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 16:
  Adding insn 8 to worklist
Processing use of (reg 67) in insn 16:
Processing use of (reg 16 argp) in insn 8:
Processing use of (reg 66 [ h3 ]) in insn 18:
  Adding insn 9 to worklist
Processing use of (reg 67) in insn 18:
Processing use of (reg 16 argp) in insn 9:
Processing use of (reg 16 argp) in insn 19:
Processing use of (reg 7 sp) in insn 27:
Processing use of (reg 1 dx) in insn 27:
  Adding insn 24 to worklist
Processing use of (reg 2 cx) in insn 27:
  Adding insn 23 to worklist
Processing use of (reg 4 si) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 5 di) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 16 argp) in insn 27:
Processing use of (reg 37 r8) in insn 27:
  Adding insn 22 to worklist
Processing use of (reg 38 r9) in insn 27:
  Adding insn 21 to worklist
Processing use of (reg 67) in insn 21:
Processing use of (reg 63 [ nf ]) in insn 22:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 26:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 25:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 23:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ memory ]) in insn 24:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, int, float*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 20{19 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:305 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:305 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:305 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:305 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])) tiles.cpp:305 89 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 h3+0 S4 A64])) tiles.cpp:305 89 {*movsi_internal}
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:306 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 16 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:306 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 16 14 18 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:307 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 18 16 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:308 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 66 [ h3 ])
        (nil)))
(insn 19 18 21 2 (set (mem:SI (reg/f:DI 16 argp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:309 89 {*movsi_internal}
     (nil))
(insn 21 19 22 2 (set (reg:DI 38 r9)
        (reg/f:DI 67)) tiles.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:309 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:309 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:309 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn/j 27 26 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:309 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles(int*, int, collision_table*, float*, int, int, int, int) (_Z5tilesPiiP15collision_tablePfiiii, funcdef_no=1083, decl_uid=23763, cgraph_uid=327)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 20{19 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 67[77,77] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],37[55],38[58]
;; rd  gen 	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;; rd  kill	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(6){ d14(bb 0 insn -1) }u34(7){ d15(bb 0 insn -1) }u35(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 27 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 64 [ h1 ]) in insn 14:
  Adding insn 7 to worklist
Processing use of (reg 67) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 16:
  Adding insn 8 to worklist
Processing use of (reg 67) in insn 16:
Processing use of (reg 16 argp) in insn 8:
Processing use of (reg 66 [ h3 ]) in insn 18:
  Adding insn 9 to worklist
Processing use of (reg 67) in insn 18:
Processing use of (reg 16 argp) in insn 9:
Processing use of (reg 16 argp) in insn 19:
Processing use of (reg 7 sp) in insn 27:
Processing use of (reg 1 dx) in insn 27:
  Adding insn 24 to worklist
Processing use of (reg 2 cx) in insn 27:
  Adding insn 23 to worklist
Processing use of (reg 4 si) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 5 di) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 16 argp) in insn 27:
Processing use of (reg 37 r8) in insn 27:
  Adding insn 22 to worklist
Processing use of (reg 38 r9) in insn 27:
  Adding insn 21 to worklist
Processing use of (reg 67) in insn 21:
Processing use of (reg 63 [ nf ]) in insn 22:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 59 [ the_tiles ]) in insn 26:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 25:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 62 [ floats ]) in insn 23:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 61 [ ct ]) in insn 24:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles(int*, int, collision_table*, float*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 20{19 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:311 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 62 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ nf ])
        (reg:SI 37 r8 [ nf ])) tiles.cpp:311 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ nf ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:311 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])) tiles.cpp:311 89 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 h3+0 S4 A64])) tiles.cpp:311 89 {*movsi_internal}
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:312 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 16 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:312 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 16 14 18 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:313 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 18 16 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:314 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 66 [ h3 ])
        (nil)))
(insn 19 18 21 2 (set (mem:SI (reg/f:DI 16 argp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:315 89 {*movsi_internal}
     (nil))
(insn 21 19 22 2 (set (reg:DI 38 r9)
        (reg/f:DI 67)) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 22 21 23 2 (set (reg:SI 37 r8)
        (reg/v:SI 63 [ nf ])) tiles.cpp:315 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ nf ])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 62 [ floats ])) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ floats ])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:315 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn/j 27 26 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:315 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, int, float) (_Z6tiles1Piiif, funcdef_no=1084, decl_uid=23768, cgraph_uid=328)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,2u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 15{14 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; rd  out 	(8) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
;; rd  in  	(8) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;; rd  gen 	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;; rd  kill	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(6){ d14(bb 0 insn -1) }u25(7){ d15(bb 0 insn -1) }u26(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 10:
  Adding insn 5 to worklist
Processing use of (reg 63) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 1 dx) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 2 cx) in insn 20:
  Adding insn 16 to worklist
Processing use of (reg 4 si) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 5 di) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 37 r8) in insn 20:
  Adding insn 14 to worklist
Processing use of (reg 38 r9) in insn 20:
  Adding insn 13 to worklist
Processing use of (reg 64) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 59 [ the_tiles ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 18:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 63) in insn 16:
Processing use of (reg 61 [ memory ]) in insn 17:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, int, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,2u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 15{14 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:319 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:319 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:319 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:319 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:320 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (mem/j/c:SF (reg/f:DI 63) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:320 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:321 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:321 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 14 13 16 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:321 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 2 cx)
        (reg/f:DI 63)) tiles.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:321 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:321 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 20 19 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:321 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, collision_table*, float) (_Z6tiles1PiiP15collision_tablef, funcdef_no=1085, decl_uid=23773, cgraph_uid=329)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,2u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 15{14 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; rd  out 	(8) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
;; rd  in  	(8) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;; rd  gen 	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;; rd  kill	(6) 59[69],60[70],61[71],62[72],63[73],64[74]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(6){ d14(bb 0 insn -1) }u25(7){ d15(bb 0 insn -1) }u26(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 10:
  Adding insn 5 to worklist
Processing use of (reg 63) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 1 dx) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 2 cx) in insn 20:
  Adding insn 16 to worklist
Processing use of (reg 4 si) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 5 di) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 37 r8) in insn 20:
  Adding insn 14 to worklist
Processing use of (reg 38 r9) in insn 20:
  Adding insn 13 to worklist
Processing use of (reg 64) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 59 [ the_tiles ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 18:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 63) in insn 16:
Processing use of (reg 61 [ ct ]) in insn 17:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, collision_table*, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,2u} r64={1d,1u} 
;;    total ref usage 102{75d,27u,0e} in 15{14 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64
;; live  kill	
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:323 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:323 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:323 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:323 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:324 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (mem/j/c:SF (reg/f:DI 63) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:324 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:325 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:325 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 38 r9)
        (reg:DI 64)) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 14 13 16 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:325 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 2 cx)
        (reg/f:DI 63)) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:325 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 20 19 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:325 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, int, float, int) (_Z6tiles1Piiifi, funcdef_no=1086, decl_uid=23779, cgraph_uid=330)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,2u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; rd  out 	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
;; rd  in  	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;; rd  gen 	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;; rd  kill	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(6){ d14(bb 0 insn -1) }u28(7){ d15(bb 0 insn -1) }u29(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 11:
  Adding insn 5 to worklist
Processing use of (reg 64) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ h1 ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 65) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 2 cx) in insn 6:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 1 dx) in insn 23:
  Adding insn 20 to worklist
Processing use of (reg 2 cx) in insn 23:
  Adding insn 19 to worklist
Processing use of (reg 4 si) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 5 di) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 37 r8) in insn 23:
  Adding insn 17 to worklist
Processing use of (reg 38 r9) in insn 23:
  Adding insn 16 to worklist
Processing use of (reg 65) in insn 16:
Processing use of (reg 59 [ the_tiles ]) in insn 22:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 21:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 64) in insn 19:
Processing use of (reg 61 [ memory ]) in insn 20:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, int, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,2u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:329 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:330 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:330 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:331 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:331 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ h1 ])
        (nil)))
(insn 14 13 16 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:332 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 38 r9)
        (reg/f:DI 65)) tiles.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:332 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 64)) tiles.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:332 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:332 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:332 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, collision_table*, float, int) (_Z6tiles1PiiP15collision_tablefi, funcdef_no=1087, decl_uid=23785, cgraph_uid=331)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,2u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; rd  out 	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
;; rd  in  	(9) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30]
;; rd  gen 	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;; rd  kill	(7) 59[69],60[70],61[71],62[72],63[73],64[74],65[75]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(6){ d14(bb 0 insn -1) }u28(7){ d15(bb 0 insn -1) }u29(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 11:
  Adding insn 5 to worklist
Processing use of (reg 64) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ h1 ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 65) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 2 cx) in insn 6:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 1 dx) in insn 23:
  Adding insn 20 to worklist
Processing use of (reg 2 cx) in insn 23:
  Adding insn 19 to worklist
Processing use of (reg 4 si) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 5 di) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 37 r8) in insn 23:
  Adding insn 17 to worklist
Processing use of (reg 38 r9) in insn 23:
  Adding insn 16 to worklist
Processing use of (reg 65) in insn 16:
Processing use of (reg 59 [ the_tiles ]) in insn 22:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 21:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 64) in insn 19:
Processing use of (reg 61 [ ct ]) in insn 20:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, collision_table*, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,2u} r65={1d,2u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:334 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:334 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:334 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:335 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:335 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:336 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 65) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:336 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ h1 ])
        (nil)))
(insn 14 13 16 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:337 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 38 r9)
        (reg/f:DI 65)) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:337 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 64)) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:337 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:337 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, int, float, int, int) (_Z6tiles1Piiifii, funcdef_no=1088, decl_uid=23792, cgraph_uid=332)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55]
;; rd  gen 	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;; rd  kill	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(6){ d14(bb 0 insn -1) }u31(7){ d15(bb 0 insn -1) }u32(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 12:
  Adding insn 5 to worklist
Processing use of (reg 65) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ h1 ]) in insn 14:
  Adding insn 6 to worklist
Processing use of (reg 66) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 2 cx) in insn 6:
Processing use of (reg 64 [ h2 ]) in insn 16:
  Adding insn 7 to worklist
Processing use of (reg 66) in insn 16:
Processing use of (reg 37 r8) in insn 7:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 1 dx) in insn 26:
  Adding insn 23 to worklist
Processing use of (reg 2 cx) in insn 26:
  Adding insn 22 to worklist
Processing use of (reg 4 si) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 37 r8) in insn 26:
  Adding insn 20 to worklist
Processing use of (reg 38 r9) in insn 26:
  Adding insn 19 to worklist
Processing use of (reg 66) in insn 19:
Processing use of (reg 59 [ the_tiles ]) in insn 25:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 24:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 65) in insn 22:
Processing use of (reg 61 [ memory ]) in insn 23:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, int, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:341 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:341 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:341 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:341 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:341 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:342 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:342 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:343 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 16 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:343 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ h1 ])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:344 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h2 ])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:345 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 66)) tiles.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:345 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 65)) tiles.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:345 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:345 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:345 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, collision_table*, float, int, int) (_Z6tiles1PiiP15collision_tablefii, funcdef_no=1089, decl_uid=23799, cgraph_uid=333)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55]
;; rd  gen 	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;; rd  kill	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(6){ d14(bb 0 insn -1) }u31(7){ d15(bb 0 insn -1) }u32(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 12:
  Adding insn 5 to worklist
Processing use of (reg 65) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ h1 ]) in insn 14:
  Adding insn 6 to worklist
Processing use of (reg 66) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 2 cx) in insn 6:
Processing use of (reg 64 [ h2 ]) in insn 16:
  Adding insn 7 to worklist
Processing use of (reg 66) in insn 16:
Processing use of (reg 37 r8) in insn 7:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 1 dx) in insn 26:
  Adding insn 23 to worklist
Processing use of (reg 2 cx) in insn 26:
  Adding insn 22 to worklist
Processing use of (reg 4 si) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 37 r8) in insn 26:
  Adding insn 20 to worklist
Processing use of (reg 38 r9) in insn 26:
  Adding insn 19 to worklist
Processing use of (reg 66) in insn 19:
Processing use of (reg 59 [ the_tiles ]) in insn 25:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 24:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 65) in insn 22:
Processing use of (reg 61 [ ct ]) in insn 23:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, collision_table*, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} r66={1d,3u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66
;; live  kill	
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:347 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:347 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:347 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:347 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:348 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:348 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:349 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 16 2 (set (mem/j/c:SI (reg/f:DI 66) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:349 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ h1 ])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:350 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h2 ])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:351 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 66)) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:351 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 65)) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:351 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:351 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, int, float, int, int, int) (_Z6tiles1Piiifiii, funcdef_no=1090, decl_uid=23807, cgraph_uid=334)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,2u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 67[77,77] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; rd  out 	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
;; rd  in  	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55],38[58]
;; rd  gen 	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;; rd  kill	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(6){ d14(bb 0 insn -1) }u34(7){ d15(bb 0 insn -1) }u35(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 13:
  Adding insn 5 to worklist
Processing use of (reg 66) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ h1 ]) in insn 15:
  Adding insn 6 to worklist
Processing use of (reg 67) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 2 cx) in insn 6:
Processing use of (reg 64 [ h2 ]) in insn 17:
  Adding insn 7 to worklist
Processing use of (reg 67) in insn 17:
Processing use of (reg 37 r8) in insn 7:
Processing use of (reg 65 [ h3 ]) in insn 19:
  Adding insn 8 to worklist
Processing use of (reg 67) in insn 19:
Processing use of (reg 38 r9) in insn 8:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 1 dx) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 cx) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 4 si) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 37 r8) in insn 29:
  Adding insn 23 to worklist
Processing use of (reg 38 r9) in insn 29:
  Adding insn 22 to worklist
Processing use of (reg 67) in insn 22:
Processing use of (reg 59 [ the_tiles ]) in insn 28:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 27:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 66) in insn 25:
Processing use of (reg 61 [ memory ]) in insn 26:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, int, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,2u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:355 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:356 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:356 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:357 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 17 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:357 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ h1 ])
        (nil)))
(insn 17 15 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h2 ])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 65 [ h3 ])) tiles.cpp:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h3 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:360 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 67)) tiles.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:360 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 66)) tiles.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:360 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:360 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:360 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles1(int*, int, collision_table*, float, int, int, int) (_Z6tiles1PiiP15collision_tablefiii, funcdef_no=1091, decl_uid=23815, cgraph_uid=335)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,2u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 67[77,77] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; rd  out 	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
;; rd  in  	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],37[55],38[58]
;; rd  gen 	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;; rd  kill	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(6){ d14(bb 0 insn -1) }u34(7){ d15(bb 0 insn -1) }u35(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 13:
  Adding insn 5 to worklist
Processing use of (reg 66) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ h1 ]) in insn 15:
  Adding insn 6 to worklist
Processing use of (reg 67) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 2 cx) in insn 6:
Processing use of (reg 64 [ h2 ]) in insn 17:
  Adding insn 7 to worklist
Processing use of (reg 67) in insn 17:
Processing use of (reg 37 r8) in insn 7:
Processing use of (reg 65 [ h3 ]) in insn 19:
  Adding insn 8 to worklist
Processing use of (reg 67) in insn 19:
Processing use of (reg 38 r9) in insn 8:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 1 dx) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 cx) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 4 si) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 37 r8) in insn 29:
  Adding insn 23 to worklist
Processing use of (reg 38 r9) in insn 29:
  Adding insn 22 to worklist
Processing use of (reg 67) in insn 22:
Processing use of (reg 59 [ the_tiles ]) in insn 28:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 27:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 66) in insn 25:
Processing use of (reg 61 [ ct ]) in insn 26:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles1(int*, int, collision_table*, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,2u} r67={1d,4u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67
;; live  kill	
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:362 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:362 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:362 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:362 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 63 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:362 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:362 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:362 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:363 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:363 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:364 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 17 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 63 [ h1 ])) tiles.cpp:364 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ h1 ])
        (nil)))
(insn 17 15 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 64 [ h2 ])) tiles.cpp:365 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h2 ])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 67)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 65 [ h3 ])) tiles.cpp:366 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h3 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:367 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 67)) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:367 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 66)) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:367 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:367 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, int, float, float) (_Z6tiles2Piiiff, funcdef_no=1092, decl_uid=23821, cgraph_uid=336)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,3u} r66={1d,1u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 66[75,75] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; rd  out 	(9) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 66
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 66
;; live  kill	
;; rd  in  	(9) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;; rd  gen 	(7) 59[69],60[70],61[71],62[72],63[73],64[74],66[75]
;; rd  kill	(7) 59[69],60[70],61[71],62[72],63[73],64[74],66[75]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(6){ d14(bb 0 insn -1) }u28(7){ d15(bb 0 insn -1) }u29(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 11:
  Adding insn 5 to worklist
Processing use of (reg 64) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 64) in insn 13:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 1 dx) in insn 23:
  Adding insn 20 to worklist
Processing use of (reg 2 cx) in insn 23:
  Adding insn 19 to worklist
Processing use of (reg 4 si) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 5 di) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 37 r8) in insn 23:
  Adding insn 17 to worklist
Processing use of (reg 38 r9) in insn 23:
  Adding insn 16 to worklist
Processing use of (reg 66) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 59 [ the_tiles ]) in insn 22:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 21:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 64) in insn 19:
Processing use of (reg 61 [ memory ]) in insn 20:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, int, float, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,3u} r66={1d,1u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 66
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 66
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:371 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:371 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:371 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:371 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:371 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:372 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 13 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:372 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 13 11 14 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 64)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:373 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:374 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:374 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:374 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 64)) tiles.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:374 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:374 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:374 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, collision_table*, float, float) (_Z6tiles2PiiP15collision_tableff, funcdef_no=1093, decl_uid=23827, cgraph_uid=337)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,3u} r66={1d,1u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 66[75,75] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; rd  out 	(9) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 66
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 66
;; live  kill	
;; rd  in  	(9) 1[4],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;; rd  gen 	(7) 59[69],60[70],61[71],62[72],63[73],64[74],66[75]
;; rd  kill	(7) 59[69],60[70],61[71],62[72],63[73],64[74],66[75]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(6){ d14(bb 0 insn -1) }u28(7){ d15(bb 0 insn -1) }u29(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 11:
  Adding insn 5 to worklist
Processing use of (reg 64) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 64) in insn 13:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 1 dx) in insn 23:
  Adding insn 20 to worklist
Processing use of (reg 2 cx) in insn 23:
  Adding insn 19 to worklist
Processing use of (reg 4 si) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 5 di) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 37 r8) in insn 23:
  Adding insn 17 to worklist
Processing use of (reg 38 r9) in insn 23:
  Adding insn 16 to worklist
Processing use of (reg 66) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 59 [ the_tiles ]) in insn 22:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 21:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 64) in insn 19:
Processing use of (reg 61 [ ct ]) in insn 20:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, collision_table*, float, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,3u} r66={1d,1u} 
;;    total ref usage 106{76d,30u,0e} in 17{16 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 66
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 66
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:376 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:376 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:376 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:376 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:376 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 64)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:377 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 13 2 (set (mem/j/c:SF (reg/f:DI 64) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:377 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 13 11 14 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 64)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:378 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:379 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:379 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (reg:DI 66)) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:379 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 64)) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:379 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:379 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, int, float, float, int) (_Z6tiles2Piiiffi, funcdef_no=1094, decl_uid=23834, cgraph_uid=338)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,3u} r67={1d,2u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 67[76,76] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 67
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;; rd  gen 	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],67[76]
;; rd  kill	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],67[76]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(6){ d14(bb 0 insn -1) }u31(7){ d15(bb 0 insn -1) }u32(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 12:
  Adding insn 5 to worklist
Processing use of (reg 65) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 14:
  Adding insn 6 to worklist
Processing use of (reg 65) in insn 14:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 64 [ h1 ]) in insn 16:
  Adding insn 7 to worklist
Processing use of (reg 67) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 1 dx) in insn 26:
  Adding insn 23 to worklist
Processing use of (reg 2 cx) in insn 26:
  Adding insn 22 to worklist
Processing use of (reg 4 si) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 37 r8) in insn 26:
  Adding insn 20 to worklist
Processing use of (reg 38 r9) in insn 26:
  Adding insn 19 to worklist
Processing use of (reg 67) in insn 19:
Processing use of (reg 59 [ the_tiles ]) in insn 25:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 24:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 65) in insn 22:
Processing use of (reg 61 [ memory ]) in insn 23:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, int, float, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,3u} r67={1d,2u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 67
;; live  kill	
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:383 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:383 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:383 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:383 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:383 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:383 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:384 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 14 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:384 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 14 12 15 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 65)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:385 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:386 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:386 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:387 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 67)) tiles.cpp:387 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:387 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 65)) tiles.cpp:387 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:387 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:387 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:387 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:387 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, collision_table*, float, float, int) (_Z6tiles2PiiP15collision_tableffi, funcdef_no=1095, decl_uid=23841, cgraph_uid=339)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,3u} r67={1d,2u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 67[76,76] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; rd  out 	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 67
;; live  kill	
;; rd  in  	(10) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32]
;; rd  gen 	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],67[76]
;; rd  kill	(8) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],67[76]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(6){ d14(bb 0 insn -1) }u31(7){ d15(bb 0 insn -1) }u32(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 12:
  Adding insn 5 to worklist
Processing use of (reg 65) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 14:
  Adding insn 6 to worklist
Processing use of (reg 65) in insn 14:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 64 [ h1 ]) in insn 16:
  Adding insn 7 to worklist
Processing use of (reg 67) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 1 dx) in insn 26:
  Adding insn 23 to worklist
Processing use of (reg 2 cx) in insn 26:
  Adding insn 22 to worklist
Processing use of (reg 4 si) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 37 r8) in insn 26:
  Adding insn 20 to worklist
Processing use of (reg 38 r9) in insn 26:
  Adding insn 19 to worklist
Processing use of (reg 67) in insn 19:
Processing use of (reg 59 [ the_tiles ]) in insn 25:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 24:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 65) in insn 22:
Processing use of (reg 61 [ ct ]) in insn 23:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, collision_table*, float, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,3u} r67={1d,2u} 
;;    total ref usage 110{77d,33u,0e} in 19{18 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 67
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 67
;; live  kill	
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:389 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:389 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:389 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:389 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:389 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:389 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:390 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 14 2 (set (mem/j/c:SF (reg/f:DI 65) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:390 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 14 12 15 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 65)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:391 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:392 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/j/c:SI (reg/f:DI 67) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:392 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:393 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 67)) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:393 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 65)) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:393 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:393 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, int, float, float, int, int) (_Z6tiles2Piiiffii, funcdef_no=1096, decl_uid=23849, cgraph_uid=340)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} r68={1d,3u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 68[77,77] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; rd  out 	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 68
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 68
;; live  kill	
;; rd  in  	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55]
;; rd  gen 	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],68[77]
;; rd  kill	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],68[77]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(6){ d14(bb 0 insn -1) }u34(7){ d15(bb 0 insn -1) }u35(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 13:
  Adding insn 5 to worklist
Processing use of (reg 66) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 15:
  Adding insn 6 to worklist
Processing use of (reg 66) in insn 15:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 64 [ h1 ]) in insn 17:
  Adding insn 7 to worklist
Processing use of (reg 68) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 19:
  Adding insn 8 to worklist
Processing use of (reg 68) in insn 19:
Processing use of (reg 37 r8) in insn 8:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 1 dx) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 cx) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 4 si) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 37 r8) in insn 29:
  Adding insn 23 to worklist
Processing use of (reg 38 r9) in insn 29:
  Adding insn 22 to worklist
Processing use of (reg 68) in insn 22:
Processing use of (reg 59 [ the_tiles ]) in insn 28:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 27:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 66) in insn 25:
Processing use of (reg 61 [ memory ]) in insn 26:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, int, float, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} r68={1d,3u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 68
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 68
;; live  kill	
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:397 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:397 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:397 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:397 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:397 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:397 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:397 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:398 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 15 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:398 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 15 13 16 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:399 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:400 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 19 2 (set (mem/j/c:SI (reg/f:DI 68) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:400 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:401 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:402 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 68)) tiles.cpp:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:402 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 66)) tiles.cpp:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:402 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:402 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:402 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, collision_table*, float, float, int, int) (_Z6tiles2PiiP15collision_tableffii, funcdef_no=1097, decl_uid=23857, cgraph_uid=341)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} r68={1d,3u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 68[77,77] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; rd  out 	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 68
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 68
;; live  kill	
;; rd  in  	(11) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55]
;; rd  gen 	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],68[77]
;; rd  kill	(9) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],68[77]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(6){ d14(bb 0 insn -1) }u34(7){ d15(bb 0 insn -1) }u35(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 13:
  Adding insn 5 to worklist
Processing use of (reg 66) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 15:
  Adding insn 6 to worklist
Processing use of (reg 66) in insn 15:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 64 [ h1 ]) in insn 17:
  Adding insn 7 to worklist
Processing use of (reg 68) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 19:
  Adding insn 8 to worklist
Processing use of (reg 68) in insn 19:
Processing use of (reg 37 r8) in insn 8:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 1 dx) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 cx) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 4 si) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 37 r8) in insn 29:
  Adding insn 23 to worklist
Processing use of (reg 38 r9) in insn 29:
  Adding insn 22 to worklist
Processing use of (reg 68) in insn 22:
Processing use of (reg 59 [ the_tiles ]) in insn 28:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 27:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 66) in insn 25:
Processing use of (reg 61 [ ct ]) in insn 26:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, collision_table*, float, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,3u} r68={1d,3u} 
;;    total ref usage 114{78d,36u,0e} in 21{20 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 68
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 68
;; live  kill	
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:404 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:404 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:404 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:404 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:404 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:405 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 15 2 (set (mem/j/c:SF (reg/f:DI 66) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:405 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 15 13 16 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 66)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:406 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:407 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 19 2 (set (mem/j/c:SI (reg/f:DI 68) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:407 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 68)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:408 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:409 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 68)) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:409 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 66)) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:409 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:409 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, int, float, float, int, int, int) (_Z6tiles2Piiiffiii, funcdef_no=1098, decl_uid=23866, cgraph_uid=342)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,3u} r69={1d,4u} 
;;    total ref usage 118{79d,39u,0e} in 23{22 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 67[77,77] 69[78,78] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; rd  out 	(12) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 69
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67 69
;; live  kill	
;; rd  in  	(12) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55],38[58]
;; rd  gen 	(10) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77],69[78]
;; rd  kill	(10) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77],69[78]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(6){ d14(bb 0 insn -1) }u37(7){ d15(bb 0 insn -1) }u38(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 32 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 14:
  Adding insn 5 to worklist
Processing use of (reg 67) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 16:
  Adding insn 6 to worklist
Processing use of (reg 67) in insn 16:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 64 [ h1 ]) in insn 18:
  Adding insn 7 to worklist
Processing use of (reg 69) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 20:
  Adding insn 8 to worklist
Processing use of (reg 69) in insn 20:
Processing use of (reg 37 r8) in insn 8:
Processing use of (reg 66 [ h3 ]) in insn 22:
  Adding insn 9 to worklist
Processing use of (reg 69) in insn 22:
Processing use of (reg 38 r9) in insn 9:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 7 sp) in insn 32:
Processing use of (reg 1 dx) in insn 32:
  Adding insn 29 to worklist
Processing use of (reg 2 cx) in insn 32:
  Adding insn 28 to worklist
Processing use of (reg 4 si) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 5 di) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 7 sp) in insn 32:
Processing use of (reg 37 r8) in insn 32:
  Adding insn 26 to worklist
Processing use of (reg 38 r9) in insn 32:
  Adding insn 25 to worklist
Processing use of (reg 69) in insn 25:
Processing use of (reg 59 [ the_tiles ]) in insn 31:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 30:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 67) in insn 28:
Processing use of (reg 61 [ memory ]) in insn 29:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, int, float, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,3u} r69={1d,4u} 
;;    total ref usage 118{79d,39u,0e} in 23{22 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 69
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67 69
;; live  kill	
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:413 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 61 [ memory ])
        (reg:SI 1 dx [ memory ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:413 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:413 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:414 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 16 2 (set (mem/j/c:SF (reg/f:DI 67) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:414 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:415 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:416 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 20 2 (set (mem/j/c:SI (reg/f:DI 69) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:416 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 20 18 22 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:417 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 22 20 23 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:418 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 66 [ h3 ])
        (nil)))
(insn 23 22 25 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:419 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 38 r9)
        (reg/f:DI 69)) tiles.cpp:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 26 25 28 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:419 89 {*movsi_internal}
     (nil))
(insn 28 26 29 2 (set (reg:DI 2 cx)
        (reg/f:DI 67)) tiles.cpp:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (reg/v:SI 61 [ memory ])) tiles.cpp:419 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ memory ])
        (nil)))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:419 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 32 31 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b82f1f05e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:419 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tiles2(int*, int, collision_table*, float, float, int, int, int) (_Z6tiles2PiiP15collision_tableffiii, funcdef_no=1099, decl_uid=23875, cgraph_uid=343)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,3u} r69={1d,4u} 
;;    total ref usage 118{79d,39u,0e} in 23{22 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,58] 39[59,59] 40[60,60] 45[61,61] 46[62,62] 47[63,63] 48[64,64] 49[65,65] 50[66,66] 51[67,67] 52[68,68] 59[69,69] 60[70,70] 61[71,71] 62[72,72] 63[73,73] 64[74,74] 65[75,75] 66[76,76] 67[77,77] 69[78,78] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d58(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[58]
;; rd  kill	(40) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57,58]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; rd  out 	(12) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55],38[58]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 69
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67 69
;; live  kill	
;; rd  in  	(12) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],37[55],38[58]
;; rd  gen 	(10) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77],69[78]
;; rd  kill	(10) 59[69],60[70],61[71],62[72],63[73],64[74],65[75],66[76],67[77],69[78]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(6){ d14(bb 0 insn -1) }u37(7){ d15(bb 0 insn -1) }u38(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 32 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 62 [ f1 ]) in insn 14:
  Adding insn 5 to worklist
Processing use of (reg 67) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 21 xmm0) in insn 5:
Processing use of (reg 63 [ f2 ]) in insn 16:
  Adding insn 6 to worklist
Processing use of (reg 67) in insn 16:
Processing use of (reg 22 xmm1) in insn 6:
Processing use of (reg 64 [ h1 ]) in insn 18:
  Adding insn 7 to worklist
Processing use of (reg 69) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 65 [ h2 ]) in insn 20:
  Adding insn 8 to worklist
Processing use of (reg 69) in insn 20:
Processing use of (reg 37 r8) in insn 8:
Processing use of (reg 66 [ h3 ]) in insn 22:
  Adding insn 9 to worklist
Processing use of (reg 69) in insn 22:
Processing use of (reg 38 r9) in insn 9:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 7 sp) in insn 32:
Processing use of (reg 1 dx) in insn 32:
  Adding insn 29 to worklist
Processing use of (reg 2 cx) in insn 32:
  Adding insn 28 to worklist
Processing use of (reg 4 si) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 5 di) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 7 sp) in insn 32:
Processing use of (reg 37 r8) in insn 32:
  Adding insn 26 to worklist
Processing use of (reg 38 r9) in insn 32:
  Adding insn 25 to worklist
Processing use of (reg 69) in insn 25:
Processing use of (reg 59 [ the_tiles ]) in insn 31:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 60 [ nt ]) in insn 30:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 67) in insn 28:
Processing use of (reg 61 [ ct ]) in insn 29:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


void tiles2(int*, int, collision_table*, float, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d,1u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,3u} r69={1d,4u} 
;;    total ref usage 118{79d,39u,0e} in 23{22 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 69
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 59 60 61 62 63 64 65 66 67 69
;; live  kill	
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 59 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:421 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 60 [ nt ])
        (reg:SI 4 si [ nt ])) tiles.cpp:421 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 61 [ ct ])
        (reg:DI 1 dx [ ct ])) tiles.cpp:421 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 62 [ f1 ])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:421 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SF 63 [ f2 ])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:421 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:SI 64 [ h1 ])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:421 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 65 [ h2 ])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:421 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 9 8 10 2 (set (reg/v:SI 66 [ h3 ])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:421 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:422 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 16 2 (set (mem/j/c:SF (reg/f:DI 67) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 62 [ f1 ])) tiles.cpp:422 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 62 [ f1 ])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 67)
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg/v:SF 63 [ f2 ])) tiles.cpp:423 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 63 [ f2 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:424 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 20 2 (set (mem/j/c:SI (reg/f:DI 69) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 64 [ h1 ])) tiles.cpp:424 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ h1 ])
        (nil)))
(insn 20 18 22 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 65 [ h2 ])) tiles.cpp:425 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ h2 ])
        (nil)))
(insn 22 20 23 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 69)
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 66 [ h3 ])) tiles.cpp:426 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 66 [ h3 ])
        (nil)))
(insn 23 22 25 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:427 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 38 r9)
        (reg/f:DI 69)) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b82f1f7ded8 i_tmp_arr>)
            (nil))))
(insn 26 25 28 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:427 89 {*movsi_internal}
     (nil))
(insn 28 26 29 2 (set (reg:DI 2 cx)
        (reg/f:DI 67)) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b82f1f9d000 f_tmp_arr>)
            (nil))))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 61 [ ct ])) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ct ])
        (nil)))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (reg/v:SI 60 [ nt ])) tiles.cpp:427 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ nt ])
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg/v/f:DI 59 [ the_tiles ])) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 59 [ the_tiles ])
        (nil)))
(call_insn 32 31 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b82f1f16600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:427 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tileswrap(int*, int, int, float*, int, int*, int*, int) (_Z9tileswrapPiiiPfiS_S_i, funcdef_no=1100, decl_uid=23884, cgraph_uid=344)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 56 count 41 (  1.1)


void tileswrap(int*, int, int, float*, int, int*, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={6d,2u} r4={8d,4u} r5={8d,4u} r6={1d,36u} r7={1d,40u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,37u,2e} r17={66d,22u} r18={4d} r19={4d} r20={1d,53u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r63={2d,2u} r66={1d,2u} r71={1d,2u} r72={2d,12u} r75={1d,1u} r79={1d,2u} r80={1d,5u} r81={1d,4u} r83={1d,5u} r84={1d,4u} r93={4d,8u} r94={2d,2u} r104={2d,4u} r106={1d,1u} r107={2d,5u} r110={2d,1u} r114={2d,6u} r122={1d,1u} r129={1d,1u} r131={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,12u} r149={1d,1u} r150={1d,1u} r151={1d,13u} r152={1d,9u} r153={1d,1u} r154={1d,3u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,6u} r186={1d,2u} r187={1d,1u} r188={2d,2u} r189={2d,2u} r190={1d,1u} r191={1d,5u} r192={1d,2u} r193={1d,1u} r194={2d,2u} r195={2d,2u} r196={1d,1u} r198={1d,2u} r199={1d,1u} r200={2d,2u} r201={2d,2u} r202={1d,1u} r204={1d,2u} r205={1d,1u} r206={2d,2u} r207={2d,2u} r208={1d,1u} r210={1d,2u} r211={1d,1u} r212={2d,2u} r213={2d,2u} r214={1d,1u} r216={1d,2u} r218={1d,1u} r219={1d,1u} r220={1d,2u} r222={1d,1u} r223={1d,1u} r224={1d,2u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r233={1d,2u} r235={1d,1u} r236={1d} r237={1d,1u} r238={1d,1u} r239={1d,2u} r241={1d,1u} r242={1d} r243={1d,1u} r245={1d,2u} r247={1d,1u} r248={1d} r251={1d,1u} r254={1d,1u} r256={2d,5u} r257={2d,3u} r258={2d,2u} 
;;    total ref usage 822{393d,425u,4e} in 223{219 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267
;;  reg->defs[] map:	0[0,4] 1[5,12] 2[13,18] 4[19,26] 5[27,34] 6[35,35] 7[36,36] 8[37,40] 9[41,44] 10[45,48] 11[49,52] 12[53,56] 13[57,60] 14[61,64] 15[65,68] 16[69,69] 17[70,135] 18[136,139] 19[140,143] 20[144,144] 21[145,150] 22[151,155] 23[156,160] 24[161,165] 25[166,170] 26[171,175] 27[176,180] 28[181,185] 29[186,189] 30[190,193] 31[194,197] 32[198,201] 33[202,205] 34[206,209] 35[210,213] 36[214,217] 37[218,222] 38[223,227] 39[228,231] 40[232,235] 45[236,239] 46[240,243] 47[244,247] 48[248,251] 49[252,255] 50[256,259] 51[260,263] 52[264,267] 63[268,269] 66[270,270] 71[271,271] 72[272,273] 75[274,274] 79[275,275] 80[276,276] 81[277,277] 83[278,278] 84[279,279] 93[280,283] 94[284,285] 104[286,287] 106[288,288] 107[289,290] 110[291,292] 114[293,294] 122[295,295] 129[296,296] 131[297,297] 144[298,298] 146[299,299] 147[300,300] 148[301,301] 149[302,302] 150[303,303] 151[304,304] 152[305,305] 153[306,306] 154[307,307] 155[308,308] 157[309,309] 158[310,310] 159[311,311] 160[312,312] 161[313,313] 162[314,314] 168[315,315] 169[316,316] 170[317,317] 171[318,318] 173[319,319] 174[320,320] 175[321,321] 182[322,322] 184[323,323] 185[324,324] 186[325,325] 187[326,326] 188[327,328] 189[329,330] 190[331,331] 191[332,332] 192[333,333] 193[334,334] 194[335,336] 195[337,338] 196[339,339] 198[340,340] 199[341,341] 200[342,343] 201[344,345] 202[346,346] 204[347,347] 205[348,348] 206[349,350] 207[351,352] 208[353,353] 210[354,354] 211[355,355] 212[356,357] 213[358,359] 214[360,360] 216[361,361] 218[362,362] 219[363,363] 220[364,364] 222[365,365] 223[366,366] 224[367,367] 226[368,368] 227[369,369] 228[370,370] 229[371,371] 230[372,372] 233[373,373] 235[374,374] 236[375,375] 237[376,376] 238[377,377] 239[378,378] 241[379,379] 242[380,380] 243[381,381] 245[382,382] 247[383,383] 248[384,384] 251[385,385] 254[386,386] 256[387,388] 257[389,390] 258[391,392] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d12(1){ }d18(2){ }d26(4){ }d34(5){ }d35(6){ }d36(7){ }d69(16){ }d144(20){ }d150(21){ }d155(22){ }d160(23){ }d165(24){ }d170(25){ }d175(26){ }d180(27){ }d185(28){ }d222(37){ }d227(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[4],1[12],2[18],4[26],5[34],6[35],7[36],16[69],20[144],21[150],22[155],23[160],24[165],25[170],26[175],27[180],28[185],37[222],38[227]
;; rd  kill	(90) 0[0,1,2,3,4],1[5,6,7,8,9,10,11,12],2[13,14,15,16,17,18],4[19,20,21,22,23,24,25,26],5[27,28,29,30,31,32,33,34],6[35],7[36],16[69],20[144],21[145,146,147,148,149,150],22[151,152,153,154,155],23[156,157,158,159,160],24[161,162,163,164,165],25[166,167,168,169,170],26[171,172,173,174,175],27[176,177,178,179,180],28[181,182,183,184,185],37[218,219,220,221,222],38[223,224,225,226,227]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[12],2[18],4[26],5[34],6[35],7[36],16[69],20[144],37[222],38[227]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d35(bb 0 insn -1) }u1(7){ d36(bb 0 insn -1) }u2(16){ d69(bb 0 insn -1) }u3(20){ d144(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 71 147 148 149 150 151 152 153 154 155
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 71 147 148 149 150 151 152 153 154 155
;; live  kill	 17 [flags]
;; rd  in  	(10) 1[12],2[18],4[26],5[34],6[35],7[36],16[69],20[144],37[222],38[227]
;; rd  gen 	(11) 17[133],71[271],147[300],148[301],149[302],150[303],151[304],152[305],153[306],154[307],155[308]
;; rd  kill	(10) 71[271],147[300],148[301],149[302],150[303],151[304],152[305],153[306],154[307],155[308]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154
;; rd  out 	(13) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],150[303],151[304],152[305],153[306],154[307]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 2 4 )->[3]->( 6 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(6){ d35(bb 0 insn -1) }u21(7){ d36(bb 0 insn -1) }u22(16){ d69(bb 0 insn -1) }u23(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(13) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],150[303],151[304],152[305],153[306],154[307]
;; rd  gen 	(1) 17[132]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; rd  out 	(11) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],150[303],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 2 )->[4]->( 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ d35(bb 0 insn -1) }u27(7){ d36(bb 0 insn -1) }u28(16){ d69(bb 0 insn -1) }u29(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 153 154
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 157 158 159 160 161 162 256
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 157 158 159 160 161 162 256
;; live  kill	 17 [flags]
;; rd  in  	(13) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],150[303],151[304],152[305],153[306],154[307]
;; rd  gen 	(8) 0[3],157[309],158[310],159[311],160[312],161[313],162[314],256[388]
;; rd  kill	(13) 0[0,1,2,3,4],157[309],158[310],159[311],160[312],161[313],162[314],256[387,388]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; rd  out 	(11) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],150[303],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 19 3 15 16 18 )->[5]->( 20 36 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u45(6){ d35(bb 0 insn -1) }u46(7){ d36(bb 0 insn -1) }u47(16){ d69(bb 0 insn -1) }u48(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(15) 6[35],7[36],16[69],20[144],66[270],71[271],81[277],114[293,294],147[300],148[301],149[302],150[303],151[304],152[305]
;; rd  gen 	(1) 17[127]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; rd  out 	(10) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 3 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ d35(bb 0 insn -1) }u52(7){ d36(bb 0 insn -1) }u53(16){ d69(bb 0 insn -1) }u54(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 151
;; lr  def 	 17 [flags] 104 131 146 168 169 170 258
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  gen 	 104 131 146 168 169 170 258
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],150[303],151[304],152[305]
;; rd  gen 	(7) 104[287],131[297],146[299],168[315],169[316],170[317],258[392]
;; rd  kill	(9) 104[286,287],131[297],146[299],168[315],169[316],170[317],258[391,392]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; rd  out 	(15) 6[35],7[36],16[69],20[144],71[271],104[287],131[297],146[299],147[300],148[301],149[302],150[303],151[304],152[305],258[392]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 7 6 )->[7]->( 7 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ d35(bb 0 insn -1) }u62(7){ d36(bb 0 insn -1) }u63(16){ d69(bb 0 insn -1) }u64(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 131 146 150 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75 104 171 173
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; live  gen 	 17 [flags] 21 [xmm0] 75 104 171 173
;; live  kill	 17 [flags]
;; rd  in  	(21) 6[35],7[36],16[69],17[122],20[144],21[147],71[271],75[274],104[286,287],131[297],146[299],147[300],148[301],149[302],150[303],151[304],152[305],171[318],173[319],258[392]
;; rd  gen 	(6) 17[122],21[147],75[274],104[286],171[318],173[319]
;; rd  kill	(11) 21[145,146,147,148,149,150],75[274],104[286,287],171[318],173[319]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; rd  out 	(15) 6[35],7[36],16[69],20[144],71[271],104[286],131[297],146[299],147[300],148[301],149[302],150[303],151[304],152[305],258[392]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 7 )->[8]->( 17 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ d35(bb 0 insn -1) }u81(7){ d36(bb 0 insn -1) }u82(16){ d69(bb 0 insn -1) }u83(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79 80 174 175 182 257
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 79 80 174 175 182 257
;; live  kill	 17 [flags]
;; rd  in  	(15) 6[35],7[36],16[69],20[144],71[271],104[286],131[297],146[299],147[300],148[301],149[302],150[303],151[304],152[305],258[392]
;; rd  gen 	(8) 0[1],17[117],79[275],80[276],174[320],175[321],182[322],257[390]
;; rd  kill	(12) 0[0,1,2,3,4],79[275],80[276],174[320],175[321],182[322],257[389,390]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; rd  out 	(12) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u100(6){ d35(bb 0 insn -1) }u101(7){ d36(bb 0 insn -1) }u102(16){ d69(bb 0 insn -1) }u103(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags] 184
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  gen 	 17 [flags] 184
;; live  kill	
;; rd  in  	(12) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305]
;; rd  gen 	(2) 17[116],184[323]
;; rd  kill	(1) 184[323]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; rd  out 	(12) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 9 )->[10]->( 11 16 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u108(6){ d35(bb 0 insn -1) }u109(7){ d36(bb 0 insn -1) }u110(16){ d69(bb 0 insn -1) }u111(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 148 152
;; lr  def 	 17 [flags] 185 186 187 188 189 190 191
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  gen 	 17 [flags] 185 186 187 188 189 190 191
;; live  kill	
;; rd  in  	(12) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305]
;; rd  gen 	(8) 17[115],185[324],186[325],187[326],188[328],189[329],190[331],191[332]
;; rd  kill	(9) 185[324],186[325],187[326],188[327,328],189[329,330],190[331],191[332]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; rd  out 	(14) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 10 )->[11]->( 12 16 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u128(6){ d35(bb 0 insn -1) }u129(7){ d36(bb 0 insn -1) }u130(16){ d69(bb 0 insn -1) }u131(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 152 185 191
;; lr  def 	 17 [flags] 192 193 194 195 196
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  gen 	 17 [flags] 192 193 194 195 196
;; live  kill	
;; rd  in  	(14) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;; rd  gen 	(6) 17[114],192[333],193[334],194[336],195[338],196[339]
;; rd  kill	(7) 192[333],193[334],194[335,336],195[337,338],196[339]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; rd  out 	(14) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 11 )->[12]->( 13 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u146(6){ d35(bb 0 insn -1) }u147(7){ d36(bb 0 insn -1) }u148(16){ d69(bb 0 insn -1) }u149(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 152 185 191
;; lr  def 	 17 [flags] 198 199 200 201 202
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  gen 	 17 [flags] 198 199 200 201 202
;; live  kill	
;; rd  in  	(14) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;; rd  gen 	(6) 17[113],198[340],199[341],200[343],201[345],202[346]
;; rd  kill	(7) 198[340],199[341],200[342,343],201[344,345],202[346]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; rd  out 	(14) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 12 )->[13]->( 14 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u164(6){ d35(bb 0 insn -1) }u165(7){ d36(bb 0 insn -1) }u166(16){ d69(bb 0 insn -1) }u167(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 152 185 191
;; lr  def 	 17 [flags] 204 205 206 207 208
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  gen 	 17 [flags] 204 205 206 207 208
;; live  kill	
;; rd  in  	(14) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;; rd  gen 	(6) 17[112],204[347],205[348],206[350],207[352],208[353]
;; rd  kill	(7) 204[347],205[348],206[349,350],207[351,352],208[353]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191
;; rd  out 	(13) 6[35],7[36],16[69],20[144],71[271],79[275],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u182(6){ d35(bb 0 insn -1) }u183(7){ d36(bb 0 insn -1) }u184(16){ d69(bb 0 insn -1) }u185(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 152 185 191
;; lr  def 	 210 211 212 213 214
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191
;; live  gen 	 210 211 212 213 214
;; live  kill	
;; rd  in  	(13) 6[35],7[36],16[69],20[144],71[271],79[275],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;; rd  gen 	(5) 210[354],211[355],212[357],213[359],214[360]
;; rd  kill	(7) 210[354],211[355],212[356,357],213[358,359],214[360]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152
;; rd  out 	(11) 6[35],7[36],16[69],20[144],71[271],79[275],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 19 )->[15]->( 5 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u198(6){ d35(bb 0 insn -1) }u199(7){ d36(bb 0 insn -1) }u200(16){ d69(bb 0 insn -1) }u201(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 148 152
;; lr  def 	 17 [flags] 216 218 219
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152
;; live  gen 	 216 218 219
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[35],7[36],16[69],20[144],66[270],71[271],147[300],148[301],149[302],151[304],152[305]
;; rd  gen 	(3) 216[361],218[362],219[363]
;; rd  kill	(3) 216[361],218[362],219[363]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; rd  out 	(10) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 14 10 11 12 13 )->[16]->( 18 5 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u210(6){ d35(bb 0 insn -1) }u211(7){ d36(bb 0 insn -1) }u212(16){ d69(bb 0 insn -1) }u213(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151
;; lr  def 	 17 [flags] 114
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152
;; live  gen 	 17 [flags] 114
;; live  kill	
;; rd  in  	(14) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305],185[324],191[332]
;; rd  gen 	(2) 17[70],114[294]
;; rd  kill	(2) 114[293,294]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; rd  out 	(11) 6[35],7[36],16[69],20[144],71[271],114[294],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 9 8 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u218(6){ d35(bb 0 insn -1) }u219(7){ d36(bb 0 insn -1) }u220(16){ d69(bb 0 insn -1) }u221(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 114
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 114
;; live  kill	
;; rd  in  	(12) 6[35],7[36],16[69],20[144],71[271],79[275],80[276],147[300],148[301],149[302],151[304],152[305]
;; rd  gen 	(1) 114[293]
;; rd  kill	(2) 114[293,294]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; rd  out 	(11) 6[35],7[36],16[69],20[144],71[271],114[293],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 17 16 )->[18]->( 19 5 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u222(6){ d35(bb 0 insn -1) }u223(7){ d36(bb 0 insn -1) }u224(16){ d69(bb 0 insn -1) }u225(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 148 151 152
;; lr  def 	 17 [flags] 81 220 222 223
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; live  gen 	 17 [flags] 81 220 222 223
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[35],7[36],16[69],20[144],71[271],114[293,294],147[300],148[301],149[302],151[304],152[305]
;; rd  gen 	(5) 17[108],81[277],220[364],222[365],223[366]
;; rd  kill	(4) 81[277],220[364],222[365],223[366]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152
;; rd  out 	(13) 6[35],7[36],16[69],20[144],71[271],81[277],114[293,294],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 18 )->[19]->( 15 5 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u240(6){ d35(bb 0 insn -1) }u241(7){ d36(bb 0 insn -1) }u242(16){ d69(bb 0 insn -1) }u243(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 114 148 151 152
;; lr  def 	 17 [flags] 66 224 226 227
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152
;; live  gen 	 17 [flags] 66 224 226 227
;; live  kill	 17 [flags]
;; rd  in  	(13) 6[35],7[36],16[69],20[144],71[271],81[277],114[293,294],147[300],148[301],149[302],151[304],152[305]
;; rd  gen 	(5) 17[105],66[270],224[367],226[368],227[369]
;; rd  kill	(4) 66[270],224[367],226[368],227[369]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152
;; rd  out 	(11) 6[35],7[36],16[69],20[144],66[270],71[271],147[300],148[301],149[302],151[304],152[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 5 )->[20]->( 34 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u258(6){ d35(bb 0 insn -1) }u259(7){ d36(bb 0 insn -1) }u260(16){ d69(bb 0 insn -1) }u261(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 149 151
;; lr  def 	 17 [flags] 94 107 122 144 228 229 230 256
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 94 107 122 144 228 229 230 256
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[35],7[36],16[69],20[144],71[271],147[300],148[301],149[302],151[304],152[305]
;; rd  gen 	(8) 94[285],107[290],122[295],144[298],228[370],229[371],230[372],256[387]
;; rd  kill	(11) 94[284,285],107[289,290],122[295],144[298],228[370],229[371],230[372],256[387,388]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; rd  out 	(13) 6[35],7[36],16[69],20[144],71[271],94[285],107[290],122[295],144[298],148[301],151[304],152[305],256[387]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 27 35 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u269(6){ d35(bb 0 insn -1) }u270(7){ d36(bb 0 insn -1) }u271(16){ d69(bb 0 insn -1) }u272(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 257 258
;; lr  def 	 17 [flags] 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags] 83 84
;; live  kill	
;; rd  in  	(23) 6[35],7[36],16[69],17[84],20[144],63[268,269],71[271],72[272,273],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],251[385],256[387],257[389],258[391]
;; rd  gen 	(3) 17[101],83[278],84[279]
;; rd  kill	(2) 83[278],84[279]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(23) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],83[278],84[279],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u280(6){ d35(bb 0 insn -1) }u281(7){ d36(bb 0 insn -1) }u282(16){ d69(bb 0 insn -1) }u283(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 148
;; lr  def 	 17 [flags] 93 233 235 236
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 93 233 235 236
;; live  kill	 17 [flags]
;; rd  in  	(23) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],83[278],84[279],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(4) 93[283],233[373],235[374],236[375]
;; rd  kill	(7) 93[280,281,282,283],233[373],235[374],236[375]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(23) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 21 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u292(6){ d35(bb 0 insn -1) }u293(7){ d36(bb 0 insn -1) }u294(16){ d69(bb 0 insn -1) }u295(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 148
;; lr  def 	 17 [flags] 93 237 238 239 241 242 243
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 93 237 238 239 241 242 243
;; live  kill	 17 [flags]
;; rd  in  	(23) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],83[278],84[279],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(7) 93[282],237[376],238[377],239[378],241[379],242[380],243[381]
;; rd  kill	(10) 93[280,281,282,283],237[376],238[377],239[378],241[379],242[380],243[381]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(23) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[282],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 22 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u308(6){ d35(bb 0 insn -1) }u309(7){ d36(bb 0 insn -1) }u310(16){ d69(bb 0 insn -1) }u311(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 93 152 256
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(24) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[282,283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(1) 17[91]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(24) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[282,283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u318(6){ d35(bb 0 insn -1) }u319(7){ d36(bb 0 insn -1) }u320(16){ d69(bb 0 insn -1) }u321(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 93 256
;; lr  def 	 17 [flags] 93 245 247 248
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 93 245 247 248
;; live  kill	 17 [flags]
;; rd  in  	(24) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[282,283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(4) 93[281],245[382],247[383],248[384]
;; rd  kill	(7) 93[280,281,282,283],245[382],247[383],248[384]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(23) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[281],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 24 25 )->[26]->( 29 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u333(6){ d35(bb 0 insn -1) }u334(7){ d36(bb 0 insn -1) }u335(16){ d69(bb 0 insn -1) }u336(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(25) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[281,282,283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(1) 17[88]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(25) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[281,282,283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 31 26 )->[27]->( 21 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u339(6){ d35(bb 0 insn -1) }u340(7){ d36(bb 0 insn -1) }u341(16){ d69(bb 0 insn -1) }u342(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 72 84 144 257
;; lr  def 	 17 [flags] 63 72 251
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags] 63 72 251
;; live  kill	 17 [flags]
;; rd  in  	(25) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[281,282,283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(4) 17[84],63[269],72[273],251[385]
;; rd  kill	(5) 63[268,269],72[272,273],251[385]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(19) 6[35],7[36],16[69],20[144],63[269],71[271],72[273],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 27 )->[28]->( 33 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u353(6){ d35(bb 0 insn -1) }u354(7){ d36(bb 0 insn -1) }u355(16){ d69(bb 0 insn -1) }u356(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 110
;; live  kill	
;; rd  in  	(19) 6[35],7[36],16[69],20[144],63[269],71[271],72[273],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(1) 110[292]
;; rd  kill	(2) 110[291,292]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; rd  out 	(16) 6[35],7[36],16[69],20[144],71[271],94[284,285],107[289,290],110[292],122[295],144[298],148[301],151[304],152[305],256[387]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 26 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u358(6){ d35(bb 0 insn -1) }u359(7){ d36(bb 0 insn -1) }u360(16){ d69(bb 0 insn -1) }u361(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  def 	 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 129
;; live  kill	
;; rd  in  	(25) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[281,282,283],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(1) 129[296]
;; rd  kill	(1) 129[296]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; rd  out 	(26) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[281,282,283],94[284,285],107[289,290],122[295],129[296],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 30 29 )->[30]->( 30 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u365(6){ d35(bb 0 insn -1) }u366(7){ d36(bb 0 insn -1) }u367(16){ d69(bb 0 insn -1) }u368(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 129
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; live  gen 	 17 [flags] 93
;; live  kill	 17 [flags]
;; rd  in  	(28) 6[35],7[36],16[69],17[82],20[144],63[268,269],71[271],72[272,273],84[279],93[280,281,282,283],94[284,285],107[289,290],122[295],129[296],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(2) 17[82],93[280]
;; rd  kill	(4) 93[280,281,282,283]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; rd  out 	(24) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[280],94[284,285],107[289,290],122[295],129[296],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 30 )->[31]->( 27 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u373(6){ d35(bb 0 insn -1) }u374(7){ d36(bb 0 insn -1) }u375(16){ d69(bb 0 insn -1) }u376(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 93 256
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	
;; live  kill	
;; rd  in  	(24) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],93[280],94[284,285],107[289,290],122[295],129[296],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(22) 6[35],7[36],16[69],20[144],63[268,269],71[271],72[272,273],84[279],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 34 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u380(6){ d35(bb 0 insn -1) }u381(7){ d36(bb 0 insn -1) }u382(16){ d69(bb 0 insn -1) }u383(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 110
;; live  kill	
;; rd  in  	(15) 6[35],7[36],16[69],20[144],71[271],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387]
;; rd  gen 	(1) 110[291]
;; rd  kill	(2) 110[291,292]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; rd  out 	(16) 6[35],7[36],16[69],20[144],71[271],94[284,285],107[289,290],110[291],122[295],144[298],148[301],151[304],152[305],256[387]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 32 28 )->[33]->( 34 36 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u384(6){ d35(bb 0 insn -1) }u385(7){ d36(bb 0 insn -1) }u386(16){ d69(bb 0 insn -1) }u387(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 148 256
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 94 106 107 254
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 94 106 107 254
;; live  kill	 17 [flags]
;; rd  in  	(17) 6[35],7[36],16[69],20[144],71[271],94[284,285],107[289,290],110[291,292],122[295],144[298],148[301],151[304],152[305],256[387]
;; rd  gen 	(6) 0[0],17[78],94[284],106[288],107[289],254[386]
;; rd  kill	(11) 0[0,1,2,3,4],94[284,285],106[288],107[289,290],254[386]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; rd  out 	(13) 6[35],7[36],16[69],20[144],71[271],94[284],107[289],122[295],144[298],148[301],151[304],152[305],256[387]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 33 20 )->[34]->( 35 32 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u410(6){ d35(bb 0 insn -1) }u411(7){ d36(bb 0 insn -1) }u412(16){ d69(bb 0 insn -1) }u413(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(19) 0[0],6[35],7[36],16[69],17[78],20[144],71[271],94[284,285],106[288],107[289,290],122[295],144[298],148[301],151[304],152[305],254[386],256[387]
;; rd  gen 	(1) 17[77]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; rd  out 	(15) 6[35],7[36],16[69],20[144],71[271],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 34 )->[35]->( 21 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u417(6){ d35(bb 0 insn -1) }u418(7){ d36(bb 0 insn -1) }u419(16){ d69(bb 0 insn -1) }u420(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63 72 257 258
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 63 72 257 258
;; live  kill	
;; rd  in  	(15) 6[35],7[36],16[69],20[144],71[271],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387]
;; rd  gen 	(4) 63[268],72[272],257[389],258[391]
;; rd  kill	(8) 63[268,269],72[272,273],257[389,390],258[391,392]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; rd  out 	(19) 6[35],7[36],16[69],20[144],63[268],71[271],72[272],94[284,285],107[289,290],122[295],144[298],148[301],151[304],152[305],256[387],257[389],258[391]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 33 5 )->[36]->( 1 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u423(6){ d35(bb 0 insn -1) }u424(7){ d36(bb 0 insn -1) }u425(16){ d69(bb 0 insn -1) }u426(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(15) 6[35],7[36],16[69],20[144],71[271],94[284],107[289],122[295],144[298],147[300],148[301],149[302],151[304],152[305],256[387]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[35],7[36],16[69],20[144]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 16 { d69(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

( 36 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u427(6){ d35(bb 0 insn -1) }u428(7){ d36(bb 0 insn -1) }u429(20){ d144(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[35],7[36],16[69],20[144]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d35(bb 0 insn -1) }
;;   reg 7 { d36(bb 0 insn -1) }
;;   reg 20 { d144(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 33 to worklist
  Adding insn 52 to worklist
  Adding insn 63 to worklist
  Adding insn 88 to worklist
  Adding insn 83 to worklist
  Adding insn 111 to worklist
  Adding insn 103 to worklist
  Adding insn 115 to worklist
  Adding insn 132 to worklist
  Adding insn 128 to worklist
  Adding insn 147 to worklist
  Adding insn 143 to worklist
  Adding insn 162 to worklist
  Adding insn 158 to worklist
  Adding insn 177 to worklist
  Adding insn 173 to worklist
  Adding insn 188 to worklist
  Adding insn 199 to worklist
  Adding insn 210 to worklist
  Adding insn 223 to worklist
  Adding insn 218 to worklist
  Adding insn 236 to worklist
  Adding insn 230 to worklist
  Adding insn 258 to worklist
  Adding insn 278 to worklist
  Adding insn 276 to worklist
  Adding insn 284 to worklist
  Adding insn 288 to worklist
  Adding insn 299 to worklist
  Adding insn 292 to worklist
  Adding insn 310 to worklist
  Adding insn 313 to worklist
  Adding insn 339 to worklist
  Adding insn 333 to worklist
  Adding insn 331 to worklist
  Adding insn 325 to worklist
  Adding insn 346 to worklist
Finished finding needed instructions:
Processing use of (reg 17 flags) in insn 346:
  Adding insn 345 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 345:
  Adding insn 8 to worklist
Processing use of (reg 37 r8) in insn 8:
Processing use of (reg 20 frame) in insn 325:
Processing use of (reg 107 [ j ]) in insn 325:
  Adding insn 20 to worklist
  Adding insn 334 to worklist
Processing use of (reg 254 [ num_floats ]) in insn 325:
  Adding insn 324 to worklist
Processing use of (reg 110 [ num_floats ]) in insn 324:
  Adding insn 18 to worklist
  Adding insn 19 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 18:
Processing use of (reg 107 [ j ]) in insn 334:
Processing use of (reg 7 sp) in insn 331:
Processing use of (reg 1 dx) in insn 331:
  Adding insn 328 to worklist
Processing use of (reg 2 cx) in insn 331:
  Adding insn 327 to worklist
Processing use of (reg 4 si) in insn 331:
  Adding insn 329 to worklist
Processing use of (reg 5 di) in insn 331:
  Adding insn 330 to worklist
Processing use of (reg 256) in insn 330:
  Adding insn 372 to worklist
Processing use of (reg 20 frame) in insn 372:
Processing use of (reg 71 [ num_coordinates ]) in insn 329:
  Adding insn 24 to worklist
Processing use of (reg 155 [ D.26216 ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 23:
Processing use of (reg 154 [ num_ints ]) in insn 23:
  Adding insn 11 to worklist
Processing use of (reg 16 argp) in insn 11:
Processing use of (reg 122 [ D.26224 ]) in insn 328:
  Adding insn 242 to worklist
Processing use of (reg 149 [ memory_size ]) in insn 242:
  Adding insn 6 to worklist
Processing use of (reg 1 dx) in insn 6:
Processing use of (reg 94 [ ivtmp.255 ]) in insn 333:
  Adding insn 243 to worklist
  Adding insn 337 to worklist
Processing use of (reg 106 [ D.26216 ]) in insn 333:
  Adding insn 332 to worklist
Processing use of (reg 0 ax) in insn 332:
Processing use of (reg 94 [ ivtmp.255 ]) in insn 337:
Processing use of (reg 147 [ the_tiles ]) in insn 243:
  Adding insn 4 to worklist
Processing use of (reg 5 di) in insn 4:
Processing use of (reg 17 flags) in insn 339:
  Adding insn 338 to worklist
Processing use of (reg 107 [ j ]) in insn 338:
Processing use of (reg 148 [ num_tilings ]) in insn 338:
  Adding insn 5 to worklist
Processing use of (reg 4 si) in insn 5:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 313:
  Adding insn 295 to worklist
  Adding insn 16 to worklist
Processing use of (reg 93 [ D.26216 ]) in insn 313:
  Adding insn 308 to worklist
Processing use of (reg 256) in insn 313:
Processing use of (reg 93 [ D.26216 ]) in insn 308:
  Adding insn 262 to worklist
  Adding insn 272 to worklist
  Adding insn 282 to worklist
Processing use of (reg 129 [ D.26216 ]) in insn 308:
  Adding insn 306 to worklist
Processing use of (reg 20 frame) in insn 306:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 306:
Processing use of (reg 247) in insn 282:
  Adding insn 281 to worklist
Processing use of (reg 72 [ ivtmp.241 ]) in insn 281:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 281:
Processing use of (reg 93 [ D.26216 ]) in insn 281:
Processing use of (reg 93 [ D.26216 ]) in insn 281:
Processing use of (reg 245) in insn 281:
  Adding insn 280 to worklist
Processing use of (reg 245) in insn 281:
Processing use of (reg 20 frame) in insn 280:
Processing use of (reg 148 [ num_tilings ]) in insn 272:
Processing use of (reg 243 [ D.26216 ]) in insn 272:
  Adding insn 271 to worklist
Processing use of (reg 237 [ D.26216 ]) in insn 271:
  Adding insn 267 to worklist
Processing use of (reg 241 [ D.26216 ]) in insn 271:
  Adding insn 270 to worklist
Processing use of (reg 148 [ num_tilings ]) in insn 270:
Processing use of (reg 148 [ num_tilings ]) in insn 270:
Processing use of (reg 239 [ D.26216 ]) in insn 270:
  Adding insn 269 to worklist
Processing use of (reg 239 [ D.26216 ]) in insn 270:
Processing use of (reg 238 [ D.26216 ]) in insn 269:
  Adding insn 268 to worklist
Processing use of (reg 83 [ D.26216 ]) in insn 268:
  Adding insn 254 to worklist
Processing use of (reg 84 [ D.26216 ]) in insn 268:
  Adding insn 256 to worklist
Processing use of (reg 72 [ ivtmp.241 ]) in insn 256:
Processing use of (reg 257) in insn 256:
  Adding insn 374 to worklist
Processing use of (reg 20 frame) in insn 374:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 254:
Processing use of (reg 258) in insn 254:
  Adding insn 373 to worklist
Processing use of (reg 20 frame) in insn 373:
Processing use of (reg 83 [ D.26216 ]) in insn 267:
Processing use of (reg 83 [ D.26216 ]) in insn 262:
Processing use of (reg 235 [ D.26216 ]) in insn 262:
  Adding insn 261 to worklist
Processing use of (reg 148 [ num_tilings ]) in insn 261:
Processing use of (reg 148 [ num_tilings ]) in insn 261:
Processing use of (reg 233 [ D.26216 ]) in insn 261:
  Adding insn 260 to worklist
Processing use of (reg 233 [ D.26216 ]) in insn 261:
Processing use of (reg 83 [ D.26216 ]) in insn 260:
Processing use of (reg 84 [ D.26216 ]) in insn 260:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 295:
Processing use of (reg 17 flags) in insn 310:
  Adding insn 309 to worklist
Processing use of (reg 93 [ D.26216 ]) in insn 309:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 292:
Processing use of (reg 251) in insn 292:
  Adding insn 291 to worklist
Processing use of (reg 257) in insn 292:
Processing use of (reg 63 [ ivtmp.245 ]) in insn 291:
  Adding insn 296 to worklist
  Adding insn 15 to worklist
Processing use of (reg 84 [ D.26216 ]) in insn 291:
Processing use of (reg 63 [ ivtmp.245 ]) in insn 296:
Processing use of (reg 17 flags) in insn 299:
  Adding insn 298 to worklist
Processing use of (reg 72 [ ivtmp.241 ]) in insn 298:
Processing use of (reg 144 [ D.26221 ]) in insn 298:
  Adding insn 247 to worklist
Processing use of (reg 230 [ D.26221 ]) in insn 247:
  Adding insn 246 to worklist
Processing use of (reg 229 [ D.26221 ]) in insn 246:
  Adding insn 245 to worklist
Processing use of (reg 228 [ D.26214 ]) in insn 245:
  Adding insn 244 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 244:
Processing use of (reg 17 flags) in insn 288:
  Adding insn 287 to worklist
Processing use of (reg 93 [ D.26216 ]) in insn 287:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 284:
Processing use of (reg 93 [ D.26216 ]) in insn 284:
Processing use of (reg 256) in insn 284:
Processing use of (reg 72 [ ivtmp.241 ]) in insn 276:
Processing use of (reg 93 [ D.26216 ]) in insn 276:
Processing use of (reg 256) in insn 276:
Processing use of (reg 17 flags) in insn 278:
  Adding insn 277 to worklist
Processing use of (reg 72 [ ivtmp.241 ]) in insn 277:
Processing use of (reg 152 [ wrap_widths ]) in insn 277:
  Adding insn 9 to worklist
Processing use of (reg 38 r9) in insn 9:
Processing use of (reg 17 flags) in insn 258:
  Adding insn 257 to worklist
Processing use of (reg 83 [ D.26216 ]) in insn 257:
Processing use of (reg 84 [ D.26216 ]) in insn 257:
Processing use of (reg 20 frame) in insn 230:
Processing use of (reg 224 [ i ]) in insn 230:
  Adding insn 226 to worklist
Processing use of (reg 226 [ D.26216 ]) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 148 [ num_tilings ]) in insn 229:
Processing use of (reg 227 [ *_33 ]) in insn 229:
  Adding insn 228 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 228:
Processing use of (reg 224 [ i ]) in insn 228:
Processing use of (reg 81 [ i ]) in insn 226:
  Adding insn 219 to worklist
Processing use of (reg 114 [ i ]) in insn 219:
  Adding insn 208 to worklist
  Adding insn 14 to worklist
Processing use of (reg 79 [ ratio_mult_vf.219 ]) in insn 208:
  Adding insn 107 to worklist
Processing use of (reg 80 [ bnd.218 ]) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 106:
Processing use of (reg 17 flags) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 66 [ i ]) in insn 235:
  Adding insn 231 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 235:
Processing use of (reg 114 [ i ]) in insn 231:
Processing use of (reg 20 frame) in insn 218:
Processing use of (reg 220 [ i ]) in insn 218:
  Adding insn 214 to worklist
Processing use of (reg 222 [ D.26216 ]) in insn 218:
  Adding insn 217 to worklist
Processing use of (reg 148 [ num_tilings ]) in insn 217:
Processing use of (reg 223 [ *_109 ]) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 216:
Processing use of (reg 220 [ i ]) in insn 216:
Processing use of (reg 114 [ i ]) in insn 214:
Processing use of (reg 17 flags) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 81 [ i ]) in insn 222:
Processing use of (reg 151 [ num_floats ]) in insn 222:
Processing use of (reg 17 flags) in insn 210:
  Adding insn 209 to worklist
Processing use of (reg 114 [ i ]) in insn 209:
Processing use of (reg 151 [ num_floats ]) in insn 209:
Processing use of (reg 20 frame) in insn 199:
Processing use of (reg 216 [ i ]) in insn 199:
  Adding insn 195 to worklist
Processing use of (reg 218 [ D.26216 ]) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 148 [ num_tilings ]) in insn 198:
Processing use of (reg 219 [ *_152 ]) in insn 198:
  Adding insn 197 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 197:
Processing use of (reg 216 [ i ]) in insn 197:
Processing use of (reg 66 [ i ]) in insn 195:
Processing use of (reg 20 frame) in insn 188:
Processing use of (reg 211 [ vect_var_.226 ]) in insn 188:
  Adding insn 187 to worklist
Processing use of (reg 212) in insn 187:
  Adding insn 185 to worklist
Processing use of (reg 213) in insn 187:
  Adding insn 186 to worklist
Processing use of (reg 213) in insn 186:
  Adding insn 184 to worklist
Processing use of (subreg (reg 191) 0) in insn 184:
  Adding insn 123 to worklist
Processing use of (subreg (reg 214) 0) in insn 184:
  Adding insn 182 to worklist
Processing use of (subreg (reg 210 [ vect_var_.225 ]) 0) in insn 182:
  Adding insn 180 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 180:
Processing use of (subreg (reg 185) 0) in insn 123:
  Adding insn 117 to worklist
Processing use of (reg 148 [ num_tilings ]) in insn 117:
Processing use of (reg 212) in insn 185:
  Adding insn 181 to worklist
Processing use of (reg 185) in insn 181:
Processing use of (reg 210 [ vect_var_.225 ]) in insn 181:
Processing use of (reg 20 frame) in insn 173:
Processing use of (reg 205 [ vect_var_.226 ]) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 206) in insn 172:
  Adding insn 170 to worklist
Processing use of (reg 207) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 207) in insn 171:
  Adding insn 169 to worklist
Processing use of (subreg (reg 191) 0) in insn 169:
Processing use of (subreg (reg 208) 0) in insn 169:
  Adding insn 167 to worklist
Processing use of (subreg (reg 204 [ vect_var_.225 ]) 0) in insn 167:
  Adding insn 165 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 165:
Processing use of (reg 206) in insn 170:
  Adding insn 166 to worklist
Processing use of (reg 185) in insn 166:
Processing use of (reg 204 [ vect_var_.225 ]) in insn 166:
Processing use of (reg 17 flags) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 80 [ bnd.218 ]) in insn 176:
Processing use of (reg 20 frame) in insn 158:
Processing use of (reg 199 [ vect_var_.226 ]) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 200) in insn 157:
  Adding insn 155 to worklist
Processing use of (reg 201) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 201) in insn 156:
  Adding insn 154 to worklist
Processing use of (subreg (reg 191) 0) in insn 154:
Processing use of (subreg (reg 202) 0) in insn 154:
  Adding insn 152 to worklist
Processing use of (subreg (reg 198 [ vect_var_.225 ]) 0) in insn 152:
  Adding insn 150 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 150:
Processing use of (reg 200) in insn 155:
  Adding insn 151 to worklist
Processing use of (reg 185) in insn 151:
Processing use of (reg 198 [ vect_var_.225 ]) in insn 151:
Processing use of (reg 17 flags) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 80 [ bnd.218 ]) in insn 161:
Processing use of (reg 20 frame) in insn 143:
Processing use of (reg 193 [ vect_var_.226 ]) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 194) in insn 142:
  Adding insn 140 to worklist
Processing use of (reg 195) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 195) in insn 141:
  Adding insn 139 to worklist
Processing use of (subreg (reg 191) 0) in insn 139:
Processing use of (subreg (reg 196) 0) in insn 139:
  Adding insn 137 to worklist
Processing use of (subreg (reg 192 [ vect_var_.225 ]) 0) in insn 137:
  Adding insn 135 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 135:
Processing use of (reg 194) in insn 140:
  Adding insn 136 to worklist
Processing use of (reg 185) in insn 136:
Processing use of (reg 192 [ vect_var_.225 ]) in insn 136:
Processing use of (reg 17 flags) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 80 [ bnd.218 ]) in insn 146:
Processing use of (reg 20 frame) in insn 128:
Processing use of (reg 187 [ vect_var_.226 ]) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 188) in insn 127:
  Adding insn 125 to worklist
Processing use of (reg 189) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 189) in insn 126:
  Adding insn 124 to worklist
Processing use of (subreg (reg 190) 0) in insn 124:
  Adding insn 122 to worklist
Processing use of (subreg (reg 191) 0) in insn 124:
Processing use of (subreg (reg 186 [ vect_var_.225 ]) 0) in insn 122:
  Adding insn 120 to worklist
Processing use of (reg 152 [ wrap_widths ]) in insn 120:
Processing use of (reg 188) in insn 125:
  Adding insn 121 to worklist
Processing use of (reg 185) in insn 121:
Processing use of (reg 186 [ vect_var_.225 ]) in insn 121:
Processing use of (reg 17 flags) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 80 [ bnd.218 ]) in insn 131:
Processing use of (reg 17 flags) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 184 [ D.26223 ]) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 112:
Processing use of (reg 7 sp) in insn 103:
Processing use of (reg 1 dx) in insn 103:
  Adding insn 100 to worklist
Processing use of (reg 4 si) in insn 103:
  Adding insn 101 to worklist
Processing use of (reg 5 di) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 257) in insn 102:
  Adding insn 97 to worklist
Processing use of (reg 20 frame) in insn 97:
Processing use of (reg 175 [ D.26221 ]) in insn 100:
  Adding insn 96 to worklist
Processing use of (reg 174 [ D.26221 ]) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 95:
Processing use of (reg 17 flags) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 182 [ D.26223 ]) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 17 flags) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 79 [ ratio_mult_vf.219 ]) in insn 108:
Processing use of (reg 104 [ ivtmp.261 ]) in insn 83:
  Adding insn 13 to worklist
  Adding insn 86 to worklist
Processing use of (reg 173) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 258) in insn 83:
  Adding insn 371 to worklist
Processing use of (reg 20 frame) in insn 371:
Processing use of (reg 75 [ D.26217 ]) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 21 xmm0) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 7 sp) in insn 79:
Processing use of (reg 21 xmm0) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 171 [ D.26217 ]) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 104 [ ivtmp.261 ]) in insn 77:
Processing use of (reg 131 [ D.26217 ]) in insn 77:
  Adding insn 69 to worklist
Processing use of (reg 150 [ floats ]) in insn 77:
  Adding insn 7 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 148 [ num_tilings ]) in insn 69:
Processing use of (reg 104 [ ivtmp.261 ]) in insn 86:
Processing use of (reg 17 flags) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 104 [ ivtmp.261 ]) in insn 87:
Processing use of (reg 146 [ D.26221 ]) in insn 87:
  Adding insn 74 to worklist
Processing use of (reg 170 [ D.26221 ]) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 169 [ D.26221 ]) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 168 [ D.26214 ]) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 71:
Processing use of (reg 17 flags) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 148 [ num_tilings ]) in insn 62:
Processing use of (reg 7 sp) in insn 52:
Processing use of (reg 1 dx) in insn 52:
  Adding insn 49 to worklist
Processing use of (reg 4 si) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 5 di) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 160 [ D.26220 ]) in insn 51:
  Adding insn 43 to worklist
Processing use of (reg 159 [ D.26215 ]) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 256) in insn 43:
  Adding insn 39 to worklist
Processing use of (reg 20 frame) in insn 39:
Processing use of (reg 158 [ D.26221 ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 157 [ D.26221 ]) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 40:
Processing use of (reg 153 [ ints ]) in insn 50:
  Adding insn 10 to worklist
Processing use of (reg 16 argp) in insn 10:
Processing use of (reg 162 [ D.26221 ]) in insn 49:
  Adding insn 45 to worklist
Processing use of (reg 161 [ D.26221 ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 154 [ num_ints ]) in insn 44:
Processing use of (reg 17 flags) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 151 [ num_floats ]) in insn 32:
Processing use of (reg 17 flags) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 154 [ num_ints ]) in insn 28:
starting the processing of deferred insns
ending the processing of deferred insns


void tileswrap(int*, int, int, float*, int, int*, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={6d,2u} r4={8d,4u} r5={8d,4u} r6={1d,36u} r7={1d,40u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,37u,2e} r17={66d,22u} r18={4d} r19={4d} r20={1d,53u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r63={2d,2u} r66={1d,2u} r71={1d,2u} r72={2d,12u} r75={1d,1u} r79={1d,2u} r80={1d,5u} r81={1d,4u} r83={1d,5u} r84={1d,4u} r93={4d,8u} r94={2d,2u} r104={2d,4u} r106={1d,1u} r107={2d,5u} r110={2d,1u} r114={2d,6u} r122={1d,1u} r129={1d,1u} r131={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,12u} r149={1d,1u} r150={1d,1u} r151={1d,13u} r152={1d,9u} r153={1d,1u} r154={1d,3u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,6u} r186={1d,2u} r187={1d,1u} r188={2d,2u} r189={2d,2u} r190={1d,1u} r191={1d,5u} r192={1d,2u} r193={1d,1u} r194={2d,2u} r195={2d,2u} r196={1d,1u} r198={1d,2u} r199={1d,1u} r200={2d,2u} r201={2d,2u} r202={1d,1u} r204={1d,2u} r205={1d,1u} r206={2d,2u} r207={2d,2u} r208={1d,1u} r210={1d,2u} r211={1d,1u} r212={2d,2u} r213={2d,2u} r214={1d,1u} r216={1d,2u} r218={1d,1u} r219={1d,1u} r220={1d,2u} r222={1d,1u} r223={1d,1u} r224={1d,2u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r233={1d,2u} r235={1d,1u} r236={1d} r237={1d,1u} r238={1d,1u} r239={1d,2u} r241={1d,1u} r242={1d} r243={1d,1u} r245={1d,2u} r247={1d,1u} r248={1d} r251={1d,1u} r254={1d,1u} r256={2d,5u} r257={2d,3u} r258={2d,2u} 
;;    total ref usage 822{393d,425u,4e} in 223{219 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 71 147 148 149 150 151 152 153 154 155
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 71 147 148 149 150 151 152 153 154 155
;; live  kill	 17 [flags]
(note 21 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 21 5 2 (set (reg/v/f:DI 147 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:439 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SI 148 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 149 [ memory_size ])
        (reg:SI 1 dx [ memory_size ])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory_size ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 150 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:439 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 151 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 9 8 10 2 (set (reg/v/f:DI 152 [ wrap_widths ])
        (reg:DI 38 r9 [ wrap_widths ])) tiles.cpp:439 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ wrap_widths ])
        (nil)))
(insn 10 9 11 2 (set (reg/v/f:DI 153 [ ints ])
        (mem/f/c:DI (reg/f:DI 16 argp) [0 ints+0 S8 A64])) tiles.cpp:439 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [0 ints+0 S8 A64])
        (nil)))
(insn 11 10 12 2 (set (reg/v:SI 154 [ num_ints ])
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])
        (nil)))
(note 12 11 23 2 NOTE_INSN_FUNCTION_BEG)
(insn 23 12 24 2 (parallel [
            (set (reg:SI 155 [ D.26216 ])
                (plus:SI (reg/v:SI 151 [ num_floats ])
                    (reg/v:SI 154 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:445 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg/v:SI 71 [ num_coordinates ])
                (plus:SI (reg:SI 155 [ D.26216 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:445 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 155 [ D.26216 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 25 24 27 2 (var_location:SI num_coordinates (reg/v:SI 71 [ num_coordinates ])) tiles.cpp:445 -1
     (nil))
(debug_insn 27 25 28 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 28 27 29 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 154 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:447 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 29 28 55 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) tiles.cpp:447 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
            (nil)))
 -> 37)
;;  succ:       4 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154

;; basic block 3, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 55 29 30 3 145 "" [0 uses])
(note 30 55 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 32 31 33 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 151 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:450 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 33 32 37 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 67)
;;  succ:       6 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152

;; basic block 4, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 153 154
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 157 158 159 160 161 162 256
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152 153 154
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 157 158 159 160 161 162 256
;; live  kill	 17 [flags]
(code_label 37 33 38 4 142 "" [1 uses])
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (parallel [
            (set (reg/f:DI 256)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 4 (set (reg:DI 157 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 151 [ num_floats ]))) tiles.cpp:447 149 {*extendsidi2_rex64}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 158 [ D.26221 ])
                (ashift:DI (reg:DI 157 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 159 [ D.26215 ])
                (plus:DI (reg:DI 158 [ D.26221 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 158 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 160 [ D.26220 ])
                (plus:DI (reg/f:DI 256)
                    (reg:DI 159 [ D.26215 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 256)
        (expr_list:REG_DEAD (reg:DI 159 [ D.26215 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 44 43 45 4 (set (reg:DI 161 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 154 [ num_ints ]))) tiles.cpp:447 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 154 [ num_ints ])
        (nil)))
(insn 45 44 49 4 (parallel [
            (set (reg:DI 162 [ D.26221 ])
                (ashift:DI (reg:DI 161 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 161 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 45 50 4 (set (reg:DI 1 dx)
        (reg:DI 162 [ D.26221 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 162 [ D.26221 ])
        (nil)))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg/v/f:DI 153 [ ints ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 153 [ ints ])
        (nil)))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg:DI 160 [ D.26220 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 160 [ D.26220 ])
        (nil)))
(call_insn 52 51 59 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152

;; basic block 5, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [25.0%]  (FALLTHRU)
;;              3 [4.8%]  (FALLTHRU)
;;              15 [100.0%]  (FALLTHRU)
;;              16 [33.3%] 
;;              18 [25.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 59 52 60 5 144 "" [2 uses])
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 5 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 62 61 63 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 148 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:457 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 63 62 67 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) tiles.cpp:457 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 240)
;;  succ:       20 [91.0%] 
;;              36 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152

;; basic block 6, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 151
;; lr  def 	 17 [flags] 104 131 146 168 169 170 258
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 150 151 152
;; live  gen 	 104 131 146 168 169 170 258
;; live  kill	 17 [flags]
(code_label 67 63 68 6 143 "" [1 uses])
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 71 6 (set (reg:SF 131 [ D.26217 ])
        (float:SF (reg/v:SI 148 [ num_tilings ]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 71 69 72 6 (parallel [
            (set (reg:SI 168 [ D.26214 ])
                (plus:SI (reg/v:SI 151 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 6 (set (reg:DI 169 [ D.26221 ])
        (zero_extend:DI (reg:SI 168 [ D.26214 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 168 [ D.26214 ])
        (nil)))
(insn 73 72 74 6 (parallel [
            (set (reg:DI 170 [ D.26221 ])
                (plus:DI (reg:DI 169 [ D.26221 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 169 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 13 6 (parallel [
            (set (reg:DI 146 [ D.26221 ])
                (ashift:DI (reg:DI 170 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 170 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 74 371 6 (set (reg:DI 104 [ ivtmp.261 ])
        (const_int 0 [0])) tiles.cpp:450 87 {*movdi_internal_rex64}
     (nil))
(insn 371 13 90 6 (set (reg/f:DI 258)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))) 267 {*leadi}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258

;; basic block 7, loop depth 0, count 0, freq 330, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 131 146 150 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75 104 171 173
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; live  gen 	 17 [flags] 21 [xmm0] 75 104 171 173
;; live  kill	 17 [flags]
(code_label 90 371 75 7 149 "" [0 uses])
(note 75 90 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 7 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 77 76 78 7 (set (reg:SF 171 [ D.26217 ])
        (mult:SF (reg:SF 131 [ D.26217 ])
            (mem:SF (plus:DI (reg/v/f:DI 150 [ floats ])
                    (reg:DI 104 [ ivtmp.261 ])) [0 MEM[base: floats_29(D), index: ivtmp.261_79, offset: 0B]+0 S4 A32]))) tiles.cpp:451 777 {*fop_sf_comm_sse}
     (nil))
(insn 78 77 79 7 (set (reg:SF 21 xmm0)
        (reg:SF 171 [ D.26217 ])) tiles.cpp:451 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 171 [ D.26217 ])
        (nil)))
(call_insn/u 79 78 80 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:451 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 80 79 82 7 (set (reg:SF 75 [ D.26217 ])
        (reg:SF 21 xmm0)) tiles.cpp:451 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 82 80 83 7 (set (reg:SI 173)
        (fix:SI (reg:SF 75 [ D.26217 ]))) tiles.cpp:451 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 75 [ D.26217 ])
        (nil)))
(insn 83 82 85 7 (set (mem:SI (plus:DI (reg/f:DI 258)
                (reg:DI 104 [ ivtmp.261 ])) [0 MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B]+0 S4 A32])
        (reg:SI 173)) tiles.cpp:451 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(debug_insn 85 83 86 7 (var_location:SI i (debug_expr:SI D#14)) -1
     (nil))
(insn 86 85 87 7 (parallel [
            (set (reg:DI 104 [ ivtmp.261 ])
                (plus:DI (reg:DI 104 [ ivtmp.261 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 87 86 88 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 104 [ ivtmp.261 ])
            (reg:DI 146 [ D.26221 ]))) tiles.cpp:450 8 {*cmpdi_1}
     (nil))
(jump_insn 88 87 93 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 93)
;;  succ:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              8 [4.8%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 104 131 146 147 148 149 150 151 152 258

;; basic block 8, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.8%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79 80 174 175 182 257
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 79 80 174 175 182 257
;; live  kill	 17 [flags]
(code_label 93 88 94 8 148 "" [1 uses])
(note 94 93 95 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 8 (set (reg:DI 174 [ D.26221 ])
        (sign_extend:DI (reg/v:SI 151 [ num_floats ]))) tiles.cpp:452 149 {*extendsidi2_rex64}
     (nil))
(insn 96 95 97 8 (parallel [
            (set (reg:DI 175 [ D.26221 ])
                (ashift:DI (reg:DI 174 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:452 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 174 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 100 8 (parallel [
            (set (reg/f:DI 257)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 97 101 8 (set (reg:DI 1 dx)
        (reg:DI 175 [ D.26221 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 175 [ D.26221 ])
        (nil)))
(insn 101 100 102 8 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 102 101 103 8 (set (reg:DI 5 di)
        (reg/f:DI 257)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 257)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0]))
            (nil))))
(call_insn 103 102 106 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 106 103 107 8 (parallel [
            (set (reg:SI 80 [ bnd.218 ])
                (lshiftrt:SI (reg/v:SI 151 [ num_floats ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 545 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 107 106 108 8 (parallel [
            (set (reg:SI 79 [ ratio_mult_vf.219 ])
                (ashift:SI (reg:SI 80 [ bnd.218 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 108 107 109 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ ratio_mult_vf.219 ])
            (const_int 0 [0]))) 3 {*cmpsi_ccno_1}
     (nil))
(insn 109 108 110 8 (set (reg:QI 182 [ D.26223 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 110 109 111 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 182 [ D.26223 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 182 [ D.26223 ])
        (nil)))
(jump_insn 111 110 362 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
            (nil)))
 -> 359)
;;  succ:       17 [33.3%] 
;;              9 [66.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152

;; basic block 9, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [66.7%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u100(6){ }u101(7){ }u102(16){ }u103(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags] 184
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  gen 	 17 [flags] 184
;; live  kill	
(note 362 111 112 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 112 362 113 9 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 151 [ num_floats ])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (nil))
(insn 113 112 114 9 (set (reg:QI 184 [ D.26223 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 114 113 115 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 184 [ D.26223 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 184 [ D.26223 ])
        (nil)))
(jump_insn 115 114 116 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
            (nil)))
 -> 359)
;;  succ:       10 [66.7%]  (FALLTHRU)
;;              17 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152

;; basic block 10, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [66.7%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 148 152
;; lr  def 	 17 [flags] 185 186 187 188 189 190 191
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152
;; live  gen 	 17 [flags] 185 186 187 188 189 190 191
;; live  kill	
(note 116 115 117 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 119 10 (set (reg:V4SI 185)
        (vec_duplicate:V4SI (reg/v:SI 148 [ num_tilings ]))) 1643 {*vec_dupv4si}
     (nil))
(debug_insn 119 117 120 10 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 120 119 121 10 (set (subreg:V16QI (reg:V4SI 186 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 152 [ wrap_widths ]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 121 120 122 10 (set (subreg:V2DI (reg:V4SI 188) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 186 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 122 121 123 10 (set (reg:V2DI 190)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 186 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 186 [ vect_var_.225 ])
        (nil)))
(insn 123 122 124 10 (set (reg:V2DI 191)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 185) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (nil))
(insn 124 123 125 10 (set (subreg:V2DI (reg:V4SI 189) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 191) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 190)
        (nil)))
(insn 125 124 126 10 (set (reg:V4SI 188)
        (vec_select:V4SI (reg:V4SI 188)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 126 125 127 10 (set (reg:V4SI 189)
        (vec_select:V4SI (reg:V4SI 189)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 127 126 128 10 (set (reg:V4SI 187 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 188)
                (reg:V4SI 189))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 189)
        (expr_list:REG_DEAD (reg:V4SI 188)
            (nil))))
(insn 128 127 130 10 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 187 [ vect_var_.226 ])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 187 [ vect_var_.226 ])
        (nil)))
(debug_insn 130 128 131 10 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 131 130 132 10 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 1 [0x1]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 132 131 133 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       11 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191

;; basic block 11, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [66.7%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u128(6){ }u129(7){ }u130(16){ }u131(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 152 185 191
;; lr  def 	 17 [flags] 192 193 194 195 196
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  gen 	 17 [flags] 192 193 194 195 196
;; live  kill	
(note 133 132 134 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 134 133 135 11 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 135 134 136 11 (set (subreg:V16QI (reg:V4SI 192 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 136 135 137 11 (set (subreg:V2DI (reg:V4SI 194) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 192 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 137 136 139 11 (set (reg:V2DI 196)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 192 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 192 [ vect_var_.225 ])
        (nil)))
(insn 139 137 140 11 (set (subreg:V2DI (reg:V4SI 195) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 196) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 191) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 196)
        (nil)))
(insn 140 139 141 11 (set (reg:V4SI 194)
        (vec_select:V4SI (reg:V4SI 194)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 141 140 142 11 (set (reg:V4SI 195)
        (vec_select:V4SI (reg:V4SI 195)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 142 141 143 11 (set (reg:V4SI 193 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 194)
                (reg:V4SI 195))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 195)
        (expr_list:REG_DEAD (reg:V4SI 194)
            (nil))))
(insn 143 142 145 11 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 193 [ vect_var_.226 ])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 193 [ vect_var_.226 ])
        (nil)))
(debug_insn 145 143 146 11 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 146 145 147 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 2 [0x2]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 147 146 148 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       12 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191

;; basic block 12, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [66.7%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u146(6){ }u147(7){ }u148(16){ }u149(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 152 185 191
;; lr  def 	 17 [flags] 198 199 200 201 202
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  gen 	 17 [flags] 198 199 200 201 202
;; live  kill	
(note 148 147 149 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 12 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 150 149 151 12 (set (subreg:V16QI (reg:V4SI 198 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 151 150 152 12 (set (subreg:V2DI (reg:V4SI 200) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 198 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 152 151 154 12 (set (reg:V2DI 202)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 198 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 198 [ vect_var_.225 ])
        (nil)))
(insn 154 152 155 12 (set (subreg:V2DI (reg:V4SI 201) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 202) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 191) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 202)
        (nil)))
(insn 155 154 156 12 (set (reg:V4SI 200)
        (vec_select:V4SI (reg:V4SI 200)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 156 155 157 12 (set (reg:V4SI 201)
        (vec_select:V4SI (reg:V4SI 201)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 157 156 158 12 (set (reg:V4SI 199 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 200)
                (reg:V4SI 201))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 201)
        (expr_list:REG_DEAD (reg:V4SI 200)
            (nil))))
(insn 158 157 160 12 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 199 [ vect_var_.226 ])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 199 [ vect_var_.226 ])
        (nil)))
(debug_insn 160 158 161 12 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 161 160 162 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 162 161 163 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       13 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191

;; basic block 13, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [66.7%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u164(6){ }u165(7){ }u166(16){ }u167(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 152 185 191
;; lr  def 	 17 [flags] 204 205 206 207 208
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 80 147 148 149 151 152 185 191
;; live  gen 	 17 [flags] 204 205 206 207 208
;; live  kill	
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 164 163 165 13 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 165 164 166 13 (set (subreg:V16QI (reg:V4SI 204 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 166 165 167 13 (set (subreg:V2DI (reg:V4SI 206) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 204 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 167 166 169 13 (set (reg:V2DI 208)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 204 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 204 [ vect_var_.225 ])
        (nil)))
(insn 169 167 170 13 (set (subreg:V2DI (reg:V4SI 207) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 208) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 191) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 208)
        (nil)))
(insn 170 169 171 13 (set (reg:V4SI 206)
        (vec_select:V4SI (reg:V4SI 206)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 171 170 172 13 (set (reg:V4SI 207)
        (vec_select:V4SI (reg:V4SI 207)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 172 171 173 13 (set (reg:V4SI 205 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 206)
                (reg:V4SI 207))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 207)
        (expr_list:REG_DEAD (reg:V4SI 206)
            (nil))))
(insn 173 172 175 13 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 205 [ vect_var_.226 ])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 205 [ vect_var_.226 ])
        (nil)))
(debug_insn 175 173 176 13 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 176 175 177 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 80 [ bnd.218 ])
            (const_int 4 [0x4]))) 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 80 [ bnd.218 ])
        (nil)))
(jump_insn 177 176 178 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       14 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191

;; basic block 14, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [66.7%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u182(6){ }u183(7){ }u184(16){ }u185(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 152 185 191
;; lr  def 	 210 211 212 213 214
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152 185 191
;; live  gen 	 210 211 212 213 214
;; live  kill	
(note 178 177 179 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 179 178 180 14 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 180 179 181 14 (set (subreg:V16QI (reg:V4SI 210 [ vect_var_.225 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 181 180 182 14 (set (subreg:V2DI (reg:V4SI 212) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 210 [ vect_var_.225 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V4SI 185)
        (nil)))
(insn 182 181 184 14 (set (reg:V2DI 214)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 210 [ vect_var_.225 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 210 [ vect_var_.225 ])
        (nil)))
(insn 184 182 185 14 (set (subreg:V2DI (reg:V4SI 213) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 214) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 191) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 214)
        (expr_list:REG_DEAD (reg:V2DI 191)
            (nil))))
(insn 185 184 186 14 (set (reg:V4SI 212)
        (vec_select:V4SI (reg:V4SI 212)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 186 185 187 14 (set (reg:V4SI 213)
        (vec_select:V4SI (reg:V4SI 213)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 187 186 188 14 (set (reg:V4SI 211 [ vect_var_.226 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 212)
                (reg:V4SI 213))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 213)
        (expr_list:REG_DEAD (reg:V4SI 212)
            (nil))))
(insn 188 187 190 14 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 211 [ vect_var_.226 ])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 211 [ vect_var_.226 ])
        (nil)))
(debug_insn 190 188 234 14 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152

;; basic block 15, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [75.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u198(6){ }u199(7){ }u200(16){ }u201(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 148 152
;; lr  def 	 17 [flags] 216 218 219
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152
;; live  gen 	 216 218 219
;; live  kill	 17 [flags]
(code_label 234 190 193 15 153 "" [1 uses])
(note 193 234 194 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 15 (var_location:SI i (debug_expr:SI D#16)) -1
     (nil))
(insn 195 194 197 15 (set (reg:DI 216 [ i ])
        (sign_extend:DI (reg/v:SI 66 [ i ]))) tiles.cpp:453 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 66 [ i ])
        (nil)))
(insn 197 195 198 15 (set (reg:SI 219 [ *_152 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 216 [ i ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_152+0 S4 A32])) tiles.cpp:453 89 {*movsi_internal}
     (nil))
(insn 198 197 199 15 (parallel [
            (set (reg:SI 218 [ D.26216 ])
                (mult:SI (reg:SI 219 [ *_152 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 344 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 219 [ *_152 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 200 15 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 216 [ i ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 218 [ D.26216 ])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 218 [ D.26216 ])
        (expr_list:REG_DEAD (reg:DI 216 [ i ])
            (nil))))
(debug_insn 200 199 202 15 (var_location:SI D#15 (plus:SI (debug_expr:SI D#16)
        (const_int 1 [0x1]))) tiles.cpp:450 -1
     (nil))
(debug_insn 202 200 206 15 (var_location:SI i (debug_expr:SI D#15)) -1
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152

;; basic block 16, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              10 [33.3%] 
;;              11 [33.3%] 
;;              12 [33.3%] 
;;              13 [33.3%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u210(6){ }u211(7){ }u212(16){ }u213(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151
;; lr  def 	 17 [flags] 114
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 79 147 148 149 151 152
;; live  gen 	 17 [flags] 114
;; live  kill	
(code_label 206 202 207 16 151 "" [4 uses])
(note 207 206 208 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 16 (set (reg/v:SI 114 [ i ])
        (reg:SI 79 [ ratio_mult_vf.219 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 79 [ ratio_mult_vf.219 ])
        (nil)))
(insn 209 208 210 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 114 [ i ])
            (reg/v:SI 151 [ num_floats ]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 210 209 359 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
            (nil)))
 -> 59)
;;  succ:       18 [66.7%]  (FALLTHRU)
;;              5 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152

;; basic block 17, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [33.3%] 
;;              8 [33.3%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 114
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 114
;; live  kill	
(code_label 359 210 358 17 165 "" [2 uses])
(note 358 359 14 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 14 358 211 17 (set (reg/v:SI 114 [ i ])
        (const_int 0 [0])) tiles.cpp:452 89 {*movsi_internal}
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152

;; basic block 18, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [66.7%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u222(6){ }u223(7){ }u224(16){ }u225(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 148 151 152
;; lr  def 	 17 [flags] 81 220 222 223
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 114 147 148 149 151 152
;; live  gen 	 17 [flags] 81 220 222 223
;; live  kill	 17 [flags]
(code_label 211 14 212 18 150 "" [0 uses])
(note 212 211 213 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 18 (var_location:SI i (reg/v:SI 114 [ i ])) -1
     (nil))
(insn 214 213 216 18 (set (reg:DI 220 [ i ])
        (sign_extend:DI (reg/v:SI 114 [ i ]))) tiles.cpp:453 149 {*extendsidi2_rex64}
     (nil))
(insn 216 214 217 18 (set (reg:SI 223 [ *_109 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 220 [ i ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_109+0 S4 A32])) tiles.cpp:453 89 {*movsi_internal}
     (nil))
(insn 217 216 218 18 (parallel [
            (set (reg:SI 222 [ D.26216 ])
                (mult:SI (reg:SI 223 [ *_109 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 344 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 223 [ *_109 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 218 217 219 18 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 220 [ i ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 222 [ D.26216 ])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 222 [ D.26216 ])
        (expr_list:REG_DEAD (reg:DI 220 [ i ])
            (nil))))
(insn 219 218 221 18 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 114 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 221 219 222 18 (var_location:SI i (reg/v:SI 81 [ i ])) -1
     (nil))
(insn 222 221 223 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 151 [ num_floats ])
            (reg/v:SI 81 [ i ]))) tiles.cpp:450 7 {*cmpsi_1}
     (nil))
(jump_insn 223 222 224 18 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil)))
 -> 59)
;;  succ:       19 [75.0%]  (FALLTHRU)
;;              5 [25.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152

;; basic block 19, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [75.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u240(6){ }u241(7){ }u242(16){ }u243(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 114 148 151 152
;; lr  def 	 17 [flags] 66 224 226 227
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 81 114 147 148 149 151 152
;; live  gen 	 17 [flags] 66 224 226 227
;; live  kill	 17 [flags]
(note 224 223 225 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 19 (var_location:SI i (reg/v:SI 81 [ i ])) -1
     (nil))
(insn 226 225 228 19 (set (reg:DI 224 [ i ])
        (sign_extend:DI (reg/v:SI 81 [ i ]))) tiles.cpp:453 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 81 [ i ])
        (nil)))
(insn 228 226 229 19 (set (reg:SI 227 [ *_33 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 224 [ i ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 152 [ wrap_widths ])) [0 *_33+0 S4 A32])) tiles.cpp:453 89 {*movsi_internal}
     (nil))
(insn 229 228 230 19 (parallel [
            (set (reg:SI 226 [ D.26216 ])
                (mult:SI (reg:SI 227 [ *_33 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 344 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 227 [ *_33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 230 229 363 19 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 224 [ i ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 226 [ D.26216 ])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 226 [ D.26216 ])
        (expr_list:REG_DEAD (reg:DI 224 [ i ])
            (nil))))
(debug_insn 363 230 231 19 (var_location:SI D#16 (plus:SI (reg/v:SI 114 [ i ])
        (const_int 2 [0x2]))) -1
     (nil))
(insn 231 363 233 19 (parallel [
            (set (reg/v:SI 66 [ i ])
                (plus:SI (reg/v:SI 114 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 273 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 114 [ i ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 233 231 235 19 (var_location:SI i (debug_expr:SI D#16)) -1
     (nil))
(insn 235 233 236 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 66 [ i ])
            (reg/v:SI 151 [ num_floats ]))) tiles.cpp:450 7 {*cmpsi_1}
     (nil))
(jump_insn 236 235 240 19 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
            (nil)))
 -> 234)
;;  succ:       15 [75.0%] 
;;              5 [25.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 147 148 149 151 152

;; basic block 20, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u258(6){ }u259(7){ }u260(16){ }u261(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 149 151
;; lr  def 	 17 [flags] 94 107 122 144 228 229 230 256
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 147 148 149 151 152
;; live  gen 	 94 107 122 144 228 229 230 256
;; live  kill	 17 [flags]
(code_label 240 236 241 20 146 "" [1 uses])
(note 241 240 242 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 20 (set (reg:DI 122 [ D.26224 ])
        (sign_extend:DI (reg/v:SI 149 [ memory_size ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 149 [ memory_size ])
        (nil)))
(insn 243 242 244 20 (set (reg:DI 94 [ ivtmp.255 ])
        (reg/v/f:DI 147 [ the_tiles ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 147 [ the_tiles ])
        (nil)))
(insn 244 243 245 20 (parallel [
            (set (reg:SI 228 [ D.26214 ])
                (plus:SI (reg/v:SI 151 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 245 244 246 20 (set (reg:DI 229 [ D.26221 ])
        (zero_extend:DI (reg:SI 228 [ D.26214 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 228 [ D.26214 ])
        (nil)))
(insn 246 245 247 20 (parallel [
            (set (reg:DI 230 [ D.26221 ])
                (plus:DI (reg:DI 229 [ D.26221 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 229 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 247 246 20 20 (parallel [
            (set (reg:DI 144 [ D.26221 ])
                (ashift:DI (reg:DI 230 [ D.26221 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 230 [ D.26221 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 247 372 20 (set (reg/v:SI 107 [ j ])
        (const_int 0 [0])) tiles.cpp:457 89 {*movsi_internal}
     (nil))
(insn 372 20 348 20 (set (reg/f:DI 256)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))) 267 {*leadi}
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256

;; basic block 21, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [95.2%]  (DFS_BACK)
;;              35 [100.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u269(6){ }u270(7){ }u271(16){ }u272(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 257 258
;; lr  def 	 17 [flags] 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags] 83 84
;; live  kill	
(code_label 348 372 251 21 164 "" [1 uses])
(note 251 348 252 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 252 251 254 21 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 254 252 256 21 (set (reg:SI 83 [ D.26216 ])
        (mem:SI (plus:DI (reg/f:DI 258)
                (reg:DI 72 [ ivtmp.241 ])) [0 MEM[symbol: qstate, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 89 {*movsi_internal}
     (nil))
(insn 256 254 257 21 (set (reg:SI 84 [ D.26216 ])
        (mem:SI (plus:DI (reg/f:DI 257)
                (reg:DI 72 [ ivtmp.241 ])) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 89 {*movsi_internal}
     (nil))
(insn 257 256 258 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 83 [ D.26216 ])
            (reg:SI 84 [ D.26216 ]))) tiles.cpp:463 7 {*cmpsi_1}
     (nil))
(jump_insn 258 257 259 21 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) tiles.cpp:463 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 265)
;;  succ:       22 [50.0%]  (FALLTHRU)
;;              23 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258

;; basic block 22, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [50.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u280(6){ }u281(7){ }u282(16){ }u283(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 148
;; lr  def 	 17 [flags] 93 233 235 236
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 93 233 235 236
;; live  kill	 17 [flags]
(note 259 258 260 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 22 (parallel [
            (set (reg:SI 233 [ D.26216 ])
                (minus:SI (reg:SI 83 [ D.26216 ])
                    (reg:SI 84 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 309 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 261 260 262 22 (parallel [
            (set (reg:SI 236)
                (div:SI (reg:SI 233 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (set (reg:SI 235 [ D.26216 ])
                (mod:SI (reg:SI 233 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 233 [ D.26216 ])
        (expr_list:REG_UNUSED (reg:SI 236)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 262 261 265 22 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (minus:SI (reg:SI 83 [ D.26216 ])
                    (reg:SI 235 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 235 [ D.26216 ])
        (expr_list:REG_DEAD (reg:SI 83 [ D.26216 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258

;; basic block 23, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u292(6){ }u293(7){ }u294(16){ }u295(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 148
;; lr  def 	 17 [flags] 93 237 238 239 241 242 243
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 83 84 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 93 237 238 239 241 242 243
;; live  kill	 17 [flags]
(code_label 265 262 266 23 155 "" [1 uses])
(note 266 265 267 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 23 (parallel [
            (set (reg:SI 237 [ D.26216 ])
                (plus:SI (reg:SI 83 [ D.26216 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 268 267 269 23 (parallel [
            (set (reg:SI 238 [ D.26216 ])
                (minus:SI (reg:SI 84 [ D.26216 ])
                    (reg:SI 83 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ D.26216 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 269 268 270 23 (parallel [
            (set (reg:SI 239 [ D.26216 ])
                (plus:SI (reg:SI 238 [ D.26216 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 238 [ D.26216 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 270 269 271 23 (parallel [
            (set (reg:SI 242)
                (div:SI (reg:SI 239 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (set (reg:SI 241 [ D.26216 ])
                (mod:SI (reg:SI 239 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 239 [ D.26216 ])
        (expr_list:REG_UNUSED (reg:SI 242)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 271 270 272 23 (parallel [
            (set (reg:SI 243 [ D.26216 ])
                (plus:SI (reg:SI 237 [ D.26216 ])
                    (reg:SI 241 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 241 [ D.26216 ])
        (expr_list:REG_DEAD (reg:SI 237 [ D.26216 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 272 271 273 23 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (minus:SI (reg:SI 243 [ D.26216 ])
                    (reg/v:SI 148 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 243 [ D.26216 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258

;; basic block 24, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU)
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u308(6){ }u309(7){ }u310(16){ }u311(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 93 152 256
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 273 272 274 24 156 "" [0 uses])
(note 274 273 276 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 276 274 277 24 (set (mem:SI (plus:DI (reg/f:DI 256)
                (reg:DI 72 [ ivtmp.241 ])) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 93 [ D.26216 ])) 89 {*movsi_internal}
     (nil))
(insn 277 276 278 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 152 [ wrap_widths ])
                    (reg:DI 72 [ ivtmp.241 ])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.241_108, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:467 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 278 277 279 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) tiles.cpp:467 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 285)
;;  succ:       25 [50.0%]  (FALLTHRU)
;;              26 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258

;; basic block 25, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [50.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u318(6){ }u319(7){ }u320(16){ }u321(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 93 256
;; lr  def 	 17 [flags] 93 245 247 248
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 93 245 247 248
;; live  kill	 17 [flags]
(note 279 278 280 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 25 (parallel [
            (set (reg/f:DI 245)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 281 280 282 25 (parallel [
            (set (reg:SI 248)
                (div:SI (reg:SI 93 [ D.26216 ])
                    (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                            (reg/f:DI 245)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (set (reg:SI 247)
                (mod:SI (reg:SI 93 [ D.26216 ])
                    (mem:SI (plus:DI (reg:DI 72 [ ivtmp.241 ])
                            (reg/f:DI 245)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg/f:DI 245)
        (expr_list:REG_DEAD (reg:SI 93 [ D.26216 ])
            (expr_list:REG_UNUSED (reg:SI 248)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 282 281 284 25 (set (reg:SI 93 [ D.26216 ])
        (reg:SI 247)) tiles.cpp:467 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 247)
        (nil)))
(insn 284 282 285 25 (set (mem:SI (plus:DI (reg/f:DI 256)
                (reg:DI 72 [ ivtmp.241 ])) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 93 [ D.26216 ])) tiles.cpp:467 89 {*movsi_internal}
     (nil))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258

;; basic block 26, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [50.0%] 
;;              25 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u333(6){ }u334(7){ }u335(16){ }u336(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 285 284 286 26 157 "" [1 uses])
(note 286 285 287 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 26 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 93 [ D.26216 ])
            (const_int 0 [0]))) tiles.cpp:469 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 288 287 314 26 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) tiles.cpp:469 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 303)
;;  succ:       29 [91.0%] 
;;              27 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258

;; basic block 27, loop depth 0, count 0, freq 3333, maybe hot
;; Invalid sum of incoming frequencies 1119, should be 3333
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU)
;;              26 [9.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u339(6){ }u340(7){ }u341(16){ }u342(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 72 84 144 257
;; lr  def 	 17 [flags] 63 72 251
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 17 [flags] 63 72 251
;; live  kill	 17 [flags]
(code_label 314 288 289 27 162 "" [0 uses])
(note 289 314 291 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 291 289 292 27 (parallel [
            (set (reg:SI 251)
                (plus:SI (reg:SI 84 [ D.26216 ])
                    (reg:SI 63 [ ivtmp.245 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:473 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ D.26216 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 292 291 294 27 (set (mem:SI (plus:DI (reg/f:DI 257)
                (reg:DI 72 [ ivtmp.241 ])) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 251)) tiles.cpp:473 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 251)
        (nil)))
(debug_insn 294 292 295 27 (var_location:SI i (debug_expr:SI D#13)) -1
     (nil))
(insn 295 294 296 27 (parallel [
            (set (reg:DI 72 [ ivtmp.241 ])
                (plus:DI (reg:DI 72 [ ivtmp.241 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 296 295 298 27 (parallel [
            (set (reg:SI 63 [ ivtmp.245 ])
                (plus:SI (reg:SI 63 [ ivtmp.245 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 298 296 299 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 72 [ ivtmp.241 ])
            (reg:DI 144 [ D.26221 ]))) tiles.cpp:460 8 {*cmpdi_1}
     (nil))
(jump_insn 299 298 302 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 348)
            (pc))) tiles.cpp:460 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 348)
;;  succ:       21 [95.2%]  (DFS_BACK)
;;              28 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258

;; basic block 28, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u353(6){ }u354(7){ }u355(16){ }u356(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 110
;; live  kill	
(note 302 299 18 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 18 302 303 28 (set (reg/v:SI 110 [ num_floats ])
        (reg/v:SI 151 [ num_floats ])) 89 {*movsi_internal}
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256

;; basic block 29, loop depth 0, count 0, freq 819, maybe hot
;; Invalid sum of incoming frequencies 3033, should be 819
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [91.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u358(6){ }u359(7){ }u360(16){ }u361(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  def 	 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	 129
;; live  kill	
(code_label 303 18 304 29 158 "" [1 uses])
(note 304 303 306 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 306 304 319 29 (set (reg:SI 129 [ D.26216 ])
        (mem:SI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 72 [ ivtmp.241 ]))
                (const_int -256 [0xffffffffffffff00])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 252)
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258

;; basic block 30, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [91.0%]  (DFS_BACK)
;;              29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u365(6){ }u366(7){ }u367(16){ }u368(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 129
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; live  gen 	 17 [flags] 93
;; live  kill	 17 [flags]
(code_label 319 306 307 30 163 "" [1 uses])
(note 307 319 308 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 30 (parallel [
            (set (reg:SI 93 [ D.26216 ])
                (plus:SI (reg:SI 93 [ D.26216 ])
                    (reg:SI 129 [ D.26216 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:470 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 309 308 310 30 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 93 [ D.26216 ])
            (const_int 0 [0]))) tiles.cpp:469 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 310 309 311 30 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 319)
            (pc))) tiles.cpp:469 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 319)
;;  succ:       30 [91.0%]  (DFS_BACK)
;;              31 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 129 144 148 151 152 256 257 258

;; basic block 31, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u373(6){ }u374(7){ }u375(16){ }u376(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 93 256
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 93 94 107 122 144 148 151 152 256 257 258
;; live  gen 	
;; live  kill	
(note 311 310 313 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 313 311 361 31 (set (mem:SI (plus:DI (reg/f:DI 256)
                (reg:DI 72 [ ivtmp.241 ])) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 93 [ D.26216 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ D.26216 ])
        (nil)))
;;  succ:       27 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 84 94 107 122 144 148 151 152 256 257 258

;; basic block 32, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [4.8%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u380(6){ }u381(7){ }u382(16){ }u383(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 110
;; live  kill	
(code_label 361 313 360 32 166 "" [1 uses])
(note 360 361 19 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 19 360 322 32 (set (reg/v:SI 110 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:460 89 {*movsi_internal}
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256

;; basic block 33, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [100.0%]  (FALLTHRU)
;;              28 [100.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u384(6){ }u385(7){ }u386(16){ }u387(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 148 256
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 94 106 107 254
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 110 122 144 148 151 152 256
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 94 106 107 254
;; live  kill	 17 [flags]
(code_label 322 19 323 33 160 "" [0 uses])
(note 323 322 324 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 33 (set (reg:DI 254 [ num_floats ])
        (sign_extend:DI (reg/v:SI 110 [ num_floats ]))) tiles.cpp:476 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 110 [ num_floats ])
        (nil)))
(insn 325 324 327 33 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 254 [ num_floats ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 107 [ j ])) tiles.cpp:476 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 254 [ num_floats ])
        (nil)))
(insn 327 325 328 33 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:478 89 {*movsi_internal}
     (nil))
(insn 328 327 329 33 (set (reg:DI 1 dx)
        (reg:DI 122 [ D.26224 ])) tiles.cpp:478 87 {*movdi_internal_rex64}
     (nil))
(insn 329 328 330 33 (set (reg:SI 4 si)
        (reg/v:SI 71 [ num_coordinates ])) tiles.cpp:478 89 {*movsi_internal}
     (nil))
(insn 330 329 331 33 (set (reg:DI 5 di)
        (reg/f:DI 256)) tiles.cpp:478 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 331 330 332 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b82f1f16700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:478 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 332 331 333 33 (set (reg:SI 106 [ D.26216 ])
        (reg:SI 0 ax)) tiles.cpp:478 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 333 332 334 33 (set (mem:SI (reg:DI 94 [ ivtmp.255 ]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 106 [ D.26216 ])) tiles.cpp:478 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106 [ D.26216 ])
        (nil)))
(insn 334 333 336 33 (parallel [
            (set (reg/v:SI 107 [ j ])
                (plus:SI (reg/v:SI 107 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:457 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 336 334 337 33 (var_location:SI j (reg/v:SI 107 [ j ])) -1
     (nil))
(insn 337 336 338 33 (parallel [
            (set (reg:DI 94 [ ivtmp.255 ])
                (plus:DI (reg:DI 94 [ ivtmp.255 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 338 337 339 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 107 [ j ])
            (reg/v:SI 148 [ num_tilings ]))) tiles.cpp:457 7 {*cmpsi_1}
     (nil))
(jump_insn 339 338 341 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 353)
            (pc))) tiles.cpp:457 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 353)
;;  succ:       34 [91.0%]  (FALLTHRU,DFS_BACK)
;;              36 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256

;; basic block 34, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [91.0%]  (FALLTHRU,DFS_BACK)
;;              20 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u410(6){ }u411(7){ }u412(16){ }u413(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 341 339 342 34 154 "" [0 uses])
(note 342 341 343 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(debug_insn 343 342 344 34 (var_location:SI j (reg/v:SI 107 [ j ])) -1
     (nil))
(debug_insn 344 343 345 34 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 345 344 346 34 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 151 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:460 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 346 345 347 34 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) tiles.cpp:460 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 361)
;;  succ:       35 [95.2%]  (FALLTHRU)
;;              32 [4.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256

;; basic block 35, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [95.2%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u417(6){ }u418(7){ }u419(16){ }u420(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63 72 257 258
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 94 107 122 144 148 151 152 256
;; live  gen 	 63 72 257 258
;; live  kill	
(note 347 346 15 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 15 347 16 35 (set (reg:SI 63 [ ivtmp.245 ])
        (const_int 1 [0x1])) tiles.cpp:460 89 {*movsi_internal}
     (nil))
(insn 16 15 373 35 (set (reg:DI 72 [ ivtmp.241 ])
        (const_int 0 [0])) tiles.cpp:460 87 {*movdi_internal_rex64}
     (nil))
(insn 373 16 374 35 (set (reg/f:DI 258)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))) 267 {*leadi}
     (nil))
(insn 374 373 353 35 (set (reg/f:DI 257)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))) 267 {*leadi}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 71 72 94 107 122 144 148 151 152 256 257 258

;; basic block 36, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 35, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [9.0%]  (LOOP_EXIT)
;;              5 [9.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u423(6){ }u424(7){ }u425(16){ }u426(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 353 374 354 36 141 "" [1 uses])
(note 354 353 0 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int) (_Z9tileswrapPiiP15collision_tablePfiS_S_i, funcdef_no=1101, decl_uid=23893, cgraph_uid=345)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 56 count 41 (  1.1)


void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={5d,1u} r4={8d,4u} r5={8d,4u} r6={1d,36u} r7={1d,40u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,37u,2e} r17={66d,22u} r18={4d} r19={4d} r20={1d,53u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r62={2d,2u} r65={1d,2u} r70={1d,2u} r71={2d,12u} r74={1d,1u} r78={1d,2u} r79={1d,5u} r80={1d,4u} r82={1d,5u} r83={1d,4u} r92={4d,8u} r93={2d,2u} r103={2d,4u} r105={1d,1u} r106={2d,5u} r110={2d,1u} r113={2d,6u} r127={1d,1u} r129={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,12u} r148={1d,1u} r149={1d,1u} r150={1d,13u} r151={1d,9u} r152={1d,1u} r153={1d,3u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r181={1d,1u} r183={1d,1u} r184={1d,6u} r185={1d,2u} r186={1d,1u} r187={2d,2u} r188={2d,2u} r189={1d,1u} r190={1d,5u} r191={1d,2u} r192={1d,1u} r193={2d,2u} r194={2d,2u} r195={1d,1u} r197={1d,2u} r198={1d,1u} r199={2d,2u} r200={2d,2u} r201={1d,1u} r203={1d,2u} r204={1d,1u} r205={2d,2u} r206={2d,2u} r207={1d,1u} r209={1d,2u} r210={1d,1u} r211={2d,2u} r212={2d,2u} r213={1d,1u} r215={1d,2u} r217={1d,1u} r218={1d,1u} r219={1d,2u} r221={1d,1u} r222={1d,1u} r223={1d,2u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r232={1d,2u} r234={1d,1u} r235={1d} r236={1d,1u} r237={1d,1u} r238={1d,2u} r240={1d,1u} r241={1d} r242={1d,1u} r244={1d,2u} r246={1d,1u} r247={1d} r250={1d,1u} r253={1d,1u} r255={2d,5u} r256={2d,3u} r257={2d,2u} 
;;    total ref usage 818{391d,423u,4e} in 221{217 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;;  reg->defs[] map:	0[0,4] 1[5,12] 2[13,17] 4[18,25] 5[26,33] 6[34,34] 7[35,35] 8[36,39] 9[40,43] 10[44,47] 11[48,51] 12[52,55] 13[56,59] 14[60,63] 15[64,67] 16[68,68] 17[69,134] 18[135,138] 19[139,142] 20[143,143] 21[144,149] 22[150,154] 23[155,159] 24[160,164] 25[165,169] 26[170,174] 27[175,179] 28[180,184] 29[185,188] 30[189,192] 31[193,196] 32[197,200] 33[201,204] 34[205,208] 35[209,212] 36[213,216] 37[217,221] 38[222,226] 39[227,230] 40[231,234] 45[235,238] 46[239,242] 47[243,246] 48[247,250] 49[251,254] 50[255,258] 51[259,262] 52[263,266] 62[267,268] 65[269,269] 70[270,270] 71[271,272] 74[273,273] 78[274,274] 79[275,275] 80[276,276] 82[277,277] 83[278,278] 92[279,282] 93[283,284] 103[285,286] 105[287,287] 106[288,289] 110[290,291] 113[292,293] 127[294,294] 129[295,295] 143[296,296] 145[297,297] 146[298,298] 147[299,299] 148[300,300] 149[301,301] 150[302,302] 151[303,303] 152[304,304] 153[305,305] 154[306,306] 156[307,307] 157[308,308] 158[309,309] 159[310,310] 160[311,311] 161[312,312] 167[313,313] 168[314,314] 169[315,315] 170[316,316] 172[317,317] 173[318,318] 174[319,319] 181[320,320] 183[321,321] 184[322,322] 185[323,323] 186[324,324] 187[325,326] 188[327,328] 189[329,329] 190[330,330] 191[331,331] 192[332,332] 193[333,334] 194[335,336] 195[337,337] 197[338,338] 198[339,339] 199[340,341] 200[342,343] 201[344,344] 203[345,345] 204[346,346] 205[347,348] 206[349,350] 207[351,351] 209[352,352] 210[353,353] 211[354,355] 212[356,357] 213[358,358] 215[359,359] 217[360,360] 218[361,361] 219[362,362] 221[363,363] 222[364,364] 223[365,365] 225[366,366] 226[367,367] 227[368,368] 228[369,369] 229[370,370] 232[371,371] 234[372,372] 235[373,373] 236[374,374] 237[375,375] 238[376,376] 240[377,377] 241[378,378] 242[379,379] 244[380,380] 246[381,381] 247[382,382] 250[383,383] 253[384,384] 255[385,386] 256[387,388] 257[389,390] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d12(1){ }d17(2){ }d25(4){ }d33(5){ }d34(6){ }d35(7){ }d68(16){ }d143(20){ }d149(21){ }d154(22){ }d159(23){ }d164(24){ }d169(25){ }d174(26){ }d179(27){ }d184(28){ }d221(37){ }d226(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[4],1[12],2[17],4[25],5[33],6[34],7[35],16[68],20[143],21[149],22[154],23[159],24[164],25[169],26[174],27[179],28[184],37[221],38[226]
;; rd  kill	(89) 0[0,1,2,3,4],1[5,6,7,8,9,10,11,12],2[13,14,15,16,17],4[18,19,20,21,22,23,24,25],5[26,27,28,29,30,31,32,33],6[34],7[35],16[68],20[143],21[144,145,146,147,148,149],22[150,151,152,153,154],23[155,156,157,158,159],24[160,161,162,163,164],25[165,166,167,168,169],26[170,171,172,173,174],27[175,176,177,178,179],28[180,181,182,183,184],37[217,218,219,220,221],38[222,223,224,225,226]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[12],2[17],4[25],5[33],6[34],7[35],16[68],20[143],37[221],38[226]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d34(bb 0 insn -1) }u1(7){ d35(bb 0 insn -1) }u2(16){ d68(bb 0 insn -1) }u3(20){ d143(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 70 146 147 148 149 150 151 152 153 154
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 70 146 147 148 149 150 151 152 153 154
;; live  kill	 17 [flags]
;; rd  in  	(10) 1[12],2[17],4[25],5[33],6[34],7[35],16[68],20[143],37[221],38[226]
;; rd  gen 	(11) 17[132],70[270],146[298],147[299],148[300],149[301],150[302],151[303],152[304],153[305],154[306]
;; rd  kill	(10) 70[270],146[298],147[299],148[300],149[301],150[302],151[303],152[304],153[305],154[306]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153
;; rd  out 	(13) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],149[301],150[302],151[303],152[304],153[305]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 2 4 )->[3]->( 6 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(6){ d34(bb 0 insn -1) }u21(7){ d35(bb 0 insn -1) }u22(16){ d68(bb 0 insn -1) }u23(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(13) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],149[301],150[302],151[303],152[304],153[305]
;; rd  gen 	(1) 17[131]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; rd  out 	(11) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],149[301],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 2 )->[4]->( 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ d34(bb 0 insn -1) }u27(7){ d35(bb 0 insn -1) }u28(16){ d68(bb 0 insn -1) }u29(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 152 153
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 156 157 158 159 160 161 255
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 156 157 158 159 160 161 255
;; live  kill	 17 [flags]
;; rd  in  	(13) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],149[301],150[302],151[303],152[304],153[305]
;; rd  gen 	(8) 0[3],156[307],157[308],158[309],159[310],160[311],161[312],255[386]
;; rd  kill	(13) 0[0,1,2,3,4],156[307],157[308],158[309],159[310],160[311],161[312],255[385,386]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; rd  out 	(11) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],149[301],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 19 3 15 16 18 )->[5]->( 20 36 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u45(6){ d34(bb 0 insn -1) }u46(7){ d35(bb 0 insn -1) }u47(16){ d68(bb 0 insn -1) }u48(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(15) 6[34],7[35],16[68],20[143],65[269],70[270],80[276],113[292,293],146[298],147[299],148[300],149[301],150[302],151[303]
;; rd  gen 	(1) 17[126]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; rd  out 	(10) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 3 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ d34(bb 0 insn -1) }u52(7){ d35(bb 0 insn -1) }u53(16){ d68(bb 0 insn -1) }u54(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 150
;; lr  def 	 17 [flags] 103 129 145 167 168 169 257
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  gen 	 103 129 145 167 168 169 257
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],149[301],150[302],151[303]
;; rd  gen 	(7) 103[286],129[295],145[297],167[313],168[314],169[315],257[390]
;; rd  kill	(9) 103[285,286],129[295],145[297],167[313],168[314],169[315],257[389,390]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; rd  out 	(15) 6[34],7[35],16[68],20[143],70[270],103[286],129[295],145[297],146[298],147[299],148[300],149[301],150[302],151[303],257[390]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 7 6 )->[7]->( 7 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ d34(bb 0 insn -1) }u62(7){ d35(bb 0 insn -1) }u63(16){ d68(bb 0 insn -1) }u64(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 129 145 149 257
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 103 170 172
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; live  gen 	 17 [flags] 21 [xmm0] 74 103 170 172
;; live  kill	 17 [flags]
;; rd  in  	(21) 6[34],7[35],16[68],17[121],20[143],21[146],70[270],74[273],103[285,286],129[295],145[297],146[298],147[299],148[300],149[301],150[302],151[303],170[316],172[317],257[390]
;; rd  gen 	(6) 17[121],21[146],74[273],103[285],170[316],172[317]
;; rd  kill	(11) 21[144,145,146,147,148,149],74[273],103[285,286],170[316],172[317]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; rd  out 	(15) 6[34],7[35],16[68],20[143],70[270],103[285],129[295],145[297],146[298],147[299],148[300],149[301],150[302],151[303],257[390]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 7 )->[8]->( 17 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ d34(bb 0 insn -1) }u81(7){ d35(bb 0 insn -1) }u82(16){ d68(bb 0 insn -1) }u83(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 173 174 181 256
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 78 79 173 174 181 256
;; live  kill	 17 [flags]
;; rd  in  	(15) 6[34],7[35],16[68],20[143],70[270],103[285],129[295],145[297],146[298],147[299],148[300],149[301],150[302],151[303],257[390]
;; rd  gen 	(8) 0[1],17[116],78[274],79[275],173[318],174[319],181[320],256[388]
;; rd  kill	(12) 0[0,1,2,3,4],78[274],79[275],173[318],174[319],181[320],256[387,388]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; rd  out 	(12) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u100(6){ d34(bb 0 insn -1) }u101(7){ d35(bb 0 insn -1) }u102(16){ d68(bb 0 insn -1) }u103(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags] 183
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  gen 	 17 [flags] 183
;; live  kill	
;; rd  in  	(12) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303]
;; rd  gen 	(2) 17[115],183[321]
;; rd  kill	(1) 183[321]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; rd  out 	(12) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 9 )->[10]->( 11 16 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u108(6){ d34(bb 0 insn -1) }u109(7){ d35(bb 0 insn -1) }u110(16){ d68(bb 0 insn -1) }u111(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 147 151
;; lr  def 	 17 [flags] 184 185 186 187 188 189 190
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  gen 	 17 [flags] 184 185 186 187 188 189 190
;; live  kill	
;; rd  in  	(12) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303]
;; rd  gen 	(8) 17[114],184[322],185[323],186[324],187[326],188[327],189[329],190[330]
;; rd  kill	(9) 184[322],185[323],186[324],187[325,326],188[327,328],189[329],190[330]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; rd  out 	(14) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 10 )->[11]->( 12 16 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u128(6){ d34(bb 0 insn -1) }u129(7){ d35(bb 0 insn -1) }u130(16){ d68(bb 0 insn -1) }u131(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151 184 190
;; lr  def 	 17 [flags] 191 192 193 194 195
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  gen 	 17 [flags] 191 192 193 194 195
;; live  kill	
;; rd  in  	(14) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;; rd  gen 	(6) 17[113],191[331],192[332],193[334],194[336],195[337]
;; rd  kill	(7) 191[331],192[332],193[333,334],194[335,336],195[337]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; rd  out 	(14) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 11 )->[12]->( 13 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u146(6){ d34(bb 0 insn -1) }u147(7){ d35(bb 0 insn -1) }u148(16){ d68(bb 0 insn -1) }u149(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151 184 190
;; lr  def 	 17 [flags] 197 198 199 200 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  gen 	 17 [flags] 197 198 199 200 201
;; live  kill	
;; rd  in  	(14) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;; rd  gen 	(6) 17[112],197[338],198[339],199[341],200[343],201[344]
;; rd  kill	(7) 197[338],198[339],199[340,341],200[342,343],201[344]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; rd  out 	(14) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 12 )->[13]->( 14 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u164(6){ d34(bb 0 insn -1) }u165(7){ d35(bb 0 insn -1) }u166(16){ d68(bb 0 insn -1) }u167(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151 184 190
;; lr  def 	 17 [flags] 203 204 205 206 207
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  gen 	 17 [flags] 203 204 205 206 207
;; live  kill	
;; rd  in  	(14) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;; rd  gen 	(6) 17[111],203[345],204[346],205[348],206[350],207[351]
;; rd  kill	(7) 203[345],204[346],205[347,348],206[349,350],207[351]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190
;; rd  out 	(13) 6[34],7[35],16[68],20[143],70[270],78[274],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u182(6){ d34(bb 0 insn -1) }u183(7){ d35(bb 0 insn -1) }u184(16){ d68(bb 0 insn -1) }u185(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 184 190
;; lr  def 	 209 210 211 212 213
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190
;; live  gen 	 209 210 211 212 213
;; live  kill	
;; rd  in  	(13) 6[34],7[35],16[68],20[143],70[270],78[274],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;; rd  gen 	(5) 209[352],210[353],211[355],212[357],213[358]
;; rd  kill	(7) 209[352],210[353],211[354,355],212[356,357],213[358]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151
;; rd  out 	(11) 6[34],7[35],16[68],20[143],70[270],78[274],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 19 )->[15]->( 5 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u198(6){ d34(bb 0 insn -1) }u199(7){ d35(bb 0 insn -1) }u200(16){ d68(bb 0 insn -1) }u201(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 147 151
;; lr  def 	 17 [flags] 215 217 218
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151
;; live  gen 	 215 217 218
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[34],7[35],16[68],20[143],65[269],70[270],146[298],147[299],148[300],150[302],151[303]
;; rd  gen 	(3) 215[359],217[360],218[361]
;; rd  kill	(3) 215[359],217[360],218[361]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; rd  out 	(10) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 14 10 11 12 13 )->[16]->( 18 5 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u210(6){ d34(bb 0 insn -1) }u211(7){ d35(bb 0 insn -1) }u212(16){ d68(bb 0 insn -1) }u213(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 150
;; lr  def 	 17 [flags] 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151
;; live  gen 	 17 [flags] 113
;; live  kill	
;; rd  in  	(14) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303],184[322],190[330]
;; rd  gen 	(2) 17[69],113[293]
;; rd  kill	(2) 113[292,293]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; rd  out 	(11) 6[34],7[35],16[68],20[143],70[270],113[293],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 9 8 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u218(6){ d34(bb 0 insn -1) }u219(7){ d35(bb 0 insn -1) }u220(16){ d68(bb 0 insn -1) }u221(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 113
;; live  kill	
;; rd  in  	(12) 6[34],7[35],16[68],20[143],70[270],78[274],79[275],146[298],147[299],148[300],150[302],151[303]
;; rd  gen 	(1) 113[292]
;; rd  kill	(2) 113[292,293]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; rd  out 	(11) 6[34],7[35],16[68],20[143],70[270],113[292],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 17 16 )->[18]->( 19 5 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u222(6){ d34(bb 0 insn -1) }u223(7){ d35(bb 0 insn -1) }u224(16){ d68(bb 0 insn -1) }u225(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 147 150 151
;; lr  def 	 17 [flags] 80 219 221 222
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; live  gen 	 17 [flags] 80 219 221 222
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[34],7[35],16[68],20[143],70[270],113[292,293],146[298],147[299],148[300],150[302],151[303]
;; rd  gen 	(5) 17[107],80[276],219[362],221[363],222[364]
;; rd  kill	(4) 80[276],219[362],221[363],222[364]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151
;; rd  out 	(13) 6[34],7[35],16[68],20[143],70[270],80[276],113[292,293],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 18 )->[19]->( 15 5 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u240(6){ d34(bb 0 insn -1) }u241(7){ d35(bb 0 insn -1) }u242(16){ d68(bb 0 insn -1) }u243(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 113 147 150 151
;; lr  def 	 17 [flags] 65 223 225 226
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151
;; live  gen 	 17 [flags] 65 223 225 226
;; live  kill	 17 [flags]
;; rd  in  	(13) 6[34],7[35],16[68],20[143],70[270],80[276],113[292,293],146[298],147[299],148[300],150[302],151[303]
;; rd  gen 	(5) 17[104],65[269],223[365],225[366],226[367]
;; rd  kill	(4) 65[269],223[365],225[366],226[367]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151
;; rd  out 	(11) 6[34],7[35],16[68],20[143],65[269],70[270],146[298],147[299],148[300],150[302],151[303]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 5 )->[20]->( 34 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u258(6){ d34(bb 0 insn -1) }u259(7){ d35(bb 0 insn -1) }u260(16){ d68(bb 0 insn -1) }u261(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 146 150
;; lr  def 	 17 [flags] 93 106 143 227 228 229 255
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 93 106 143 227 228 229 255
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[34],7[35],16[68],20[143],70[270],146[298],147[299],148[300],150[302],151[303]
;; rd  gen 	(7) 93[284],106[289],143[296],227[368],228[369],229[370],255[385]
;; rd  kill	(10) 93[283,284],106[288,289],143[296],227[368],228[369],229[370],255[385,386]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; rd  out 	(13) 6[34],7[35],16[68],20[143],70[270],93[284],106[289],143[296],147[299],148[300],150[302],151[303],255[385]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 27 35 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u268(6){ d34(bb 0 insn -1) }u269(7){ d35(bb 0 insn -1) }u270(16){ d68(bb 0 insn -1) }u271(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 256 257
;; lr  def 	 17 [flags] 82 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags] 82 83
;; live  kill	
;; rd  in  	(23) 6[34],7[35],16[68],17[83],20[143],62[267,268],70[270],71[271,272],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],250[383],255[385],256[387],257[389]
;; rd  gen 	(3) 17[100],82[277],83[278]
;; rd  kill	(2) 82[277],83[278]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(23) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],82[277],83[278],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u279(6){ d34(bb 0 insn -1) }u280(7){ d35(bb 0 insn -1) }u281(16){ d68(bb 0 insn -1) }u282(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 147
;; lr  def 	 17 [flags] 92 232 234 235
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 92 232 234 235
;; live  kill	 17 [flags]
;; rd  in  	(23) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],82[277],83[278],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(4) 92[282],232[371],234[372],235[373]
;; rd  kill	(7) 92[279,280,281,282],232[371],234[372],235[373]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(23) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 21 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u291(6){ d34(bb 0 insn -1) }u292(7){ d35(bb 0 insn -1) }u293(16){ d68(bb 0 insn -1) }u294(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 147
;; lr  def 	 17 [flags] 92 236 237 238 240 241 242
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 92 236 237 238 240 241 242
;; live  kill	 17 [flags]
;; rd  in  	(23) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],82[277],83[278],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(7) 92[281],236[374],237[375],238[376],240[377],241[378],242[379]
;; rd  kill	(10) 92[279,280,281,282],236[374],237[375],238[376],240[377],241[378],242[379]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(23) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[281],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 22 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u307(6){ d34(bb 0 insn -1) }u308(7){ d35(bb 0 insn -1) }u309(16){ d68(bb 0 insn -1) }u310(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 92 151 255
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(24) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[281,282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(1) 17[90]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(24) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[281,282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u317(6){ d34(bb 0 insn -1) }u318(7){ d35(bb 0 insn -1) }u319(16){ d68(bb 0 insn -1) }u320(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 92 255
;; lr  def 	 17 [flags] 92 244 246 247
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 92 244 246 247
;; live  kill	 17 [flags]
;; rd  in  	(24) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[281,282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(4) 92[280],244[380],246[381],247[382]
;; rd  kill	(7) 92[279,280,281,282],244[380],246[381],247[382]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(23) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[280],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 24 25 )->[26]->( 29 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u332(6){ d34(bb 0 insn -1) }u333(7){ d35(bb 0 insn -1) }u334(16){ d68(bb 0 insn -1) }u335(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(25) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[280,281,282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(1) 17[87]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(25) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[280,281,282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 31 26 )->[27]->( 21 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u338(6){ d34(bb 0 insn -1) }u339(7){ d35(bb 0 insn -1) }u340(16){ d68(bb 0 insn -1) }u341(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 83 143 256
;; lr  def 	 17 [flags] 62 71 250
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags] 62 71 250
;; live  kill	 17 [flags]
;; rd  in  	(25) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[280,281,282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(4) 17[83],62[268],71[272],250[383]
;; rd  kill	(5) 62[267,268],71[271,272],250[383]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(19) 6[34],7[35],16[68],20[143],62[268],70[270],71[272],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 27 )->[28]->( 33 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u352(6){ d34(bb 0 insn -1) }u353(7){ d35(bb 0 insn -1) }u354(16){ d68(bb 0 insn -1) }u355(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 110
;; live  kill	
;; rd  in  	(19) 6[34],7[35],16[68],20[143],62[268],70[270],71[272],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(1) 110[291]
;; rd  kill	(2) 110[290,291]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; rd  out 	(16) 6[34],7[35],16[68],20[143],70[270],93[283,284],106[288,289],110[291],143[296],147[299],148[300],150[302],151[303],255[385]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 26 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u357(6){ d34(bb 0 insn -1) }u358(7){ d35(bb 0 insn -1) }u359(16){ d68(bb 0 insn -1) }u360(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71
;; lr  def 	 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 127
;; live  kill	
;; rd  in  	(25) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[280,281,282],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(1) 127[294]
;; rd  kill	(1) 127[294]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; rd  out 	(26) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[280,281,282],93[283,284],106[288,289],127[294],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 30 29 )->[30]->( 30 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u364(6){ d34(bb 0 insn -1) }u365(7){ d35(bb 0 insn -1) }u366(16){ d68(bb 0 insn -1) }u367(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 127
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags] 92
;; live  kill	 17 [flags]
;; rd  in  	(28) 6[34],7[35],16[68],17[81],20[143],62[267,268],70[270],71[271,272],83[278],92[279,280,281,282],93[283,284],106[288,289],127[294],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(2) 17[81],92[279]
;; rd  kill	(4) 92[279,280,281,282]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; rd  out 	(24) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[279],93[283,284],106[288,289],127[294],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 30 )->[31]->( 27 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u372(6){ d34(bb 0 insn -1) }u373(7){ d35(bb 0 insn -1) }u374(16){ d68(bb 0 insn -1) }u375(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 92 255
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	
;; live  kill	
;; rd  in  	(24) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],92[279],93[283,284],106[288,289],127[294],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(22) 6[34],7[35],16[68],20[143],62[267,268],70[270],71[271,272],83[278],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 34 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u379(6){ d34(bb 0 insn -1) }u380(7){ d35(bb 0 insn -1) }u381(16){ d68(bb 0 insn -1) }u382(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 110
;; live  kill	
;; rd  in  	(15) 6[34],7[35],16[68],20[143],70[270],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385]
;; rd  gen 	(1) 110[290]
;; rd  kill	(2) 110[290,291]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; rd  out 	(16) 6[34],7[35],16[68],20[143],70[270],93[283,284],106[288,289],110[290],143[296],147[299],148[300],150[302],151[303],255[385]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 32 28 )->[33]->( 34 36 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u383(6){ d34(bb 0 insn -1) }u384(7){ d35(bb 0 insn -1) }u385(16){ d68(bb 0 insn -1) }u386(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 147 148 255
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 105 106 253
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 93 105 106 253
;; live  kill	 17 [flags]
;; rd  in  	(17) 6[34],7[35],16[68],20[143],70[270],93[283,284],106[288,289],110[290,291],143[296],147[299],148[300],150[302],151[303],255[385]
;; rd  gen 	(6) 0[0],17[77],93[283],105[287],106[288],253[384]
;; rd  kill	(11) 0[0,1,2,3,4],93[283,284],105[287],106[288,289],253[384]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; rd  out 	(13) 6[34],7[35],16[68],20[143],70[270],93[283],106[288],143[296],147[299],148[300],150[302],151[303],255[385]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 33 20 )->[34]->( 35 32 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u408(6){ d34(bb 0 insn -1) }u409(7){ d35(bb 0 insn -1) }u410(16){ d68(bb 0 insn -1) }u411(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(19) 0[0],6[34],7[35],16[68],17[77],20[143],70[270],93[283,284],105[287],106[288,289],143[296],147[299],148[300],150[302],151[303],253[384],255[385]
;; rd  gen 	(1) 17[76]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; rd  out 	(15) 6[34],7[35],16[68],20[143],70[270],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 34 )->[35]->( 21 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u415(6){ d34(bb 0 insn -1) }u416(7){ d35(bb 0 insn -1) }u417(16){ d68(bb 0 insn -1) }u418(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62 71 256 257
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 62 71 256 257
;; live  kill	
;; rd  in  	(15) 6[34],7[35],16[68],20[143],70[270],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385]
;; rd  gen 	(4) 62[267],71[271],256[387],257[389]
;; rd  kill	(8) 62[267,268],71[271,272],256[387,388],257[389,390]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; rd  out 	(19) 6[34],7[35],16[68],20[143],62[267],70[270],71[271],93[283,284],106[288,289],143[296],147[299],148[300],150[302],151[303],255[385],256[387],257[389]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 33 5 )->[36]->( 1 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u421(6){ d34(bb 0 insn -1) }u422(7){ d35(bb 0 insn -1) }u423(16){ d68(bb 0 insn -1) }u424(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(14) 6[34],7[35],16[68],20[143],70[270],93[283],106[288],143[296],146[298],147[299],148[300],150[302],151[303],255[385]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[34],7[35],16[68],20[143]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 16 { d68(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

( 36 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u425(6){ d34(bb 0 insn -1) }u426(7){ d35(bb 0 insn -1) }u427(20){ d143(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[34],7[35],16[68],20[143]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d34(bb 0 insn -1) }
;;   reg 7 { d35(bb 0 insn -1) }
;;   reg 20 { d143(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 33 to worklist
  Adding insn 52 to worklist
  Adding insn 63 to worklist
  Adding insn 88 to worklist
  Adding insn 83 to worklist
  Adding insn 111 to worklist
  Adding insn 103 to worklist
  Adding insn 115 to worklist
  Adding insn 132 to worklist
  Adding insn 128 to worklist
  Adding insn 147 to worklist
  Adding insn 143 to worklist
  Adding insn 162 to worklist
  Adding insn 158 to worklist
  Adding insn 177 to worklist
  Adding insn 173 to worklist
  Adding insn 188 to worklist
  Adding insn 199 to worklist
  Adding insn 210 to worklist
  Adding insn 223 to worklist
  Adding insn 218 to worklist
  Adding insn 236 to worklist
  Adding insn 230 to worklist
  Adding insn 257 to worklist
  Adding insn 277 to worklist
  Adding insn 275 to worklist
  Adding insn 283 to worklist
  Adding insn 287 to worklist
  Adding insn 298 to worklist
  Adding insn 291 to worklist
  Adding insn 309 to worklist
  Adding insn 312 to worklist
  Adding insn 337 to worklist
  Adding insn 331 to worklist
  Adding insn 329 to worklist
  Adding insn 324 to worklist
  Adding insn 344 to worklist
Finished finding needed instructions:
Processing use of (reg 17 flags) in insn 344:
  Adding insn 343 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 343:
  Adding insn 8 to worklist
Processing use of (reg 37 r8) in insn 8:
Processing use of (reg 20 frame) in insn 324:
Processing use of (reg 106 [ j ]) in insn 324:
  Adding insn 20 to worklist
  Adding insn 332 to worklist
Processing use of (reg 253 [ num_floats ]) in insn 324:
  Adding insn 323 to worklist
Processing use of (reg 110 [ num_floats ]) in insn 323:
  Adding insn 18 to worklist
  Adding insn 19 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 18:
Processing use of (reg 106 [ j ]) in insn 332:
Processing use of (reg 7 sp) in insn 329:
Processing use of (reg 1 dx) in insn 329:
  Adding insn 326 to worklist
Processing use of (reg 4 si) in insn 329:
  Adding insn 327 to worklist
Processing use of (reg 5 di) in insn 329:
  Adding insn 328 to worklist
Processing use of (reg 255) in insn 328:
  Adding insn 370 to worklist
Processing use of (reg 20 frame) in insn 370:
Processing use of (reg 70 [ num_coordinates ]) in insn 327:
  Adding insn 24 to worklist
Processing use of (reg 154 [ D.26281 ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 23:
Processing use of (reg 153 [ num_ints ]) in insn 23:
  Adding insn 11 to worklist
Processing use of (reg 16 argp) in insn 11:
Processing use of (reg 148 [ ctable ]) in insn 326:
  Adding insn 6 to worklist
Processing use of (reg 1 dx) in insn 6:
Processing use of (reg 93 [ ivtmp.305 ]) in insn 331:
  Adding insn 242 to worklist
  Adding insn 335 to worklist
Processing use of (reg 105 [ D.26281 ]) in insn 331:
  Adding insn 330 to worklist
Processing use of (reg 0 ax) in insn 330:
Processing use of (reg 93 [ ivtmp.305 ]) in insn 335:
Processing use of (reg 146 [ the_tiles ]) in insn 242:
  Adding insn 4 to worklist
Processing use of (reg 5 di) in insn 4:
Processing use of (reg 17 flags) in insn 337:
  Adding insn 336 to worklist
Processing use of (reg 106 [ j ]) in insn 336:
Processing use of (reg 147 [ num_tilings ]) in insn 336:
  Adding insn 5 to worklist
Processing use of (reg 4 si) in insn 5:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 312:
  Adding insn 294 to worklist
  Adding insn 16 to worklist
Processing use of (reg 92 [ D.26281 ]) in insn 312:
  Adding insn 307 to worklist
Processing use of (reg 255) in insn 312:
Processing use of (reg 92 [ D.26281 ]) in insn 307:
  Adding insn 261 to worklist
  Adding insn 271 to worklist
  Adding insn 281 to worklist
Processing use of (reg 127 [ D.26281 ]) in insn 307:
  Adding insn 305 to worklist
Processing use of (reg 20 frame) in insn 305:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 305:
Processing use of (reg 246) in insn 281:
  Adding insn 280 to worklist
Processing use of (reg 71 [ ivtmp.291 ]) in insn 280:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 280:
Processing use of (reg 92 [ D.26281 ]) in insn 280:
Processing use of (reg 92 [ D.26281 ]) in insn 280:
Processing use of (reg 244) in insn 280:
  Adding insn 279 to worklist
Processing use of (reg 244) in insn 280:
Processing use of (reg 20 frame) in insn 279:
Processing use of (reg 147 [ num_tilings ]) in insn 271:
Processing use of (reg 242 [ D.26281 ]) in insn 271:
  Adding insn 270 to worklist
Processing use of (reg 236 [ D.26281 ]) in insn 270:
  Adding insn 266 to worklist
Processing use of (reg 240 [ D.26281 ]) in insn 270:
  Adding insn 269 to worklist
Processing use of (reg 147 [ num_tilings ]) in insn 269:
Processing use of (reg 147 [ num_tilings ]) in insn 269:
Processing use of (reg 238 [ D.26281 ]) in insn 269:
  Adding insn 268 to worklist
Processing use of (reg 238 [ D.26281 ]) in insn 269:
Processing use of (reg 237 [ D.26281 ]) in insn 268:
  Adding insn 267 to worklist
Processing use of (reg 82 [ D.26281 ]) in insn 267:
  Adding insn 253 to worklist
Processing use of (reg 83 [ D.26281 ]) in insn 267:
  Adding insn 255 to worklist
Processing use of (reg 71 [ ivtmp.291 ]) in insn 255:
Processing use of (reg 256) in insn 255:
  Adding insn 372 to worklist
Processing use of (reg 20 frame) in insn 372:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 253:
Processing use of (reg 257) in insn 253:
  Adding insn 371 to worklist
Processing use of (reg 20 frame) in insn 371:
Processing use of (reg 82 [ D.26281 ]) in insn 266:
Processing use of (reg 82 [ D.26281 ]) in insn 261:
Processing use of (reg 234 [ D.26281 ]) in insn 261:
  Adding insn 260 to worklist
Processing use of (reg 147 [ num_tilings ]) in insn 260:
Processing use of (reg 147 [ num_tilings ]) in insn 260:
Processing use of (reg 232 [ D.26281 ]) in insn 260:
  Adding insn 259 to worklist
Processing use of (reg 232 [ D.26281 ]) in insn 260:
Processing use of (reg 82 [ D.26281 ]) in insn 259:
Processing use of (reg 83 [ D.26281 ]) in insn 259:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 294:
Processing use of (reg 17 flags) in insn 309:
  Adding insn 308 to worklist
Processing use of (reg 92 [ D.26281 ]) in insn 308:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 291:
Processing use of (reg 250) in insn 291:
  Adding insn 290 to worklist
Processing use of (reg 256) in insn 291:
Processing use of (reg 62 [ ivtmp.295 ]) in insn 290:
  Adding insn 295 to worklist
  Adding insn 15 to worklist
Processing use of (reg 83 [ D.26281 ]) in insn 290:
Processing use of (reg 62 [ ivtmp.295 ]) in insn 295:
Processing use of (reg 17 flags) in insn 298:
  Adding insn 297 to worklist
Processing use of (reg 71 [ ivtmp.291 ]) in insn 297:
Processing use of (reg 143 [ D.26282 ]) in insn 297:
  Adding insn 246 to worklist
Processing use of (reg 229 [ D.26282 ]) in insn 246:
  Adding insn 245 to worklist
Processing use of (reg 228 [ D.26282 ]) in insn 245:
  Adding insn 244 to worklist
Processing use of (reg 227 [ D.26280 ]) in insn 244:
  Adding insn 243 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 243:
Processing use of (reg 17 flags) in insn 287:
  Adding insn 286 to worklist
Processing use of (reg 92 [ D.26281 ]) in insn 286:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 283:
Processing use of (reg 92 [ D.26281 ]) in insn 283:
Processing use of (reg 255) in insn 283:
Processing use of (reg 71 [ ivtmp.291 ]) in insn 275:
Processing use of (reg 92 [ D.26281 ]) in insn 275:
Processing use of (reg 255) in insn 275:
Processing use of (reg 17 flags) in insn 277:
  Adding insn 276 to worklist
Processing use of (reg 71 [ ivtmp.291 ]) in insn 276:
Processing use of (reg 151 [ wrap_widths ]) in insn 276:
  Adding insn 9 to worklist
Processing use of (reg 38 r9) in insn 9:
Processing use of (reg 17 flags) in insn 257:
  Adding insn 256 to worklist
Processing use of (reg 82 [ D.26281 ]) in insn 256:
Processing use of (reg 83 [ D.26281 ]) in insn 256:
Processing use of (reg 20 frame) in insn 230:
Processing use of (reg 223 [ i ]) in insn 230:
  Adding insn 226 to worklist
Processing use of (reg 225 [ D.26281 ]) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 147 [ num_tilings ]) in insn 229:
Processing use of (reg 226 [ *_33 ]) in insn 229:
  Adding insn 228 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 228:
Processing use of (reg 223 [ i ]) in insn 228:
Processing use of (reg 80 [ i ]) in insn 226:
  Adding insn 219 to worklist
Processing use of (reg 113 [ i ]) in insn 219:
  Adding insn 208 to worklist
  Adding insn 14 to worklist
Processing use of (reg 78 [ ratio_mult_vf.269 ]) in insn 208:
  Adding insn 107 to worklist
Processing use of (reg 79 [ bnd.268 ]) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 106:
Processing use of (reg 17 flags) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 65 [ i ]) in insn 235:
  Adding insn 231 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 235:
Processing use of (reg 113 [ i ]) in insn 231:
Processing use of (reg 20 frame) in insn 218:
Processing use of (reg 219 [ i ]) in insn 218:
  Adding insn 214 to worklist
Processing use of (reg 221 [ D.26281 ]) in insn 218:
  Adding insn 217 to worklist
Processing use of (reg 147 [ num_tilings ]) in insn 217:
Processing use of (reg 222 [ *_107 ]) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 216:
Processing use of (reg 219 [ i ]) in insn 216:
Processing use of (reg 113 [ i ]) in insn 214:
Processing use of (reg 17 flags) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 80 [ i ]) in insn 222:
Processing use of (reg 150 [ num_floats ]) in insn 222:
Processing use of (reg 17 flags) in insn 210:
  Adding insn 209 to worklist
Processing use of (reg 113 [ i ]) in insn 209:
Processing use of (reg 150 [ num_floats ]) in insn 209:
Processing use of (reg 20 frame) in insn 199:
Processing use of (reg 215 [ i ]) in insn 199:
  Adding insn 195 to worklist
Processing use of (reg 217 [ D.26281 ]) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 147 [ num_tilings ]) in insn 198:
Processing use of (reg 218 [ *_149 ]) in insn 198:
  Adding insn 197 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 197:
Processing use of (reg 215 [ i ]) in insn 197:
Processing use of (reg 65 [ i ]) in insn 195:
Processing use of (reg 20 frame) in insn 188:
Processing use of (reg 210 [ vect_var_.276 ]) in insn 188:
  Adding insn 187 to worklist
Processing use of (reg 211) in insn 187:
  Adding insn 185 to worklist
Processing use of (reg 212) in insn 187:
  Adding insn 186 to worklist
Processing use of (reg 212) in insn 186:
  Adding insn 184 to worklist
Processing use of (subreg (reg 190) 0) in insn 184:
  Adding insn 123 to worklist
Processing use of (subreg (reg 213) 0) in insn 184:
  Adding insn 182 to worklist
Processing use of (subreg (reg 209 [ vect_var_.275 ]) 0) in insn 182:
  Adding insn 180 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 180:
Processing use of (subreg (reg 184) 0) in insn 123:
  Adding insn 117 to worklist
Processing use of (reg 147 [ num_tilings ]) in insn 117:
Processing use of (reg 211) in insn 185:
  Adding insn 181 to worklist
Processing use of (reg 184) in insn 181:
Processing use of (reg 209 [ vect_var_.275 ]) in insn 181:
Processing use of (reg 20 frame) in insn 173:
Processing use of (reg 204 [ vect_var_.276 ]) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 205) in insn 172:
  Adding insn 170 to worklist
Processing use of (reg 206) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 206) in insn 171:
  Adding insn 169 to worklist
Processing use of (subreg (reg 190) 0) in insn 169:
Processing use of (subreg (reg 207) 0) in insn 169:
  Adding insn 167 to worklist
Processing use of (subreg (reg 203 [ vect_var_.275 ]) 0) in insn 167:
  Adding insn 165 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 165:
Processing use of (reg 205) in insn 170:
  Adding insn 166 to worklist
Processing use of (reg 184) in insn 166:
Processing use of (reg 203 [ vect_var_.275 ]) in insn 166:
Processing use of (reg 17 flags) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 79 [ bnd.268 ]) in insn 176:
Processing use of (reg 20 frame) in insn 158:
Processing use of (reg 198 [ vect_var_.276 ]) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 199) in insn 157:
  Adding insn 155 to worklist
Processing use of (reg 200) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 200) in insn 156:
  Adding insn 154 to worklist
Processing use of (subreg (reg 190) 0) in insn 154:
Processing use of (subreg (reg 201) 0) in insn 154:
  Adding insn 152 to worklist
Processing use of (subreg (reg 197 [ vect_var_.275 ]) 0) in insn 152:
  Adding insn 150 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 150:
Processing use of (reg 199) in insn 155:
  Adding insn 151 to worklist
Processing use of (reg 184) in insn 151:
Processing use of (reg 197 [ vect_var_.275 ]) in insn 151:
Processing use of (reg 17 flags) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 79 [ bnd.268 ]) in insn 161:
Processing use of (reg 20 frame) in insn 143:
Processing use of (reg 192 [ vect_var_.276 ]) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 193) in insn 142:
  Adding insn 140 to worklist
Processing use of (reg 194) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 194) in insn 141:
  Adding insn 139 to worklist
Processing use of (subreg (reg 190) 0) in insn 139:
Processing use of (subreg (reg 195) 0) in insn 139:
  Adding insn 137 to worklist
Processing use of (subreg (reg 191 [ vect_var_.275 ]) 0) in insn 137:
  Adding insn 135 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 135:
Processing use of (reg 193) in insn 140:
  Adding insn 136 to worklist
Processing use of (reg 184) in insn 136:
Processing use of (reg 191 [ vect_var_.275 ]) in insn 136:
Processing use of (reg 17 flags) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 79 [ bnd.268 ]) in insn 146:
Processing use of (reg 20 frame) in insn 128:
Processing use of (reg 186 [ vect_var_.276 ]) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 187) in insn 127:
  Adding insn 125 to worklist
Processing use of (reg 188) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 188) in insn 126:
  Adding insn 124 to worklist
Processing use of (subreg (reg 189) 0) in insn 124:
  Adding insn 122 to worklist
Processing use of (subreg (reg 190) 0) in insn 124:
Processing use of (subreg (reg 185 [ vect_var_.275 ]) 0) in insn 122:
  Adding insn 120 to worklist
Processing use of (reg 151 [ wrap_widths ]) in insn 120:
Processing use of (reg 187) in insn 125:
  Adding insn 121 to worklist
Processing use of (reg 184) in insn 121:
Processing use of (reg 185 [ vect_var_.275 ]) in insn 121:
Processing use of (reg 17 flags) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 79 [ bnd.268 ]) in insn 131:
Processing use of (reg 17 flags) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 183 [ D.26288 ]) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 112:
Processing use of (reg 7 sp) in insn 103:
Processing use of (reg 1 dx) in insn 103:
  Adding insn 100 to worklist
Processing use of (reg 4 si) in insn 103:
  Adding insn 101 to worklist
Processing use of (reg 5 di) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 256) in insn 102:
  Adding insn 97 to worklist
Processing use of (reg 20 frame) in insn 97:
Processing use of (reg 174 [ D.26282 ]) in insn 100:
  Adding insn 96 to worklist
Processing use of (reg 173 [ D.26282 ]) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 95:
Processing use of (reg 17 flags) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 181 [ D.26288 ]) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 17 flags) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 78 [ ratio_mult_vf.269 ]) in insn 108:
Processing use of (reg 103 [ ivtmp.311 ]) in insn 83:
  Adding insn 13 to worklist
  Adding insn 86 to worklist
Processing use of (reg 172) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 257) in insn 83:
  Adding insn 369 to worklist
Processing use of (reg 20 frame) in insn 369:
Processing use of (reg 74 [ D.26283 ]) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 21 xmm0) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 7 sp) in insn 79:
Processing use of (reg 21 xmm0) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 170 [ D.26283 ]) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 103 [ ivtmp.311 ]) in insn 77:
Processing use of (reg 129 [ D.26283 ]) in insn 77:
  Adding insn 69 to worklist
Processing use of (reg 149 [ floats ]) in insn 77:
  Adding insn 7 to worklist
Processing use of (reg 2 cx) in insn 7:
Processing use of (reg 147 [ num_tilings ]) in insn 69:
Processing use of (reg 103 [ ivtmp.311 ]) in insn 86:
Processing use of (reg 17 flags) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 103 [ ivtmp.311 ]) in insn 87:
Processing use of (reg 145 [ D.26282 ]) in insn 87:
  Adding insn 74 to worklist
Processing use of (reg 169 [ D.26282 ]) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 168 [ D.26282 ]) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 167 [ D.26280 ]) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 71:
Processing use of (reg 17 flags) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 147 [ num_tilings ]) in insn 62:
Processing use of (reg 7 sp) in insn 52:
Processing use of (reg 1 dx) in insn 52:
  Adding insn 49 to worklist
Processing use of (reg 4 si) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 5 di) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 159 [ D.26289 ]) in insn 51:
  Adding insn 43 to worklist
Processing use of (reg 158 [ D.26287 ]) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 255) in insn 43:
  Adding insn 39 to worklist
Processing use of (reg 20 frame) in insn 39:
Processing use of (reg 157 [ D.26282 ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 156 [ D.26282 ]) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 40:
Processing use of (reg 152 [ ints ]) in insn 50:
  Adding insn 10 to worklist
Processing use of (reg 16 argp) in insn 10:
Processing use of (reg 161 [ D.26282 ]) in insn 49:
  Adding insn 45 to worklist
Processing use of (reg 160 [ D.26282 ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 153 [ num_ints ]) in insn 44:
Processing use of (reg 17 flags) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 150 [ num_floats ]) in insn 32:
Processing use of (reg 17 flags) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 153 [ num_ints ]) in insn 28:
starting the processing of deferred insns
ending the processing of deferred insns


void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={8d,4u} r2={5d,1u} r4={8d,4u} r5={8d,4u} r6={1d,36u} r7={1d,40u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,37u,2e} r17={66d,22u} r18={4d} r19={4d} r20={1d,53u,2e} r21={6d,2u} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r62={2d,2u} r65={1d,2u} r70={1d,2u} r71={2d,12u} r74={1d,1u} r78={1d,2u} r79={1d,5u} r80={1d,4u} r82={1d,5u} r83={1d,4u} r92={4d,8u} r93={2d,2u} r103={2d,4u} r105={1d,1u} r106={2d,5u} r110={2d,1u} r113={2d,6u} r127={1d,1u} r129={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,12u} r148={1d,1u} r149={1d,1u} r150={1d,13u} r151={1d,9u} r152={1d,1u} r153={1d,3u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r181={1d,1u} r183={1d,1u} r184={1d,6u} r185={1d,2u} r186={1d,1u} r187={2d,2u} r188={2d,2u} r189={1d,1u} r190={1d,5u} r191={1d,2u} r192={1d,1u} r193={2d,2u} r194={2d,2u} r195={1d,1u} r197={1d,2u} r198={1d,1u} r199={2d,2u} r200={2d,2u} r201={1d,1u} r203={1d,2u} r204={1d,1u} r205={2d,2u} r206={2d,2u} r207={1d,1u} r209={1d,2u} r210={1d,1u} r211={2d,2u} r212={2d,2u} r213={1d,1u} r215={1d,2u} r217={1d,1u} r218={1d,1u} r219={1d,2u} r221={1d,1u} r222={1d,1u} r223={1d,2u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r232={1d,2u} r234={1d,1u} r235={1d} r236={1d,1u} r237={1d,1u} r238={1d,2u} r240={1d,1u} r241={1d} r242={1d,1u} r244={1d,2u} r246={1d,1u} r247={1d} r250={1d,1u} r253={1d,1u} r255={2d,5u} r256={2d,3u} r257={2d,2u} 
;;    total ref usage 818{391d,423u,4e} in 221{217 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 70 146 147 148 149 150 151 152 153 154
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 70 146 147 148 149 150 151 152 153 154
;; live  kill	 17 [flags]
(note 21 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 21 5 2 (set (reg/v/f:DI 146 [ the_tiles ])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SI 147 [ num_tilings ])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:492 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 148 [ ctable ])
        (reg:DI 1 dx [ ctable ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ctable ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 149 [ floats ])
        (reg:DI 2 cx [ floats ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 150 [ num_floats ])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:492 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 9 8 10 2 (set (reg/v/f:DI 151 [ wrap_widths ])
        (reg:DI 38 r9 [ wrap_widths ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ wrap_widths ])
        (nil)))
(insn 10 9 11 2 (set (reg/v/f:DI 152 [ ints ])
        (mem/f/c:DI (reg/f:DI 16 argp) [0 ints+0 S8 A64])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [0 ints+0 S8 A64])
        (nil)))
(insn 11 10 12 2 (set (reg/v:SI 153 [ num_ints ])
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])) tiles.cpp:492 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])
        (nil)))
(note 12 11 23 2 NOTE_INSN_FUNCTION_BEG)
(insn 23 12 24 2 (parallel [
            (set (reg:SI 154 [ D.26281 ])
                (plus:SI (reg/v:SI 150 [ num_floats ])
                    (reg/v:SI 153 [ num_ints ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:498 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg/v:SI 70 [ num_coordinates ])
                (plus:SI (reg:SI 154 [ D.26281 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:498 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 154 [ D.26281 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 25 24 27 2 (var_location:SI num_coordinates (reg/v:SI 70 [ num_coordinates ])) tiles.cpp:498 -1
     (nil))
(debug_insn 27 25 28 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 28 27 29 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 153 [ num_ints ])
            (const_int 0 [0]))) tiles.cpp:500 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 29 28 55 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) tiles.cpp:500 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
            (nil)))
 -> 37)
;;  succ:       4 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153

;; basic block 3, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 55 29 30 3 172 "" [0 uses])
(note 30 55 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 32 31 33 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 150 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:503 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 33 32 37 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 67)
;;  succ:       6 [95.2%] 
;;              5 [4.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151

;; basic block 4, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 152 153
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 156 157 158 159 160 161 255
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151 152 153
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 156 157 158 159 160 161 255
;; live  kill	 17 [flags]
(code_label 37 33 38 4 169 "" [1 uses])
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (parallel [
            (set (reg/f:DI 255)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 4 (set (reg:DI 156 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 150 [ num_floats ]))) tiles.cpp:500 149 {*extendsidi2_rex64}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 157 [ D.26282 ])
                (ashift:DI (reg:DI 156 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 156 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 158 [ D.26287 ])
                (plus:DI (reg:DI 157 [ D.26282 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 157 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 159 [ D.26289 ])
                (plus:DI (reg/f:DI 255)
                    (reg:DI 158 [ D.26287 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 255)
        (expr_list:REG_DEAD (reg:DI 158 [ D.26287 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 44 43 45 4 (set (reg:DI 160 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 153 [ num_ints ]))) tiles.cpp:500 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 153 [ num_ints ])
        (nil)))
(insn 45 44 49 4 (parallel [
            (set (reg:DI 161 [ D.26282 ])
                (ashift:DI (reg:DI 160 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 160 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 45 50 4 (set (reg:DI 1 dx)
        (reg:DI 161 [ D.26282 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 161 [ D.26282 ])
        (nil)))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg/v/f:DI 152 [ ints ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 152 [ ints ])
        (nil)))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg:DI 159 [ D.26289 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 159 [ D.26289 ])
        (nil)))
(call_insn 52 51 59 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b82f20da500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151

;; basic block 5, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [25.0%]  (FALLTHRU)
;;              3 [4.8%]  (FALLTHRU)
;;              15 [100.0%]  (FALLTHRU)
;;              16 [33.3%] 
;;              18 [25.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 59 52 60 5 171 "" [2 uses])
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 5 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 62 61 63 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 147 [ num_tilings ])
            (const_int 0 [0]))) tiles.cpp:510 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 63 62 67 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) tiles.cpp:510 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 240)
;;  succ:       20 [91.0%] 
;;              36 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151

;; basic block 6, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 150
;; lr  def 	 17 [flags] 103 129 145 167 168 169 257
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 149 150 151
;; live  gen 	 103 129 145 167 168 169 257
;; live  kill	 17 [flags]
(code_label 67 63 68 6 170 "" [1 uses])
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 71 6 (set (reg:SF 129 [ D.26283 ])
        (float:SF (reg/v:SI 147 [ num_tilings ]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 71 69 72 6 (parallel [
            (set (reg:SI 167 [ D.26280 ])
                (plus:SI (reg/v:SI 150 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 6 (set (reg:DI 168 [ D.26282 ])
        (zero_extend:DI (reg:SI 167 [ D.26280 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 167 [ D.26280 ])
        (nil)))
(insn 73 72 74 6 (parallel [
            (set (reg:DI 169 [ D.26282 ])
                (plus:DI (reg:DI 168 [ D.26282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 168 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 13 6 (parallel [
            (set (reg:DI 145 [ D.26282 ])
                (ashift:DI (reg:DI 169 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 169 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 74 369 6 (set (reg:DI 103 [ ivtmp.311 ])
        (const_int 0 [0])) tiles.cpp:503 87 {*movdi_internal_rex64}
     (nil))
(insn 369 13 90 6 (set (reg/f:DI 257)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))) 267 {*leadi}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257

;; basic block 7, loop depth 0, count 0, freq 330, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 129 145 149 257
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 103 170 172
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; live  gen 	 17 [flags] 21 [xmm0] 74 103 170 172
;; live  kill	 17 [flags]
(code_label 90 369 75 7 176 "" [0 uses])
(note 75 90 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 7 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 77 76 78 7 (set (reg:SF 170 [ D.26283 ])
        (mult:SF (reg:SF 129 [ D.26283 ])
            (mem:SF (plus:DI (reg/v/f:DI 149 [ floats ])
                    (reg:DI 103 [ ivtmp.311 ])) [0 MEM[base: floats_29(D), index: ivtmp.311_79, offset: 0B]+0 S4 A32]))) tiles.cpp:504 777 {*fop_sf_comm_sse}
     (nil))
(insn 78 77 79 7 (set (reg:SF 21 xmm0)
        (reg:SF 170 [ D.26283 ])) tiles.cpp:504 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 170 [ D.26283 ])
        (nil)))
(call_insn/u 79 78 80 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b82f0867a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:504 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 80 79 82 7 (set (reg:SF 74 [ D.26283 ])
        (reg:SF 21 xmm0)) tiles.cpp:504 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 82 80 83 7 (set (reg:SI 172)
        (fix:SI (reg:SF 74 [ D.26283 ]))) tiles.cpp:504 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 74 [ D.26283 ])
        (nil)))
(insn 83 82 85 7 (set (mem:SI (plus:DI (reg/f:DI 257)
                (reg:DI 103 [ ivtmp.311 ])) [0 MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B]+0 S4 A32])
        (reg:SI 172)) tiles.cpp:504 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(debug_insn 85 83 86 7 (var_location:SI i (debug_expr:SI D#19)) -1
     (nil))
(insn 86 85 87 7 (parallel [
            (set (reg:DI 103 [ ivtmp.311 ])
                (plus:DI (reg:DI 103 [ ivtmp.311 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 87 86 88 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 103 [ ivtmp.311 ])
            (reg:DI 145 [ D.26282 ]))) tiles.cpp:503 8 {*cmpdi_1}
     (nil))
(jump_insn 88 87 93 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 93)
;;  succ:       7 [95.2%]  (FALLTHRU,DFS_BACK)
;;              8 [4.8%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 103 129 145 146 147 148 149 150 151 257

;; basic block 8, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.8%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 173 174 181 256
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 78 79 173 174 181 256
;; live  kill	 17 [flags]
(code_label 93 88 94 8 175 "" [1 uses])
(note 94 93 95 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 8 (set (reg:DI 173 [ D.26282 ])
        (sign_extend:DI (reg/v:SI 150 [ num_floats ]))) tiles.cpp:505 149 {*extendsidi2_rex64}
     (nil))
(insn 96 95 97 8 (parallel [
            (set (reg:DI 174 [ D.26282 ])
                (ashift:DI (reg:DI 173 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:505 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 173 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 100 8 (parallel [
            (set (reg/f:DI 256)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 97 101 8 (set (reg:DI 1 dx)
        (reg:DI 174 [ D.26282 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 174 [ D.26282 ])
        (nil)))
(insn 101 100 102 8 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 102 101 103 8 (set (reg:DI 5 di)
        (reg/f:DI 256)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 256)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0]))
            (nil))))
(call_insn 103 102 106 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b82f20da600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 106 103 107 8 (parallel [
            (set (reg:SI 79 [ bnd.268 ])
                (lshiftrt:SI (reg/v:SI 150 [ num_floats ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 545 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 107 106 108 8 (parallel [
            (set (reg:SI 78 [ ratio_mult_vf.269 ])
                (ashift:SI (reg:SI 79 [ bnd.268 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 108 107 109 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ ratio_mult_vf.269 ])
            (const_int 0 [0]))) 3 {*cmpsi_ccno_1}
     (nil))
(insn 109 108 110 8 (set (reg:QI 181 [ D.26288 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 110 109 111 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 181 [ D.26288 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 181 [ D.26288 ])
        (nil)))
(jump_insn 111 110 360 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 357)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
            (nil)))
 -> 357)
;;  succ:       17 [33.3%] 
;;              9 [66.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151

;; basic block 9, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [66.7%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u100(6){ }u101(7){ }u102(16){ }u103(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags] 183
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  gen 	 17 [flags] 183
;; live  kill	
(note 360 111 112 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 112 360 113 9 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 150 [ num_floats ])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (nil))
(insn 113 112 114 9 (set (reg:QI 183 [ D.26288 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 114 113 115 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ D.26288 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 183 [ D.26288 ])
        (nil)))
(jump_insn 115 114 116 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 357)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
            (nil)))
 -> 357)
;;  succ:       10 [66.7%]  (FALLTHRU)
;;              17 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151

;; basic block 10, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [66.7%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 147 151
;; lr  def 	 17 [flags] 184 185 186 187 188 189 190
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151
;; live  gen 	 17 [flags] 184 185 186 187 188 189 190
;; live  kill	
(note 116 115 117 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 119 10 (set (reg:V4SI 184)
        (vec_duplicate:V4SI (reg/v:SI 147 [ num_tilings ]))) 1643 {*vec_dupv4si}
     (nil))
(debug_insn 119 117 120 10 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 120 119 121 10 (set (subreg:V16QI (reg:V4SI 185 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 151 [ wrap_widths ]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 121 120 122 10 (set (subreg:V2DI (reg:V4SI 187) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 185 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 184)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 122 121 123 10 (set (reg:V2DI 189)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 185 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 185 [ vect_var_.275 ])
        (nil)))
(insn 123 122 124 10 (set (reg:V2DI 190)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 184) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (nil))
(insn 124 123 125 10 (set (subreg:V2DI (reg:V4SI 188) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 189) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 189)
        (nil)))
(insn 125 124 126 10 (set (reg:V4SI 187)
        (vec_select:V4SI (reg:V4SI 187)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 126 125 127 10 (set (reg:V4SI 188)
        (vec_select:V4SI (reg:V4SI 188)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 127 126 128 10 (set (reg:V4SI 186 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 187)
                (reg:V4SI 188))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 188)
        (expr_list:REG_DEAD (reg:V4SI 187)
            (nil))))
(insn 128 127 130 10 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 186 [ vect_var_.276 ])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 186 [ vect_var_.276 ])
        (nil)))
(debug_insn 130 128 131 10 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 131 130 132 10 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 1 [0x1]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 132 131 133 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       11 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190

;; basic block 11, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [66.7%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u128(6){ }u129(7){ }u130(16){ }u131(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151 184 190
;; lr  def 	 17 [flags] 191 192 193 194 195
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  gen 	 17 [flags] 191 192 193 194 195
;; live  kill	
(note 133 132 134 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 134 133 135 11 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 135 134 136 11 (set (subreg:V16QI (reg:V4SI 191 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 136 135 137 11 (set (subreg:V2DI (reg:V4SI 193) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 191 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 184)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 137 136 139 11 (set (reg:V2DI 195)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 191 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 191 [ vect_var_.275 ])
        (nil)))
(insn 139 137 140 11 (set (subreg:V2DI (reg:V4SI 194) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 195) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 195)
        (nil)))
(insn 140 139 141 11 (set (reg:V4SI 193)
        (vec_select:V4SI (reg:V4SI 193)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 141 140 142 11 (set (reg:V4SI 194)
        (vec_select:V4SI (reg:V4SI 194)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 142 141 143 11 (set (reg:V4SI 192 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 193)
                (reg:V4SI 194))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 194)
        (expr_list:REG_DEAD (reg:V4SI 193)
            (nil))))
(insn 143 142 145 11 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 192 [ vect_var_.276 ])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 192 [ vect_var_.276 ])
        (nil)))
(debug_insn 145 143 146 11 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 146 145 147 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 2 [0x2]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 147 146 148 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       12 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190

;; basic block 12, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [66.7%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u146(6){ }u147(7){ }u148(16){ }u149(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151 184 190
;; lr  def 	 17 [flags] 197 198 199 200 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  gen 	 17 [flags] 197 198 199 200 201
;; live  kill	
(note 148 147 149 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 12 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 150 149 151 12 (set (subreg:V16QI (reg:V4SI 197 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 151 150 152 12 (set (subreg:V2DI (reg:V4SI 199) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 197 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 184)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 152 151 154 12 (set (reg:V2DI 201)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 197 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 197 [ vect_var_.275 ])
        (nil)))
(insn 154 152 155 12 (set (subreg:V2DI (reg:V4SI 200) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 201) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 201)
        (nil)))
(insn 155 154 156 12 (set (reg:V4SI 199)
        (vec_select:V4SI (reg:V4SI 199)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 156 155 157 12 (set (reg:V4SI 200)
        (vec_select:V4SI (reg:V4SI 200)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 157 156 158 12 (set (reg:V4SI 198 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 199)
                (reg:V4SI 200))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 200)
        (expr_list:REG_DEAD (reg:V4SI 199)
            (nil))))
(insn 158 157 160 12 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 198 [ vect_var_.276 ])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 198 [ vect_var_.276 ])
        (nil)))
(debug_insn 160 158 161 12 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 161 160 162 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 162 161 163 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       13 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190

;; basic block 13, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [66.7%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u164(6){ }u165(7){ }u166(16){ }u167(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 151 184 190
;; lr  def 	 17 [flags] 203 204 205 206 207
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 79 146 147 148 150 151 184 190
;; live  gen 	 17 [flags] 203 204 205 206 207
;; live  kill	
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 164 163 165 13 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 165 164 166 13 (set (subreg:V16QI (reg:V4SI 203 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 166 165 167 13 (set (subreg:V2DI (reg:V4SI 205) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 203 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 184)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 167 166 169 13 (set (reg:V2DI 207)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 203 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 203 [ vect_var_.275 ])
        (nil)))
(insn 169 167 170 13 (set (subreg:V2DI (reg:V4SI 206) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 207) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 207)
        (nil)))
(insn 170 169 171 13 (set (reg:V4SI 205)
        (vec_select:V4SI (reg:V4SI 205)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 171 170 172 13 (set (reg:V4SI 206)
        (vec_select:V4SI (reg:V4SI 206)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 172 171 173 13 (set (reg:V4SI 204 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 205)
                (reg:V4SI 206))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 206)
        (expr_list:REG_DEAD (reg:V4SI 205)
            (nil))))
(insn 173 172 175 13 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 204 [ vect_var_.276 ])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 204 [ vect_var_.276 ])
        (nil)))
(debug_insn 175 173 176 13 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 176 175 177 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ bnd.268 ])
            (const_int 4 [0x4]))) 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 79 [ bnd.268 ])
        (nil)))
(jump_insn 177 176 178 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil)))
 -> 206)
;;  succ:       14 [66.7%]  (FALLTHRU)
;;              16 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190

;; basic block 14, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [66.7%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u182(6){ }u183(7){ }u184(16){ }u185(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 184 190
;; lr  def 	 209 210 211 212 213
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151 184 190
;; live  gen 	 209 210 211 212 213
;; live  kill	
(note 178 177 179 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 179 178 180 14 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 180 179 181 14 (set (subreg:V16QI (reg:V4SI 209 [ vect_var_.275 ]) 0)
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 181 180 182 14 (set (subreg:V2DI (reg:V4SI 211) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 209 [ vect_var_.275 ])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 184)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V4SI 184)
        (nil)))
(insn 182 181 184 14 (set (reg:V2DI 213)
        (lshiftrt:V2DI (subreg:V2DI (reg:V4SI 209 [ vect_var_.275 ]) 0)
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 209 [ vect_var_.275 ])
        (nil)))
(insn 184 182 185 14 (set (subreg:V2DI (reg:V4SI 212) 0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 213) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (subreg:V4SI (reg:V2DI 190) 0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 213)
        (expr_list:REG_DEAD (reg:V2DI 190)
            (nil))))
(insn 185 184 186 14 (set (reg:V4SI 211)
        (vec_select:V4SI (reg:V4SI 211)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 186 185 187 14 (set (reg:V4SI 212)
        (vec_select:V4SI (reg:V4SI 212)
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 187 186 188 14 (set (reg:V4SI 210 [ vect_var_.276 ])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 211)
                (reg:V4SI 212))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 212)
        (expr_list:REG_DEAD (reg:V4SI 211)
            (nil))))
(insn 188 187 190 14 (set (mem/c:V4SI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 210 [ vect_var_.276 ])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 210 [ vect_var_.276 ])
        (nil)))
(debug_insn 190 188 234 14 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151

;; basic block 15, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [75.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u198(6){ }u199(7){ }u200(16){ }u201(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 147 151
;; lr  def 	 17 [flags] 215 217 218
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151
;; live  gen 	 215 217 218
;; live  kill	 17 [flags]
(code_label 234 190 193 15 180 "" [1 uses])
(note 193 234 194 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 15 (var_location:SI i (debug_expr:SI D#21)) -1
     (nil))
(insn 195 194 197 15 (set (reg:DI 215 [ i ])
        (sign_extend:DI (reg/v:SI 65 [ i ]))) tiles.cpp:506 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 65 [ i ])
        (nil)))
(insn 197 195 198 15 (set (reg:SI 218 [ *_149 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 215 [ i ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_149+0 S4 A32])) tiles.cpp:506 89 {*movsi_internal}
     (nil))
(insn 198 197 199 15 (parallel [
            (set (reg:SI 217 [ D.26281 ])
                (mult:SI (reg:SI 218 [ *_149 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 344 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 218 [ *_149 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 200 15 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 215 [ i ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 217 [ D.26281 ])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 217 [ D.26281 ])
        (expr_list:REG_DEAD (reg:DI 215 [ i ])
            (nil))))
(debug_insn 200 199 202 15 (var_location:SI D#20 (plus:SI (debug_expr:SI D#21)
        (const_int 1 [0x1]))) tiles.cpp:503 -1
     (nil))
(debug_insn 202 200 206 15 (var_location:SI i (debug_expr:SI D#20)) -1
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151

;; basic block 16, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              10 [33.3%] 
;;              11 [33.3%] 
;;              12 [33.3%] 
;;              13 [33.3%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u210(6){ }u211(7){ }u212(16){ }u213(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 150
;; lr  def 	 17 [flags] 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 78 146 147 148 150 151
;; live  gen 	 17 [flags] 113
;; live  kill	
(code_label 206 202 207 16 178 "" [4 uses])
(note 207 206 208 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 16 (set (reg/v:SI 113 [ i ])
        (reg:SI 78 [ ratio_mult_vf.269 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 78 [ ratio_mult_vf.269 ])
        (nil)))
(insn 209 208 210 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 113 [ i ])
            (reg/v:SI 150 [ num_floats ]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 210 209 357 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
            (nil)))
 -> 59)
;;  succ:       18 [66.7%]  (FALLTHRU)
;;              5 [33.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151

;; basic block 17, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [33.3%] 
;;              8 [33.3%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 113
;; live  kill	
(code_label 357 210 356 17 192 "" [2 uses])
(note 356 357 14 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 14 356 211 17 (set (reg/v:SI 113 [ i ])
        (const_int 0 [0])) tiles.cpp:505 89 {*movsi_internal}
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151

;; basic block 18, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [66.7%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u222(6){ }u223(7){ }u224(16){ }u225(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 147 150 151
;; lr  def 	 17 [flags] 80 219 221 222
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 113 146 147 148 150 151
;; live  gen 	 17 [flags] 80 219 221 222
;; live  kill	 17 [flags]
(code_label 211 14 212 18 177 "" [0 uses])
(note 212 211 213 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 18 (var_location:SI i (reg/v:SI 113 [ i ])) -1
     (nil))
(insn 214 213 216 18 (set (reg:DI 219 [ i ])
        (sign_extend:DI (reg/v:SI 113 [ i ]))) tiles.cpp:506 149 {*extendsidi2_rex64}
     (nil))
(insn 216 214 217 18 (set (reg:SI 222 [ *_107 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 219 [ i ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_107+0 S4 A32])) tiles.cpp:506 89 {*movsi_internal}
     (nil))
(insn 217 216 218 18 (parallel [
            (set (reg:SI 221 [ D.26281 ])
                (mult:SI (reg:SI 222 [ *_107 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 344 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 222 [ *_107 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 218 217 219 18 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 219 [ i ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 221 [ D.26281 ])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 221 [ D.26281 ])
        (expr_list:REG_DEAD (reg:DI 219 [ i ])
            (nil))))
(insn 219 218 221 18 (parallel [
            (set (reg/v:SI 80 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 221 219 222 18 (var_location:SI i (reg/v:SI 80 [ i ])) -1
     (nil))
(insn 222 221 223 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 150 [ num_floats ])
            (reg/v:SI 80 [ i ]))) tiles.cpp:503 7 {*cmpsi_1}
     (nil))
(jump_insn 223 222 224 18 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil)))
 -> 59)
;;  succ:       19 [75.0%]  (FALLTHRU)
;;              5 [25.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151

;; basic block 19, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [75.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u240(6){ }u241(7){ }u242(16){ }u243(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 80 113 147 150 151
;; lr  def 	 17 [flags] 65 223 225 226
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 80 113 146 147 148 150 151
;; live  gen 	 17 [flags] 65 223 225 226
;; live  kill	 17 [flags]
(note 224 223 225 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 19 (var_location:SI i (reg/v:SI 80 [ i ])) -1
     (nil))
(insn 226 225 228 19 (set (reg:DI 223 [ i ])
        (sign_extend:DI (reg/v:SI 80 [ i ]))) tiles.cpp:506 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 80 [ i ])
        (nil)))
(insn 228 226 229 19 (set (reg:SI 226 [ *_33 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 223 [ i ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 151 [ wrap_widths ])) [0 *_33+0 S4 A32])) tiles.cpp:506 89 {*movsi_internal}
     (nil))
(insn 229 228 230 19 (parallel [
            (set (reg:SI 225 [ D.26281 ])
                (mult:SI (reg:SI 226 [ *_33 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 344 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 226 [ *_33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 230 229 361 19 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 223 [ i ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 225 [ D.26281 ])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 225 [ D.26281 ])
        (expr_list:REG_DEAD (reg:DI 223 [ i ])
            (nil))))
(debug_insn 361 230 231 19 (var_location:SI D#21 (plus:SI (reg/v:SI 113 [ i ])
        (const_int 2 [0x2]))) -1
     (nil))
(insn 231 361 233 19 (parallel [
            (set (reg/v:SI 65 [ i ])
                (plus:SI (reg/v:SI 113 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 273 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 113 [ i ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 233 231 235 19 (var_location:SI i (debug_expr:SI D#21)) -1
     (nil))
(insn 235 233 236 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 65 [ i ])
            (reg/v:SI 150 [ num_floats ]))) tiles.cpp:503 7 {*cmpsi_1}
     (nil))
(jump_insn 236 235 240 19 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
            (nil)))
 -> 234)
;;  succ:       15 [75.0%] 
;;              5 [25.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 146 147 148 150 151

;; basic block 20, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u258(6){ }u259(7){ }u260(16){ }u261(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 146 150
;; lr  def 	 17 [flags] 93 106 143 227 228 229 255
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 146 147 148 150 151
;; live  gen 	 93 106 143 227 228 229 255
;; live  kill	 17 [flags]
(code_label 240 236 241 20 173 "" [1 uses])
(note 241 240 242 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 20 (set (reg:DI 93 [ ivtmp.305 ])
        (reg/v/f:DI 146 [ the_tiles ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 146 [ the_tiles ])
        (nil)))
(insn 243 242 244 20 (parallel [
            (set (reg:SI 227 [ D.26280 ])
                (plus:SI (reg/v:SI 150 [ num_floats ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 244 243 245 20 (set (reg:DI 228 [ D.26282 ])
        (zero_extend:DI (reg:SI 227 [ D.26280 ]))) 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 227 [ D.26280 ])
        (nil)))
(insn 245 244 246 20 (parallel [
            (set (reg:DI 229 [ D.26282 ])
                (plus:DI (reg:DI 228 [ D.26282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 246 245 20 20 (parallel [
            (set (reg:DI 143 [ D.26282 ])
                (ashift:DI (reg:DI 229 [ D.26282 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 229 [ D.26282 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 246 370 20 (set (reg/v:SI 106 [ j ])
        (const_int 0 [0])) tiles.cpp:510 89 {*movsi_internal}
     (nil))
(insn 370 20 346 20 (set (reg/f:DI 255)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))) 267 {*leadi}
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255

;; basic block 21, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [95.2%]  (DFS_BACK)
;;              35 [100.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u268(6){ }u269(7){ }u270(16){ }u271(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 256 257
;; lr  def 	 17 [flags] 82 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags] 82 83
;; live  kill	
(code_label 346 370 250 21 191 "" [1 uses])
(note 250 346 251 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 251 250 253 21 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 253 251 255 21 (set (reg:SI 82 [ D.26281 ])
        (mem:SI (plus:DI (reg/f:DI 257)
                (reg:DI 71 [ ivtmp.291 ])) [0 MEM[symbol: qstate, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 89 {*movsi_internal}
     (nil))
(insn 255 253 256 21 (set (reg:SI 83 [ D.26281 ])
        (mem:SI (plus:DI (reg/f:DI 256)
                (reg:DI 71 [ ivtmp.291 ])) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 89 {*movsi_internal}
     (nil))
(insn 256 255 257 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 82 [ D.26281 ])
            (reg:SI 83 [ D.26281 ]))) tiles.cpp:516 7 {*cmpsi_1}
     (nil))
(jump_insn 257 256 258 21 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) tiles.cpp:516 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 264)
;;  succ:       22 [50.0%]  (FALLTHRU)
;;              23 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257

;; basic block 22, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [50.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u279(6){ }u280(7){ }u281(16){ }u282(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 147
;; lr  def 	 17 [flags] 92 232 234 235
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 92 232 234 235
;; live  kill	 17 [flags]
(note 258 257 259 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 22 (parallel [
            (set (reg:SI 232 [ D.26281 ])
                (minus:SI (reg:SI 82 [ D.26281 ])
                    (reg:SI 83 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 309 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 260 259 261 22 (parallel [
            (set (reg:SI 235)
                (div:SI (reg:SI 232 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (set (reg:SI 234 [ D.26281 ])
                (mod:SI (reg:SI 232 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 232 [ D.26281 ])
        (expr_list:REG_UNUSED (reg:SI 235)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 261 260 264 22 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (minus:SI (reg:SI 82 [ D.26281 ])
                    (reg:SI 234 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 234 [ D.26281 ])
        (expr_list:REG_DEAD (reg:SI 82 [ D.26281 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257

;; basic block 23, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u291(6){ }u292(7){ }u293(16){ }u294(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 147
;; lr  def 	 17 [flags] 92 236 237 238 240 241 242
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 82 83 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 92 236 237 238 240 241 242
;; live  kill	 17 [flags]
(code_label 264 261 265 23 182 "" [1 uses])
(note 265 264 266 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 23 (parallel [
            (set (reg:SI 236 [ D.26281 ])
                (plus:SI (reg:SI 82 [ D.26281 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 267 266 268 23 (parallel [
            (set (reg:SI 237 [ D.26281 ])
                (minus:SI (reg:SI 83 [ D.26281 ])
                    (reg:SI 82 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 82 [ D.26281 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 268 267 269 23 (parallel [
            (set (reg:SI 238 [ D.26281 ])
                (plus:SI (reg:SI 237 [ D.26281 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 237 [ D.26281 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 269 268 270 23 (parallel [
            (set (reg:SI 241)
                (div:SI (reg:SI 238 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (set (reg:SI 240 [ D.26281 ])
                (mod:SI (reg:SI 238 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 238 [ D.26281 ])
        (expr_list:REG_UNUSED (reg:SI 241)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 270 269 271 23 (parallel [
            (set (reg:SI 242 [ D.26281 ])
                (plus:SI (reg:SI 236 [ D.26281 ])
                    (reg:SI 240 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 240 [ D.26281 ])
        (expr_list:REG_DEAD (reg:SI 236 [ D.26281 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 271 270 272 23 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (minus:SI (reg:SI 242 [ D.26281 ])
                    (reg/v:SI 147 [ num_tilings ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 242 [ D.26281 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257

;; basic block 24, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU)
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u307(6){ }u308(7){ }u309(16){ }u310(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 92 151 255
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 272 271 273 24 183 "" [0 uses])
(note 273 272 275 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 275 273 276 24 (set (mem:SI (plus:DI (reg/f:DI 255)
                (reg:DI 71 [ ivtmp.291 ])) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 92 [ D.26281 ])) 89 {*movsi_internal}
     (nil))
(insn 276 275 277 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 151 [ wrap_widths ])
                    (reg:DI 71 [ ivtmp.291 ])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.291_105, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:521 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 277 276 278 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) tiles.cpp:521 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 284)
;;  succ:       25 [50.0%]  (FALLTHRU)
;;              26 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257

;; basic block 25, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [50.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u317(6){ }u318(7){ }u319(16){ }u320(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 92 255
;; lr  def 	 17 [flags] 92 244 246 247
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 92 244 246 247
;; live  kill	 17 [flags]
(note 278 277 279 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 25 (parallel [
            (set (reg/f:DI 244)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 280 279 281 25 (parallel [
            (set (reg:SI 247)
                (div:SI (reg:SI 92 [ D.26281 ])
                    (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                            (reg/f:DI 244)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (set (reg:SI 246)
                (mod:SI (reg:SI 92 [ D.26281 ])
                    (mem:SI (plus:DI (reg:DI 71 [ ivtmp.291 ])
                            (reg/f:DI 244)) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg/f:DI 244)
        (expr_list:REG_DEAD (reg:SI 92 [ D.26281 ])
            (expr_list:REG_UNUSED (reg:SI 247)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 281 280 283 25 (set (reg:SI 92 [ D.26281 ])
        (reg:SI 246)) tiles.cpp:521 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 246)
        (nil)))
(insn 283 281 284 25 (set (mem:SI (plus:DI (reg/f:DI 255)
                (reg:DI 71 [ ivtmp.291 ])) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 92 [ D.26281 ])) tiles.cpp:521 89 {*movsi_internal}
     (nil))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257

;; basic block 26, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [50.0%] 
;;              25 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 284 283 285 26 184 "" [1 uses])
(note 285 284 286 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 26 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ D.26281 ])
            (const_int 0 [0]))) tiles.cpp:523 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 287 286 313 26 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) tiles.cpp:523 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 302)
;;  succ:       29 [91.0%] 
;;              27 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257

;; basic block 27, loop depth 0, count 0, freq 3333, maybe hot
;; Invalid sum of incoming frequencies 1119, should be 3333
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU)
;;              26 [9.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u338(6){ }u339(7){ }u340(16){ }u341(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 71 83 143 256
;; lr  def 	 17 [flags] 62 71 250
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags] 62 71 250
;; live  kill	 17 [flags]
(code_label 313 287 288 27 189 "" [0 uses])
(note 288 313 290 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 290 288 291 27 (parallel [
            (set (reg:SI 250)
                (plus:SI (reg:SI 83 [ D.26281 ])
                    (reg:SI 62 [ ivtmp.295 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:527 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ D.26281 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 291 290 293 27 (set (mem:SI (plus:DI (reg/f:DI 256)
                (reg:DI 71 [ ivtmp.291 ])) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 250)) tiles.cpp:527 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 250)
        (nil)))
(debug_insn 293 291 294 27 (var_location:SI i (debug_expr:SI D#18)) -1
     (nil))
(insn 294 293 295 27 (parallel [
            (set (reg:DI 71 [ ivtmp.291 ])
                (plus:DI (reg:DI 71 [ ivtmp.291 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 295 294 297 27 (parallel [
            (set (reg:SI 62 [ ivtmp.295 ])
                (plus:SI (reg:SI 62 [ ivtmp.295 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 297 295 298 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 71 [ ivtmp.291 ])
            (reg:DI 143 [ D.26282 ]))) tiles.cpp:513 8 {*cmpdi_1}
     (nil))
(jump_insn 298 297 301 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 346)
            (pc))) tiles.cpp:513 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
            (nil)))
 -> 346)
;;  succ:       21 [95.2%]  (DFS_BACK)
;;              28 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257

;; basic block 28, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u352(6){ }u353(7){ }u354(16){ }u355(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 110
;; live  kill	
(note 301 298 18 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 18 301 302 28 (set (reg/v:SI 110 [ num_floats ])
        (reg/v:SI 150 [ num_floats ])) 89 {*movsi_internal}
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255

;; basic block 29, loop depth 0, count 0, freq 819, maybe hot
;; Invalid sum of incoming frequencies 3033, should be 819
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [91.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u357(6){ }u358(7){ }u359(16){ }u360(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71
;; lr  def 	 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	 127
;; live  kill	
(code_label 302 18 303 29 185 "" [1 uses])
(note 303 302 305 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 305 303 318 29 (set (reg:SI 127 [ D.26281 ])
        (mem:SI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 71 [ ivtmp.291 ]))
                (const_int -256 [0xffffffffffffff00])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257

;; basic block 30, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [91.0%]  (DFS_BACK)
;;              29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u364(6){ }u365(7){ }u366(16){ }u367(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 127
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; live  gen 	 17 [flags] 92
;; live  kill	 17 [flags]
(code_label 318 305 306 30 190 "" [1 uses])
(note 306 318 307 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 30 (parallel [
            (set (reg:SI 92 [ D.26281 ])
                (plus:SI (reg:SI 92 [ D.26281 ])
                    (reg:SI 127 [ D.26281 ])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:524 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 308 307 309 30 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ D.26281 ])
            (const_int 0 [0]))) tiles.cpp:523 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 309 308 310 30 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 318)
            (pc))) tiles.cpp:523 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 318)
;;  succ:       30 [91.0%]  (DFS_BACK)
;;              31 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 127 143 147 148 150 151 255 256 257

;; basic block 31, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u372(6){ }u373(7){ }u374(16){ }u375(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 92 255
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 92 93 106 143 147 148 150 151 255 256 257
;; live  gen 	
;; live  kill	
(note 310 309 312 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 312 310 359 31 (set (mem:SI (plus:DI (reg/f:DI 255)
                (reg:DI 71 [ ivtmp.291 ])) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 92 [ D.26281 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.26281 ])
        (nil)))
;;  succ:       27 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 83 93 106 143 147 148 150 151 255 256 257

;; basic block 32, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [4.8%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u379(6){ }u380(7){ }u381(16){ }u382(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 110
;; live  kill	
(code_label 359 312 358 32 193 "" [1 uses])
(note 358 359 19 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 19 358 321 32 (set (reg/v:SI 110 [ num_floats ])
        (const_int 0 [0])) tiles.cpp:513 89 {*movsi_internal}
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255

;; basic block 33, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [100.0%]  (FALLTHRU)
;;              28 [100.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u383(6){ }u384(7){ }u385(16){ }u386(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 147 148 255
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 105 106 253
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 110 143 147 148 150 151 255
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 93 105 106 253
;; live  kill	 17 [flags]
(code_label 321 19 322 33 187 "" [0 uses])
(note 322 321 323 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 33 (set (reg:DI 253 [ num_floats ])
        (sign_extend:DI (reg/v:SI 110 [ num_floats ]))) tiles.cpp:530 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 110 [ num_floats ])
        (nil)))
(insn 324 323 326 33 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 253 [ num_floats ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -176 [0xffffffffffffff50])) [0 coordinates S4 A32])
        (reg/v:SI 106 [ j ])) tiles.cpp:530 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 253 [ num_floats ])
        (nil)))
(insn 326 324 327 33 (set (reg:DI 1 dx)
        (reg/v/f:DI 148 [ ctable ])) tiles.cpp:532 87 {*movdi_internal_rex64}
     (nil))
(insn 327 326 328 33 (set (reg:SI 4 si)
        (reg/v:SI 70 [ num_coordinates ])) tiles.cpp:532 89 {*movsi_internal}
     (nil))
(insn 328 327 329 33 (set (reg:DI 5 di)
        (reg/f:DI 255)) tiles.cpp:532 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 329 328 330 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b82f1f16800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:532 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 330 329 331 33 (set (reg:SI 105 [ D.26281 ])
        (reg:SI 0 ax)) tiles.cpp:532 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 331 330 332 33 (set (mem:SI (reg:DI 93 [ ivtmp.305 ]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 105 [ D.26281 ])) tiles.cpp:532 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ D.26281 ])
        (nil)))
(insn 332 331 334 33 (parallel [
            (set (reg/v:SI 106 [ j ])
                (plus:SI (reg/v:SI 106 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:510 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 334 332 335 33 (var_location:SI j (reg/v:SI 106 [ j ])) -1
     (nil))
(insn 335 334 336 33 (parallel [
            (set (reg:DI 93 [ ivtmp.305 ])
                (plus:DI (reg:DI 93 [ ivtmp.305 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 336 335 337 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ j ])
            (reg/v:SI 147 [ num_tilings ]))) tiles.cpp:510 7 {*cmpsi_1}
     (nil))
(jump_insn 337 336 339 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 351)
            (pc))) tiles.cpp:510 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 351)
;;  succ:       34 [91.0%]  (FALLTHRU,DFS_BACK)
;;              36 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255

;; basic block 34, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [91.0%]  (FALLTHRU,DFS_BACK)
;;              20 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u408(6){ }u409(7){ }u410(16){ }u411(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 339 337 340 34 181 "" [0 uses])
(note 340 339 341 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(debug_insn 341 340 342 34 (var_location:SI j (reg/v:SI 106 [ j ])) -1
     (nil))
(debug_insn 342 341 343 34 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 343 342 344 34 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 150 [ num_floats ])
            (const_int 0 [0]))) tiles.cpp:513 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 344 343 345 34 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) tiles.cpp:513 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
            (nil)))
 -> 359)
;;  succ:       35 [95.2%]  (FALLTHRU)
;;              32 [4.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255

;; basic block 35, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [95.2%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u415(6){ }u416(7){ }u417(16){ }u418(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62 71 256 257
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 93 106 143 147 148 150 151 255
;; live  gen 	 62 71 256 257
;; live  kill	
(note 345 344 15 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 15 345 16 35 (set (reg:SI 62 [ ivtmp.295 ])
        (const_int 1 [0x1])) tiles.cpp:513 89 {*movsi_internal}
     (nil))
(insn 16 15 371 35 (set (reg:DI 71 [ ivtmp.291 ])
        (const_int 0 [0])) tiles.cpp:513 87 {*movdi_internal_rex64}
     (nil))
(insn 371 16 372 35 (set (reg/f:DI 257)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))) 267 {*leadi}
     (nil))
(insn 372 371 351 35 (set (reg/f:DI 256)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))) 267 {*leadi}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 70 71 93 106 143 147 148 150 151 255 256 257

;; basic block 36, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 35, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [9.0%]  (LOOP_EXIT)
;;              5 [9.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u421(6){ }u422(7){ }u423(16){ }u424(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 351 372 352 36 168 "" [1 uses])
(note 352 351 0 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for tiles.cpp) (_GLOBAL__sub_I_tiles.cpp, funcdef_no=1103, decl_uid=25455, cgraph_uid=347) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


(static initializers for tiles.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,2u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} 
;;    total ref usage 126{112d,14u,0e} in 9{7 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110
;;  reg->defs[] map:	0[0,2] 1[3,6] 2[7,9] 4[10,13] 5[14,18] 6[19,19] 7[20,20] 8[21,22] 9[23,24] 10[25,26] 11[27,28] 12[29,30] 13[31,32] 14[33,34] 15[35,36] 16[37,37] 17[38,39] 18[40,41] 19[42,43] 20[44,44] 21[45,47] 22[48,50] 23[51,53] 24[54,56] 25[57,59] 26[60,62] 27[63,65] 28[66,68] 29[69,70] 30[71,72] 31[73,74] 32[75,76] 33[77,78] 34[79,80] 35[81,82] 36[83,84] 37[85,87] 38[88,90] 39[91,92] 40[93,94] 45[95,96] 46[97,98] 47[99,100] 48[101,102] 49[103,104] 50[105,106] 51[107,108] 52[109,110] 59[111,111] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d6(1){ }d9(2){ }d13(4){ }d18(5){ }d19(6){ }d20(7){ }d37(16){ }d44(20){ }d47(21){ }d50(22){ }d53(23){ }d56(24){ }d59(25){ }d62(26){ }d65(27){ }d68(28){ }d87(37){ }d90(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[6],2[9],4[13],5[18],6[19],7[20],16[37],20[44],21[47],22[50],23[53],24[56],25[59],26[62],27[65],28[68],37[87],38[90]
;; rd  kill	(53) 0[0,1,2],1[3,4,5,6],2[7,8,9],4[10,11,12,13],5[14,15,16,17,18],6[19],7[20],16[37],20[44],21[45,46,47],22[48,49,50],23[51,52,53],24[54,55,56],25[57,58,59],26[60,61,62],27[63,64,65],28[66,67,68],37[85,86,87],38[88,89,90]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[19],7[20],16[37],20[44]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d19(bb 0 insn -1) }u1(7){ d20(bb 0 insn -1) }u2(16){ d37(bb 0 insn -1) }u3(20){ d44(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 59
;; live  kill	
;; rd  in  	(4) 6[19],7[20],16[37],20[44]
;; rd  gen 	(2) 0[0],59[111]
;; rd  kill	(4) 0[0,1,2],59[111]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[19],7[20],16[37],20[44]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(6){ d19(bb 0 insn -1) }u12(7){ d20(bb 0 insn -1) }u13(20){ d44(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[19],7[20],16[37],20[44]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 8:
Processing use of (reg 5 di) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 1 dx) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 4 si) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 59) in insn 12:
  Adding insn 11 to worklist
starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for tiles.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,2u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} 
;;    total ref usage 126{112d,14u,0e} in 9{7 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 59
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (var_location:SI __priority (const_int 65535 [0xffff])) -1
     (nil))
(debug_insn 6 5 7 2 (var_location:SI __initialize_p (const_int 1 [0x1])) -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b82f1da6390 __ioinit>)) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x2b82f1903200 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.8/iostream:74 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x2b82f1f9dab0 __dso_handle>)) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b82f1da6390 __ioinit>)) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 59)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b82f1903400 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 59)) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 59)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b82f1903400 __comp_dtor >)
            (nil))))
(call_insn/j 13 12 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x2b82f1f74f00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.8/iostream:74 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

