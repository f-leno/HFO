
;; Function PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*) (_ZL18CollisionTable_newP11_typeobjectP7_objectS2_, funcdef_no=146, decl_uid=11212, cgraph_uid=146)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r60={1d,4u} r62={1d,2u} r65={1d,1u} 
;;    total ref usage 100{70d,30u,0e} in 12{11 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66
;;  reg->defs[] map:	0[0,2] 1[3,4] 2[5,6] 4[7,9] 5[10,12] 6[13,13] 7[14,14] 8[15,15] 9[16,16] 10[17,17] 11[18,18] 12[19,19] 13[20,20] 14[21,21] 15[22,22] 16[23,23] 17[24,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,54] 38[55,56] 39[57,57] 40[58,58] 45[59,59] 46[60,60] 47[61,61] 48[62,62] 49[63,63] 50[64,64] 51[65,65] 52[66,66] 60[67,67] 62[68,68] 65[69,69] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d9(4){ }d12(5){ }d13(6){ }d14(7){ }d23(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d54(37){ }d56(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[4],2[6],4[9],5[12],6[13],7[14],16[23],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[54],38[56]
;; rd  kill	(37) 0[0,1,2],1[3,4],2[5,6],4[7,8,9],5[10,11,12],6[13],7[14],16[23],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54],38[55,56]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[12],6[13],7[14],16[23],20[28]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d13(bb 0 insn -1) }u1(7){ d14(bb 0 insn -1) }u2(16){ d23(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 62 65
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 60 62 65
;; live  kill	
;; rd  in  	(5) 5[12],6[13],7[14],16[23],20[28]
;; rd  gen 	(5) 0[1],17[24],60[67],62[68],65[69]
;; rd  kill	(8) 0[0,1,2],17[24,25],60[67],62[68],65[69]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; rd  out 	(5) 6[13],7[14],16[23],20[28],60[67]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 16 { d23(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(6){ d13(bb 0 insn -1) }u16(7){ d14(bb 0 insn -1) }u17(16){ d23(bb 0 insn -1) }u18(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 6[13],7[14],16[23],20[28],60[67]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; rd  out 	(5) 6[13],7[14],16[23],20[28],60[67]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 16 { d23(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ d13(bb 0 insn -1) }u21(7){ d14(bb 0 insn -1) }u22(16){ d23(bb 0 insn -1) }u23(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(5) 6[13],7[14],16[23],20[28],60[67]
;; rd  gen 	(1) 0[0]
;; rd  kill	(3) 0[0,1,2]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[13],7[14],16[23],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 16 { d23(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u26(0){ d0(bb 4 insn 24) }u27(6){ d13(bb 0 insn -1) }u28(7){ d14(bb 0 insn -1) }u29(20){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[13],7[14],16[23],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 4 insn 24) }
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 17 to worklist
  Adding insn 27 to worklist
Finished finding needed instructions:
  Adding insn 24 to worklist
Processing use of (reg 60 [ self ]) in insn 24:
  Adding insn 12 to worklist
Processing use of (reg 0 ax) in insn 12:
Processing use of (reg 0 ax) in insn 27:
Processing use of (reg 60 [ self ]) in insn 17:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 4 si) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 5 di) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 65 [ type_3(D)->tp_alloc ]) in insn 11:
  Adding insn 8 to worklist
Processing use of (reg 62 [ type ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 62 [ type ]) in insn 10:
Processing use of (reg 17 flags) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 60 [ self ]) in insn 14:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r60={1d,4u} r62={1d,2u} r65={1d,1u} 
;;    total ref usage 100{70d,30u,0e} in 12{11 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 62 65
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 60 62 65
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 5 2 (set (reg/v/f:DI 62 [ type ])
        (reg:DI 5 di [ type ])) tilesInt.C:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ type ])
        (nil)))
(note 5 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 65 [ type_3(D)->tp_alloc ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 62 [ type ])
                (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 0 [0])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ type ])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ type ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 65 [ type_3(D)->tp_alloc ]) [0 *_4 S1 A8])
            (const_int 0 [0]))) tilesInt.C:22 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 65 [ type_3(D)->tp_alloc ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/v/f:DI 60 [ self ])
        (reg:DI 0 ax)) tilesInt.C:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 13 12 14 2 (var_location:DI self (reg/v/f:DI 60 [ self ])) tilesInt.C:22 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 60 [ self ])
            (const_int 0 [0]))) tilesInt.C:23 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 18)
            (pc))) tilesInt.C:23 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil)))
 -> 18)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	
;; live  kill	
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (mem/f/j:DI (plus:DI (reg/v/f:DI 60 [ self ])
                (const_int 16 [0x10])) [0 self_6->ct+0 S8 A64])
        (const_int 0 [0])) tilesInt.C:25 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 18 17 19 4 2 "" [1 uses])
(note 19 18 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 19 27 4 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 60 [ self ])) tilesInt.C:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ self ])
        (nil)))
(insn 27 24 0 4 (use (reg/i:DI 0 ax)) tilesInt.C:29 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*) (_ZL19tiles_LoadTilesWrapP7_objectS0_, funcdef_no=154, decl_uid=11314, cgraph_uid=154)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 28 count 22 (  1.2)


PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={27d,23u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,18u} r7={1d,63u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,17u} r17={53d,10u} r18={23d} r19={23d} r20={1d,48u,7e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r105={2d,5u} r106={2d,4u} r107={2d,1u} r108={1d,1u} r110={1d,1u} r113={1d,4u} r117={1d,4u} r119={1d,1u} r122={1d,4u} r123={1d,2u} r124={1d,1u} r126={1d,4u} r131={1d,1u} r132={1d,1u} r135={1d,5u} r136={1d,1u} r137={2d,6u} r141={1d,1u} r142={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,1u} r154={1d,2u} r157={1d,1u} r158={1d,4u} r159={2d,8u} r163={1d,1u} r168={2d,3u} r174={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,4u} r185={1d,1u} r188={1d,1u} r191={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r214={1d,1u} r215={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} 
;;    total ref usage 1529{1183d,339u,7e} in 212{189 regular + 23 call} insns.
;; Reaching defs:
;;  sparse invalidated 	5, 17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107
;;  reg->defs[] map:	0[0,26] 1[27,54] 2[55,81] 4[82,113] 5[114,160] 6[161,161] 7[162,162] 8[163,185] 9[186,208] 10[209,231] 11[232,254] 12[255,277] 13[278,300] 14[301,323] 15[324,346] 16[347,347] 17[348,400] 18[401,423] 19[424,446] 20[447,447] 21[448,471] 22[472,495] 23[496,519] 24[520,543] 25[544,567] 26[568,591] 27[592,615] 28[616,639] 29[640,662] 30[663,685] 31[686,708] 32[709,731] 33[732,754] 34[755,777] 35[778,800] 36[801,823] 37[824,850] 38[851,877] 39[878,900] 40[901,923] 45[924,946] 46[947,969] 47[970,992] 48[993,1015] 49[1016,1038] 50[1039,1061] 51[1062,1084] 52[1085,1107] 105[1108,1109] 106[1110,1111] 107[1112,1113] 108[1114,1114] 110[1115,1115] 113[1116,1116] 117[1117,1117] 119[1118,1118] 122[1119,1119] 123[1120,1120] 124[1121,1121] 126[1122,1122] 131[1123,1123] 132[1124,1124] 135[1125,1125] 136[1126,1126] 137[1127,1128] 141[1129,1129] 142[1130,1130] 145[1131,1131] 146[1132,1132] 149[1133,1133] 154[1134,1134] 157[1135,1135] 158[1136,1136] 159[1137,1138] 163[1139,1139] 168[1140,1141] 174[1142,1142] 178[1143,1143] 179[1144,1144] 180[1145,1145] 181[1146,1146] 182[1147,1147] 184[1148,1148] 185[1149,1149] 188[1150,1150] 191[1151,1151] 193[1152,1152] 194[1153,1153] 196[1154,1154] 197[1155,1155] 198[1156,1156] 200[1157,1157] 201[1158,1158] 203[1159,1159] 204[1160,1160] 205[1161,1161] 206[1162,1162] 207[1163,1163] 208[1164,1164] 209[1165,1165] 210[1166,1166] 211[1167,1167] 212[1168,1168] 214[1169,1169] 215[1170,1170] 217[1171,1171] 218[1172,1172] 219[1173,1173] 220[1174,1174] 221[1175,1175] 222[1176,1176] 223[1177,1177] 224[1178,1178] 225[1179,1179] 227[1180,1180] 228[1181,1181] 229[1182,1182] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d26(0){ }d54(1){ }d81(2){ }d113(4){ }d160(5){ }d161(6){ }d162(7){ }d347(16){ }d447(20){ }d471(21){ }d495(22){ }d519(23){ }d543(24){ }d567(25){ }d591(26){ }d615(27){ }d639(28){ }d850(37){ }d877(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[26],1[54],2[81],4[113],5[160],6[161],7[162],16[347],20[447],21[471],22[495],23[519],24[543],25[567],26[591],27[615],28[639],37[850],38[877]
;; rd  kill	(364) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],1[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],2[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],4[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],6[161],7[162],16[347],20[447],21[448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471],22[472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],23[496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519],24[520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543],25[544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567],26[568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591],27[592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615],28[616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639],37[824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850],38[851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 4[113],6[161],7[162],16[347],20[447]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 18 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d161(bb 0 insn -1) }u1(7){ d162(bb 0 insn -1) }u2(16){ d347(bb 0 insn -1) }u3(20){ d447(bb 0 insn -1) }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107 108 178 179 180 181 182 184 185 188 191
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 107 108 178 179 180 181 182 184 185 188 191
;; live  kill	 17 [flags]
;; rd  in  	(5) 4[113],6[161],7[162],16[347],20[447]
;; rd  gen 	(13) 0[24],17[392],107[1112],108[1114],178[1143],179[1144],180[1145],181[1146],182[1147],184[1148],185[1149],188[1150],191[1151]
;; rd  kill	(39) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],107[1112,1113],108[1114],178[1143],179[1144],180[1145],181[1146],182[1147],184[1148],185[1149],188[1150],191[1151]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; rd  out 	(5) 6[161],7[162],16[347],20[447],107[1112]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u61(6){ d161(bb 0 insn -1) }u62(7){ d162(bb 0 insn -1) }u63(16){ d347(bb 0 insn -1) }u64(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[161],7[162],16[347],20[447],107[1112]
;; rd  gen 	(15) 0[19],17[383],110[1115],113[1116],117[1117],119[1118],122[1119],123[1120],193[1152],194[1153],196[1154],197[1155],198[1156],200[1157],201[1158]
;; rd  kill	(40) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],110[1115],113[1116],117[1117],119[1118],122[1119],123[1120],193[1152],194[1153],196[1154],197[1155],198[1156],200[1157],201[1158]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; rd  out 	(8) 6[161],7[162],16[347],20[447],113[1116],117[1117],122[1119],123[1120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 3 )->[4]->( 15 17 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u98(6){ d161(bb 0 insn -1) }u99(7){ d162(bb 0 insn -1) }u100(16){ d347(bb 0 insn -1) }u101(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 124
;; live  kill	
;; rd  in  	(8) 6[161],7[162],16[347],20[447],113[1116],117[1117],122[1119],123[1120]
;; rd  gen 	(3) 0[18],17[381],124[1121]
;; rd  kill	(28) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],124[1121]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; rd  out 	(7) 6[161],7[162],16[347],20[447],113[1116],117[1117],122[1119]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 5 16 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u108(6){ d161(bb 0 insn -1) }u109(7){ d162(bb 0 insn -1) }u110(16){ d347(bb 0 insn -1) }u111(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 131 132 137 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 131 132 137 203
;; live  kill	 17 [flags]
;; rd  in  	(16) 0[16],6[161],7[162],16[347],17[377],20[447],105[1108],106[1111],113[1116],117[1117],122[1119],131[1123],132[1124],137[1127,1128],203[1159]
;; rd  gen 	(6) 0[16],17[377],131[1123],132[1124],137[1128],203[1159]
;; rd  kill	(32) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],131[1123],132[1124],137[1127,1128],203[1159]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; rd  out 	(10) 6[161],7[162],16[347],20[447],105[1108],106[1111],113[1116],117[1117],122[1119],137[1128]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 17 5 15 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u132(6){ d161(bb 0 insn -1) }u133(7){ d162(bb 0 insn -1) }u134(16){ d347(bb 0 insn -1) }u135(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 135 136 159 204
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 135 136 159 204
;; live  kill	
;; rd  in  	(12) 6[161],7[162],16[347],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],137[1128]
;; rd  gen 	(6) 0[15],17[350],135[1125],136[1126],159[1138],204[1160]
;; rd  kill	(32) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],135[1125],136[1126],159[1137,1138],204[1160]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; rd  out 	(14) 6[161],7[162],16[347],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],135[1125],136[1126],159[1138]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 6 8 )->[7]->( 9 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u147(6){ d161(bb 0 insn -1) }u148(7){ d162(bb 0 insn -1) }u149(16){ d347(bb 0 insn -1) }u150(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 149 205
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 149 205
;; live  kill	
;; rd  in  	(15) 6[161],7[162],16[347],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],135[1125],136[1126],159[1137,1138]
;; rd  gen 	(4) 0[14],17[374],149[1133],205[1161]
;; rd  kill	(29) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],149[1133],205[1161]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; rd  out 	(12) 6[161],7[162],16[347],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],135[1125]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 6 8 )->[8]->( 8 7 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u159(6){ d161(bb 0 insn -1) }u160(7){ d162(bb 0 insn -1) }u161(16){ d347(bb 0 insn -1) }u162(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 122 136 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 141 142 145 146 159 206 207
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 141 142 145 146 159 206 207
;; live  kill	 17 [flags]
;; rd  in  	(23) 0[10],6[161],7[162],16[347],17[368],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],135[1125],136[1126],141[1129],142[1130],145[1131],146[1132],159[1137,1138],206[1162],207[1163]
;; rd  gen 	(9) 0[10],17[368],141[1129],142[1130],145[1131],146[1132],159[1137],206[1162],207[1163]
;; rd  kill	(35) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],141[1129],142[1130],145[1131],146[1132],159[1137,1138],206[1162],207[1163]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; rd  out 	(14) 6[161],7[162],16[347],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],135[1125],136[1126],159[1137]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u197(6){ d161(bb 0 insn -1) }u198(7){ d162(bb 0 insn -1) }u199(16){ d347(bb 0 insn -1) }u200(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 208 209 210
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 208 209 210
;; live  kill	
;; rd  in  	(12) 6[161],7[162],16[347],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],135[1125]
;; rd  gen 	(3) 208[1164],209[1165],210[1166]
;; rd  kill	(3) 208[1164],209[1165],210[1166]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; rd  out 	(5) 6[161],7[162],16[347],20[447],117[1117]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 7 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u224(6){ d161(bb 0 insn -1) }u225(7){ d162(bb 0 insn -1) }u226(16){ d347(bb 0 insn -1) }u227(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 154 211 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 154 211 212
;; live  kill	
;; rd  in  	(12) 6[161],7[162],16[347],20[447],105[1108,1109],106[1110,1111],113[1116],117[1117],122[1119],135[1125]
;; rd  gen 	(3) 154[1134],211[1167],212[1168]
;; rd  kill	(3) 154[1134],211[1167],212[1168]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; rd  out 	(5) 6[161],7[162],16[347],20[447],117[1117]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 9 10 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u254(6){ d161(bb 0 insn -1) }u255(7){ d162(bb 0 insn -1) }u256(16){ d347(bb 0 insn -1) }u257(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157 158
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  gen 	 17 [flags] 157 158
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[161],7[162],16[347],20[447],117[1117]
;; rd  gen 	(3) 17[363],157[1135],158[1136]
;; rd  kill	(2) 157[1135],158[1136]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; rd  out 	(6) 6[161],7[162],16[347],20[447],117[1117],158[1136]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 11 14 )->[12]->( 18 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u263(6){ d161(bb 0 insn -1) }u264(7){ d162(bb 0 insn -1) }u265(16){ d347(bb 0 insn -1) }u266(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 107
;; live  kill	
;; rd  in  	(9) 6[161],7[162],16[347],20[447],117[1117],158[1136],168[1140],174[1142],218[1172]
;; rd  gen 	(2) 0[5],107[1113]
;; rd  kill	(29) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],107[1112,1113]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; rd  out 	(5) 6[161],7[162],16[347],20[447],107[1113]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u271(6){ d161(bb 0 insn -1) }u272(7){ d162(bb 0 insn -1) }u273(16){ d347(bb 0 insn -1) }u274(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  def 	 17 [flags] 168 174 214 215 217 218 219 220
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  gen 	 168 174 214 215 217 218 219 220
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[161],7[162],16[347],20[447],117[1117],158[1136]
;; rd  gen 	(8) 168[1141],174[1142],214[1169],215[1170],217[1171],218[1172],219[1173],220[1174]
;; rd  kill	(9) 168[1140,1141],174[1142],214[1169],215[1170],217[1171],218[1172],219[1173],220[1174]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; rd  out 	(7) 6[161],7[162],16[347],20[447],168[1141],174[1142],218[1172]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 14 13 )->[14]->( 14 12 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u283(6){ d161(bb 0 insn -1) }u284(7){ d162(bb 0 insn -1) }u285(16){ d347(bb 0 insn -1) }u286(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 163 168 221 222 223 224 225
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 163 168 221 222 223 224 225
;; live  kill	 17 [flags]
;; rd  in  	(16) 0[3],6[161],7[162],16[347],17[348],20[447],163[1139],168[1140,1141],174[1142],218[1172],221[1175],222[1176],223[1177],224[1178],225[1179]
;; rd  gen 	(9) 0[3],17[348],163[1139],168[1140],221[1175],222[1176],223[1177],224[1178],225[1179]
;; rd  kill	(35) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],163[1139],168[1140,1141],221[1175],222[1176],223[1177],224[1178],225[1179]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; rd  out 	(7) 6[161],7[162],16[347],20[447],168[1140],174[1142],218[1172]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 4 )->[15]->( 16 6 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u308(6){ d161(bb 0 insn -1) }u309(7){ d162(bb 0 insn -1) }u310(16){ d347(bb 0 insn -1) }u311(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 106 126 227 228 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 106 126 227 228 229
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[161],7[162],16[347],20[447],113[1116],117[1117],122[1119]
;; rd  gen 	(8) 0[1],17[349],105[1108],106[1111],126[1122],227[1180],228[1181],229[1182]
;; rd  kill	(35) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],105[1108,1109],106[1110,1111],126[1122],227[1180],228[1181],229[1182]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; rd  out 	(9) 6[161],7[162],16[347],20[447],105[1108],106[1111],113[1116],117[1117],122[1119]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 15 )->[16]->( 5 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u328(6){ d161(bb 0 insn -1) }u329(7){ d162(bb 0 insn -1) }u330(16){ d347(bb 0 insn -1) }u331(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 137
;; live  kill	
;; rd  in  	(9) 6[161],7[162],16[347],20[447],105[1108],106[1111],113[1116],117[1117],122[1119]
;; rd  gen 	(1) 137[1127]
;; rd  kill	(2) 137[1127,1128]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; rd  out 	(10) 6[161],7[162],16[347],20[447],105[1108],106[1111],113[1116],117[1117],122[1119],137[1127]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 3 4 )->[17]->( 6 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u332(6){ d161(bb 0 insn -1) }u333(7){ d162(bb 0 insn -1) }u334(16){ d347(bb 0 insn -1) }u335(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 105 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 105 106
;; live  kill	
;; rd  in  	(8) 6[161],7[162],16[347],20[447],113[1116],117[1117],122[1119],123[1120]
;; rd  gen 	(2) 105[1109],106[1110]
;; rd  kill	(4) 105[1108,1109],106[1110,1111]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; rd  out 	(9) 6[161],7[162],16[347],20[447],105[1109],106[1110],113[1116],117[1117],122[1119]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 2 12 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u336(6){ d161(bb 0 insn -1) }u337(7){ d162(bb 0 insn -1) }u338(16){ d347(bb 0 insn -1) }u339(20){ d447(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(6) 6[161],7[162],16[347],20[447],107[1112,1113]
;; rd  gen 	(1) 0[0]
;; rd  kill	(27) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[161],7[162],16[347],20[447]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 16 { d347(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u342(0){ d0(bb 18 insn 340) }u343(6){ d161(bb 0 insn -1) }u344(7){ d162(bb 0 insn -1) }u345(20){ d447(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[161],7[162],16[347],20[447]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 18 insn 340) }
;;   reg 6 { d161(bb 0 insn -1) }
;;   reg 7 { d162(bb 0 insn -1) }
;;   reg 20 { d447(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 101 to worklist
  Adding insn 98 to worklist
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 74 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 133 to worklist
  Adding insn 127 to worklist
  Adding insn 123 to worklist
  Adding insn 117 to worklist
  Adding insn 109 to worklist
  Adding insn 105 to worklist
  Adding insn 139 to worklist
  Adding insn 136 to worklist
  Adding insn 161 to worklist
  Adding insn 154 to worklist
  Adding insn 152 to worklist
  Adding insn 149 to worklist
  Adding insn 174 to worklist
  Adding insn 167 to worklist
  Adding insn 182 to worklist
  Adding insn 179 to worklist
  Adding insn 215 to worklist
  Adding insn 208 to worklist
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 199 to worklist
  Adding insn 197 to worklist
  Adding insn 194 to worklist
  Adding insn 234 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 253 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 241 to worklist
  Adding insn 261 to worklist
  Adding insn 265 to worklist
  Adding insn 301 to worklist
  Adding insn 295 to worklist
  Adding insn 287 to worklist
  Adding insn 330 to worklist
  Adding insn 322 to worklist
  Adding insn 315 to worklist
  Adding insn 343 to worklist
Finished finding needed instructions:
  Adding insn 340 to worklist
Processing use of (reg 107 [ D.11813 ]) in insn 340:
  Adding insn 266 to worklist
  Adding insn 56 to worklist
Processing use of (reg 0 ax) in insn 266:
Processing use of (reg 0 ax) in insn 343:
Processing use of (reg 7 sp) in insn 315:
Processing use of (reg 5 di) in insn 315:
  Adding insn 314 to worklist
Processing use of (reg 227 [ ints_list ]) in insn 314:
  Adding insn 313 to worklist
Processing use of (reg 20 frame) in insn 313:
Processing use of (reg 7 sp) in insn 322:
Processing use of (reg 5 di) in insn 322:
  Adding insn 321 to worklist
Processing use of (reg 229 [ D.11816 ]) in insn 321:
  Adding insn 320 to worklist
Processing use of (reg 228 [ D.11816 ]) in insn 320:
  Adding insn 319 to worklist
Processing use of (subreg (reg 126 [ D.11815 ]) 0) in insn 319:
  Adding insn 316 to worklist
Processing use of (reg 0 ax) in insn 316:
Processing use of (reg 17 flags) in insn 330:
  Adding insn 329 to worklist
Processing use of (subreg (reg 126 [ D.11815 ]) 0) in insn 329:
Processing use of (reg 7 sp) in insn 287:
Processing use of (reg 5 di) in insn 287:
  Adding insn 286 to worklist
Processing use of (reg 221 [ D.11815 ]) in insn 286:
  Adding insn 285 to worklist
Processing use of (reg 222 [ MEM[base: _147, index: ivtmp.69_138, offset: 0B] ]) in insn 285:
  Adding insn 284 to worklist
Processing use of (reg 168 [ ivtmp.69 ]) in insn 284:
  Adding insn 55 to worklist
  Adding insn 298 to worklist
Processing use of (reg 174 [ D.11821 ]) in insn 284:
  Adding insn 281 to worklist
Processing use of (reg 117 [ the_tiles ]) in insn 281:
  Adding insn 118 to worklist
Processing use of (reg 220 [ D.11819 ]) in insn 281:
  Adding insn 280 to worklist
Processing use of (reg 219 [ D.11819 ]) in insn 280:
  Adding insn 279 to worklist
Processing use of (reg 158 [ i ]) in insn 279:
  Adding insn 257 to worklist
Processing use of (reg 157 [ num_tilings.4 ]) in insn 257:
  Adding insn 256 to worklist
Processing use of (reg 20 frame) in insn 256:
Processing use of (reg 0 ax) in insn 118:
Processing use of (reg 168 [ ivtmp.69 ]) in insn 298:
Processing use of (reg 7 sp) in insn 295:
Processing use of (reg 1 dx) in insn 295:
  Adding insn 292 to worklist
Processing use of (reg 4 si) in insn 295:
  Adding insn 293 to worklist
Processing use of (reg 5 di) in insn 295:
  Adding insn 294 to worklist
Processing use of (reg 225 [ tiles_list ]) in insn 294:
  Adding insn 291 to worklist
Processing use of (reg 20 frame) in insn 291:
Processing use of (reg 223 [ D.11815 ]) in insn 293:
  Adding insn 290 to worklist
Processing use of (reg 224 [ start_element ]) in insn 290:
  Adding insn 289 to worklist
Processing use of (reg 20 frame) in insn 289:
Processing use of (reg 163 [ D.11813 ]) in insn 292:
  Adding insn 288 to worklist
Processing use of (reg 0 ax) in insn 288:
Processing use of (reg 17 flags) in insn 301:
  Adding insn 300 to worklist
Processing use of (reg 168 [ ivtmp.69 ]) in insn 300:
Processing use of (reg 218) in insn 300:
  Adding insn 276 to worklist
Processing use of (reg 217) in insn 276:
  Adding insn 275 to worklist
Processing use of (reg 215 [ D.11819 ]) in insn 275:
  Adding insn 273 to worklist
Processing use of (reg 214 [ D.11819 ]) in insn 273:
  Adding insn 272 to worklist
Processing use of (reg 158 [ i ]) in insn 272:
Processing use of (reg 7 sp) in insn 265:
Processing use of (reg 0 ax) in insn 265:
  Adding insn 264 to worklist
Processing use of (reg 5 di) in insn 265:
  Adding insn 263 to worklist
Processing use of (reg 17 flags) in insn 261:
  Adding insn 260 to worklist
Processing use of (reg 158 [ i ]) in insn 260:
Processing use of (reg 7 sp) in insn 241:
Processing use of (reg 5 di) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 211 [ memorctable ]) in insn 240:
  Adding insn 239 to worklist
Processing use of (reg 20 frame) in insn 239:
Processing use of (reg 7 sp) in insn 245:
Processing use of (reg 106 [ num_ints ]) in insn 245:
  Adding insn 317 to worklist
  Adding insn 52 to worklist
Processing use of (subreg (reg 126 [ D.11815 ]) 0) in insn 317:
Processing use of (reg 7 sp) in insn 246:
Processing use of (reg 105 [ ints ]) in insn 246:
  Adding insn 53 to worklist
  Adding insn 323 to worklist
Processing use of (reg 0 ax) in insn 323:
Processing use of (reg 7 sp) in insn 253:
Processing use of (reg 1 dx) in insn 253:
  Adding insn 250 to worklist
Processing use of (reg 2 cx) in insn 253:
  Adding insn 249 to worklist
Processing use of (reg 4 si) in insn 253:
  Adding insn 251 to worklist
Processing use of (reg 5 di) in insn 253:
  Adding insn 252 to worklist
Processing use of (reg 7 sp) in insn 253:
Processing use of (reg 7 sp) in insn 253:
Processing use of (reg 37 r8) in insn 253:
  Adding insn 248 to worklist
Processing use of (reg 38 r9) in insn 253:
  Adding insn 247 to worklist
Processing use of (reg 122 [ wrapwidths ]) in insn 247:
  Adding insn 128 to worklist
Processing use of (reg 0 ax) in insn 128:
Processing use of (subreg (reg 135 [ D.11815 ]) 0) in insn 248:
  Adding insn 168 to worklist
Processing use of (reg 0 ax) in insn 168:
Processing use of (reg 117 [ the_tiles ]) in insn 252:
Processing use of (reg 212 [ num_tilings ]) in insn 251:
  Adding insn 244 to worklist
Processing use of (reg 20 frame) in insn 244:
Processing use of (reg 113 [ variables ]) in insn 249:
  Adding insn 110 to worklist
Processing use of (reg 0 ax) in insn 110:
Processing use of (subreg (reg 154 [ D.11815 ]) 0) in insn 250:
  Adding insn 242 to worklist
Processing use of (reg 0 ax) in insn 242:
Processing use of (reg 7 sp) in insn 226:
Processing use of (reg 106 [ num_ints ]) in insn 226:
Processing use of (reg 7 sp) in insn 227:
Processing use of (reg 105 [ ints ]) in insn 227:
Processing use of (reg 7 sp) in insn 234:
Processing use of (reg 1 dx) in insn 234:
  Adding insn 231 to worklist
Processing use of (reg 2 cx) in insn 234:
  Adding insn 230 to worklist
Processing use of (reg 4 si) in insn 234:
  Adding insn 232 to worklist
Processing use of (reg 5 di) in insn 234:
  Adding insn 233 to worklist
Processing use of (reg 7 sp) in insn 234:
Processing use of (reg 7 sp) in insn 234:
Processing use of (reg 37 r8) in insn 234:
  Adding insn 229 to worklist
Processing use of (reg 38 r9) in insn 234:
  Adding insn 228 to worklist
Processing use of (reg 122 [ wrapwidths ]) in insn 228:
Processing use of (subreg (reg 135 [ D.11815 ]) 0) in insn 229:
Processing use of (reg 117 [ the_tiles ]) in insn 233:
Processing use of (reg 210 [ num_tilings ]) in insn 232:
  Adding insn 225 to worklist
Processing use of (reg 20 frame) in insn 225:
Processing use of (reg 113 [ variables ]) in insn 230:
Processing use of (reg 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ]) in insn 231:
  Adding insn 224 to worklist
Processing use of (reg 208 [ memorctable ]) in insn 224:
  Adding insn 223 to worklist
Processing use of (reg 20 frame) in insn 223:
Processing use of (reg 7 sp) in insn 194:
Processing use of (reg 4 si) in insn 194:
  Adding insn 192 to worklist
Processing use of (reg 5 di) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 206 [ variables_list ]) in insn 193:
  Adding insn 191 to worklist
Processing use of (reg 20 frame) in insn 191:
Processing use of (reg 159 [ ivtmp.73 ]) in insn 192:
  Adding insn 54 to worklist
  Adding insn 212 to worklist
Processing use of (reg 159 [ ivtmp.73 ]) in insn 212:
Processing use of (reg 7 sp) in insn 197:
Processing use of (reg 5 di) in insn 197:
  Adding insn 196 to worklist
Processing use of (reg 141 [ D.11813 ]) in insn 196:
  Adding insn 195 to worklist
Processing use of (reg 0 ax) in insn 195:
Processing use of (reg 113 [ variables ]) in insn 199:
Processing use of (reg 142 [ D.11817 ]) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 159 [ ivtmp.73 ]) in insn 199:
Processing use of (reg 21 xmm0) in insn 198:
Processing use of (reg 7 sp) in insn 203:
Processing use of (reg 4 si) in insn 203:
  Adding insn 201 to worklist
Processing use of (reg 5 di) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 207 [ wrapwidths_list ]) in insn 202:
  Adding insn 200 to worklist
Processing use of (reg 20 frame) in insn 200:
Processing use of (reg 159 [ ivtmp.73 ]) in insn 201:
Processing use of (reg 7 sp) in insn 206:
Processing use of (reg 5 di) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 145 [ D.11813 ]) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 0 ax) in insn 204:
Processing use of (reg 122 [ wrapwidths ]) in insn 208:
Processing use of (subreg (reg 146 [ D.11815 ]) 0) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 159 [ ivtmp.73 ]) in insn 208:
Processing use of (reg 0 ax) in insn 207:
Processing use of (reg 17 flags) in insn 215:
  Adding insn 214 to worklist
Processing use of (reg 136 [ num_variables ]) in insn 214:
  Adding insn 169 to worklist
Processing use of (subreg (reg 159 [ ivtmp.73 ]) 0) in insn 214:
Processing use of (subreg (reg 135 [ D.11815 ]) 0) in insn 169:
Processing use of (reg 7 sp) in insn 179:
Processing use of (reg 4 si) in insn 179:
  Adding insn 177 to worklist
Processing use of (reg 5 di) in insn 179:
  Adding insn 178 to worklist
Processing use of (reg 205 [ memorctable ]) in insn 178:
  Adding insn 176 to worklist
Processing use of (reg 20 frame) in insn 176:
Processing use of (reg 17 flags) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 149 [ D.11814 ]) in insn 181:
  Adding insn 180 to worklist
Processing use of (reg 0 ax) in insn 180:
Processing use of (reg 7 sp) in insn 167:
Processing use of (reg 5 di) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 204 [ variables_list ]) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 20 frame) in insn 165:
Processing use of (reg 17 flags) in insn 174:
  Adding insn 173 to worklist
Processing use of (subreg (reg 135 [ D.11815 ]) 0) in insn 173:
Processing use of (reg 7 sp) in insn 149:
Processing use of (reg 4 si) in insn 149:
  Adding insn 147 to worklist
Processing use of (reg 5 di) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 203 [ ints_list ]) in insn 148:
  Adding insn 146 to worklist
Processing use of (reg 20 frame) in insn 146:
Processing use of (reg 137 [ ivtmp.79 ]) in insn 147:
  Adding insn 158 to worklist
  Adding insn 51 to worklist
Processing use of (reg 137 [ ivtmp.79 ]) in insn 158:
Processing use of (reg 7 sp) in insn 152:
Processing use of (reg 5 di) in insn 152:
  Adding insn 151 to worklist
Processing use of (reg 131 [ D.11813 ]) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 0 ax) in insn 150:
Processing use of (reg 105 [ ints ]) in insn 154:
Processing use of (subreg (reg 132 [ D.11815 ]) 0) in insn 154:
  Adding insn 153 to worklist
Processing use of (reg 137 [ ivtmp.79 ]) in insn 154:
Processing use of (reg 0 ax) in insn 153:
Processing use of (reg 17 flags) in insn 161:
  Adding insn 160 to worklist
Processing use of (reg 106 [ num_ints ]) in insn 160:
Processing use of (subreg (reg 137 [ ivtmp.79 ]) 0) in insn 160:
Processing use of (reg 7 sp) in insn 136:
Processing use of (reg 5 di) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 123 [ ints_list.7 ]) in insn 135:
  Adding insn 131 to worklist
Processing use of (reg 20 frame) in insn 131:
Processing use of (reg 17 flags) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 124 [ D.11815 ]) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 0 ax) in insn 137:
Processing use of (reg 7 sp) in insn 105:
Processing use of (reg 5 di) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 193 [ variables_list ]) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 20 frame) in insn 103:
Processing use of (reg 7 sp) in insn 109:
Processing use of (reg 5 di) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 194 [ D.11816 ]) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 110 [ D.11815 ]) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 0 ax) in insn 106:
Processing use of (reg 7 sp) in insn 117:
Processing use of (reg 5 di) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 198 [ D.11816 ]) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 196 [ D.11816 ]) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 197 [ num_tilings ]) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 20 frame) in insn 113:
Processing use of (reg 7 sp) in insn 123:
Processing use of (reg 5 di) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 200 [ variables_list ]) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 20 frame) in insn 121:
Processing use of (reg 7 sp) in insn 127:
Processing use of (reg 5 di) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 201 [ D.11816 ]) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 119 [ D.11815 ]) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 0 ax) in insn 124:
Processing use of (reg 17 flags) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 123 [ ints_list.7 ]) in insn 132:
Processing use of (reg 20 frame) in insn 59:
Processing use of (reg 20 frame) in insn 61:
Processing use of (reg 20 frame) in insn 63:
Processing use of (reg 20 frame) in insn 65:
Processing use of (reg 20 frame) in insn 67:
Processing use of (reg 7 sp) in insn 74:
Processing use of (reg 182) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 20 frame) in insn 73:
Processing use of (reg 7 sp) in insn 77:
Processing use of (reg 184) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 7 sp) in insn 79:
Processing use of (reg 185) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 20 frame) in insn 78:
Processing use of (reg 7 sp) in insn 82:
Processing use of (reg 184) in insn 82:
Processing use of (reg 7 sp) in insn 84:
Processing use of (reg 188) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 20 frame) in insn 83:
Processing use of (reg 7 sp) in insn 87:
Processing use of (reg 184) in insn 87:
Processing use of (reg 7 sp) in insn 89:
Processing use of (reg 191) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 20 frame) in insn 88:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 0 ax) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 1 dx) in insn 98:
  Adding insn 94 to worklist
Processing use of (reg 2 cx) in insn 98:
  Adding insn 92 to worklist
Processing use of (reg 4 si) in insn 98:
  Adding insn 95 to worklist
Processing use of (reg 5 di) in insn 98:
  Adding insn 96 to worklist
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 37 r8) in insn 98:
  Adding insn 91 to worklist
Processing use of (reg 38 r9) in insn 98:
  Adding insn 90 to worklist
Processing use of (reg 179) in insn 90:
  Adding insn 70 to worklist
Processing use of (reg 20 frame) in insn 70:
Processing use of (reg 180) in insn 91:
  Adding insn 71 to worklist
Processing use of (reg 20 frame) in insn 71:
Processing use of (reg 178 [ args ]) in insn 96:
  Adding insn 49 to worklist
Processing use of (reg 4 si) in insn 49:
Processing use of (reg 181) in insn 92:
  Adding insn 72 to worklist
Processing use of (reg 20 frame) in insn 72:
Processing use of (reg 184) in insn 94:
Processing use of (reg 17 flags) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 108 [ D.11814 ]) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 0 ax) in insn 99:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={27d,23u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,18u} r7={1d,63u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,17u} r17={53d,10u} r18={23d} r19={23d} r20={1d,48u,7e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r105={2d,5u} r106={2d,4u} r107={2d,1u} r108={1d,1u} r110={1d,1u} r113={1d,4u} r117={1d,4u} r119={1d,1u} r122={1d,4u} r123={1d,2u} r124={1d,1u} r126={1d,4u} r131={1d,1u} r132={1d,1u} r135={1d,5u} r136={1d,1u} r137={2d,6u} r141={1d,1u} r142={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,1u} r154={1d,2u} r157={1d,1u} r158={1d,4u} r159={2d,8u} r163={1d,1u} r168={2d,3u} r174={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,4u} r185={1d,1u} r188={1d,1u} r191={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r214={1d,1u} r215={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} 
;;    total ref usage 1529{1183d,339u,7e} in 212{189 regular + 23 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107 108 178 179 180 181 182 184 185 188 191
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 107 108 178 179 180 181 182 184 185 188 191
;; live  kill	 17 [flags]
(note 57 0 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 49 57 50 2 (set (reg/v/f:DI 178 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:244 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 50 49 59 2 NOTE_INSN_FUNCTION_BEG)
(insn 59 50 60 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:245 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 60 59 61 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:246 -1
     (nil))
(insn 61 60 62 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:249 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 62 61 63 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:250 -1
     (nil))
(insn 63 62 64 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:252 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 64 63 65 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:253 -1
     (nil))
(insn 65 64 66 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:255 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 66 65 67 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:256 -1
     (nil))
(insn 67 66 68 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:257 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 68 67 69 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:258 -1
     (nil))
(debug_insn 69 68 70 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:259 -1
     (nil))
(insn 70 69 71 2 (parallel [
            (set (reg/f:DI 179)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 2 (parallel [
            (set (reg/f:DI 180)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 2 (parallel [
            (set (reg/f:DI 181)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 2 (parallel [
            (set (reg/f:DI 182)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 74 73 75 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S8 A64])
        (reg/f:DI 182)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 75 74 77 2 (set (reg:DI 184)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 77 75 78 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 2 (parallel [
            (set (reg/f:DI 185)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 79 78 82 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 185)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 82 79 83 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 2 (parallel [
            (set (reg/f:DI 188)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 87 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 188)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 87 84 88 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 2 (parallel [
            (set (reg/f:DI 191)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:267 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 191)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 90 89 91 2 (set (reg:DI 38 r9)
        (reg/f:DI 179)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 91 90 92 2 (set (reg:DI 37 r8)
        (reg/f:DI 180)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 180)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90]))
            (nil))))
(insn 92 91 94 2 (set (reg:DI 2 cx)
        (reg/f:DI 181)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 94 92 95 2 (set (reg:DI 1 dx)
        (reg:DI 184)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 184)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 95 94 96 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b9b8a16a720 *.LC0>)) tilesInt.C:267 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 2 (set (reg:DI 5 di)
        (reg/v/f:DI 178 [ args ])) tilesInt.C:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 178 [ args ])
        (nil)))
(insn 97 96 98 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:267 91 {*movqi_internal}
     (nil))
(call_insn 98 97 99 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 56 [0x38]))) tilesInt.C:267 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                    (const_int 40 [0x28])) [0  S8 A64]))
                                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                        (const_int 48 [0x30])) [0  S8 A64]))
                                                            (nil))))))))))))))))
(insn 99 98 56 2 (set (reg:SI 108 [ D.11814 ])
        (reg:SI 0 ax)) tilesInt.C:267 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 56 99 100 2 (set (reg/f:DI 107 [ D.11813 ])
        (const_int 0 [0])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 100 56 101 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.11814 ])
            (const_int 0 [0]))) tilesInt.C:262 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.11814 ])
        (nil)))
(jump_insn 101 100 102 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 353)
            (pc))) tilesInt.C:262 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 353)
;;  succ:       18 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  kill	 17 [flags]
(note 102 101 103 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 3 (set (reg/f:DI 193 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:270 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 3 (set (reg:DI 5 di)
        (reg/f:DI 193 [ variables_list ])) tilesInt.C:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 193 [ variables_list ])
        (nil)))
(call_insn 105 104 106 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:270 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 106 105 107 3 (set (reg:DI 110 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 107 106 108 3 (parallel [
            (set (reg:DI 194 [ D.11816 ])
                (ashift:DI (reg:DI 110 [ D.11815 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:270 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ D.11815 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 3 (set (reg:DI 5 di)
        (reg:DI 194 [ D.11816 ])) tilesInt.C:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 194 [ D.11816 ])
        (nil)))
(call_insn 109 108 110 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:270 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 110 109 112 3 (set (reg/v/f:DI 113 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 195)
            (nil))))
(debug_insn 112 110 113 3 (var_location:DI variables (reg/v/f:DI 113 [ variables ])) tilesInt.C:270 -1
     (nil))
(insn 113 112 114 3 (set (reg:SI 197 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:271 89 {*movsi_internal}
     (nil))
(insn 114 113 115 3 (set (reg:DI 196 [ D.11816 ])
        (sign_extend:DI (reg:SI 197 [ num_tilings ]))) tilesInt.C:271 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 197 [ num_tilings ])
        (nil)))
(insn 115 114 116 3 (parallel [
            (set (reg:DI 198 [ D.11816 ])
                (ashift:DI (reg:DI 196 [ D.11816 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:271 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 196 [ D.11816 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 3 (set (reg:DI 5 di)
        (reg:DI 198 [ D.11816 ])) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 198 [ D.11816 ])
        (nil)))
(call_insn 117 116 118 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:271 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 118 117 120 3 (set (reg/v/f:DI 117 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 199)
            (nil))))
(debug_insn 120 118 121 3 (var_location:DI the_tiles (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:271 -1
     (nil))
(insn 121 120 122 3 (set (reg/f:DI 200 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:272 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 123 3 (set (reg:DI 5 di)
        (reg/f:DI 200 [ variables_list ])) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 200 [ variables_list ])
        (nil)))
(call_insn 123 122 124 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:272 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 124 123 125 3 (set (reg:DI 119 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 125 124 126 3 (parallel [
            (set (reg:DI 201 [ D.11816 ])
                (ashift:DI (reg:DI 119 [ D.11815 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:272 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.11815 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 3 (set (reg:DI 5 di)
        (reg:DI 201 [ D.11816 ])) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 201 [ D.11816 ])
        (nil)))
(call_insn 127 126 128 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:272 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 128 127 130 3 (set (reg/v/f:DI 122 [ wrapwidths ])
        (reg:DI 0 ax)) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 202)
            (nil))))
(debug_insn 130 128 131 3 (var_location:DI wrapwidths (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:272 -1
     (nil))
(insn 131 130 132 3 (set (reg/f:DI 123 [ ints_list.7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:274 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ ints_list.7 ])
            (const_int 0 [0]))) tilesInt.C:274 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 133 132 134 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 335)
            (pc))) tilesInt.C:274 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 335)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              17 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 124
;; live  kill	
(note 134 133 135 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 4 (set (reg:DI 5 di)
        (reg/f:DI 123 [ ints_list.7 ])) tilesInt.C:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 123 [ ints_list.7 ])
        (nil)))
(call_insn 136 135 137 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:274 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 4 (set (reg:DI 124 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 138 137 139 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 124 [ D.11815 ])
            (const_int 0 [0]))) tilesInt.C:274 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.11815 ])
        (nil)))
(jump_insn 139 138 332 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) tilesInt.C:274 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 311)
;;  succ:       15 [73.0%] 
;;              17 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122

;; basic block 5, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%]  (DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 131 132 137 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 131 132 137 203
;; live  kill	 17 [flags]
(code_label 332 139 144 5 23 "" [1 uses])
(note 144 332 145 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 145 144 146 5 (var_location:SI i (subreg:SI (reg:DI 137 [ ivtmp.79 ]) 0)) -1
     (nil))
(insn 146 145 147 5 (set (reg/f:DI 203 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 5 (set (reg:DI 4 si)
        (reg:DI 137 [ ivtmp.79 ])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 5 (set (reg:DI 5 di)
        (reg/f:DI 203 [ ints_list ])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 203 [ ints_list ])
        (nil)))
(call_insn 149 148 150 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:279 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 150 149 151 5 (set (reg/f:DI 131 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 151 150 152 5 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.11813 ])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.11813 ])
        (nil)))
(call_insn 152 151 153 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:279 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 153 152 154 5 (set (reg:DI 132 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 154 153 155 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 137 [ ivtmp.79 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 105 [ ints ])) [0 MEM[base: ints_53, index: ivtmp.79_132, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 132 [ D.11815 ]) 0)) tilesInt.C:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 132 [ D.11815 ])
        (nil)))
(debug_insn 155 154 157 5 (var_location:SI D#3 (plus:SI (subreg:SI (reg:DI 137 [ ivtmp.79 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 157 155 158 5 (var_location:SI i (debug_expr:SI D#3)) -1
     (nil))
(insn 158 157 160 5 (parallel [
            (set (reg:DI 137 [ ivtmp.79 ])
                (plus:DI (reg:DI 137 [ ivtmp.79 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 160 158 161 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 106 [ num_ints ])
            (subreg:SI (reg:DI 137 [ ivtmp.79 ]) 0))) tilesInt.C:278 7 {*cmpsi_1}
     (nil))
(jump_insn 161 160 328 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 332)
            (pc))) tilesInt.C:278 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 332)
;;  succ:       5 [91.0%]  (DFS_BACK)
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              5 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              15 [9.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u132(6){ }u133(7){ }u134(16){ }u135(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 135 136 159 204
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 135 136 159 204
;; live  kill	
(code_label 328 161 162 6 22 "" [1 uses])
(note 162 328 163 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 163 162 164 6 (var_location:SI num_ints (reg/v:SI 106 [ num_ints ])) -1
     (nil))
(debug_insn 164 163 165 6 (var_location:DI ints (reg/v/f:DI 105 [ ints ])) -1
     (nil))
(insn 165 164 166 6 (set (reg/f:DI 204 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:282 87 {*movdi_internal_rex64}
     (nil))
(insn 166 165 167 6 (set (reg:DI 5 di)
        (reg/f:DI 204 [ variables_list ])) tilesInt.C:282 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 204 [ variables_list ])
        (nil)))
(call_insn 167 166 168 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:282 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 6 (set (reg:DI 135 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:282 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 169 168 170 6 (set (reg/v:SI 136 [ num_variables ])
        (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:282 89 {*movsi_internal}
     (nil))
(debug_insn 170 169 172 6 (var_location:SI num_variables (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:282 -1
     (nil))
(debug_insn 172 170 54 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 54 172 173 6 (set (reg:DI 159 [ ivtmp.73 ])
        (const_int 0 [0])) tilesInt.C:284 87 {*movdi_internal_rex64}
     (nil))
(insn 173 54 174 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 135 [ D.11815 ]) 0)
            (const_int 0 [0]))) tilesInt.C:284 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 174 173 213 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 355)
            (pc))) tilesInt.C:284 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 355)
;;  succ:       8 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;;              8 [9.0%]  (LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 149 205
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 149 205
;; live  kill	
(code_label 213 174 175 7 16 "" [1 uses])
(note 175 213 176 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 7 (set (reg/f:DI 205 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:290 87 {*movdi_internal_rex64}
     (nil))
(insn 177 176 178 7 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:290 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 7 (set (reg:DI 5 di)
        (reg/f:DI 205 [ memorctable ])) tilesInt.C:290 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 205 [ memorctable ])
        (nil)))
(call_insn 179 178 180 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:290 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 180 179 181 7 (set (reg:SI 149 [ D.11814 ])
        (reg:SI 0 ax)) tilesInt.C:290 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 181 180 182 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11814 ])
            (const_int 0 [0]))) tilesInt.C:290 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 149 [ D.11814 ])
        (nil)))
(jump_insn 182 181 355 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) tilesInt.C:290 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 220)
;;  succ:       9 [50.0%] 
;;              10 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;;              8 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u159(6){ }u160(7){ }u161(16){ }u162(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 122 136 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 141 142 145 146 159 206 207
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 141 142 145 146 159 206 207
;; live  kill	 17 [flags]
(code_label 355 182 354 8 28 "" [1 uses])
(note 354 355 189 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 189 354 191 8 (var_location:SI i (subreg:SI (reg:DI 159 [ ivtmp.73 ]) 0)) -1
     (nil))
(insn 191 189 192 8 (set (reg/f:DI 206 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:286 87 {*movdi_internal_rex64}
     (nil))
(insn 192 191 193 8 (set (reg:DI 4 si)
        (reg:DI 159 [ ivtmp.73 ])) tilesInt.C:286 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 8 (set (reg:DI 5 di)
        (reg/f:DI 206 [ variables_list ])) tilesInt.C:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 206 [ variables_list ])
        (nil)))
(call_insn 194 193 195 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:286 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 195 194 196 8 (set (reg/f:DI 141 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 196 195 197 8 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.11813 ])) tilesInt.C:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.11813 ])
        (nil)))
(call_insn 197 196 198 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:286 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 198 197 199 8 (set (reg:DF 142 [ D.11817 ])
        (reg:DF 21 xmm0)) tilesInt.C:286 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 199 198 200 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 159 [ ivtmp.73 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 113 [ variables ])) [0 MEM[base: variables_30, index: ivtmp.73_133, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 142 [ D.11817 ]))) tilesInt.C:286 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 142 [ D.11817 ])
        (nil)))
(insn 200 199 201 8 (set (reg/f:DI 207 [ wrapwidths_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(insn 201 200 202 8 (set (reg:DI 4 si)
        (reg:DI 159 [ ivtmp.73 ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(insn 202 201 203 8 (set (reg:DI 5 di)
        (reg/f:DI 207 [ wrapwidths_list ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 207 [ wrapwidths_list ])
        (nil)))
(call_insn 203 202 204 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 204 203 205 8 (set (reg/f:DI 145 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 205 204 206 8 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.11813 ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.11813 ])
        (nil)))
(call_insn 206 205 207 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 207 206 208 8 (set (reg:DI 146 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 208 207 209 8 (set (mem:SI (plus:DI (mult:DI (reg:DI 159 [ ivtmp.73 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 122 [ wrapwidths ])) [0 MEM[base: wrapwidths_42, index: ivtmp.73_133, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 146 [ D.11815 ]) 0)) tilesInt.C:287 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 146 [ D.11815 ])
        (nil)))
(debug_insn 209 208 211 8 (var_location:SI D#2 (plus:SI (subreg:SI (reg:DI 159 [ ivtmp.73 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 211 209 212 8 (var_location:SI i (debug_expr:SI D#2)) -1
     (nil))
(insn 212 211 214 8 (parallel [
            (set (reg:DI 159 [ ivtmp.73 ])
                (plus:DI (reg:DI 159 [ ivtmp.73 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 214 212 215 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 136 [ num_variables ])
            (subreg:SI (reg:DI 159 [ ivtmp.73 ]) 0))) tilesInt.C:284 7 {*cmpsi_1}
     (nil))
(jump_insn 215 214 220 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) tilesInt.C:284 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 213)
;;  succ:       8 [91.0%]  (FALLTHRU,DFS_BACK)
;;              7 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u197(6){ }u198(7){ }u199(16){ }u200(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 208 209 210
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 208 209 210
;; live  kill	
(code_label 220 215 221 9 14 "" [1 uses])
(note 221 220 222 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 222 221 223 9 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:292 -1
     (nil))
(insn 223 222 224 9 (set (reg/f:DI 208 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:292 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 9 (set (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 208 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 208 [ memorctable ])
        (nil)))
(insn 225 224 226 9 (set (reg:SI 210 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:293 89 {*movsi_internal}
     (nil))
(insn 226 225 227 9 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 106 [ num_ints ])) tilesInt.C:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 106 [ num_ints ])
        (nil)))
(insn 227 226 228 9 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 105 [ ints ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ ints ])
        (nil)))
(insn 228 227 229 9 (set (reg:DI 38 r9)
        (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 122 [ wrapwidths ])
        (nil)))
(insn 229 228 230 9 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ D.11815 ])
        (nil)))
(insn 230 229 231 9 (set (reg:DI 2 cx)
        (reg/v/f:DI 113 [ variables ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 113 [ variables ])
        (nil)))
(insn 231 230 232 9 (set (reg:DI 1 dx)
        (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])
        (nil)))
(insn 232 231 233 9 (set (reg:SI 4 si)
        (reg:SI 210 [ num_tilings ])) tilesInt.C:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 210 [ num_tilings ])
        (nil)))
(insn 233 232 234 9 (set (reg:DI 5 di)
        (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (nil))
(call_insn 234 233 238 9 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a0a6000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:293 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

;; basic block 10, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u224(6){ }u225(7){ }u226(16){ }u227(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 154 211 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 154 211 212
;; live  kill	
(note 238 234 239 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 10 (set (reg/f:DI 211 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:297 87 {*movdi_internal_rex64}
     (nil))
(insn 240 239 241 10 (set (reg:DI 5 di)
        (reg/f:DI 211 [ memorctable ])) tilesInt.C:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 211 [ memorctable ])
        (nil)))
(call_insn 241 240 242 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:297 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 242 241 243 10 (set (reg:DI 154 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 243 242 244 10 (var_location:SI memory_size (subreg:SI (reg:DI 154 [ D.11815 ]) 0)) tilesInt.C:297 -1
     (nil))
(insn 244 243 245 10 (set (reg:SI 212 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:298 89 {*movsi_internal}
     (nil))
(insn 245 244 246 10 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 106 [ num_ints ])) tilesInt.C:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 106 [ num_ints ])
        (nil)))
(insn 246 245 247 10 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 105 [ ints ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ ints ])
        (nil)))
(insn 247 246 248 10 (set (reg:DI 38 r9)
        (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 122 [ wrapwidths ])
        (nil)))
(insn 248 247 249 10 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 135 [ D.11815 ]) 0)) tilesInt.C:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ D.11815 ])
        (nil)))
(insn 249 248 250 10 (set (reg:DI 2 cx)
        (reg/v/f:DI 113 [ variables ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 113 [ variables ])
        (nil)))
(insn 250 249 251 10 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 154 [ D.11815 ]) 0)) tilesInt.C:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 154 [ D.11815 ])
        (nil)))
(insn 251 250 252 10 (set (reg:SI 4 si)
        (reg:SI 212 [ num_tilings ])) tilesInt.C:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 212 [ num_tilings ])
        (nil)))
(insn 252 251 253 10 (set (reg:DI 5 di)
        (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (nil))
(call_insn 253 252 254 10 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a09df00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:298 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u254(6){ }u255(7){ }u256(16){ }u257(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157 158
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  gen 	 17 [flags] 157 158
;; live  kill	 17 [flags]
(code_label 254 253 255 11 18 "" [0 uses])
(note 255 254 256 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 11 (set (reg:SI 157 [ num_tilings.4 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:301 89 {*movsi_internal}
     (nil))
(insn 257 256 259 11 (parallel [
            (set (reg/v:SI 158 [ i ])
                (plus:SI (reg:SI 157 [ num_tilings.4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:301 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 157 [ num_tilings.4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 259 257 260 11 (var_location:SI i (reg/v:SI 158 [ i ])) -1
     (nil))
(insn 260 259 261 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 158 [ i ])
            (const_int 0 [0]))) tilesInt.C:301 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 261 260 299 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) tilesInt.C:301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 269)
;;  succ:       13 [91.0%] 
;;              12 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158

;; basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [9.0%]  (FALLTHRU)
;;              14 [9.0%]  (LOOP_EXIT)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u263(6){ }u264(7){ }u265(16){ }u266(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 107
;; live  kill	
(code_label 299 261 262 12 20 "" [1 uses])
(note 262 299 263 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:303 87 {*movdi_internal_rex64}
     (nil))
(insn 264 263 265 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:303 91 {*movqi_internal}
     (nil))
(call_insn 265 264 266 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:303 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 266 265 269 12 (set (reg/f:DI 107 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u271(6){ }u272(7){ }u273(16){ }u274(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  def 	 17 [flags] 168 174 214 215 217 218 219 220
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  gen 	 168 174 214 215 217 218 219 220
;; live  kill	 17 [flags]
(code_label 269 266 270 13 19 "" [1 uses])
(note 270 269 272 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 272 270 273 13 (set (reg:DI 214 [ D.11819 ])
        (zero_extend:DI (reg/v:SI 158 [ i ]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 273 272 275 13 (parallel [
            (set (reg:DI 215 [ D.11819 ])
                (plus:DI (reg:DI 214 [ D.11819 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 214 [ D.11819 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 275 273 276 13 (parallel [
            (set (reg:DI 217)
                (neg:DI (reg:DI 215 [ D.11819 ])))
            (clobber (reg:CC 17 flags))
        ]) 461 {*negdi2_1}
     (expr_list:REG_DEAD (reg:DI 215 [ D.11819 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 276 275 279 13 (parallel [
            (set (reg:DI 218)
                (ashift:DI (reg:DI 217)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 279 276 280 13 (set (reg:DI 219 [ D.11819 ])
        (sign_extend:DI (reg/v:SI 158 [ i ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 158 [ i ])
        (nil)))
(insn 280 279 281 13 (parallel [
            (set (reg:DI 220 [ D.11819 ])
                (ashift:DI (reg:DI 219 [ D.11819 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 219 [ D.11819 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 281 280 55 13 (parallel [
            (set (reg/f:DI 174 [ D.11821 ])
                (plus:DI (reg/v/f:DI 117 [ the_tiles ])
                    (reg:DI 220 [ D.11819 ])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.11819 ])
        (expr_list:REG_DEAD (reg/v/f:DI 117 [ the_tiles ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 281 303 13 (set (reg:DI 168 [ ivtmp.69 ])
        (const_int 0 [0])) tilesInt.C:301 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

;; basic block 14, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [91.0%]  (FALLTHRU,DFS_BACK)
;;              13 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u283(6){ }u284(7){ }u285(16){ }u286(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 163 168 221 222 223 224 225
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 163 168 221 222 223 224 225
;; live  kill	 17 [flags]
(code_label 303 55 282 14 21 "" [0 uses])
(note 282 303 283 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 283 282 284 14 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 284 283 285 14 (set (reg:SI 222 [ MEM[base: _147, index: ivtmp.69_138, offset: 0B] ])
        (mem:SI (plus:DI (reg/f:DI 174 [ D.11821 ])
                (reg:DI 168 [ ivtmp.69 ])) [0 MEM[base: _147, index: ivtmp.69_138, offset: 0B]+0 S4 A32])) tilesInt.C:302 89 {*movsi_internal}
     (nil))
(insn 285 284 286 14 (set (reg:DI 221 [ D.11815 ])
        (sign_extend:DI (reg:SI 222 [ MEM[base: _147, index: ivtmp.69_138, offset: 0B] ]))) tilesInt.C:302 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 222 [ MEM[base: _147, index: ivtmp.69_138, offset: 0B] ])
        (nil)))
(insn 286 285 287 14 (set (reg:DI 5 di)
        (reg:DI 221 [ D.11815 ])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 221 [ D.11815 ])
        (nil)))
(call_insn 287 286 288 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:302 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 288 287 289 14 (set (reg/f:DI 163 [ D.11813 ])
        (reg:DI 0 ax)) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 289 288 290 14 (set (reg:SI 224 [ start_element ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 start_element+0 S4 A128])) tilesInt.C:302 89 {*movsi_internal}
     (nil))
(insn 290 289 291 14 (set (reg:DI 223 [ D.11815 ])
        (sign_extend:DI (reg:SI 224 [ start_element ]))) tilesInt.C:302 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 224 [ start_element ])
        (nil)))
(insn 291 290 292 14 (set (reg/f:DI 225 [ tiles_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 tiles_list+0 S8 A128])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (nil))
(insn 292 291 293 14 (set (reg:DI 1 dx)
        (reg/f:DI 163 [ D.11813 ])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 163 [ D.11813 ])
        (nil)))
(insn 293 292 294 14 (set (reg:DI 4 si)
        (reg:DI 223 [ D.11815 ])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 223 [ D.11815 ])
        (nil)))
(insn 294 293 295 14 (set (reg:DI 5 di)
        (reg/f:DI 225 [ tiles_list ])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 225 [ tiles_list ])
        (nil)))
(call_insn 295 294 297 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9b89f7bf00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:302 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 297 295 298 14 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(insn 298 297 300 14 (parallel [
            (set (reg:DI 168 [ ivtmp.69 ])
                (plus:DI (reg:DI 168 [ ivtmp.69 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 300 298 301 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 168 [ ivtmp.69 ])
            (reg:DI 218))) tilesInt.C:301 8 {*cmpdi_1}
     (nil))
(jump_insn 301 300 311 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) tilesInt.C:301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 299)
;;  succ:       14 [91.0%]  (FALLTHRU,DFS_BACK)
;;              12 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

;; basic block 15, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u308(6){ }u309(7){ }u310(16){ }u311(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 106 126 227 228 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 106 126 227 228 229
;; live  kill	 17 [flags]
(code_label 311 301 312 15 11 "" [1 uses])
(note 312 311 313 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 15 (set (reg/f:DI 227 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:276 87 {*movdi_internal_rex64}
     (nil))
(insn 314 313 315 15 (set (reg:DI 5 di)
        (reg/f:DI 227 [ ints_list ])) tilesInt.C:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 227 [ ints_list ])
        (nil)))
(call_insn 315 314 316 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:276 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 316 315 317 15 (set (reg:DI 126 [ D.11815 ])
        (reg:DI 0 ax)) tilesInt.C:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 317 316 318 15 (set (reg/v:SI 106 [ num_ints ])
        (subreg:SI (reg:DI 126 [ D.11815 ]) 0)) tilesInt.C:276 89 {*movsi_internal}
     (nil))
(debug_insn 318 317 319 15 (var_location:SI num_ints (subreg:SI (reg:DI 126 [ D.11815 ]) 0)) tilesInt.C:276 -1
     (nil))
(insn 319 318 320 15 (set (reg:DI 228 [ D.11816 ])
        (sign_extend:DI (subreg:SI (reg:DI 126 [ D.11815 ]) 0))) tilesInt.C:277 149 {*extendsidi2_rex64}
     (nil))
(insn 320 319 321 15 (parallel [
            (set (reg:DI 229 [ D.11816 ])
                (ashift:DI (reg:DI 228 [ D.11816 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:277 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.11816 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 321 320 322 15 (set (reg:DI 5 di)
        (reg:DI 229 [ D.11816 ])) tilesInt.C:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 229 [ D.11816 ])
        (nil)))
(call_insn 322 321 323 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:277 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 323 322 325 15 (set (reg/v/f:DI 105 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 230)
            (nil))))
(debug_insn 325 323 327 15 (var_location:DI ints (reg/v/f:DI 105 [ ints ])) tilesInt.C:277 -1
     (nil))
(debug_insn 327 325 329 15 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 329 327 330 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 126 [ D.11815 ]) 0)
            (const_int 0 [0]))) tilesInt.C:278 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.11815 ])
        (nil)))
(jump_insn 330 329 331 15 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) tilesInt.C:278 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 328)
;;  succ:       16 [91.0%]  (FALLTHRU)
;;              6 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

;; basic block 16, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [91.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u328(6){ }u329(7){ }u330(16){ }u331(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 137
;; live  kill	
(note 331 330 51 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 51 331 335 16 (set (reg:DI 137 [ ivtmp.79 ])
        (const_int 0 [0])) tilesInt.C:278 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

;; basic block 17, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              4 [27.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 105 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 105 106
;; live  kill	
(code_label 335 51 336 17 10 "" [1 uses])
(note 336 335 52 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 52 336 53 17 (set (reg/v:SI 106 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:259 89 {*movsi_internal}
     (nil))
(insn 53 52 353 17 (set (reg/v/f:DI 105 [ ints ])
        (const_int 0 [0])) tilesInt.C:258 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

;; basic block 18, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 17, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              12 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u336(6){ }u337(7){ }u338(16){ }u339(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 353 53 347 18 27 "" [1 uses])
(note 347 353 340 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 340 347 343 18 (set (reg/i:DI 0 ax)
        (reg/f:DI 107 [ D.11813 ])) tilesInt.C:304 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.11813 ])
        (nil)))
(insn 343 340 0 18 (use (reg/i:DI 0 ax)) tilesInt.C:304 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_GetTilesWrap(PyObject*, PyObject*) (_ZL18tiles_GetTilesWrapP7_objectS0_, funcdef_no=155, decl_uid=11346, cgraph_uid=155)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 23 (  1.1)


PyObject* tiles_GetTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={26d,22u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,19u} r7={1d,58u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,18u} r17={46d,10u} r18={23d} r19={23d} r20={1d,46u,5e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r74={1d,1u} r77={1d,4u} r78={1d,2u} r79={1d,1u} r81={1d,4u} r86={1d,1u} r87={1d,1u} r90={1d,5u} r91={1d,1u} r92={2d,6u} r96={1d,1u} r97={1d,1u} r100={1d,1u} r101={1d,1u} r104={1d,1u} r109={1d,2u} r114={1d,3u} r116={2d,8u} r120={1d,1u} r124={2d,5u} r126={1d,2u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,3u} r136={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1495{1166d,324u,5e} in 199{176 regular + 23 call} insns.
;; Reaching defs:
;;  sparse invalidated 	5, 17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099
;;  reg->defs[] map:	0[0,25] 1[26,53] 2[54,80] 4[81,112] 5[113,159] 6[160,160] 7[161,161] 8[162,184] 9[185,207] 10[208,230] 11[231,253] 12[254,276] 13[277,299] 14[300,322] 15[323,345] 16[346,346] 17[347,392] 18[393,415] 19[416,438] 20[439,439] 21[440,463] 22[464,487] 23[488,511] 24[512,535] 25[536,559] 26[560,583] 27[584,607] 28[608,631] 29[632,654] 30[655,677] 31[678,700] 32[701,723] 33[724,746] 34[747,769] 35[770,792] 36[793,815] 37[816,842] 38[843,869] 39[870,892] 40[893,915] 45[916,938] 46[939,961] 47[962,984] 48[985,1007] 49[1008,1030] 50[1031,1053] 51[1054,1076] 52[1077,1099] 60[1100,1101] 61[1102,1103] 62[1104,1106] 63[1107,1107] 65[1108,1108] 68[1109,1109] 72[1110,1110] 74[1111,1111] 77[1112,1112] 78[1113,1113] 79[1114,1114] 81[1115,1115] 86[1116,1116] 87[1117,1117] 90[1118,1118] 91[1119,1119] 92[1120,1121] 96[1122,1122] 97[1123,1123] 100[1124,1124] 101[1125,1125] 104[1126,1126] 109[1127,1127] 114[1128,1128] 116[1129,1130] 120[1131,1131] 124[1132,1133] 126[1134,1134] 129[1135,1135] 130[1136,1136] 131[1137,1137] 132[1138,1138] 133[1139,1139] 135[1140,1140] 136[1141,1141] 140[1142,1142] 141[1143,1143] 143[1144,1144] 144[1145,1145] 145[1146,1146] 147[1147,1147] 148[1148,1148] 150[1149,1149] 151[1150,1150] 152[1151,1151] 153[1152,1152] 154[1153,1153] 155[1154,1154] 156[1155,1155] 157[1156,1156] 158[1157,1157] 159[1158,1158] 160[1159,1159] 161[1160,1160] 162[1161,1161] 163[1162,1162] 165[1163,1163] 166[1164,1164] 167[1165,1165] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d25(0){ }d53(1){ }d80(2){ }d112(4){ }d159(5){ }d160(6){ }d161(7){ }d346(16){ }d439(20){ }d463(21){ }d487(22){ }d511(23){ }d535(24){ }d559(25){ }d583(26){ }d607(27){ }d631(28){ }d842(37){ }d869(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[25],1[53],2[80],4[112],5[159],6[160],7[161],16[346],20[439],21[463],22[487],23[511],24[535],25[559],26[583],27[607],28[631],37[842],38[869]
;; rd  kill	(363) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],1[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],2[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],4[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],6[160],7[161],16[346],20[439],21[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],22[464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],23[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],24[512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535],25[536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559],26[560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583],27[584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607],28[608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631],37[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842],38[843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 4[112],6[160],7[161],16[346],20[439]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 19 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d160(bb 0 insn -1) }u1(7){ d161(bb 0 insn -1) }u2(16){ d346(bb 0 insn -1) }u3(20){ d439(bb 0 insn -1) }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 129 130 131 132 133 135 136
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 62 63 129 130 131 132 133 135 136
;; live  kill	 17 [flags]
;; rd  in  	(5) 4[112],6[160],7[161],16[346],20[439]
;; rd  gen 	(11) 0[23],17[386],62[1106],63[1107],129[1135],130[1136],131[1137],132[1138],133[1139],135[1140],136[1141]
;; rd  kill	(37) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],62[1104,1105,1106],63[1107],129[1135],130[1136],131[1137],132[1138],133[1139],135[1140],136[1141]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; rd  out 	(5) 6[160],7[161],16[346],20[439],62[1106]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 2 )->[3]->( 4 18 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(6){ d160(bb 0 insn -1) }u48(7){ d161(bb 0 insn -1) }u49(16){ d346(bb 0 insn -1) }u50(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[160],7[161],16[346],20[439],62[1106]
;; rd  gen 	(15) 0[18],17[377],65[1108],68[1109],72[1110],74[1111],77[1112],78[1113],140[1142],141[1143],143[1144],144[1145],145[1146],147[1147],148[1148]
;; rd  kill	(39) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],65[1108],68[1109],72[1110],74[1111],77[1112],78[1113],140[1142],141[1143],143[1144],144[1145],145[1146],147[1147],148[1148]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; rd  out 	(8) 6[160],7[161],16[346],20[439],68[1109],72[1110],77[1112],78[1113]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 3 )->[4]->( 16 18 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u84(6){ d160(bb 0 insn -1) }u85(7){ d161(bb 0 insn -1) }u86(16){ d346(bb 0 insn -1) }u87(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 79
;; live  kill	
;; rd  in  	(8) 6[160],7[161],16[346],20[439],68[1109],72[1110],77[1112],78[1113]
;; rd  gen 	(3) 0[17],17[375],79[1114]
;; rd  kill	(27) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],79[1114]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; rd  out 	(7) 6[160],7[161],16[346],20[439],68[1109],72[1110],77[1112]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 5 17 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u94(6){ d160(bb 0 insn -1) }u95(7){ d161(bb 0 insn -1) }u96(16){ d346(bb 0 insn -1) }u97(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 92 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 86 87 92 150
;; live  kill	 17 [flags]
;; rd  in  	(16) 0[15],6[160],7[161],16[346],17[371],20[439],60[1100],61[1103],68[1109],72[1110],77[1112],86[1116],87[1117],92[1120,1121],150[1149]
;; rd  gen 	(6) 0[15],17[371],86[1116],87[1117],92[1121],150[1149]
;; rd  kill	(31) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],86[1116],87[1117],92[1120,1121],150[1149]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; rd  out 	(10) 6[160],7[161],16[346],20[439],60[1100],61[1103],68[1109],72[1110],77[1112],92[1121]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 18 5 16 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u118(6){ d160(bb 0 insn -1) }u119(7){ d161(bb 0 insn -1) }u120(16){ d346(bb 0 insn -1) }u121(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 90 91 116 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 90 91 116 151
;; live  kill	
;; rd  in  	(12) 6[160],7[161],16[346],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],92[1121]
;; rd  gen 	(6) 0[14],17[348],90[1118],91[1119],116[1130],151[1150]
;; rd  kill	(31) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],90[1118],91[1119],116[1129,1130],151[1150]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; rd  out 	(14) 6[160],7[161],16[346],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],90[1118],91[1119],116[1130]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 6 8 )->[7]->( 9 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u133(6){ d160(bb 0 insn -1) }u134(7){ d161(bb 0 insn -1) }u135(16){ d346(bb 0 insn -1) }u136(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 104 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 104 152
;; live  kill	
;; rd  in  	(15) 6[160],7[161],16[346],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],90[1118],91[1119],116[1129,1130]
;; rd  gen 	(4) 0[13],17[368],104[1126],152[1151]
;; rd  kill	(28) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],104[1126],152[1151]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; rd  out 	(12) 6[160],7[161],16[346],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],90[1118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 6 8 )->[8]->( 8 7 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u145(6){ d160(bb 0 insn -1) }u146(7){ d161(bb 0 insn -1) }u147(16){ d346(bb 0 insn -1) }u148(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 77 91 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 97 100 101 116 153 154
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 96 97 100 101 116 153 154
;; live  kill	 17 [flags]
;; rd  in  	(23) 0[9],6[160],7[161],16[346],17[362],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],90[1118],91[1119],96[1122],97[1123],100[1124],101[1125],116[1129,1130],153[1152],154[1153]
;; rd  gen 	(9) 0[9],17[362],96[1122],97[1123],100[1124],101[1125],116[1129],153[1152],154[1153]
;; rd  kill	(34) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],96[1122],97[1123],100[1124],101[1125],116[1129,1130],153[1152],154[1153]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; rd  out 	(14) 6[160],7[161],16[346],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],90[1118],91[1119],116[1129]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u183(6){ d160(bb 0 insn -1) }u184(7){ d161(bb 0 insn -1) }u185(16){ d346(bb 0 insn -1) }u186(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 155 156 157
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 155 156 157
;; live  kill	
;; rd  in  	(12) 6[160],7[161],16[346],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],90[1118]
;; rd  gen 	(3) 155[1154],156[1155],157[1156]
;; rd  kill	(3) 155[1154],156[1155],157[1156]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; rd  out 	(5) 6[160],7[161],16[346],20[439],72[1110]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 7 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u210(6){ d160(bb 0 insn -1) }u211(7){ d161(bb 0 insn -1) }u212(16){ d346(bb 0 insn -1) }u213(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 109 158 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 109 158 159
;; live  kill	
;; rd  in  	(12) 6[160],7[161],16[346],20[439],60[1100,1101],61[1102,1103],68[1109],72[1110],77[1112],90[1118]
;; rd  gen 	(3) 109[1127],158[1157],159[1158]
;; rd  kill	(3) 109[1127],158[1157],159[1158]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; rd  out 	(5) 6[160],7[161],16[346],20[439],72[1110]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 9 10 )->[11]->( 12 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u240(6){ d160(bb 0 insn -1) }u241(7){ d161(bb 0 insn -1) }u242(16){ d346(bb 0 insn -1) }u243(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 160 161
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 114 160 161
;; live  kill	
;; rd  in  	(5) 6[160],7[161],16[346],20[439],72[1110]
;; rd  gen 	(5) 0[5],17[357],114[1128],160[1159],161[1160]
;; rd  kill	(29) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],114[1128],160[1159],161[1160]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; rd  out 	(6) 6[160],7[161],16[346],20[439],72[1110],114[1128]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u252(6){ d160(bb 0 insn -1) }u253(7){ d161(bb 0 insn -1) }u254(16){ d346(bb 0 insn -1) }u255(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  gen 	 124
;; live  kill	
;; rd  in  	(6) 6[160],7[161],16[346],20[439],72[1110],114[1128]
;; rd  gen 	(1) 124[1133]
;; rd  kill	(2) 124[1132,1133]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; rd  out 	(7) 6[160],7[161],16[346],20[439],72[1110],114[1128],124[1133]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 13 12 )->[13]->( 13 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u256(6){ d160(bb 0 insn -1) }u257(7){ d161(bb 0 insn -1) }u258(16){ d346(bb 0 insn -1) }u259(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 120 124 126 162 163
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 120 124 126 162 163
;; live  kill	 17 [flags]
;; rd  in  	(14) 0[3],6[160],7[161],16[346],17[352],20[439],72[1110],114[1128],120[1131],124[1132,1133],126[1134],162[1161],163[1162]
;; rd  gen 	(7) 0[3],17[352],120[1131],124[1132],126[1134],162[1161],163[1162]
;; rd  kill	(32) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],120[1131],124[1132,1133],126[1134],162[1161],163[1162]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; rd  out 	(7) 6[160],7[161],16[346],20[439],72[1110],114[1128],124[1132]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 11 )->[14]->( 19 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u281(6){ d160(bb 0 insn -1) }u282(7){ d161(bb 0 insn -1) }u283(16){ d346(bb 0 insn -1) }u284(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
;; rd  in  	(6) 6[160],7[161],16[346],20[439],72[1110],114[1128]
;; rd  gen 	(1) 62[1105]
;; rd  kill	(3) 62[1104,1105,1106]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; rd  out 	(5) 6[160],7[161],16[346],20[439],62[1105]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 13 )->[15]->( 19 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u286(6){ d160(bb 0 insn -1) }u287(7){ d161(bb 0 insn -1) }u288(16){ d346(bb 0 insn -1) }u289(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
;; rd  in  	(7) 6[160],7[161],16[346],20[439],72[1110],114[1128],124[1132]
;; rd  gen 	(1) 62[1104]
;; rd  kill	(3) 62[1104,1105,1106]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; rd  out 	(5) 6[160],7[161],16[346],20[439],62[1104]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 4 )->[16]->( 17 6 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u291(6){ d160(bb 0 insn -1) }u292(7){ d161(bb 0 insn -1) }u293(16){ d346(bb 0 insn -1) }u294(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 81 165 166 167
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 81 165 166 167
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[160],7[161],16[346],20[439],68[1109],72[1110],77[1112]
;; rd  gen 	(8) 0[1],17[347],60[1100],61[1103],81[1115],165[1163],166[1164],167[1165]
;; rd  kill	(34) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],60[1100,1101],61[1102,1103],81[1115],165[1163],166[1164],167[1165]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; rd  out 	(9) 6[160],7[161],16[346],20[439],60[1100],61[1103],68[1109],72[1110],77[1112]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 16 )->[17]->( 5 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u311(6){ d160(bb 0 insn -1) }u312(7){ d161(bb 0 insn -1) }u313(16){ d346(bb 0 insn -1) }u314(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 92
;; live  kill	
;; rd  in  	(9) 6[160],7[161],16[346],20[439],60[1100],61[1103],68[1109],72[1110],77[1112]
;; rd  gen 	(1) 92[1120]
;; rd  kill	(2) 92[1120,1121]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; rd  out 	(10) 6[160],7[161],16[346],20[439],60[1100],61[1103],68[1109],72[1110],77[1112],92[1120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 3 4 )->[18]->( 6 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u315(6){ d160(bb 0 insn -1) }u316(7){ d161(bb 0 insn -1) }u317(16){ d346(bb 0 insn -1) }u318(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 60 61
;; live  kill	
;; rd  in  	(8) 6[160],7[161],16[346],20[439],68[1109],72[1110],77[1112],78[1113]
;; rd  gen 	(2) 60[1101],61[1102]
;; rd  kill	(4) 60[1100,1101],61[1102,1103]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; rd  out 	(9) 6[160],7[161],16[346],20[439],60[1101],61[1102],68[1109],72[1110],77[1112]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 15 2 14 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u319(6){ d160(bb 0 insn -1) }u320(7){ d161(bb 0 insn -1) }u321(16){ d346(bb 0 insn -1) }u322(20){ d439(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(7) 6[160],7[161],16[346],20[439],62[1104,1105,1106]
;; rd  gen 	(1) 0[0]
;; rd  kill	(26) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[160],7[161],16[346],20[439]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 16 { d346(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

( 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u325(0){ d0(bb 19 insn 270) }u326(6){ d160(bb 0 insn -1) }u327(7){ d161(bb 0 insn -1) }u328(20){ d439(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[160],7[161],16[346],20[439]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 19 insn 270) }
;;   reg 6 { d160(bb 0 insn -1) }
;;   reg 7 { d161(bb 0 insn -1) }
;;   reg 20 { d439(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 51 to worklist
  Adding insn 48 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 83 to worklist
  Adding insn 77 to worklist
  Adding insn 73 to worklist
  Adding insn 67 to worklist
  Adding insn 59 to worklist
  Adding insn 55 to worklist
  Adding insn 89 to worklist
  Adding insn 86 to worklist
  Adding insn 111 to worklist
  Adding insn 104 to worklist
  Adding insn 102 to worklist
  Adding insn 99 to worklist
  Adding insn 124 to worklist
  Adding insn 117 to worklist
  Adding insn 132 to worklist
  Adding insn 129 to worklist
  Adding insn 165 to worklist
  Adding insn 158 to worklist
  Adding insn 156 to worklist
  Adding insn 153 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 144 to worklist
  Adding insn 184 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 203 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 191 to worklist
  Adding insn 213 to worklist
  Adding insn 209 to worklist
  Adding insn 231 to worklist
  Adding insn 225 to worklist
  Adding insn 220 to worklist
  Adding insn 260 to worklist
  Adding insn 252 to worklist
  Adding insn 245 to worklist
  Adding insn 273 to worklist
Finished finding needed instructions:
  Adding insn 270 to worklist
Processing use of (reg 62 [ D.11851 ]) in insn 270:
  Adding insn 11 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
Processing use of (reg 114 [ tiles_list ]) in insn 12:
  Adding insn 210 to worklist
Processing use of (reg 0 ax) in insn 210:
Processing use of (reg 114 [ tiles_list ]) in insn 13:
Processing use of (reg 0 ax) in insn 273:
Processing use of (reg 7 sp) in insn 245:
Processing use of (reg 5 di) in insn 245:
  Adding insn 244 to worklist
Processing use of (reg 165 [ ints_list ]) in insn 244:
  Adding insn 243 to worklist
Processing use of (reg 20 frame) in insn 243:
Processing use of (reg 7 sp) in insn 252:
Processing use of (reg 5 di) in insn 252:
  Adding insn 251 to worklist
Processing use of (reg 167 [ D.11854 ]) in insn 251:
  Adding insn 250 to worklist
Processing use of (reg 166 [ D.11854 ]) in insn 250:
  Adding insn 249 to worklist
Processing use of (subreg (reg 81 [ D.11853 ]) 0) in insn 249:
  Adding insn 246 to worklist
Processing use of (reg 0 ax) in insn 246:
Processing use of (reg 17 flags) in insn 260:
  Adding insn 259 to worklist
Processing use of (subreg (reg 81 [ D.11853 ]) 0) in insn 259:
Processing use of (reg 7 sp) in insn 220:
Processing use of (reg 5 di) in insn 220:
  Adding insn 219 to worklist
Processing use of (reg 162 [ D.11853 ]) in insn 219:
  Adding insn 218 to worklist
Processing use of (reg 163 [ MEM[base: the_tiles_34, index: ivtmp.86_139, step: 4, offset: 0B] ]) in insn 218:
  Adding insn 217 to worklist
Processing use of (reg 72 [ the_tiles ]) in insn 217:
  Adding insn 68 to worklist
Processing use of (reg 124 [ ivtmp.86 ]) in insn 217:
  Adding insn 10 to worklist
  Adding insn 229 to worklist
Processing use of (reg 124 [ ivtmp.86 ]) in insn 229:
Processing use of (reg 0 ax) in insn 68:
Processing use of (reg 7 sp) in insn 225:
Processing use of (reg 1 dx) in insn 225:
  Adding insn 222 to worklist
Processing use of (reg 4 si) in insn 225:
  Adding insn 223 to worklist
Processing use of (reg 5 di) in insn 225:
  Adding insn 224 to worklist
Processing use of (reg 114 [ tiles_list ]) in insn 224:
Processing use of (reg 124 [ ivtmp.86 ]) in insn 223:
Processing use of (reg 120 [ D.11851 ]) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 0 ax) in insn 221:
Processing use of (reg 17 flags) in insn 231:
  Adding insn 230 to worklist
Processing use of (reg 20 frame) in insn 230:
Processing use of (reg 126 [ D.11852 ]) in insn 230:
  Adding insn 226 to worklist
Processing use of (subreg (reg 124 [ ivtmp.86 ]) 0) in insn 226:
Processing use of (reg 7 sp) in insn 209:
Processing use of (reg 5 di) in insn 209:
  Adding insn 208 to worklist
Processing use of (reg 160 [ D.11853 ]) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 161 [ num_tilings ]) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 20 frame) in insn 206:
Processing use of (reg 17 flags) in insn 213:
  Adding insn 212 to worklist
Processing use of (reg 20 frame) in insn 212:
Processing use of (reg 7 sp) in insn 191:
Processing use of (reg 5 di) in insn 191:
  Adding insn 190 to worklist
Processing use of (reg 158 [ memorctable ]) in insn 190:
  Adding insn 189 to worklist
Processing use of (reg 20 frame) in insn 189:
Processing use of (reg 7 sp) in insn 195:
Processing use of (reg 61 [ num_ints ]) in insn 195:
  Adding insn 247 to worklist
  Adding insn 7 to worklist
Processing use of (subreg (reg 81 [ D.11853 ]) 0) in insn 247:
Processing use of (reg 7 sp) in insn 196:
Processing use of (reg 60 [ ints ]) in insn 196:
  Adding insn 8 to worklist
  Adding insn 253 to worklist
Processing use of (reg 0 ax) in insn 253:
Processing use of (reg 7 sp) in insn 203:
Processing use of (reg 1 dx) in insn 203:
  Adding insn 200 to worklist
Processing use of (reg 2 cx) in insn 203:
  Adding insn 199 to worklist
Processing use of (reg 4 si) in insn 203:
  Adding insn 201 to worklist
Processing use of (reg 5 di) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 7 sp) in insn 203:
Processing use of (reg 7 sp) in insn 203:
Processing use of (reg 37 r8) in insn 203:
  Adding insn 198 to worklist
Processing use of (reg 38 r9) in insn 203:
  Adding insn 197 to worklist
Processing use of (reg 77 [ wrapwidths ]) in insn 197:
  Adding insn 78 to worklist
Processing use of (reg 0 ax) in insn 78:
Processing use of (subreg (reg 90 [ D.11853 ]) 0) in insn 198:
  Adding insn 118 to worklist
Processing use of (reg 0 ax) in insn 118:
Processing use of (reg 72 [ the_tiles ]) in insn 202:
Processing use of (reg 159 [ num_tilings ]) in insn 201:
  Adding insn 194 to worklist
Processing use of (reg 20 frame) in insn 194:
Processing use of (reg 68 [ variables ]) in insn 199:
  Adding insn 60 to worklist
Processing use of (reg 0 ax) in insn 60:
Processing use of (subreg (reg 109 [ D.11853 ]) 0) in insn 200:
  Adding insn 192 to worklist
Processing use of (reg 0 ax) in insn 192:
Processing use of (reg 7 sp) in insn 176:
Processing use of (reg 61 [ num_ints ]) in insn 176:
Processing use of (reg 7 sp) in insn 177:
Processing use of (reg 60 [ ints ]) in insn 177:
Processing use of (reg 7 sp) in insn 184:
Processing use of (reg 1 dx) in insn 184:
  Adding insn 181 to worklist
Processing use of (reg 2 cx) in insn 184:
  Adding insn 180 to worklist
Processing use of (reg 4 si) in insn 184:
  Adding insn 182 to worklist
Processing use of (reg 5 di) in insn 184:
  Adding insn 183 to worklist
Processing use of (reg 7 sp) in insn 184:
Processing use of (reg 7 sp) in insn 184:
Processing use of (reg 37 r8) in insn 184:
  Adding insn 179 to worklist
Processing use of (reg 38 r9) in insn 184:
  Adding insn 178 to worklist
Processing use of (reg 77 [ wrapwidths ]) in insn 178:
Processing use of (subreg (reg 90 [ D.11853 ]) 0) in insn 179:
Processing use of (reg 72 [ the_tiles ]) in insn 183:
Processing use of (reg 157 [ num_tilings ]) in insn 182:
  Adding insn 175 to worklist
Processing use of (reg 20 frame) in insn 175:
Processing use of (reg 68 [ variables ]) in insn 180:
Processing use of (reg 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ]) in insn 181:
  Adding insn 174 to worklist
Processing use of (reg 155 [ memorctable ]) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 20 frame) in insn 173:
Processing use of (reg 7 sp) in insn 144:
Processing use of (reg 4 si) in insn 144:
  Adding insn 142 to worklist
Processing use of (reg 5 di) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 153 [ variables_list ]) in insn 143:
  Adding insn 141 to worklist
Processing use of (reg 20 frame) in insn 141:
Processing use of (reg 116 [ ivtmp.91 ]) in insn 142:
  Adding insn 9 to worklist
  Adding insn 162 to worklist
Processing use of (reg 116 [ ivtmp.91 ]) in insn 162:
Processing use of (reg 7 sp) in insn 147:
Processing use of (reg 5 di) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 96 [ D.11851 ]) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 0 ax) in insn 145:
Processing use of (reg 68 [ variables ]) in insn 149:
Processing use of (reg 97 [ D.11855 ]) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 116 [ ivtmp.91 ]) in insn 149:
Processing use of (reg 21 xmm0) in insn 148:
Processing use of (reg 7 sp) in insn 153:
Processing use of (reg 4 si) in insn 153:
  Adding insn 151 to worklist
Processing use of (reg 5 di) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 154 [ wrapwidths_list ]) in insn 152:
  Adding insn 150 to worklist
Processing use of (reg 20 frame) in insn 150:
Processing use of (reg 116 [ ivtmp.91 ]) in insn 151:
Processing use of (reg 7 sp) in insn 156:
Processing use of (reg 5 di) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 100 [ D.11851 ]) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 0 ax) in insn 154:
Processing use of (reg 77 [ wrapwidths ]) in insn 158:
Processing use of (subreg (reg 101 [ D.11853 ]) 0) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 116 [ ivtmp.91 ]) in insn 158:
Processing use of (reg 0 ax) in insn 157:
Processing use of (reg 17 flags) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 91 [ num_variables ]) in insn 164:
  Adding insn 119 to worklist
Processing use of (subreg (reg 116 [ ivtmp.91 ]) 0) in insn 164:
Processing use of (subreg (reg 90 [ D.11853 ]) 0) in insn 119:
Processing use of (reg 7 sp) in insn 129:
Processing use of (reg 4 si) in insn 129:
  Adding insn 127 to worklist
Processing use of (reg 5 di) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 152 [ memorctable ]) in insn 128:
  Adding insn 126 to worklist
Processing use of (reg 20 frame) in insn 126:
Processing use of (reg 17 flags) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 104 [ D.11852 ]) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 0 ax) in insn 130:
Processing use of (reg 7 sp) in insn 117:
Processing use of (reg 5 di) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 151 [ variables_list ]) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 20 frame) in insn 115:
Processing use of (reg 17 flags) in insn 124:
  Adding insn 123 to worklist
Processing use of (subreg (reg 90 [ D.11853 ]) 0) in insn 123:
Processing use of (reg 7 sp) in insn 99:
Processing use of (reg 4 si) in insn 99:
  Adding insn 97 to worklist
Processing use of (reg 5 di) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 150 [ ints_list ]) in insn 98:
  Adding insn 96 to worklist
Processing use of (reg 20 frame) in insn 96:
Processing use of (reg 92 [ ivtmp.97 ]) in insn 97:
  Adding insn 108 to worklist
  Adding insn 6 to worklist
Processing use of (reg 92 [ ivtmp.97 ]) in insn 108:
Processing use of (reg 7 sp) in insn 102:
Processing use of (reg 5 di) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 86 [ D.11851 ]) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 0 ax) in insn 100:
Processing use of (reg 60 [ ints ]) in insn 104:
Processing use of (subreg (reg 87 [ D.11853 ]) 0) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 92 [ ivtmp.97 ]) in insn 104:
Processing use of (reg 0 ax) in insn 103:
Processing use of (reg 17 flags) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 61 [ num_ints ]) in insn 110:
Processing use of (subreg (reg 92 [ ivtmp.97 ]) 0) in insn 110:
Processing use of (reg 7 sp) in insn 86:
Processing use of (reg 5 di) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 78 [ ints_list.18 ]) in insn 85:
  Adding insn 81 to worklist
Processing use of (reg 20 frame) in insn 81:
Processing use of (reg 17 flags) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 79 [ D.11853 ]) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 0 ax) in insn 87:
Processing use of (reg 7 sp) in insn 55:
Processing use of (reg 5 di) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 140 [ variables_list ]) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 20 frame) in insn 53:
Processing use of (reg 7 sp) in insn 59:
Processing use of (reg 5 di) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 141 [ D.11854 ]) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 65 [ D.11853 ]) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 0 ax) in insn 56:
Processing use of (reg 7 sp) in insn 67:
Processing use of (reg 5 di) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 145 [ D.11854 ]) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 143 [ D.11854 ]) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 144 [ num_tilings ]) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 20 frame) in insn 63:
Processing use of (reg 7 sp) in insn 73:
Processing use of (reg 5 di) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 147 [ variables_list ]) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 20 frame) in insn 71:
Processing use of (reg 7 sp) in insn 77:
Processing use of (reg 5 di) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 148 [ D.11854 ]) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 74 [ D.11853 ]) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 0 ax) in insn 74:
Processing use of (reg 17 flags) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 78 [ ints_list.18 ]) in insn 82:
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 20 frame) in insn 20:
Processing use of (reg 20 frame) in insn 22:
Processing use of (reg 20 frame) in insn 24:
Processing use of (reg 7 sp) in insn 31:
Processing use of (reg 133) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 20 frame) in insn 30:
Processing use of (reg 7 sp) in insn 34:
Processing use of (reg 135) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 7 sp) in insn 36:
Processing use of (reg 136) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 20 frame) in insn 35:
Processing use of (reg 7 sp) in insn 39:
Processing use of (reg 135) in insn 39:
Processing use of (reg 7 sp) in insn 48:
Processing use of (reg 0 ax) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 1 dx) in insn 48:
  Adding insn 44 to worklist
Processing use of (reg 2 cx) in insn 48:
  Adding insn 43 to worklist
Processing use of (reg 4 si) in insn 48:
  Adding insn 45 to worklist
Processing use of (reg 5 di) in insn 48:
  Adding insn 46 to worklist
Processing use of (reg 7 sp) in insn 48:
Processing use of (reg 7 sp) in insn 48:
Processing use of (reg 7 sp) in insn 48:
Processing use of (reg 7 sp) in insn 48:
Processing use of (reg 37 r8) in insn 48:
  Adding insn 42 to worklist
Processing use of (reg 38 r9) in insn 48:
  Adding insn 40 to worklist
Processing use of (reg 130) in insn 40:
  Adding insn 27 to worklist
Processing use of (reg 20 frame) in insn 27:
Processing use of (reg 135) in insn 42:
Processing use of (reg 129 [ args ]) in insn 46:
  Adding insn 4 to worklist
Processing use of (reg 4 si) in insn 4:
Processing use of (reg 131) in insn 43:
  Adding insn 28 to worklist
Processing use of (reg 20 frame) in insn 28:
Processing use of (reg 132) in insn 44:
  Adding insn 29 to worklist
Processing use of (reg 20 frame) in insn 29:
Processing use of (reg 17 flags) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 63 [ D.11852 ]) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 0 ax) in insn 49:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_GetTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={26d,22u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,19u} r7={1d,58u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,18u} r17={46d,10u} r18={23d} r19={23d} r20={1d,46u,5e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r74={1d,1u} r77={1d,4u} r78={1d,2u} r79={1d,1u} r81={1d,4u} r86={1d,1u} r87={1d,1u} r90={1d,5u} r91={1d,1u} r92={2d,6u} r96={1d,1u} r97={1d,1u} r100={1d,1u} r101={1d,1u} r104={1d,1u} r109={1d,2u} r114={1d,3u} r116={2d,8u} r120={1d,1u} r124={2d,5u} r126={1d,2u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,3u} r136={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1495{1166d,324u,5e} in 199{176 regular + 23 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 129 130 131 132 133 135 136
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 62 63 129 130 131 132 133 135 136
;; live  kill	 17 [flags]
(note 14 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 14 5 2 (set (reg/v/f:DI 129 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:308 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:309 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:310 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:312 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 19 18 20 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:313 -1
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:315 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:316 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:318 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 23 22 24 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:319 -1
     (nil))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:320 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 25 24 26 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:321 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:322 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 130)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 2 (parallel [
            (set (reg/f:DI 133)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg/f:DI 133)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 32 31 34 2 (set (reg:DI 135)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:328 87 {*movdi_internal_rex64}
     (nil))
(insn 34 32 35 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg:DI 135)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:DI 136)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:328 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 39 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 136)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 39 36 40 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 135)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 42 2 (set (reg:DI 38 r9)
        (reg/f:DI 130)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 42 40 43 2 (set (reg:DI 37 r8)
        (reg:DI 135)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 135)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 43 42 44 2 (set (reg:DI 2 cx)
        (reg/f:DI 131)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 44 43 45 2 (set (reg:DI 1 dx)
        (reg/f:DI 132)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 45 44 46 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b9b8a1b77b8 *.LC2>)) tilesInt.C:328 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg/v/f:DI 129 [ args ])) tilesInt.C:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 129 [ args ])
        (nil)))
(insn 47 46 48 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:328 91 {*movqi_internal}
     (nil))
(call_insn 48 47 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 32 [0x20]))) tilesInt.C:328 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (nil)))))))))))))
(insn 49 48 11 2 (set (reg:SI 63 [ D.11852 ])
        (reg:SI 0 ax)) tilesInt.C:328 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 49 50 2 (set (reg/f:DI 62 [ D.11851 ])
        (const_int 0 [0])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 50 11 51 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.11852 ])
            (const_int 0 [0]))) tilesInt.C:325 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 63 [ D.11852 ])
        (nil)))
(jump_insn 51 50 52 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 290)
            (pc))) tilesInt.C:325 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 290)
;;  succ:       19 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  kill	 17 [flags]
(note 52 51 53 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 3 (set (reg/f:DI 140 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:331 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 3 (set (reg:DI 5 di)
        (reg/f:DI 140 [ variables_list ])) tilesInt.C:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140 [ variables_list ])
        (nil)))
(call_insn 55 54 56 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:331 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 3 (set (reg:DI 65 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 57 56 58 3 (parallel [
            (set (reg:DI 141 [ D.11854 ])
                (ashift:DI (reg:DI 65 [ D.11853 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:331 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.11853 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 3 (set (reg:DI 5 di)
        (reg:DI 141 [ D.11854 ])) tilesInt.C:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 141 [ D.11854 ])
        (nil)))
(call_insn 59 58 60 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:331 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 62 3 (set (reg/v/f:DI 68 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 142)
            (nil))))
(debug_insn 62 60 63 3 (var_location:DI variables (reg/v/f:DI 68 [ variables ])) tilesInt.C:331 -1
     (nil))
(insn 63 62 64 3 (set (reg:SI 144 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:332 89 {*movsi_internal}
     (nil))
(insn 64 63 65 3 (set (reg:DI 143 [ D.11854 ])
        (sign_extend:DI (reg:SI 144 [ num_tilings ]))) tilesInt.C:332 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144 [ num_tilings ])
        (nil)))
(insn 65 64 66 3 (parallel [
            (set (reg:DI 145 [ D.11854 ])
                (ashift:DI (reg:DI 143 [ D.11854 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:332 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.11854 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 3 (set (reg:DI 5 di)
        (reg:DI 145 [ D.11854 ])) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 145 [ D.11854 ])
        (nil)))
(call_insn 67 66 68 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:332 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 68 67 70 3 (set (reg/v/f:DI 72 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 146)
            (nil))))
(debug_insn 70 68 71 3 (var_location:DI the_tiles (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:332 -1
     (nil))
(insn 71 70 72 3 (set (reg/f:DI 147 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:333 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 3 (set (reg:DI 5 di)
        (reg/f:DI 147 [ variables_list ])) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 147 [ variables_list ])
        (nil)))
(call_insn 73 72 74 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:333 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 74 73 75 3 (set (reg:DI 74 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 75 74 76 3 (parallel [
            (set (reg:DI 148 [ D.11854 ])
                (ashift:DI (reg:DI 74 [ D.11853 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:333 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 74 [ D.11853 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 3 (set (reg:DI 5 di)
        (reg:DI 148 [ D.11854 ])) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 148 [ D.11854 ])
        (nil)))
(call_insn 77 76 78 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:333 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 78 77 80 3 (set (reg/v/f:DI 77 [ wrapwidths ])
        (reg:DI 0 ax)) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 149)
            (nil))))
(debug_insn 80 78 81 3 (var_location:DI wrapwidths (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:333 -1
     (nil))
(insn 81 80 82 3 (set (reg/f:DI 78 [ ints_list.18 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 78 [ ints_list.18 ])
            (const_int 0 [0]))) tilesInt.C:334 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 83 82 84 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 265)
            (pc))) tilesInt.C:334 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 265)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              18 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 79
;; live  kill	
(note 84 83 85 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 4 (set (reg:DI 5 di)
        (reg/f:DI 78 [ ints_list.18 ])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ ints_list.18 ])
        (nil)))
(call_insn 86 85 87 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:334 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 87 86 88 4 (set (reg:DI 79 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 88 87 89 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 79 [ D.11853 ])
            (const_int 0 [0]))) tilesInt.C:334 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 79 [ D.11853 ])
        (nil)))
(jump_insn 89 88 262 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) tilesInt.C:334 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 241)
;;  succ:       16 [73.0%] 
;;              18 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77

;; basic block 5, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%]  (DFS_BACK)
;;              17 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u94(6){ }u95(7){ }u96(16){ }u97(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 92 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 86 87 92 150
;; live  kill	 17 [flags]
(code_label 262 89 94 5 47 "" [1 uses])
(note 94 262 95 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 95 94 96 5 (var_location:SI i (subreg:SI (reg:DI 92 [ ivtmp.97 ]) 0)) -1
     (nil))
(insn 96 95 97 5 (set (reg/f:DI 150 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 5 (set (reg:DI 4 si)
        (reg:DI 92 [ ivtmp.97 ])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 5 (set (reg:DI 5 di)
        (reg/f:DI 150 [ ints_list ])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 150 [ ints_list ])
        (nil)))
(call_insn 99 98 100 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:339 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 5 (set (reg/f:DI 86 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 101 100 102 5 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.11851 ])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.11851 ])
        (nil)))
(call_insn 102 101 103 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:339 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 5 (set (reg:DI 87 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 104 103 105 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 92 [ ivtmp.97 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 60 [ ints ])) [0 MEM[base: ints_52, index: ivtmp.97_129, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 87 [ D.11853 ]) 0)) tilesInt.C:339 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.11853 ])
        (nil)))
(debug_insn 105 104 107 5 (var_location:SI D#5 (plus:SI (subreg:SI (reg:DI 92 [ ivtmp.97 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 107 105 108 5 (var_location:SI i (debug_expr:SI D#5)) -1
     (nil))
(insn 108 107 110 5 (parallel [
            (set (reg:DI 92 [ ivtmp.97 ])
                (plus:DI (reg:DI 92 [ ivtmp.97 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 108 111 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 61 [ num_ints ])
            (subreg:SI (reg:DI 92 [ ivtmp.97 ]) 0))) tilesInt.C:338 7 {*cmpsi_1}
     (nil))
(jump_insn 111 110 258 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) tilesInt.C:338 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 262)
;;  succ:       5 [91.0%]  (DFS_BACK)
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              5 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              16 [9.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u118(6){ }u119(7){ }u120(16){ }u121(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 90 91 116 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 90 91 116 151
;; live  kill	
(code_label 258 111 112 6 46 "" [1 uses])
(note 112 258 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 113 112 114 6 (var_location:SI num_ints (reg/v:SI 61 [ num_ints ])) -1
     (nil))
(debug_insn 114 113 115 6 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) -1
     (nil))
(insn 115 114 116 6 (set (reg/f:DI 151 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:342 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 6 (set (reg:DI 5 di)
        (reg/f:DI 151 [ variables_list ])) tilesInt.C:342 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 151 [ variables_list ])
        (nil)))
(call_insn 117 116 118 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:342 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 118 117 119 6 (set (reg:DI 90 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:342 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 119 118 120 6 (set (reg/v:SI 91 [ num_variables ])
        (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:342 89 {*movsi_internal}
     (nil))
(debug_insn 120 119 122 6 (var_location:SI num_variables (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:342 -1
     (nil))
(debug_insn 122 120 9 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 9 122 123 6 (set (reg:DI 116 [ ivtmp.91 ])
        (const_int 0 [0])) tilesInt.C:344 87 {*movdi_internal_rex64}
     (nil))
(insn 123 9 124 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 90 [ D.11853 ]) 0)
            (const_int 0 [0]))) tilesInt.C:344 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 124 123 163 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 292)
            (pc))) tilesInt.C:344 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 292)
;;  succ:       8 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;;              8 [9.0%]  (LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 104 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 104 152
;; live  kill	
(code_label 163 124 125 7 42 "" [1 uses])
(note 125 163 126 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 7 (set (reg/f:DI 152 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:350 87 {*movdi_internal_rex64}
     (nil))
(insn 127 126 128 7 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:350 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 7 (set (reg:DI 5 di)
        (reg/f:DI 152 [ memorctable ])) tilesInt.C:350 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 152 [ memorctable ])
        (nil)))
(call_insn 129 128 130 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:350 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 130 129 131 7 (set (reg:SI 104 [ D.11852 ])
        (reg:SI 0 ax)) tilesInt.C:350 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 131 130 132 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.11852 ])
            (const_int 0 [0]))) tilesInt.C:350 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 104 [ D.11852 ])
        (nil)))
(jump_insn 132 131 292 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) tilesInt.C:350 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 170)
;;  succ:       9 [50.0%] 
;;              10 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;;              8 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 77 91 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 97 100 101 116 153 154
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 96 97 100 101 116 153 154
;; live  kill	 17 [flags]
(code_label 292 132 291 8 54 "" [1 uses])
(note 291 292 139 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 139 291 141 8 (var_location:SI i (subreg:SI (reg:DI 116 [ ivtmp.91 ]) 0)) -1
     (nil))
(insn 141 139 142 8 (set (reg/f:DI 153 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:346 87 {*movdi_internal_rex64}
     (nil))
(insn 142 141 143 8 (set (reg:DI 4 si)
        (reg:DI 116 [ ivtmp.91 ])) tilesInt.C:346 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 8 (set (reg:DI 5 di)
        (reg/f:DI 153 [ variables_list ])) tilesInt.C:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 153 [ variables_list ])
        (nil)))
(call_insn 144 143 145 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:346 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 145 144 146 8 (set (reg/f:DI 96 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 146 145 147 8 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.11851 ])) tilesInt.C:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.11851 ])
        (nil)))
(call_insn 147 146 148 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:346 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 148 147 149 8 (set (reg:DF 97 [ D.11855 ])
        (reg:DF 21 xmm0)) tilesInt.C:346 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 149 148 150 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 116 [ ivtmp.91 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 68 [ variables ])) [0 MEM[base: variables_29, index: ivtmp.91_130, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 97 [ D.11855 ]))) tilesInt.C:346 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 97 [ D.11855 ])
        (nil)))
(insn 150 149 151 8 (set (reg/f:DI 154 [ wrapwidths_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(insn 151 150 152 8 (set (reg:DI 4 si)
        (reg:DI 116 [ ivtmp.91 ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 153 8 (set (reg:DI 5 di)
        (reg/f:DI 154 [ wrapwidths_list ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 154 [ wrapwidths_list ])
        (nil)))
(call_insn 153 152 154 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 8 (set (reg/f:DI 100 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 155 154 156 8 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.11851 ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.11851 ])
        (nil)))
(call_insn 156 155 157 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 157 156 158 8 (set (reg:DI 101 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 158 157 159 8 (set (mem:SI (plus:DI (mult:DI (reg:DI 116 [ ivtmp.91 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 77 [ wrapwidths ])) [0 MEM[base: wrapwidths_41, index: ivtmp.91_130, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 101 [ D.11853 ]) 0)) tilesInt.C:347 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ D.11853 ])
        (nil)))
(debug_insn 159 158 161 8 (var_location:SI D#4 (plus:SI (subreg:SI (reg:DI 116 [ ivtmp.91 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 161 159 162 8 (var_location:SI i (debug_expr:SI D#4)) -1
     (nil))
(insn 162 161 164 8 (parallel [
            (set (reg:DI 116 [ ivtmp.91 ])
                (plus:DI (reg:DI 116 [ ivtmp.91 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 162 165 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 91 [ num_variables ])
            (subreg:SI (reg:DI 116 [ ivtmp.91 ]) 0))) tilesInt.C:344 7 {*cmpsi_1}
     (nil))
(jump_insn 165 164 170 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) tilesInt.C:344 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 163)
;;  succ:       8 [91.0%]  (FALLTHRU,DFS_BACK)
;;              7 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 155 156 157
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 155 156 157
;; live  kill	
(code_label 170 165 171 9 40 "" [1 uses])
(note 171 170 172 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 172 171 173 9 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:352 -1
     (nil))
(insn 173 172 174 9 (set (reg/f:DI 155 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:352 87 {*movdi_internal_rex64}
     (nil))
(insn 174 173 175 9 (set (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 155 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 155 [ memorctable ])
        (nil)))
(insn 175 174 176 9 (set (reg:SI 157 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:353 89 {*movsi_internal}
     (nil))
(insn 176 175 177 9 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:353 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 177 176 178 9 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 178 177 179 9 (set (reg:DI 38 r9)
        (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 77 [ wrapwidths ])
        (nil)))
(insn 179 178 180 9 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:353 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.11853 ])
        (nil)))
(insn 180 179 181 9 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 181 180 182 9 (set (reg:DI 1 dx)
        (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])
        (nil)))
(insn 182 181 183 9 (set (reg:SI 4 si)
        (reg:SI 157 [ num_tilings ])) tilesInt.C:353 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 157 [ num_tilings ])
        (nil)))
(insn 183 182 184 9 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (nil))
(call_insn 184 183 188 9 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a0a6000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:353 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 10, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u210(6){ }u211(7){ }u212(16){ }u213(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 109 158 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 109 158 159
;; live  kill	
(note 188 184 189 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 10 (set (reg/f:DI 158 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:357 87 {*movdi_internal_rex64}
     (nil))
(insn 190 189 191 10 (set (reg:DI 5 di)
        (reg/f:DI 158 [ memorctable ])) tilesInt.C:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 158 [ memorctable ])
        (nil)))
(call_insn 191 190 192 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:357 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 192 191 193 10 (set (reg:DI 109 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 193 192 194 10 (var_location:SI memory_size (subreg:SI (reg:DI 109 [ D.11853 ]) 0)) tilesInt.C:357 -1
     (nil))
(insn 194 193 195 10 (set (reg:SI 159 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:358 89 {*movsi_internal}
     (nil))
(insn 195 194 196 10 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 196 195 197 10 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 197 196 198 10 (set (reg:DI 38 r9)
        (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 77 [ wrapwidths ])
        (nil)))
(insn 198 197 199 10 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 90 [ D.11853 ]) 0)) tilesInt.C:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.11853 ])
        (nil)))
(insn 199 198 200 10 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 200 199 201 10 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 109 [ D.11853 ]) 0)) tilesInt.C:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.11853 ])
        (nil)))
(insn 201 200 202 10 (set (reg:SI 4 si)
        (reg:SI 159 [ num_tilings ])) tilesInt.C:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 159 [ num_tilings ])
        (nil)))
(insn 202 201 203 10 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (nil))
(call_insn 203 202 204 10 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9b8a09df00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:358 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u240(6){ }u241(7){ }u242(16){ }u243(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 160 161
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 114 160 161
;; live  kill	
(code_label 204 203 205 11 44 "" [0 uses])
(note 205 204 206 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 11 (set (reg:SI 161 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:361 89 {*movsi_internal}
     (nil))
(insn 207 206 208 11 (set (reg:DI 160 [ D.11853 ])
        (sign_extend:DI (reg:SI 161 [ num_tilings ]))) tilesInt.C:361 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 161 [ num_tilings ])
        (nil)))
(insn 208 207 209 11 (set (reg:DI 5 di)
        (reg:DI 160 [ D.11853 ])) tilesInt.C:361 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 160 [ D.11853 ])
        (nil)))
(call_insn 209 208 210 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9b89f7bb00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:361 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 210 209 211 11 (set (reg/v/f:DI 114 [ tiles_list ])
        (reg:DI 0 ax)) tilesInt.C:361 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 211 210 212 11 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 212 211 213 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:362 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 213 212 214 11 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) tilesInt.C:362 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 280)
;;  succ:       12 [91.0%]  (FALLTHRU)
;;              14 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114

;; basic block 12, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u252(6){ }u253(7){ }u254(16){ }u255(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  gen 	 124
;; live  kill	
(note 214 213 10 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 10 214 233 12 (set (reg:DI 124 [ ivtmp.86 ])
        (const_int 0 [0])) tilesInt.C:362 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

;; basic block 13, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [91.0%]  (FALLTHRU,DFS_BACK)
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u256(6){ }u257(7){ }u258(16){ }u259(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 120 124 126 162 163
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 120 124 126 162 163
;; live  kill	 17 [flags]
(code_label 233 10 215 13 45 "" [0 uses])
(note 215 233 216 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 216 215 217 13 (var_location:SI i (subreg:SI (reg:DI 124 [ ivtmp.86 ]) 0)) -1
     (nil))
(insn 217 216 218 13 (set (reg:SI 163 [ MEM[base: the_tiles_34, index: ivtmp.86_139, step: 4, offset: 0B] ])
        (mem:SI (plus:DI (mult:DI (reg:DI 124 [ ivtmp.86 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 72 [ the_tiles ])) [0 MEM[base: the_tiles_34, index: ivtmp.86_139, step: 4, offset: 0B]+0 S4 A32])) tilesInt.C:363 89 {*movsi_internal}
     (nil))
(insn 218 217 219 13 (set (reg:DI 162 [ D.11853 ])
        (sign_extend:DI (reg:SI 163 [ MEM[base: the_tiles_34, index: ivtmp.86_139, step: 4, offset: 0B] ]))) tilesInt.C:363 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 163 [ MEM[base: the_tiles_34, index: ivtmp.86_139, step: 4, offset: 0B] ])
        (nil)))
(insn 219 218 220 13 (set (reg:DI 5 di)
        (reg:DI 162 [ D.11853 ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 162 [ D.11853 ])
        (nil)))
(call_insn 220 219 221 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:363 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 221 220 222 13 (set (reg/f:DI 120 [ D.11851 ])
        (reg:DI 0 ax)) tilesInt.C:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 222 221 223 13 (set (reg:DI 1 dx)
        (reg/f:DI 120 [ D.11851 ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.11851 ])
        (nil)))
(insn 223 222 224 13 (set (reg:DI 4 si)
        (reg:DI 124 [ ivtmp.86 ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 13 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (nil))
(call_insn 225 224 226 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9b89f7be00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:363 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 226 225 228 13 (parallel [
            (set (reg:SI 126 [ D.11852 ])
                (plus:SI (subreg:SI (reg:DI 124 [ ivtmp.86 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 228 226 229 13 (var_location:SI i (reg:SI 126 [ D.11852 ])) -1
     (nil))
(insn 229 228 230 13 (parallel [
            (set (reg:DI 124 [ ivtmp.86 ])
                (plus:DI (reg:DI 124 [ ivtmp.86 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 230 229 231 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])
            (reg:SI 126 [ D.11852 ]))) tilesInt.C:362 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 126 [ D.11852 ])
        (nil)))
(jump_insn 231 230 280 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 284)
            (pc))) tilesInt.C:362 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 284)
;;  succ:       13 [91.0%]  (FALLTHRU,DFS_BACK)
;;              15 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

;; basic block 14, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [9.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
(code_label 280 231 279 14 49 "" [1 uses])
(note 279 280 13 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 13 279 284 14 (set (reg/f:DI 62 [ D.11851 ])
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ tiles_list ])
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [9.0%]  (LOOP_EXIT)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u286(6){ }u287(7){ }u288(16){ }u289(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
(code_label 284 13 283 15 50 "" [1 uses])
(note 283 284 12 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 12 283 241 15 (set (reg/f:DI 62 [ D.11851 ])
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ tiles_list ])
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 16, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u291(6){ }u292(7){ }u293(16){ }u294(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 81 165 166 167
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 81 165 166 167
;; live  kill	 17 [flags]
(code_label 241 12 242 16 37 "" [1 uses])
(note 242 241 243 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 16 (set (reg/f:DI 165 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:336 87 {*movdi_internal_rex64}
     (nil))
(insn 244 243 245 16 (set (reg:DI 5 di)
        (reg/f:DI 165 [ ints_list ])) tilesInt.C:336 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 165 [ ints_list ])
        (nil)))
(call_insn 245 244 246 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:336 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 246 245 247 16 (set (reg:DI 81 [ D.11853 ])
        (reg:DI 0 ax)) tilesInt.C:336 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 247 246 248 16 (set (reg/v:SI 61 [ num_ints ])
        (subreg:SI (reg:DI 81 [ D.11853 ]) 0)) tilesInt.C:336 89 {*movsi_internal}
     (nil))
(debug_insn 248 247 249 16 (var_location:SI num_ints (subreg:SI (reg:DI 81 [ D.11853 ]) 0)) tilesInt.C:336 -1
     (nil))
(insn 249 248 250 16 (set (reg:DI 166 [ D.11854 ])
        (sign_extend:DI (subreg:SI (reg:DI 81 [ D.11853 ]) 0))) tilesInt.C:337 149 {*extendsidi2_rex64}
     (nil))
(insn 250 249 251 16 (parallel [
            (set (reg:DI 167 [ D.11854 ])
                (ashift:DI (reg:DI 166 [ D.11854 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:337 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 166 [ D.11854 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 16 (set (reg:DI 5 di)
        (reg:DI 167 [ D.11854 ])) tilesInt.C:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 167 [ D.11854 ])
        (nil)))
(call_insn 252 251 253 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:337 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 253 252 255 16 (set (reg/v/f:DI 60 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 168)
            (nil))))
(debug_insn 255 253 257 16 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) tilesInt.C:337 -1
     (nil))
(debug_insn 257 255 259 16 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 259 257 260 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 81 [ D.11853 ]) 0)
            (const_int 0 [0]))) tilesInt.C:338 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 81 [ D.11853 ])
        (nil)))
(jump_insn 260 259 261 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) tilesInt.C:338 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 258)
;;  succ:       17 [91.0%]  (FALLTHRU)
;;              6 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

;; basic block 17, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [91.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u311(6){ }u312(7){ }u313(16){ }u314(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 92
;; live  kill	
(note 261 260 6 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 6 261 265 17 (set (reg:DI 92 [ ivtmp.97 ])
        (const_int 0 [0])) tilesInt.C:338 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

;; basic block 18, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              4 [27.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u315(6){ }u316(7){ }u317(16){ }u318(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 60 61
;; live  kill	
(code_label 265 6 266 18 36 "" [1 uses])
(note 266 265 7 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 7 266 8 18 (set (reg/v:SI 61 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:322 89 {*movsi_internal}
     (nil))
(insn 8 7 290 18 (set (reg/v/f:DI 60 [ ints ])
        (const_int 0 [0])) tilesInt.C:321 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

;; basic block 19, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 18, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              2 [21.4%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u319(6){ }u320(7){ }u321(16){ }u322(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 290 8 285 19 53 "" [1 uses])
(note 285 290 270 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 270 285 273 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 62 [ D.11851 ])) tilesInt.C:365 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.11851 ])
        (nil)))
(insn 273 270 0 19 (use (reg/i:DI 0 ax)) tilesInt.C:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_LoadTiles(PyObject*, PyObject*) (_ZL15tiles_LoadTilesP7_objectS0_, funcdef_no=152, decl_uid=11255, cgraph_uid=152)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 28 count 22 (  1.2)


PyObject* tiles_LoadTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={23d,19u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,18u} r7={1d,51u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,17u} r17={47d,10u} r18={19d} r19={19d} r20={1d,44u,6e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r61={2d,5u} r62={2d,4u} r63={2d,1u} r64={1d,1u} r66={1d,1u} r69={1d,4u} r73={1d,4u} r74={1d,2u} r75={1d,1u} r77={1d,4u} r82={1d,1u} r83={1d,1u} r86={1d,5u} r87={1d,1u} r88={2d,6u} r92={1d,1u} r93={1d,1u} r96={1d,1u} r101={1d,2u} r104={1d,1u} r105={1d,4u} r106={2d,6u} r110={1d,1u} r115={2d,3u} r121={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r131={1d,3u} r132={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 1298{992d,300u,6e} in 187{168 regular + 19 call} insns.
;; Reaching defs:
;;  sparse invalidated 	5, 17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924
;;  reg->defs[] map:	0[0,22] 1[23,46] 2[47,69] 4[70,96] 5[97,135] 6[136,136] 7[137,137] 8[138,156] 9[157,175] 10[176,194] 11[195,213] 12[214,232] 13[233,251] 14[252,270] 15[271,289] 16[290,290] 17[291,337] 18[338,356] 19[357,375] 20[376,376] 21[377,396] 22[397,416] 23[417,436] 24[437,456] 25[457,476] 26[477,496] 27[497,516] 28[517,536] 29[537,555] 30[556,574] 31[575,593] 32[594,612] 33[613,631] 34[632,650] 35[651,669] 36[670,688] 37[689,711] 38[712,734] 39[735,753] 40[754,772] 45[773,791] 46[792,810] 47[811,829] 48[830,848] 49[849,867] 50[868,886] 51[887,905] 52[906,924] 61[925,926] 62[927,928] 63[929,930] 64[931,931] 66[932,932] 69[933,933] 73[934,934] 74[935,935] 75[936,936] 77[937,937] 82[938,938] 83[939,939] 86[940,940] 87[941,941] 88[942,943] 92[944,944] 93[945,945] 96[946,946] 101[947,947] 104[948,948] 105[949,949] 106[950,951] 110[952,952] 115[953,954] 121[955,955] 125[956,956] 126[957,957] 127[958,958] 128[959,959] 129[960,960] 131[961,961] 132[962,962] 135[963,963] 137[964,964] 138[965,965] 140[966,966] 141[967,967] 142[968,968] 144[969,969] 145[970,970] 146[971,971] 147[972,972] 148[973,973] 149[974,974] 150[975,975] 151[976,976] 152[977,977] 154[978,978] 155[979,979] 157[980,980] 158[981,981] 159[982,982] 160[983,983] 161[984,984] 162[985,985] 163[986,986] 164[987,987] 165[988,988] 167[989,989] 168[990,990] 169[991,991] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d22(0){ }d46(1){ }d69(2){ }d96(4){ }d135(5){ }d136(6){ }d137(7){ }d290(16){ }d376(20){ }d396(21){ }d416(22){ }d436(23){ }d456(24){ }d476(25){ }d496(26){ }d516(27){ }d536(28){ }d711(37){ }d734(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[22],1[46],2[69],4[96],5[135],6[136],7[137],16[290],20[376],21[396],22[416],23[436],24[456],25[476],26[496],27[516],28[536],37[711],38[734]
;; rd  kill	(307) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],1[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],2[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],4[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],6[136],7[137],16[290],20[376],21[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396],22[397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416],23[417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436],24[437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456],25[457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],26[477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],27[497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516],28[517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536],37[689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711],38[712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 4[96],6[136],7[137],16[290],20[376]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 18 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d136(bb 0 insn -1) }u1(7){ d137(bb 0 insn -1) }u2(16){ d290(bb 0 insn -1) }u3(20){ d376(bb 0 insn -1) }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 125 126 127 128 129 131 132 135
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 63 64 125 126 127 128 129 131 132 135
;; live  kill	 17 [flags]
;; rd  in  	(5) 4[96],6[136],7[137],16[290],20[376]
;; rd  gen 	(12) 0[20],17[330],63[929],64[931],125[956],126[957],127[958],128[959],129[960],131[961],132[962],135[963]
;; rd  kill	(34) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],63[929,930],64[931],125[956],126[957],127[958],128[959],129[960],131[961],132[962],135[963]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; rd  out 	(5) 6[136],7[137],16[290],20[376],63[929]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u52(6){ d136(bb 0 insn -1) }u53(7){ d137(bb 0 insn -1) }u54(16){ d290(bb 0 insn -1) }u55(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 69 73 74 137 138 140 141 142
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 66 69 73 74 137 138 140 141 142
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[136],7[137],16[290],20[376],63[929]
;; rd  gen 	(11) 0[17],17[324],66[932],69[933],73[934],74[935],137[964],138[965],140[966],141[967],142[968]
;; rd  kill	(32) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],66[932],69[933],73[934],74[935],137[964],138[965],140[966],141[967],142[968]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; rd  out 	(7) 6[136],7[137],16[290],20[376],69[933],73[934],74[935]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 3 )->[4]->( 15 17 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u78(6){ d136(bb 0 insn -1) }u79(7){ d137(bb 0 insn -1) }u80(16){ d290(bb 0 insn -1) }u81(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 75
;; live  kill	
;; rd  in  	(7) 6[136],7[137],16[290],20[376],69[933],73[934],74[935]
;; rd  gen 	(3) 0[16],17[322],75[936]
;; rd  kill	(24) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],75[936]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; rd  out 	(6) 6[136],7[137],16[290],20[376],69[933],73[934]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 5 16 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u88(6){ d136(bb 0 insn -1) }u89(7){ d137(bb 0 insn -1) }u90(16){ d290(bb 0 insn -1) }u91(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 88 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 82 83 88 144
;; live  kill	 17 [flags]
;; rd  in  	(15) 0[14],6[136],7[137],16[290],17[318],20[376],61[925],62[928],69[933],73[934],82[938],83[939],88[942,943],144[969]
;; rd  gen 	(6) 0[14],17[318],82[938],83[939],88[943],144[969]
;; rd  kill	(28) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],82[938],83[939],88[942,943],144[969]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; rd  out 	(9) 6[136],7[137],16[290],20[376],61[925],62[928],69[933],73[934],88[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 17 5 15 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u112(6){ d136(bb 0 insn -1) }u113(7){ d137(bb 0 insn -1) }u114(16){ d290(bb 0 insn -1) }u115(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 106 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 86 87 106 145
;; live  kill	
;; rd  in  	(11) 6[136],7[137],16[290],20[376],61[925,926],62[927,928],69[933],73[934],88[943]
;; rd  gen 	(6) 0[13],17[293],86[940],87[941],106[951],145[970]
;; rd  kill	(28) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],86[940],87[941],106[950,951],145[970]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; rd  out 	(13) 6[136],7[137],16[290],20[376],61[925,926],62[927,928],69[933],73[934],86[940],87[941],106[951]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 6 8 )->[7]->( 9 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u127(6){ d136(bb 0 insn -1) }u128(7){ d137(bb 0 insn -1) }u129(16){ d290(bb 0 insn -1) }u130(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 146
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 96 146
;; live  kill	
;; rd  in  	(14) 6[136],7[137],16[290],20[376],61[925,926],62[927,928],69[933],73[934],86[940],87[941],106[950,951]
;; rd  gen 	(4) 0[12],17[315],96[946],146[971]
;; rd  kill	(25) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],96[946],146[971]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; rd  out 	(11) 6[136],7[137],16[290],20[376],61[925,926],62[927,928],69[933],73[934],86[940]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 6 8 )->[8]->( 8 7 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u139(6){ d136(bb 0 insn -1) }u140(7){ d137(bb 0 insn -1) }u141(16){ d290(bb 0 insn -1) }u142(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 87 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 92 93 106 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 92 93 106 147
;; live  kill	 17 [flags]
;; rd  in  	(19) 6[136],7[137],16[290],17[311],20[376],21[385],61[925,926],62[927,928],69[933],73[934],86[940],87[941],92[944],93[945],106[950,951],147[972]
;; rd  gen 	(6) 17[311],21[385],92[944],93[945],106[950],147[972]
;; rd  kill	(25) 21[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396],92[944],93[945],106[950,951],147[972]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; rd  out 	(13) 6[136],7[137],16[290],20[376],61[925,926],62[927,928],69[933],73[934],86[940],87[941],106[950]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u163(6){ d136(bb 0 insn -1) }u164(7){ d137(bb 0 insn -1) }u165(16){ d290(bb 0 insn -1) }u166(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 148 149 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 148 149 150
;; live  kill	
;; rd  in  	(11) 6[136],7[137],16[290],20[376],61[925,926],62[927,928],69[933],73[934],86[940]
;; rd  gen 	(3) 148[973],149[974],150[975]
;; rd  kill	(3) 148[973],149[974],150[975]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; rd  out 	(5) 6[136],7[137],16[290],20[376],73[934]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 7 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u187(6){ d136(bb 0 insn -1) }u188(7){ d137(bb 0 insn -1) }u189(16){ d290(bb 0 insn -1) }u190(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 101 151 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 101 151 152
;; live  kill	
;; rd  in  	(11) 6[136],7[137],16[290],20[376],61[925,926],62[927,928],69[933],73[934],86[940]
;; rd  gen 	(3) 101[947],151[976],152[977]
;; rd  kill	(3) 101[947],151[976],152[977]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; rd  out 	(5) 6[136],7[137],16[290],20[376],73[934]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 9 10 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u214(6){ d136(bb 0 insn -1) }u215(7){ d137(bb 0 insn -1) }u216(16){ d290(bb 0 insn -1) }u217(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  gen 	 17 [flags] 104 105
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[136],7[137],16[290],20[376],73[934]
;; rd  gen 	(3) 17[306],104[948],105[949]
;; rd  kill	(2) 104[948],105[949]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; rd  out 	(6) 6[136],7[137],16[290],20[376],73[934],105[949]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 11 14 )->[12]->( 18 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u223(6){ d136(bb 0 insn -1) }u224(7){ d137(bb 0 insn -1) }u225(16){ d290(bb 0 insn -1) }u226(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 63
;; live  kill	
;; rd  in  	(9) 6[136],7[137],16[290],20[376],73[934],105[949],115[953],121[955],158[981]
;; rd  gen 	(2) 0[5],63[930]
;; rd  kill	(25) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],63[929,930]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; rd  out 	(5) 6[136],7[137],16[290],20[376],63[930]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u231(6){ d136(bb 0 insn -1) }u232(7){ d137(bb 0 insn -1) }u233(16){ d290(bb 0 insn -1) }u234(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  def 	 17 [flags] 115 121 154 155 157 158 159 160
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  gen 	 115 121 154 155 157 158 159 160
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[136],7[137],16[290],20[376],73[934],105[949]
;; rd  gen 	(8) 115[954],121[955],154[978],155[979],157[980],158[981],159[982],160[983]
;; rd  kill	(9) 115[953,954],121[955],154[978],155[979],157[980],158[981],159[982],160[983]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; rd  out 	(7) 6[136],7[137],16[290],20[376],115[954],121[955],158[981]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 14 13 )->[14]->( 14 12 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u243(6){ d136(bb 0 insn -1) }u244(7){ d137(bb 0 insn -1) }u245(16){ d290(bb 0 insn -1) }u246(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 115 161 162 163 164 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 110 115 161 162 163 164 165
;; live  kill	 17 [flags]
;; rd  in  	(16) 0[3],6[136],7[137],16[290],17[291],20[376],110[952],115[953,954],121[955],158[981],161[984],162[985],163[986],164[987],165[988]
;; rd  gen 	(9) 0[3],17[291],110[952],115[953],161[984],162[985],163[986],164[987],165[988]
;; rd  kill	(31) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],110[952],115[953,954],161[984],162[985],163[986],164[987],165[988]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; rd  out 	(7) 6[136],7[137],16[290],20[376],115[953],121[955],158[981]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 4 )->[15]->( 16 6 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u268(6){ d136(bb 0 insn -1) }u269(7){ d137(bb 0 insn -1) }u270(16){ d290(bb 0 insn -1) }u271(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 77 167 168 169
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 61 62 77 167 168 169
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[136],7[137],16[290],20[376],69[933],73[934]
;; rd  gen 	(8) 0[1],17[292],61[925],62[928],77[937],167[989],168[990],169[991]
;; rd  kill	(31) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],61[925,926],62[927,928],77[937],167[989],168[990],169[991]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; rd  out 	(8) 6[136],7[137],16[290],20[376],61[925],62[928],69[933],73[934]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 15 )->[16]->( 5 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u288(6){ d136(bb 0 insn -1) }u289(7){ d137(bb 0 insn -1) }u290(16){ d290(bb 0 insn -1) }u291(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 88
;; live  kill	
;; rd  in  	(8) 6[136],7[137],16[290],20[376],61[925],62[928],69[933],73[934]
;; rd  gen 	(1) 88[942]
;; rd  kill	(2) 88[942,943]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; rd  out 	(9) 6[136],7[137],16[290],20[376],61[925],62[928],69[933],73[934],88[942]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 3 4 )->[17]->( 6 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u292(6){ d136(bb 0 insn -1) }u293(7){ d137(bb 0 insn -1) }u294(16){ d290(bb 0 insn -1) }u295(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 61 62
;; live  kill	
;; rd  in  	(7) 6[136],7[137],16[290],20[376],69[933],73[934],74[935]
;; rd  gen 	(2) 61[926],62[927]
;; rd  kill	(4) 61[925,926],62[927,928]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; rd  out 	(8) 6[136],7[137],16[290],20[376],61[926],62[927],69[933],73[934]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 2 12 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u296(6){ d136(bb 0 insn -1) }u297(7){ d137(bb 0 insn -1) }u298(16){ d290(bb 0 insn -1) }u299(20){ d376(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(6) 6[136],7[137],16[290],20[376],63[929,930]
;; rd  gen 	(1) 0[0]
;; rd  kill	(23) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[136],7[137],16[290],20[376]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 16 { d290(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u302(0){ d0(bb 18 insn 267) }u303(6){ d136(bb 0 insn -1) }u304(7){ d137(bb 0 insn -1) }u305(20){ d376(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[136],7[137],16[290],20[376]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 18 insn 267) }
;;   reg 6 { d136(bb 0 insn -1) }
;;   reg 7 { d137(bb 0 insn -1) }
;;   reg 20 { d376(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 72 to worklist
  Adding insn 66 to worklist
  Adding insn 58 to worklist
  Adding insn 54 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 100 to worklist
  Adding insn 93 to worklist
  Adding insn 91 to worklist
  Adding insn 88 to worklist
  Adding insn 113 to worklist
  Adding insn 106 to worklist
  Adding insn 121 to worklist
  Adding insn 118 to worklist
  Adding insn 144 to worklist
  Adding insn 137 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 162 to worklist
  Adding insn 155 to worklist
  Adding insn 180 to worklist
  Adding insn 173 to worklist
  Adding insn 169 to worklist
  Adding insn 188 to worklist
  Adding insn 192 to worklist
  Adding insn 228 to worklist
  Adding insn 222 to worklist
  Adding insn 214 to worklist
  Adding insn 257 to worklist
  Adding insn 249 to worklist
  Adding insn 242 to worklist
  Adding insn 270 to worklist
Finished finding needed instructions:
  Adding insn 267 to worklist
Processing use of (reg 63 [ D.11885 ]) in insn 267:
  Adding insn 193 to worklist
  Adding insn 12 to worklist
Processing use of (reg 0 ax) in insn 193:
Processing use of (reg 0 ax) in insn 270:
Processing use of (reg 7 sp) in insn 242:
Processing use of (reg 5 di) in insn 242:
  Adding insn 241 to worklist
Processing use of (reg 167 [ ints_list ]) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 20 frame) in insn 240:
Processing use of (reg 7 sp) in insn 249:
Processing use of (reg 5 di) in insn 249:
  Adding insn 248 to worklist
Processing use of (reg 169 [ D.11888 ]) in insn 248:
  Adding insn 247 to worklist
Processing use of (reg 168 [ D.11888 ]) in insn 247:
  Adding insn 246 to worklist
Processing use of (subreg (reg 77 [ D.11887 ]) 0) in insn 246:
  Adding insn 243 to worklist
Processing use of (reg 0 ax) in insn 243:
Processing use of (reg 17 flags) in insn 257:
  Adding insn 256 to worklist
Processing use of (subreg (reg 77 [ D.11887 ]) 0) in insn 256:
Processing use of (reg 7 sp) in insn 214:
Processing use of (reg 5 di) in insn 214:
  Adding insn 213 to worklist
Processing use of (reg 161 [ D.11887 ]) in insn 213:
  Adding insn 212 to worklist
Processing use of (reg 162 [ MEM[base: _130, index: ivtmp.109_121, offset: 0B] ]) in insn 212:
  Adding insn 211 to worklist
Processing use of (reg 115 [ ivtmp.109 ]) in insn 211:
  Adding insn 11 to worklist
  Adding insn 225 to worklist
Processing use of (reg 121 [ D.11893 ]) in insn 211:
  Adding insn 208 to worklist
Processing use of (reg 73 [ the_tiles ]) in insn 208:
  Adding insn 67 to worklist
Processing use of (reg 160 [ D.11891 ]) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 159 [ D.11891 ]) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 105 [ i ]) in insn 206:
  Adding insn 184 to worklist
Processing use of (reg 104 [ num_tilings.24 ]) in insn 184:
  Adding insn 183 to worklist
Processing use of (reg 20 frame) in insn 183:
Processing use of (reg 0 ax) in insn 67:
Processing use of (reg 115 [ ivtmp.109 ]) in insn 225:
Processing use of (reg 7 sp) in insn 222:
Processing use of (reg 1 dx) in insn 222:
  Adding insn 219 to worklist
Processing use of (reg 4 si) in insn 222:
  Adding insn 220 to worklist
Processing use of (reg 5 di) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 165 [ tiles_list ]) in insn 221:
  Adding insn 218 to worklist
Processing use of (reg 20 frame) in insn 218:
Processing use of (reg 163 [ D.11887 ]) in insn 220:
  Adding insn 217 to worklist
Processing use of (reg 164 [ start_element ]) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 20 frame) in insn 216:
Processing use of (reg 110 [ D.11885 ]) in insn 219:
  Adding insn 215 to worklist
Processing use of (reg 0 ax) in insn 215:
Processing use of (reg 17 flags) in insn 228:
  Adding insn 227 to worklist
Processing use of (reg 115 [ ivtmp.109 ]) in insn 227:
Processing use of (reg 158) in insn 227:
  Adding insn 203 to worklist
Processing use of (reg 157) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 155 [ D.11891 ]) in insn 202:
  Adding insn 200 to worklist
Processing use of (reg 154 [ D.11891 ]) in insn 200:
  Adding insn 199 to worklist
Processing use of (reg 105 [ i ]) in insn 199:
Processing use of (reg 7 sp) in insn 192:
Processing use of (reg 0 ax) in insn 192:
  Adding insn 191 to worklist
Processing use of (reg 5 di) in insn 192:
  Adding insn 190 to worklist
Processing use of (reg 17 flags) in insn 188:
  Adding insn 187 to worklist
Processing use of (reg 105 [ i ]) in insn 187:
Processing use of (reg 7 sp) in insn 169:
Processing use of (reg 5 di) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 151 [ memorctable ]) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 20 frame) in insn 167:
Processing use of (reg 7 sp) in insn 173:
Processing use of (reg 62 [ num_ints ]) in insn 173:
  Adding insn 244 to worklist
  Adding insn 8 to worklist
Processing use of (subreg (reg 77 [ D.11887 ]) 0) in insn 244:
Processing use of (reg 7 sp) in insn 180:
Processing use of (reg 1 dx) in insn 180:
  Adding insn 177 to worklist
Processing use of (reg 2 cx) in insn 180:
  Adding insn 176 to worklist
Processing use of (reg 4 si) in insn 180:
  Adding insn 178 to worklist
Processing use of (reg 5 di) in insn 180:
  Adding insn 179 to worklist
Processing use of (reg 7 sp) in insn 180:
Processing use of (reg 37 r8) in insn 180:
  Adding insn 175 to worklist
Processing use of (reg 38 r9) in insn 180:
  Adding insn 174 to worklist
Processing use of (reg 61 [ ints ]) in insn 174:
  Adding insn 9 to worklist
  Adding insn 250 to worklist
Processing use of (reg 0 ax) in insn 250:
Processing use of (subreg (reg 86 [ D.11887 ]) 0) in insn 175:
  Adding insn 107 to worklist
Processing use of (reg 0 ax) in insn 107:
Processing use of (reg 73 [ the_tiles ]) in insn 179:
Processing use of (reg 152 [ num_tilings ]) in insn 178:
  Adding insn 172 to worklist
Processing use of (reg 20 frame) in insn 172:
Processing use of (reg 69 [ variables ]) in insn 176:
  Adding insn 59 to worklist
Processing use of (reg 0 ax) in insn 59:
Processing use of (subreg (reg 101 [ D.11887 ]) 0) in insn 177:
  Adding insn 170 to worklist
Processing use of (reg 0 ax) in insn 170:
Processing use of (reg 7 sp) in insn 155:
Processing use of (reg 62 [ num_ints ]) in insn 155:
Processing use of (reg 7 sp) in insn 162:
Processing use of (reg 1 dx) in insn 162:
  Adding insn 159 to worklist
Processing use of (reg 2 cx) in insn 162:
  Adding insn 158 to worklist
Processing use of (reg 4 si) in insn 162:
  Adding insn 160 to worklist
Processing use of (reg 5 di) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 7 sp) in insn 162:
Processing use of (reg 37 r8) in insn 162:
  Adding insn 157 to worklist
Processing use of (reg 38 r9) in insn 162:
  Adding insn 156 to worklist
Processing use of (reg 61 [ ints ]) in insn 156:
Processing use of (subreg (reg 86 [ D.11887 ]) 0) in insn 157:
Processing use of (reg 73 [ the_tiles ]) in insn 161:
Processing use of (reg 150 [ num_tilings ]) in insn 160:
  Adding insn 154 to worklist
Processing use of (reg 20 frame) in insn 154:
Processing use of (reg 69 [ variables ]) in insn 158:
Processing use of (reg 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ]) in insn 159:
  Adding insn 153 to worklist
Processing use of (reg 148 [ memorctable ]) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 20 frame) in insn 152:
Processing use of (reg 7 sp) in insn 132:
Processing use of (reg 4 si) in insn 132:
  Adding insn 130 to worklist
Processing use of (reg 5 di) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 147 [ variables_list ]) in insn 131:
  Adding insn 129 to worklist
Processing use of (reg 20 frame) in insn 129:
Processing use of (reg 106 [ ivtmp.112 ]) in insn 130:
  Adding insn 10 to worklist
  Adding insn 141 to worklist
Processing use of (reg 106 [ ivtmp.112 ]) in insn 141:
Processing use of (reg 7 sp) in insn 135:
Processing use of (reg 5 di) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 92 [ D.11885 ]) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 0 ax) in insn 133:
Processing use of (reg 69 [ variables ]) in insn 137:
Processing use of (reg 93 [ D.11889 ]) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 106 [ ivtmp.112 ]) in insn 137:
Processing use of (reg 21 xmm0) in insn 136:
Processing use of (reg 17 flags) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 87 [ num_variables ]) in insn 143:
  Adding insn 108 to worklist
Processing use of (subreg (reg 106 [ ivtmp.112 ]) 0) in insn 143:
Processing use of (subreg (reg 86 [ D.11887 ]) 0) in insn 108:
Processing use of (reg 7 sp) in insn 118:
Processing use of (reg 4 si) in insn 118:
  Adding insn 116 to worklist
Processing use of (reg 5 di) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 146 [ memorctable ]) in insn 117:
  Adding insn 115 to worklist
Processing use of (reg 20 frame) in insn 115:
Processing use of (reg 17 flags) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 96 [ D.11886 ]) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 0 ax) in insn 119:
Processing use of (reg 7 sp) in insn 106:
Processing use of (reg 5 di) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 145 [ variables_list ]) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 20 frame) in insn 104:
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (subreg (reg 86 [ D.11887 ]) 0) in insn 112:
Processing use of (reg 7 sp) in insn 88:
Processing use of (reg 4 si) in insn 88:
  Adding insn 86 to worklist
Processing use of (reg 5 di) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 144 [ ints_list ]) in insn 87:
  Adding insn 85 to worklist
Processing use of (reg 20 frame) in insn 85:
Processing use of (reg 88 [ ivtmp.117 ]) in insn 86:
  Adding insn 97 to worklist
  Adding insn 7 to worklist
Processing use of (reg 88 [ ivtmp.117 ]) in insn 97:
Processing use of (reg 7 sp) in insn 91:
Processing use of (reg 5 di) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 82 [ D.11885 ]) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 0 ax) in insn 89:
Processing use of (reg 61 [ ints ]) in insn 93:
Processing use of (subreg (reg 83 [ D.11887 ]) 0) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 88 [ ivtmp.117 ]) in insn 93:
Processing use of (reg 0 ax) in insn 92:
Processing use of (reg 17 flags) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 62 [ num_ints ]) in insn 99:
Processing use of (subreg (reg 88 [ ivtmp.117 ]) 0) in insn 99:
Processing use of (reg 7 sp) in insn 75:
Processing use of (reg 5 di) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 74 [ ints_list.27 ]) in insn 74:
  Adding insn 70 to worklist
Processing use of (reg 20 frame) in insn 70:
Processing use of (reg 17 flags) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 75 [ D.11887 ]) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 0 ax) in insn 76:
Processing use of (reg 7 sp) in insn 54:
Processing use of (reg 5 di) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 137 [ variables_list ]) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 20 frame) in insn 52:
Processing use of (reg 7 sp) in insn 58:
Processing use of (reg 5 di) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 138 [ D.11888 ]) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 66 [ D.11887 ]) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 0 ax) in insn 55:
Processing use of (reg 7 sp) in insn 66:
Processing use of (reg 5 di) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 142 [ D.11888 ]) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 140 [ D.11888 ]) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 141 [ num_tilings ]) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 20 frame) in insn 62:
Processing use of (reg 17 flags) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 74 [ ints_list.27 ]) in insn 71:
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 20 frame) in insn 19:
Processing use of (reg 20 frame) in insn 21:
Processing use of (reg 7 sp) in insn 28:
Processing use of (reg 129) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 20 frame) in insn 27:
Processing use of (reg 7 sp) in insn 31:
Processing use of (reg 131) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 7 sp) in insn 33:
Processing use of (reg 132) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 20 frame) in insn 32:
Processing use of (reg 7 sp) in insn 36:
Processing use of (reg 131) in insn 36:
Processing use of (reg 7 sp) in insn 38:
Processing use of (reg 135) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 20 frame) in insn 37:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 0 ax) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 1 dx) in insn 47:
  Adding insn 43 to worklist
Processing use of (reg 2 cx) in insn 47:
  Adding insn 41 to worklist
Processing use of (reg 4 si) in insn 47:
  Adding insn 44 to worklist
Processing use of (reg 5 di) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 37 r8) in insn 47:
  Adding insn 40 to worklist
Processing use of (reg 38 r9) in insn 47:
  Adding insn 39 to worklist
Processing use of (reg 126) in insn 39:
  Adding insn 24 to worklist
Processing use of (reg 20 frame) in insn 24:
Processing use of (reg 127) in insn 40:
  Adding insn 25 to worklist
Processing use of (reg 20 frame) in insn 25:
Processing use of (reg 125 [ args ]) in insn 45:
  Adding insn 5 to worklist
Processing use of (reg 4 si) in insn 5:
Processing use of (reg 128) in insn 41:
  Adding insn 26 to worklist
Processing use of (reg 20 frame) in insn 26:
Processing use of (reg 131) in insn 43:
Processing use of (reg 17 flags) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 64 [ D.11886 ]) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 0 ax) in insn 48:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_LoadTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={23d,19u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,18u} r7={1d,51u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,17u} r17={47d,10u} r18={19d} r19={19d} r20={1d,44u,6e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r61={2d,5u} r62={2d,4u} r63={2d,1u} r64={1d,1u} r66={1d,1u} r69={1d,4u} r73={1d,4u} r74={1d,2u} r75={1d,1u} r77={1d,4u} r82={1d,1u} r83={1d,1u} r86={1d,5u} r87={1d,1u} r88={2d,6u} r92={1d,1u} r93={1d,1u} r96={1d,1u} r101={1d,2u} r104={1d,1u} r105={1d,4u} r106={2d,6u} r110={1d,1u} r115={2d,3u} r121={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r131={1d,3u} r132={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 1298{992d,300u,6e} in 187{168 regular + 19 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 125 126 127 128 129 131 132 135
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 63 64 125 126 127 128 129 131 132 135
;; live  kill	 17 [flags]
(note 13 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 13 6 2 (set (reg/v/f:DI 125 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 6 5 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 6 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:136 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 16 15 17 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:137 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:140 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:141 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:143 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 20 19 21 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:144 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:146 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 22 21 23 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:147 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:148 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 126)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg/f:DI 127)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 128)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 129)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 29 28 31 2 (set (reg:DI 131)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:155 87 {*movdi_internal_rex64}
     (nil))
(insn 31 29 32 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 131)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 36 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 132)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 36 33 37 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 131)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg/f:DI 135)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:155 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 135)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 39 38 40 2 (set (reg:DI 38 r9)
        (reg/f:DI 126)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 40 39 41 2 (set (reg:DI 37 r8)
        (reg/f:DI 127)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 127)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 41 40 43 2 (set (reg:DI 2 cx)
        (reg/f:DI 128)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 43 41 44 2 (set (reg:DI 1 dx)
        (reg:DI 131)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 131)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 44 43 45 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b9b8a16a720 *.LC0>)) tilesInt.C:155 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg/v/f:DI 125 [ args ])) tilesInt.C:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ args ])
        (nil)))
(insn 46 45 47 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:155 91 {*movqi_internal}
     (nil))
(call_insn 47 46 48 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 40 [0x28]))) tilesInt.C:155 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (nil))))))))))))))
(insn 48 47 12 2 (set (reg:SI 64 [ D.11886 ])
        (reg:SI 0 ax)) tilesInt.C:155 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 48 49 2 (set (reg/f:DI 63 [ D.11885 ])
        (const_int 0 [0])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 49 12 50 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.11886 ])
            (const_int 0 [0]))) tilesInt.C:151 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 64 [ D.11886 ])
        (nil)))
(jump_insn 50 49 51 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 279)
            (pc))) tilesInt.C:151 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 279)
;;  succ:       18 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 69 73 74 137 138 140 141 142
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 66 69 73 74 137 138 140 141 142
;; live  kill	 17 [flags]
(note 51 50 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 3 (set (reg/f:DI 137 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:159 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 3 (set (reg:DI 5 di)
        (reg/f:DI 137 [ variables_list ])) tilesInt.C:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 137 [ variables_list ])
        (nil)))
(call_insn 54 53 55 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:159 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 3 (set (reg:DI 66 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 138 [ D.11888 ])
                (ashift:DI (reg:DI 66 [ D.11887 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:159 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 66 [ D.11887 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 3 (set (reg:DI 5 di)
        (reg:DI 138 [ D.11888 ])) tilesInt.C:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 138 [ D.11888 ])
        (nil)))
(call_insn 58 57 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:159 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 69 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 139)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI variables (reg/v/f:DI 69 [ variables ])) tilesInt.C:159 -1
     (nil))
(insn 62 61 63 3 (set (reg:SI 141 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:160 89 {*movsi_internal}
     (nil))
(insn 63 62 64 3 (set (reg:DI 140 [ D.11888 ])
        (sign_extend:DI (reg:SI 141 [ num_tilings ]))) tilesInt.C:160 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141 [ num_tilings ])
        (nil)))
(insn 64 63 65 3 (parallel [
            (set (reg:DI 142 [ D.11888 ])
                (ashift:DI (reg:DI 140 [ D.11888 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:160 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.11888 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 3 (set (reg:DI 5 di)
        (reg:DI 142 [ D.11888 ])) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 142 [ D.11888 ])
        (nil)))
(call_insn 66 65 67 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:160 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 67 66 69 3 (set (reg/v/f:DI 73 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 143)
            (nil))))
(debug_insn 69 67 70 3 (var_location:DI the_tiles (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:160 -1
     (nil))
(insn 70 69 71 3 (set (reg/f:DI 74 [ ints_list.27 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:162 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 74 [ ints_list.27 ])
            (const_int 0 [0]))) tilesInt.C:162 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 72 71 73 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) tilesInt.C:162 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 262)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              17 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 75
;; live  kill	
(note 73 72 74 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 4 (set (reg:DI 5 di)
        (reg/f:DI 74 [ ints_list.27 ])) tilesInt.C:162 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ ints_list.27 ])
        (nil)))
(call_insn 75 74 76 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:162 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 76 75 77 4 (set (reg:DI 75 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:162 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 77 76 78 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 75 [ D.11887 ])
            (const_int 0 [0]))) tilesInt.C:162 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 75 [ D.11887 ])
        (nil)))
(jump_insn 78 77 259 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) tilesInt.C:162 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 238)
;;  succ:       15 [73.0%] 
;;              17 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73

;; basic block 5, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%]  (DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 88 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 82 83 88 144
;; live  kill	 17 [flags]
(code_label 259 78 83 5 75 "" [1 uses])
(note 83 259 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 84 83 85 5 (var_location:SI i (subreg:SI (reg:DI 88 [ ivtmp.117 ]) 0)) -1
     (nil))
(insn 85 84 86 5 (set (reg/f:DI 144 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 5 (set (reg:DI 4 si)
        (reg:DI 88 [ ivtmp.117 ])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 5 (set (reg:DI 5 di)
        (reg/f:DI 144 [ ints_list ])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 144 [ ints_list ])
        (nil)))
(call_insn 88 87 89 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:167 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 89 88 90 5 (set (reg/f:DI 82 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 90 89 91 5 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.11885 ])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 82 [ D.11885 ])
        (nil)))
(call_insn 91 90 92 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:167 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 92 91 93 5 (set (reg:DI 83 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 93 92 94 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 88 [ ivtmp.117 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 61 [ ints ])) [0 MEM[base: ints_45, index: ivtmp.117_115, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 83 [ D.11887 ]) 0)) tilesInt.C:167 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ D.11887 ])
        (nil)))
(debug_insn 94 93 96 5 (var_location:SI D#8 (plus:SI (subreg:SI (reg:DI 88 [ ivtmp.117 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 96 94 97 5 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))
(insn 97 96 99 5 (parallel [
            (set (reg:DI 88 [ ivtmp.117 ])
                (plus:DI (reg:DI 88 [ ivtmp.117 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 97 100 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ num_ints ])
            (subreg:SI (reg:DI 88 [ ivtmp.117 ]) 0))) tilesInt.C:166 7 {*cmpsi_1}
     (nil))
(jump_insn 100 99 255 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) tilesInt.C:166 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 259)
;;  succ:       5 [91.0%]  (DFS_BACK)
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              5 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              15 [9.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u112(6){ }u113(7){ }u114(16){ }u115(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 106 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 86 87 106 145
;; live  kill	
(code_label 255 100 101 6 74 "" [1 uses])
(note 101 255 102 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 102 101 103 6 (var_location:SI num_ints (reg/v:SI 62 [ num_ints ])) -1
     (nil))
(debug_insn 103 102 104 6 (var_location:DI ints (reg/v/f:DI 61 [ ints ])) -1
     (nil))
(insn 104 103 105 6 (set (reg/f:DI 145 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:170 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 6 (set (reg:DI 5 di)
        (reg/f:DI 145 [ variables_list ])) tilesInt.C:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 145 [ variables_list ])
        (nil)))
(call_insn 106 105 107 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:170 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 107 106 108 6 (set (reg:DI 86 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 108 107 109 6 (set (reg/v:SI 87 [ num_variables ])
        (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:170 89 {*movsi_internal}
     (nil))
(debug_insn 109 108 111 6 (var_location:SI num_variables (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:170 -1
     (nil))
(debug_insn 111 109 10 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 10 111 112 6 (set (reg:DI 106 [ ivtmp.112 ])
        (const_int 0 [0])) tilesInt.C:172 87 {*movdi_internal_rex64}
     (nil))
(insn 112 10 113 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 86 [ D.11887 ]) 0)
            (const_int 0 [0]))) tilesInt.C:172 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 142 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) tilesInt.C:172 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 281)
;;  succ:       8 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;;              8 [9.0%]  (LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u127(6){ }u128(7){ }u129(16){ }u130(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 146
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 96 146
;; live  kill	
(code_label 142 113 114 7 68 "" [1 uses])
(note 114 142 115 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 7 (set (reg/f:DI 146 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:175 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 7 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:175 87 {*movdi_internal_rex64}
     (nil))
(insn 117 116 118 7 (set (reg:DI 5 di)
        (reg/f:DI 146 [ memorctable ])) tilesInt.C:175 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 146 [ memorctable ])
        (nil)))
(call_insn 118 117 119 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:175 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 119 118 120 7 (set (reg:SI 96 [ D.11886 ])
        (reg:SI 0 ax)) tilesInt.C:175 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 120 119 121 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.11886 ])
            (const_int 0 [0]))) tilesInt.C:175 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.11886 ])
        (nil)))
(jump_insn 121 120 281 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) tilesInt.C:175 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 149)
;;  succ:       9 [50.0%] 
;;              10 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;;              8 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u139(6){ }u140(7){ }u141(16){ }u142(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 87 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 92 93 106 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 92 93 106 147
;; live  kill	 17 [flags]
(code_label 281 121 280 8 80 "" [1 uses])
(note 280 281 128 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 128 280 129 8 (var_location:SI i (subreg:SI (reg:DI 106 [ ivtmp.112 ]) 0)) -1
     (nil))
(insn 129 128 130 8 (set (reg/f:DI 147 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 8 (set (reg:DI 4 si)
        (reg:DI 106 [ ivtmp.112 ])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 132 8 (set (reg:DI 5 di)
        (reg/f:DI 147 [ variables_list ])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 147 [ variables_list ])
        (nil)))
(call_insn 132 131 133 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:173 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 133 132 134 8 (set (reg/f:DI 92 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:173 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 134 133 135 8 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.11885 ])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.11885 ])
        (nil)))
(call_insn 135 134 136 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:173 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 136 135 137 8 (set (reg:DF 93 [ D.11889 ])
        (reg:DF 21 xmm0)) tilesInt.C:173 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 137 136 138 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ ivtmp.112 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 69 [ variables ])) [0 MEM[base: variables_29, index: ivtmp.112_116, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 93 [ D.11889 ]))) tilesInt.C:173 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 93 [ D.11889 ])
        (nil)))
(debug_insn 138 137 140 8 (var_location:SI D#7 (plus:SI (subreg:SI (reg:DI 106 [ ivtmp.112 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 140 138 141 8 (var_location:SI i (debug_expr:SI D#7)) -1
     (nil))
(insn 141 140 143 8 (parallel [
            (set (reg:DI 106 [ ivtmp.112 ])
                (plus:DI (reg:DI 106 [ ivtmp.112 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 141 144 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ num_variables ])
            (subreg:SI (reg:DI 106 [ ivtmp.112 ]) 0))) tilesInt.C:172 7 {*cmpsi_1}
     (nil))
(jump_insn 144 143 149 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) tilesInt.C:172 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 142)
;;  succ:       8 [91.0%]  (FALLTHRU,DFS_BACK)
;;              7 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u163(6){ }u164(7){ }u165(16){ }u166(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 148 149 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 148 149 150
;; live  kill	
(code_label 149 144 150 9 66 "" [1 uses])
(note 150 149 151 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 151 150 152 9 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:177 -1
     (nil))
(insn 152 151 153 9 (set (reg/f:DI 148 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:177 87 {*movdi_internal_rex64}
     (nil))
(insn 153 152 154 9 (set (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 148 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 148 [ memorctable ])
        (nil)))
(insn 154 153 155 9 (set (reg:SI 150 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:178 89 {*movsi_internal}
     (nil))
(insn 155 154 156 9 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 62 [ num_ints ])) tilesInt.C:178 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 62 [ num_ints ])
        (nil)))
(insn 156 155 157 9 (set (reg:DI 38 r9)
        (reg/v/f:DI 61 [ ints ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ints ])
        (nil)))
(insn 157 156 158 9 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:178 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ D.11887 ])
        (nil)))
(insn 158 157 159 9 (set (reg:DI 2 cx)
        (reg/v/f:DI 69 [ variables ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 69 [ variables ])
        (nil)))
(insn 159 158 160 9 (set (reg:DI 1 dx)
        (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])
        (nil)))
(insn 160 159 161 9 (set (reg:SI 4 si)
        (reg:SI 150 [ num_tilings ])) tilesInt.C:178 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 150 [ num_tilings ])
        (nil)))
(insn 161 160 162 9 (set (reg:DI 5 di)
        (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (nil))
(call_insn 162 161 166 9 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b9b8a092400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:178 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

;; basic block 10, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 101 151 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 101 151 152
;; live  kill	
(note 166 162 167 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 10 (set (reg/f:DI 151 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:182 87 {*movdi_internal_rex64}
     (nil))
(insn 168 167 169 10 (set (reg:DI 5 di)
        (reg/f:DI 151 [ memorctable ])) tilesInt.C:182 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 151 [ memorctable ])
        (nil)))
(call_insn 169 168 170 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:182 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 10 (set (reg:DI 101 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:182 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 171 170 172 10 (var_location:SI memory_size (subreg:SI (reg:DI 101 [ D.11887 ]) 0)) tilesInt.C:182 -1
     (nil))
(insn 172 171 173 10 (set (reg:SI 152 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:183 89 {*movsi_internal}
     (nil))
(insn 173 172 174 10 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 62 [ num_ints ])) tilesInt.C:183 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 62 [ num_ints ])
        (nil)))
(insn 174 173 175 10 (set (reg:DI 38 r9)
        (reg/v/f:DI 61 [ ints ])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ints ])
        (nil)))
(insn 175 174 176 10 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 86 [ D.11887 ]) 0)) tilesInt.C:183 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ D.11887 ])
        (nil)))
(insn 176 175 177 10 (set (reg:DI 2 cx)
        (reg/v/f:DI 69 [ variables ])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 69 [ variables ])
        (nil)))
(insn 177 176 178 10 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 101 [ D.11887 ]) 0)) tilesInt.C:183 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ D.11887 ])
        (nil)))
(insn 178 177 179 10 (set (reg:SI 4 si)
        (reg:SI 152 [ num_tilings ])) tilesInt.C:183 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152 [ num_tilings ])
        (nil)))
(insn 179 178 180 10 (set (reg:DI 5 di)
        (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (nil))
(call_insn 180 179 181 10 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9b8a086b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:183 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u214(6){ }u215(7){ }u216(16){ }u217(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  gen 	 17 [flags] 104 105
;; live  kill	 17 [flags]
(code_label 181 180 182 11 70 "" [0 uses])
(note 182 181 183 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 11 (set (reg:SI 104 [ num_tilings.24 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:186 89 {*movsi_internal}
     (nil))
(insn 184 183 186 11 (parallel [
            (set (reg/v:SI 105 [ i ])
                (plus:SI (reg:SI 104 [ num_tilings.24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:186 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ num_tilings.24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 186 184 187 11 (var_location:SI i (reg/v:SI 105 [ i ])) -1
     (nil))
(insn 187 186 188 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 105 [ i ])
            (const_int 0 [0]))) tilesInt.C:186 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 188 187 226 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) tilesInt.C:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 196)
;;  succ:       13 [91.0%] 
;;              12 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105

;; basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [9.0%]  (FALLTHRU)
;;              14 [9.0%]  (LOOP_EXIT)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u223(6){ }u224(7){ }u225(16){ }u226(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 63
;; live  kill	
(code_label 226 188 189 12 72 "" [1 uses])
(note 189 226 190 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:188 87 {*movdi_internal_rex64}
     (nil))
(insn 191 190 192 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:188 91 {*movqi_internal}
     (nil))
(call_insn 192 191 193 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:188 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 193 192 196 12 (set (reg/f:DI 63 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

;; basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u231(6){ }u232(7){ }u233(16){ }u234(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  def 	 17 [flags] 115 121 154 155 157 158 159 160
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  gen 	 115 121 154 155 157 158 159 160
;; live  kill	 17 [flags]
(code_label 196 193 197 13 71 "" [1 uses])
(note 197 196 199 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 199 197 200 13 (set (reg:DI 154 [ D.11891 ])
        (zero_extend:DI (reg/v:SI 105 [ i ]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 200 199 202 13 (parallel [
            (set (reg:DI 155 [ D.11891 ])
                (plus:DI (reg:DI 154 [ D.11891 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.11891 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 202 200 203 13 (parallel [
            (set (reg:DI 157)
                (neg:DI (reg:DI 155 [ D.11891 ])))
            (clobber (reg:CC 17 flags))
        ]) 461 {*negdi2_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.11891 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 206 13 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 157)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 203 207 13 (set (reg:DI 159 [ D.11891 ])
        (sign_extend:DI (reg/v:SI 105 [ i ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 105 [ i ])
        (nil)))
(insn 207 206 208 13 (parallel [
            (set (reg:DI 160 [ D.11891 ])
                (ashift:DI (reg:DI 159 [ D.11891 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 159 [ D.11891 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 208 207 11 13 (parallel [
            (set (reg/f:DI 121 [ D.11893 ])
                (plus:DI (reg/v/f:DI 73 [ the_tiles ])
                    (reg:DI 160 [ D.11891 ])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 160 [ D.11891 ])
        (expr_list:REG_DEAD (reg/v/f:DI 73 [ the_tiles ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 208 230 13 (set (reg:DI 115 [ ivtmp.109 ])
        (const_int 0 [0])) tilesInt.C:186 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

;; basic block 14, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [91.0%]  (FALLTHRU,DFS_BACK)
;;              13 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u243(6){ }u244(7){ }u245(16){ }u246(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 115 161 162 163 164 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 110 115 161 162 163 164 165
;; live  kill	 17 [flags]
(code_label 230 11 209 14 73 "" [0 uses])
(note 209 230 210 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 210 209 211 14 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 211 210 212 14 (set (reg:SI 162 [ MEM[base: _130, index: ivtmp.109_121, offset: 0B] ])
        (mem:SI (plus:DI (reg/f:DI 121 [ D.11893 ])
                (reg:DI 115 [ ivtmp.109 ])) [0 MEM[base: _130, index: ivtmp.109_121, offset: 0B]+0 S4 A32])) tilesInt.C:187 89 {*movsi_internal}
     (nil))
(insn 212 211 213 14 (set (reg:DI 161 [ D.11887 ])
        (sign_extend:DI (reg:SI 162 [ MEM[base: _130, index: ivtmp.109_121, offset: 0B] ]))) tilesInt.C:187 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 162 [ MEM[base: _130, index: ivtmp.109_121, offset: 0B] ])
        (nil)))
(insn 213 212 214 14 (set (reg:DI 5 di)
        (reg:DI 161 [ D.11887 ])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 161 [ D.11887 ])
        (nil)))
(call_insn 214 213 215 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:187 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 14 (set (reg/f:DI 110 [ D.11885 ])
        (reg:DI 0 ax)) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 216 215 217 14 (set (reg:SI 164 [ start_element ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 start_element+0 S4 A128])) tilesInt.C:187 89 {*movsi_internal}
     (nil))
(insn 217 216 218 14 (set (reg:DI 163 [ D.11887 ])
        (sign_extend:DI (reg:SI 164 [ start_element ]))) tilesInt.C:187 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 164 [ start_element ])
        (nil)))
(insn 218 217 219 14 (set (reg/f:DI 165 [ tiles_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 tiles_list+0 S8 A128])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (nil))
(insn 219 218 220 14 (set (reg:DI 1 dx)
        (reg/f:DI 110 [ D.11885 ])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.11885 ])
        (nil)))
(insn 220 219 221 14 (set (reg:DI 4 si)
        (reg:DI 163 [ D.11887 ])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 163 [ D.11887 ])
        (nil)))
(insn 221 220 222 14 (set (reg:DI 5 di)
        (reg/f:DI 165 [ tiles_list ])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 165 [ tiles_list ])
        (nil)))
(call_insn 222 221 224 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9b89f7bf00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:187 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 224 222 225 14 (var_location:SI i (debug_expr:SI D#6)) -1
     (nil))
(insn 225 224 227 14 (parallel [
            (set (reg:DI 115 [ ivtmp.109 ])
                (plus:DI (reg:DI 115 [ ivtmp.109 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 227 225 228 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ ivtmp.109 ])
            (reg:DI 158))) tilesInt.C:186 8 {*cmpdi_1}
     (nil))
(jump_insn 228 227 238 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) tilesInt.C:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 226)
;;  succ:       14 [91.0%]  (FALLTHRU,DFS_BACK)
;;              12 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

;; basic block 15, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u268(6){ }u269(7){ }u270(16){ }u271(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 77 167 168 169
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 61 62 77 167 168 169
;; live  kill	 17 [flags]
(code_label 238 228 239 15 63 "" [1 uses])
(note 239 238 240 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 15 (set (reg/f:DI 167 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:164 87 {*movdi_internal_rex64}
     (nil))
(insn 241 240 242 15 (set (reg:DI 5 di)
        (reg/f:DI 167 [ ints_list ])) tilesInt.C:164 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 167 [ ints_list ])
        (nil)))
(call_insn 242 241 243 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:164 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 15 (set (reg:DI 77 [ D.11887 ])
        (reg:DI 0 ax)) tilesInt.C:164 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 244 243 245 15 (set (reg/v:SI 62 [ num_ints ])
        (subreg:SI (reg:DI 77 [ D.11887 ]) 0)) tilesInt.C:164 89 {*movsi_internal}
     (nil))
(debug_insn 245 244 246 15 (var_location:SI num_ints (subreg:SI (reg:DI 77 [ D.11887 ]) 0)) tilesInt.C:164 -1
     (nil))
(insn 246 245 247 15 (set (reg:DI 168 [ D.11888 ])
        (sign_extend:DI (subreg:SI (reg:DI 77 [ D.11887 ]) 0))) tilesInt.C:165 149 {*extendsidi2_rex64}
     (nil))
(insn 247 246 248 15 (parallel [
            (set (reg:DI 169 [ D.11888 ])
                (ashift:DI (reg:DI 168 [ D.11888 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:165 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 168 [ D.11888 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 248 247 249 15 (set (reg:DI 5 di)
        (reg:DI 169 [ D.11888 ])) tilesInt.C:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 169 [ D.11888 ])
        (nil)))
(call_insn 249 248 250 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:165 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 250 249 252 15 (set (reg/v/f:DI 61 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 170)
            (nil))))
(debug_insn 252 250 254 15 (var_location:DI ints (reg/v/f:DI 61 [ ints ])) tilesInt.C:165 -1
     (nil))
(debug_insn 254 252 256 15 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 256 254 257 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 77 [ D.11887 ]) 0)
            (const_int 0 [0]))) tilesInt.C:166 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 77 [ D.11887 ])
        (nil)))
(jump_insn 257 256 258 15 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) tilesInt.C:166 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 255)
;;  succ:       16 [91.0%]  (FALLTHRU)
;;              6 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

;; basic block 16, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [91.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u288(6){ }u289(7){ }u290(16){ }u291(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 88
;; live  kill	
(note 258 257 7 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 7 258 262 16 (set (reg:DI 88 [ ivtmp.117 ])
        (const_int 0 [0])) tilesInt.C:166 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

;; basic block 17, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              4 [27.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u292(6){ }u293(7){ }u294(16){ }u295(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 61 62
;; live  kill	
(code_label 262 7 263 17 62 "" [1 uses])
(note 263 262 8 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 8 263 9 17 (set (reg/v:SI 62 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:148 89 {*movsi_internal}
     (nil))
(insn 9 8 279 17 (set (reg/v/f:DI 61 [ ints ])
        (const_int 0 [0])) tilesInt.C:147 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

;; basic block 18, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 17, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              12 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u296(6){ }u297(7){ }u298(16){ }u299(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 279 9 274 18 79 "" [1 uses])
(note 274 279 267 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 267 274 270 18 (set (reg/i:DI 0 ax)
        (reg/f:DI 63 [ D.11885 ])) tilesInt.C:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.11885 ])
        (nil)))
(insn 270 267 0 18 (use (reg/i:DI 0 ax)) tilesInt.C:189 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_GetTiles(PyObject*, PyObject*) (_ZL14tiles_GetTilesP7_objectS0_, funcdef_no=153, decl_uid=11285, cgraph_uid=153)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 23 (  1.1)


PyObject* tiles_GetTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={22d,18u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,19u} r7={1d,46u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,18u} r17={40d,10u} r18={19d} r19={19d} r20={1d,42u,4e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r73={1d,2u} r74={1d,1u} r76={1d,4u} r81={1d,1u} r82={1d,1u} r85={1d,5u} r86={1d,1u} r87={2d,6u} r91={1d,1u} r92={1d,1u} r95={1d,1u} r100={1d,2u} r105={1d,3u} r107={2d,6u} r111={1d,1u} r115={2d,5u} r117={1d,2u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r126={1d,2u} r128={1d,1u} r129={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 1264{975d,285u,4e} in 172{153 regular + 19 call} insns.
;; Reaching defs:
;;  sparse invalidated 	5, 17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916
;;  reg->defs[] map:	0[0,21] 1[22,45] 2[46,68] 4[69,95] 5[96,134] 6[135,135] 7[136,136] 8[137,155] 9[156,174] 10[175,193] 11[194,212] 12[213,231] 13[232,250] 14[251,269] 15[270,288] 16[289,289] 17[290,329] 18[330,348] 19[349,367] 20[368,368] 21[369,388] 22[389,408] 23[409,428] 24[429,448] 25[449,468] 26[469,488] 27[489,508] 28[509,528] 29[529,547] 30[548,566] 31[567,585] 32[586,604] 33[605,623] 34[624,642] 35[643,661] 36[662,680] 37[681,703] 38[704,726] 39[727,745] 40[746,764] 45[765,783] 46[784,802] 47[803,821] 48[822,840] 49[841,859] 50[860,878] 51[879,897] 52[898,916] 60[917,918] 61[919,920] 62[921,923] 63[924,924] 65[925,925] 68[926,926] 72[927,927] 73[928,928] 74[929,929] 76[930,930] 81[931,931] 82[932,932] 85[933,933] 86[934,934] 87[935,936] 91[937,937] 92[938,938] 95[939,939] 100[940,940] 105[941,941] 107[942,943] 111[944,944] 115[945,946] 117[947,947] 120[948,948] 121[949,949] 122[950,950] 123[951,951] 124[952,952] 126[953,953] 128[954,954] 129[955,955] 131[956,956] 132[957,957] 133[958,958] 135[959,959] 136[960,960] 137[961,961] 138[962,962] 139[963,963] 140[964,964] 141[965,965] 142[966,966] 143[967,967] 144[968,968] 145[969,969] 146[970,970] 147[971,971] 149[972,972] 150[973,973] 151[974,974] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d21(0){ }d45(1){ }d68(2){ }d95(4){ }d134(5){ }d135(6){ }d136(7){ }d289(16){ }d368(20){ }d388(21){ }d408(22){ }d428(23){ }d448(24){ }d468(25){ }d488(26){ }d508(27){ }d528(28){ }d703(37){ }d726(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[21],1[45],2[68],4[95],5[134],6[135],7[136],16[289],20[368],21[388],22[408],23[428],24[448],25[468],26[488],27[508],28[528],37[703],38[726]
;; rd  kill	(306) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],1[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],2[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],4[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],6[135],7[136],16[289],20[368],21[369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],22[389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],23[409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],24[429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],25[449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468],26[469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],27[489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],28[509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],37[681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703],38[704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 4[95],6[135],7[136],16[289],20[368]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 19 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d135(bb 0 insn -1) }u1(7){ d136(bb 0 insn -1) }u2(16){ d289(bb 0 insn -1) }u3(20){ d368(bb 0 insn -1) }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 120 121 122 123 124 126
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 62 63 120 121 122 123 124 126
;; live  kill	 17 [flags]
;; rd  in  	(5) 4[95],6[135],7[136],16[289],20[368]
;; rd  gen 	(10) 0[19],17[324],62[923],63[924],120[948],121[949],122[950],123[951],124[952],126[953]
;; rd  kill	(32) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],62[921,922,923],63[924],120[948],121[949],122[950],123[951],124[952],126[953]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; rd  out 	(5) 6[135],7[136],16[289],20[368],62[923]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 2 )->[3]->( 4 18 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u38(6){ d135(bb 0 insn -1) }u39(7){ d136(bb 0 insn -1) }u40(16){ d289(bb 0 insn -1) }u41(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 73 128 129 131 132 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 73 128 129 131 132 133
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[135],7[136],16[289],20[368],62[923]
;; rd  gen 	(11) 0[16],17[318],65[925],68[926],72[927],73[928],128[954],129[955],131[956],132[957],133[958]
;; rd  kill	(31) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],65[925],68[926],72[927],73[928],128[954],129[955],131[956],132[957],133[958]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; rd  out 	(7) 6[135],7[136],16[289],20[368],68[926],72[927],73[928]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 3 )->[4]->( 16 18 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u64(6){ d135(bb 0 insn -1) }u65(7){ d136(bb 0 insn -1) }u66(16){ d289(bb 0 insn -1) }u67(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 74
;; live  kill	
;; rd  in  	(7) 6[135],7[136],16[289],20[368],68[926],72[927],73[928]
;; rd  gen 	(3) 0[15],17[316],74[929]
;; rd  kill	(23) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],74[929]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; rd  out 	(6) 6[135],7[136],16[289],20[368],68[926],72[927]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 5 17 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u74(6){ d135(bb 0 insn -1) }u75(7){ d136(bb 0 insn -1) }u76(16){ d289(bb 0 insn -1) }u77(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 87 135
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 81 82 87 135
;; live  kill	 17 [flags]
;; rd  in  	(15) 0[13],6[135],7[136],16[289],17[312],20[368],60[917],61[920],68[926],72[927],81[931],82[932],87[935,936],135[959]
;; rd  gen 	(6) 0[13],17[312],81[931],82[932],87[936],135[959]
;; rd  kill	(27) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],81[931],82[932],87[935,936],135[959]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; rd  out 	(9) 6[135],7[136],16[289],20[368],60[917],61[920],68[926],72[927],87[936]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 18 5 16 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u98(6){ d135(bb 0 insn -1) }u99(7){ d136(bb 0 insn -1) }u100(16){ d289(bb 0 insn -1) }u101(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 86 107 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 85 86 107 136
;; live  kill	
;; rd  in  	(11) 6[135],7[136],16[289],20[368],60[917,918],61[919,920],68[926],72[927],87[936]
;; rd  gen 	(6) 0[12],17[291],85[933],86[934],107[943],136[960]
;; rd  kill	(27) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],85[933],86[934],107[942,943],136[960]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; rd  out 	(13) 6[135],7[136],16[289],20[368],60[917,918],61[919,920],68[926],72[927],85[933],86[934],107[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 6 8 )->[7]->( 9 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u113(6){ d135(bb 0 insn -1) }u114(7){ d136(bb 0 insn -1) }u115(16){ d289(bb 0 insn -1) }u116(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 95 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 95 137
;; live  kill	
;; rd  in  	(14) 6[135],7[136],16[289],20[368],60[917,918],61[919,920],68[926],72[927],85[933],86[934],107[942,943]
;; rd  gen 	(4) 0[11],17[309],95[939],137[961]
;; rd  kill	(24) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],95[939],137[961]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; rd  out 	(11) 6[135],7[136],16[289],20[368],60[917,918],61[919,920],68[926],72[927],85[933]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 6 8 )->[8]->( 8 7 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u125(6){ d135(bb 0 insn -1) }u126(7){ d136(bb 0 insn -1) }u127(16){ d289(bb 0 insn -1) }u128(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 86 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 92 107 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 91 92 107 138
;; live  kill	 17 [flags]
;; rd  in  	(19) 6[135],7[136],16[289],17[305],20[368],21[377],60[917,918],61[919,920],68[926],72[927],85[933],86[934],91[937],92[938],107[942,943],138[962]
;; rd  gen 	(6) 17[305],21[377],91[937],92[938],107[942],138[962]
;; rd  kill	(25) 21[369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],91[937],92[938],107[942,943],138[962]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; rd  out 	(13) 6[135],7[136],16[289],20[368],60[917,918],61[919,920],68[926],72[927],85[933],86[934],107[942]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u149(6){ d135(bb 0 insn -1) }u150(7){ d136(bb 0 insn -1) }u151(16){ d289(bb 0 insn -1) }u152(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 139 140 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 139 140 141
;; live  kill	
;; rd  in  	(11) 6[135],7[136],16[289],20[368],60[917,918],61[919,920],68[926],72[927],85[933]
;; rd  gen 	(3) 139[963],140[964],141[965]
;; rd  kill	(3) 139[963],140[964],141[965]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; rd  out 	(5) 6[135],7[136],16[289],20[368],72[927]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 7 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u173(6){ d135(bb 0 insn -1) }u174(7){ d136(bb 0 insn -1) }u175(16){ d289(bb 0 insn -1) }u176(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 100 142 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 100 142 143
;; live  kill	
;; rd  in  	(11) 6[135],7[136],16[289],20[368],60[917,918],61[919,920],68[926],72[927],85[933]
;; rd  gen 	(3) 100[940],142[966],143[967]
;; rd  kill	(3) 100[940],142[966],143[967]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; rd  out 	(5) 6[135],7[136],16[289],20[368],72[927]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 9 10 )->[11]->( 12 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u200(6){ d135(bb 0 insn -1) }u201(7){ d136(bb 0 insn -1) }u202(16){ d289(bb 0 insn -1) }u203(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 144 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 144 145
;; live  kill	
;; rd  in  	(5) 6[135],7[136],16[289],20[368],72[927]
;; rd  gen 	(5) 0[5],17[300],105[941],144[968],145[969]
;; rd  kill	(25) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],105[941],144[968],145[969]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; rd  out 	(6) 6[135],7[136],16[289],20[368],72[927],105[941]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u212(6){ d135(bb 0 insn -1) }u213(7){ d136(bb 0 insn -1) }u214(16){ d289(bb 0 insn -1) }u215(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  gen 	 115
;; live  kill	
;; rd  in  	(6) 6[135],7[136],16[289],20[368],72[927],105[941]
;; rd  gen 	(1) 115[946]
;; rd  kill	(2) 115[945,946]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; rd  out 	(7) 6[135],7[136],16[289],20[368],72[927],105[941],115[946]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 13 12 )->[13]->( 13 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u216(6){ d135(bb 0 insn -1) }u217(7){ d136(bb 0 insn -1) }u218(16){ d289(bb 0 insn -1) }u219(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 111 115 117 146 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 111 115 117 146 147
;; live  kill	 17 [flags]
;; rd  in  	(14) 0[3],6[135],7[136],16[289],17[295],20[368],72[927],105[941],111[944],115[945,946],117[947],146[970],147[971]
;; rd  gen 	(7) 0[3],17[295],111[944],115[945],117[947],146[970],147[971]
;; rd  kill	(28) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],111[944],115[945,946],117[947],146[970],147[971]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; rd  out 	(7) 6[135],7[136],16[289],20[368],72[927],105[941],115[945]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 11 )->[14]->( 19 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u241(6){ d135(bb 0 insn -1) }u242(7){ d136(bb 0 insn -1) }u243(16){ d289(bb 0 insn -1) }u244(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
;; rd  in  	(6) 6[135],7[136],16[289],20[368],72[927],105[941]
;; rd  gen 	(1) 62[922]
;; rd  kill	(3) 62[921,922,923]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; rd  out 	(5) 6[135],7[136],16[289],20[368],62[922]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 13 )->[15]->( 19 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u246(6){ d135(bb 0 insn -1) }u247(7){ d136(bb 0 insn -1) }u248(16){ d289(bb 0 insn -1) }u249(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
;; rd  in  	(7) 6[135],7[136],16[289],20[368],72[927],105[941],115[945]
;; rd  gen 	(1) 62[921]
;; rd  kill	(3) 62[921,922,923]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; rd  out 	(5) 6[135],7[136],16[289],20[368],62[921]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 4 )->[16]->( 17 6 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u251(6){ d135(bb 0 insn -1) }u252(7){ d136(bb 0 insn -1) }u253(16){ d289(bb 0 insn -1) }u254(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 76 149 150 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 76 149 150 151
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[135],7[136],16[289],20[368],68[926],72[927]
;; rd  gen 	(8) 0[1],17[290],60[917],61[920],76[930],149[972],150[973],151[974]
;; rd  kill	(30) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],60[917,918],61[919,920],76[930],149[972],150[973],151[974]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; rd  out 	(8) 6[135],7[136],16[289],20[368],60[917],61[920],68[926],72[927]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 16 )->[17]->( 5 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u271(6){ d135(bb 0 insn -1) }u272(7){ d136(bb 0 insn -1) }u273(16){ d289(bb 0 insn -1) }u274(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 87
;; live  kill	
;; rd  in  	(8) 6[135],7[136],16[289],20[368],60[917],61[920],68[926],72[927]
;; rd  gen 	(1) 87[935]
;; rd  kill	(2) 87[935,936]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; rd  out 	(9) 6[135],7[136],16[289],20[368],60[917],61[920],68[926],72[927],87[935]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 3 4 )->[18]->( 6 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u275(6){ d135(bb 0 insn -1) }u276(7){ d136(bb 0 insn -1) }u277(16){ d289(bb 0 insn -1) }u278(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 60 61
;; live  kill	
;; rd  in  	(7) 6[135],7[136],16[289],20[368],68[926],72[927],73[928]
;; rd  gen 	(2) 60[918],61[919]
;; rd  kill	(4) 60[917,918],61[919,920]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; rd  out 	(8) 6[135],7[136],16[289],20[368],60[918],61[919],68[926],72[927]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 15 2 14 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u279(6){ d135(bb 0 insn -1) }u280(7){ d136(bb 0 insn -1) }u281(16){ d289(bb 0 insn -1) }u282(20){ d368(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(7) 6[135],7[136],16[289],20[368],62[921,922,923]
;; rd  gen 	(1) 0[0]
;; rd  kill	(22) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[135],7[136],16[289],20[368]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 16 { d289(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

( 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u285(0){ d0(bb 19 insn 239) }u286(6){ d135(bb 0 insn -1) }u287(7){ d136(bb 0 insn -1) }u288(20){ d368(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[135],7[136],16[289],20[368]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 19 insn 239) }
;;   reg 6 { d135(bb 0 insn -1) }
;;   reg 7 { d136(bb 0 insn -1) }
;;   reg 20 { d368(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 64 to worklist
  Adding insn 58 to worklist
  Adding insn 50 to worklist
  Adding insn 46 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 92 to worklist
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 80 to worklist
  Adding insn 105 to worklist
  Adding insn 98 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 136 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
  Adding insn 124 to worklist
  Adding insn 154 to worklist
  Adding insn 147 to worklist
  Adding insn 172 to worklist
  Adding insn 165 to worklist
  Adding insn 161 to worklist
  Adding insn 182 to worklist
  Adding insn 178 to worklist
  Adding insn 200 to worklist
  Adding insn 194 to worklist
  Adding insn 189 to worklist
  Adding insn 229 to worklist
  Adding insn 221 to worklist
  Adding insn 214 to worklist
  Adding insn 242 to worklist
Finished finding needed instructions:
  Adding insn 239 to worklist
Processing use of (reg 62 [ D.11917 ]) in insn 239:
  Adding insn 11 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
Processing use of (reg 105 [ tiles_list ]) in insn 12:
  Adding insn 179 to worklist
Processing use of (reg 0 ax) in insn 179:
Processing use of (reg 105 [ tiles_list ]) in insn 13:
Processing use of (reg 0 ax) in insn 242:
Processing use of (reg 7 sp) in insn 214:
Processing use of (reg 5 di) in insn 214:
  Adding insn 213 to worklist
Processing use of (reg 149 [ ints_list ]) in insn 213:
  Adding insn 212 to worklist
Processing use of (reg 20 frame) in insn 212:
Processing use of (reg 7 sp) in insn 221:
Processing use of (reg 5 di) in insn 221:
  Adding insn 220 to worklist
Processing use of (reg 151 [ D.11920 ]) in insn 220:
  Adding insn 219 to worklist
Processing use of (reg 150 [ D.11920 ]) in insn 219:
  Adding insn 218 to worklist
Processing use of (subreg (reg 76 [ D.11919 ]) 0) in insn 218:
  Adding insn 215 to worklist
Processing use of (reg 0 ax) in insn 215:
Processing use of (reg 17 flags) in insn 229:
  Adding insn 228 to worklist
Processing use of (subreg (reg 76 [ D.11919 ]) 0) in insn 228:
Processing use of (reg 7 sp) in insn 189:
Processing use of (reg 5 di) in insn 189:
  Adding insn 188 to worklist
Processing use of (reg 146 [ D.11919 ]) in insn 188:
  Adding insn 187 to worklist
Processing use of (reg 147 [ MEM[base: the_tiles_33, index: ivtmp.124_122, step: 4, offset: 0B] ]) in insn 187:
  Adding insn 186 to worklist
Processing use of (reg 72 [ the_tiles ]) in insn 186:
  Adding insn 59 to worklist
Processing use of (reg 115 [ ivtmp.124 ]) in insn 186:
  Adding insn 10 to worklist
  Adding insn 198 to worklist
Processing use of (reg 115 [ ivtmp.124 ]) in insn 198:
Processing use of (reg 0 ax) in insn 59:
Processing use of (reg 7 sp) in insn 194:
Processing use of (reg 1 dx) in insn 194:
  Adding insn 191 to worklist
Processing use of (reg 4 si) in insn 194:
  Adding insn 192 to worklist
Processing use of (reg 5 di) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 105 [ tiles_list ]) in insn 193:
Processing use of (reg 115 [ ivtmp.124 ]) in insn 192:
Processing use of (reg 111 [ D.11917 ]) in insn 191:
  Adding insn 190 to worklist
Processing use of (reg 0 ax) in insn 190:
Processing use of (reg 17 flags) in insn 200:
  Adding insn 199 to worklist
Processing use of (reg 20 frame) in insn 199:
Processing use of (reg 117 [ D.11918 ]) in insn 199:
  Adding insn 195 to worklist
Processing use of (subreg (reg 115 [ ivtmp.124 ]) 0) in insn 195:
Processing use of (reg 7 sp) in insn 178:
Processing use of (reg 5 di) in insn 178:
  Adding insn 177 to worklist
Processing use of (reg 144 [ D.11919 ]) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 145 [ num_tilings ]) in insn 176:
  Adding insn 175 to worklist
Processing use of (reg 20 frame) in insn 175:
Processing use of (reg 17 flags) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 20 frame) in insn 181:
Processing use of (reg 7 sp) in insn 161:
Processing use of (reg 5 di) in insn 161:
  Adding insn 160 to worklist
Processing use of (reg 142 [ memorctable ]) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 20 frame) in insn 159:
Processing use of (reg 7 sp) in insn 165:
Processing use of (reg 61 [ num_ints ]) in insn 165:
  Adding insn 216 to worklist
  Adding insn 7 to worklist
Processing use of (subreg (reg 76 [ D.11919 ]) 0) in insn 216:
Processing use of (reg 7 sp) in insn 172:
Processing use of (reg 1 dx) in insn 172:
  Adding insn 169 to worklist
Processing use of (reg 2 cx) in insn 172:
  Adding insn 168 to worklist
Processing use of (reg 4 si) in insn 172:
  Adding insn 170 to worklist
Processing use of (reg 5 di) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 7 sp) in insn 172:
Processing use of (reg 37 r8) in insn 172:
  Adding insn 167 to worklist
Processing use of (reg 38 r9) in insn 172:
  Adding insn 166 to worklist
Processing use of (reg 60 [ ints ]) in insn 166:
  Adding insn 8 to worklist
  Adding insn 222 to worklist
Processing use of (reg 0 ax) in insn 222:
Processing use of (subreg (reg 85 [ D.11919 ]) 0) in insn 167:
  Adding insn 99 to worklist
Processing use of (reg 0 ax) in insn 99:
Processing use of (reg 72 [ the_tiles ]) in insn 171:
Processing use of (reg 143 [ num_tilings ]) in insn 170:
  Adding insn 164 to worklist
Processing use of (reg 20 frame) in insn 164:
Processing use of (reg 68 [ variables ]) in insn 168:
  Adding insn 51 to worklist
Processing use of (reg 0 ax) in insn 51:
Processing use of (subreg (reg 100 [ D.11919 ]) 0) in insn 169:
  Adding insn 162 to worklist
Processing use of (reg 0 ax) in insn 162:
Processing use of (reg 7 sp) in insn 147:
Processing use of (reg 61 [ num_ints ]) in insn 147:
Processing use of (reg 7 sp) in insn 154:
Processing use of (reg 1 dx) in insn 154:
  Adding insn 151 to worklist
Processing use of (reg 2 cx) in insn 154:
  Adding insn 150 to worklist
Processing use of (reg 4 si) in insn 154:
  Adding insn 152 to worklist
Processing use of (reg 5 di) in insn 154:
  Adding insn 153 to worklist
Processing use of (reg 7 sp) in insn 154:
Processing use of (reg 37 r8) in insn 154:
  Adding insn 149 to worklist
Processing use of (reg 38 r9) in insn 154:
  Adding insn 148 to worklist
Processing use of (reg 60 [ ints ]) in insn 148:
Processing use of (subreg (reg 85 [ D.11919 ]) 0) in insn 149:
Processing use of (reg 72 [ the_tiles ]) in insn 153:
Processing use of (reg 141 [ num_tilings ]) in insn 152:
  Adding insn 146 to worklist
Processing use of (reg 20 frame) in insn 146:
Processing use of (reg 68 [ variables ]) in insn 150:
Processing use of (reg 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ]) in insn 151:
  Adding insn 145 to worklist
Processing use of (reg 139 [ memorctable ]) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 20 frame) in insn 144:
Processing use of (reg 7 sp) in insn 124:
Processing use of (reg 4 si) in insn 124:
  Adding insn 122 to worklist
Processing use of (reg 5 di) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 138 [ variables_list ]) in insn 123:
  Adding insn 121 to worklist
Processing use of (reg 20 frame) in insn 121:
Processing use of (reg 107 [ ivtmp.129 ]) in insn 122:
  Adding insn 9 to worklist
  Adding insn 133 to worklist
Processing use of (reg 107 [ ivtmp.129 ]) in insn 133:
Processing use of (reg 7 sp) in insn 127:
Processing use of (reg 5 di) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 91 [ D.11917 ]) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 0 ax) in insn 125:
Processing use of (reg 68 [ variables ]) in insn 129:
Processing use of (reg 92 [ D.11921 ]) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 107 [ ivtmp.129 ]) in insn 129:
Processing use of (reg 21 xmm0) in insn 128:
Processing use of (reg 17 flags) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 86 [ num_variables ]) in insn 135:
  Adding insn 100 to worklist
Processing use of (subreg (reg 107 [ ivtmp.129 ]) 0) in insn 135:
Processing use of (subreg (reg 85 [ D.11919 ]) 0) in insn 100:
Processing use of (reg 7 sp) in insn 110:
Processing use of (reg 4 si) in insn 110:
  Adding insn 108 to worklist
Processing use of (reg 5 di) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 137 [ memorctable ]) in insn 109:
  Adding insn 107 to worklist
Processing use of (reg 20 frame) in insn 107:
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 95 [ D.11918 ]) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 0 ax) in insn 111:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 5 di) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 136 [ variables_list ]) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 20 frame) in insn 96:
Processing use of (reg 17 flags) in insn 105:
  Adding insn 104 to worklist
Processing use of (subreg (reg 85 [ D.11919 ]) 0) in insn 104:
Processing use of (reg 7 sp) in insn 80:
Processing use of (reg 4 si) in insn 80:
  Adding insn 78 to worklist
Processing use of (reg 5 di) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 135 [ ints_list ]) in insn 79:
  Adding insn 77 to worklist
Processing use of (reg 20 frame) in insn 77:
Processing use of (reg 87 [ ivtmp.134 ]) in insn 78:
  Adding insn 89 to worklist
  Adding insn 6 to worklist
Processing use of (reg 87 [ ivtmp.134 ]) in insn 89:
Processing use of (reg 7 sp) in insn 83:
Processing use of (reg 5 di) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 81 [ D.11917 ]) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 0 ax) in insn 81:
Processing use of (reg 60 [ ints ]) in insn 85:
Processing use of (subreg (reg 82 [ D.11919 ]) 0) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 87 [ ivtmp.134 ]) in insn 85:
Processing use of (reg 0 ax) in insn 84:
Processing use of (reg 17 flags) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 61 [ num_ints ]) in insn 91:
Processing use of (subreg (reg 87 [ ivtmp.134 ]) 0) in insn 91:
Processing use of (reg 7 sp) in insn 67:
Processing use of (reg 5 di) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 73 [ ints_list.37 ]) in insn 66:
  Adding insn 62 to worklist
Processing use of (reg 20 frame) in insn 62:
Processing use of (reg 17 flags) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 74 [ D.11919 ]) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 0 ax) in insn 68:
Processing use of (reg 7 sp) in insn 46:
Processing use of (reg 5 di) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 128 [ variables_list ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 20 frame) in insn 44:
Processing use of (reg 7 sp) in insn 50:
Processing use of (reg 5 di) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 129 [ D.11920 ]) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 65 [ D.11919 ]) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 0 ax) in insn 47:
Processing use of (reg 7 sp) in insn 58:
Processing use of (reg 5 di) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 133 [ D.11920 ]) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 131 [ D.11920 ]) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 132 [ num_tilings ]) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 20 frame) in insn 54:
Processing use of (reg 17 flags) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 73 [ ints_list.37 ]) in insn 63:
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 20 frame) in insn 19:
Processing use of (reg 20 frame) in insn 20:
Processing use of (reg 7 sp) in insn 27:
Processing use of (reg 124) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 20 frame) in insn 26:
Processing use of (reg 7 sp) in insn 30:
Processing use of (reg 126) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 7 sp) in insn 39:
Processing use of (reg 0 ax) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 1 dx) in insn 39:
  Adding insn 35 to worklist
Processing use of (reg 2 cx) in insn 39:
  Adding insn 34 to worklist
Processing use of (reg 4 si) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 5 di) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 7 sp) in insn 39:
Processing use of (reg 7 sp) in insn 39:
Processing use of (reg 37 r8) in insn 39:
  Adding insn 33 to worklist
Processing use of (reg 38 r9) in insn 39:
  Adding insn 31 to worklist
Processing use of (reg 121) in insn 31:
  Adding insn 23 to worklist
Processing use of (reg 20 frame) in insn 23:
Processing use of (reg 126) in insn 33:
Processing use of (reg 120 [ args ]) in insn 37:
  Adding insn 4 to worklist
Processing use of (reg 4 si) in insn 4:
Processing use of (reg 122) in insn 34:
  Adding insn 24 to worklist
Processing use of (reg 20 frame) in insn 24:
Processing use of (reg 123) in insn 35:
  Adding insn 25 to worklist
Processing use of (reg 20 frame) in insn 25:
Processing use of (reg 17 flags) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 63 [ D.11918 ]) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 0 ax) in insn 40:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_GetTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={22d,18u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,19u} r7={1d,46u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,18u} r17={40d,10u} r18={19d} r19={19d} r20={1d,42u,4e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r73={1d,2u} r74={1d,1u} r76={1d,4u} r81={1d,1u} r82={1d,1u} r85={1d,5u} r86={1d,1u} r87={2d,6u} r91={1d,1u} r92={1d,1u} r95={1d,1u} r100={1d,2u} r105={1d,3u} r107={2d,6u} r111={1d,1u} r115={2d,5u} r117={1d,2u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r126={1d,2u} r128={1d,1u} r129={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 1264{975d,285u,4e} in 172{153 regular + 19 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 120 121 122 123 124 126
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 62 63 120 121 122 123 124 126
;; live  kill	 17 [flags]
(note 14 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 14 5 2 (set (reg/v/f:DI 120 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:193 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:196 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:197 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:199 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:202 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:203 -1
     (nil))
(debug_insn 22 21 23 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:204 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 121)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:209 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 122)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:209 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:209 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 124)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:209 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 124)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 28 27 30 2 (set (reg:DI 126)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:209 87 {*movdi_internal_rex64}
     (nil))
(insn 30 28 31 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 126)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 33 2 (set (reg:DI 38 r9)
        (reg/f:DI 121)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 33 31 34 2 (set (reg:DI 37 r8)
        (reg:DI 126)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 126)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b9b89f7a8e8 PyList_Type>)
            (nil))))
(insn 34 33 35 2 (set (reg:DI 2 cx)
        (reg/f:DI 122)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 35 34 36 2 (set (reg:DI 1 dx)
        (reg/f:DI 123)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b9b8a243688 *.LC3>)) tilesInt.C:209 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/v/f:DI 120 [ args ])) tilesInt.C:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 120 [ args ])
        (nil)))
(insn 38 37 39 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:209 91 {*movqi_internal}
     (nil))
(call_insn 39 38 40 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 16 [0x10]))) tilesInt.C:209 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (nil)))))))))))
(insn 40 39 11 2 (set (reg:SI 63 [ D.11918 ])
        (reg:SI 0 ax)) tilesInt.C:209 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 40 41 2 (set (reg/f:DI 62 [ D.11917 ])
        (const_int 0 [0])) tilesInt.C:210 87 {*movdi_internal_rex64}
     (nil))
(insn 41 11 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.11918 ])
            (const_int 0 [0]))) tilesInt.C:207 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 63 [ D.11918 ])
        (nil)))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) tilesInt.C:207 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 259)
;;  succ:       19 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 73 128 129 131 132 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 73 128 129 131 132 133
;; live  kill	 17 [flags]
(note 43 42 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 3 (set (reg/f:DI 128 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:212 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 3 (set (reg:DI 5 di)
        (reg/f:DI 128 [ variables_list ])) tilesInt.C:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 128 [ variables_list ])
        (nil)))
(call_insn 46 45 47 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:212 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 3 (set (reg:DI 65 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 48 47 49 3 (parallel [
            (set (reg:DI 129 [ D.11920 ])
                (ashift:DI (reg:DI 65 [ D.11919 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:212 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.11919 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 3 (set (reg:DI 5 di)
        (reg:DI 129 [ D.11920 ])) tilesInt.C:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 129 [ D.11920 ])
        (nil)))
(call_insn 50 49 51 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:212 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 51 50 53 3 (set (reg/v/f:DI 68 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 130)
            (nil))))
(debug_insn 53 51 54 3 (var_location:DI variables (reg/v/f:DI 68 [ variables ])) tilesInt.C:212 -1
     (nil))
(insn 54 53 55 3 (set (reg:SI 132 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:213 89 {*movsi_internal}
     (nil))
(insn 55 54 56 3 (set (reg:DI 131 [ D.11920 ])
        (sign_extend:DI (reg:SI 132 [ num_tilings ]))) tilesInt.C:213 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 132 [ num_tilings ])
        (nil)))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 133 [ D.11920 ])
                (ashift:DI (reg:DI 131 [ D.11920 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:213 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 131 [ D.11920 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 3 (set (reg:DI 5 di)
        (reg:DI 133 [ D.11920 ])) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 133 [ D.11920 ])
        (nil)))
(call_insn 58 57 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:213 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 72 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 134)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI the_tiles (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:213 -1
     (nil))
(insn 62 61 63 3 (set (reg/f:DI 73 [ ints_list.37 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:214 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 73 [ ints_list.37 ])
            (const_int 0 [0]))) tilesInt.C:214 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 234)
            (pc))) tilesInt.C:214 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 234)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              18 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 74
;; live  kill	
(note 65 64 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 4 (set (reg:DI 5 di)
        (reg/f:DI 73 [ ints_list.37 ])) tilesInt.C:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ ints_list.37 ])
        (nil)))
(call_insn 67 66 68 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:214 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 68 67 69 4 (set (reg:DI 74 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 69 68 70 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 74 [ D.11919 ])
            (const_int 0 [0]))) tilesInt.C:214 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 74 [ D.11919 ])
        (nil)))
(jump_insn 70 69 231 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) tilesInt.C:214 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 210)
;;  succ:       16 [73.0%] 
;;              18 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72

;; basic block 5, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%]  (DFS_BACK)
;;              17 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 87 135
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 81 82 87 135
;; live  kill	 17 [flags]
(code_label 231 70 75 5 99 "" [1 uses])
(note 75 231 76 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 5 (var_location:SI i (subreg:SI (reg:DI 87 [ ivtmp.134 ]) 0)) -1
     (nil))
(insn 77 76 78 5 (set (reg/f:DI 135 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 5 (set (reg:DI 4 si)
        (reg:DI 87 [ ivtmp.134 ])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 5 (set (reg:DI 5 di)
        (reg/f:DI 135 [ ints_list ])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 135 [ ints_list ])
        (nil)))
(call_insn 80 79 81 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:219 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 81 80 82 5 (set (reg/f:DI 81 [ D.11917 ])
        (reg:DI 0 ax)) tilesInt.C:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 82 81 83 5 (set (reg:DI 5 di)
        (reg/f:DI 81 [ D.11917 ])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81 [ D.11917 ])
        (nil)))
(call_insn 83 82 84 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:219 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 5 (set (reg:DI 82 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:219 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 85 84 86 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 87 [ ivtmp.134 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 60 [ ints ])) [0 MEM[base: ints_44, index: ivtmp.134_112, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 82 [ D.11919 ]) 0)) tilesInt.C:219 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 82 [ D.11919 ])
        (nil)))
(debug_insn 86 85 88 5 (var_location:SI D#10 (plus:SI (subreg:SI (reg:DI 87 [ ivtmp.134 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 88 86 89 5 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))
(insn 89 88 91 5 (parallel [
            (set (reg:DI 87 [ ivtmp.134 ])
                (plus:DI (reg:DI 87 [ ivtmp.134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 89 92 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 61 [ num_ints ])
            (subreg:SI (reg:DI 87 [ ivtmp.134 ]) 0))) tilesInt.C:218 7 {*cmpsi_1}
     (nil))
(jump_insn 92 91 227 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 231)
            (pc))) tilesInt.C:218 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 231)
;;  succ:       5 [91.0%]  (DFS_BACK)
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              5 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              16 [9.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 86 107 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 85 86 107 136
;; live  kill	
(code_label 227 92 93 6 98 "" [1 uses])
(note 93 227 94 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 6 (var_location:SI num_ints (reg/v:SI 61 [ num_ints ])) -1
     (nil))
(debug_insn 95 94 96 6 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) -1
     (nil))
(insn 96 95 97 6 (set (reg/f:DI 136 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:222 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 6 (set (reg:DI 5 di)
        (reg/f:DI 136 [ variables_list ])) tilesInt.C:222 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 136 [ variables_list ])
        (nil)))
(call_insn 98 97 99 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:222 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 99 98 100 6 (set (reg:DI 85 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:222 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 100 99 101 6 (set (reg/v:SI 86 [ num_variables ])
        (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:222 89 {*movsi_internal}
     (nil))
(debug_insn 101 100 103 6 (var_location:SI num_variables (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:222 -1
     (nil))
(debug_insn 103 101 9 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 9 103 104 6 (set (reg:DI 107 [ ivtmp.129 ])
        (const_int 0 [0])) tilesInt.C:224 87 {*movdi_internal_rex64}
     (nil))
(insn 104 9 105 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 85 [ D.11919 ]) 0)
            (const_int 0 [0]))) tilesInt.C:224 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 105 104 134 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 261)
            (pc))) tilesInt.C:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 261)
;;  succ:       8 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;;              8 [9.0%]  (LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 95 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 95 137
;; live  kill	
(code_label 134 105 106 7 94 "" [1 uses])
(note 106 134 107 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 7 (set (reg/f:DI 137 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:227 87 {*movdi_internal_rex64}
     (nil))
(insn 108 107 109 7 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:227 87 {*movdi_internal_rex64}
     (nil))
(insn 109 108 110 7 (set (reg:DI 5 di)
        (reg/f:DI 137 [ memorctable ])) tilesInt.C:227 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 137 [ memorctable ])
        (nil)))
(call_insn 110 109 111 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b9b8a05e600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:227 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 7 (set (reg:SI 95 [ D.11918 ])
        (reg:SI 0 ax)) tilesInt.C:227 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 112 111 113 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.11918 ])
            (const_int 0 [0]))) tilesInt.C:227 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.11918 ])
        (nil)))
(jump_insn 113 112 261 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) tilesInt.C:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 141)
;;  succ:       9 [50.0%] 
;;              10 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;;              8 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u125(6){ }u126(7){ }u127(16){ }u128(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 86 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 92 107 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 91 92 107 138
;; live  kill	 17 [flags]
(code_label 261 113 260 8 106 "" [1 uses])
(note 260 261 120 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 120 260 121 8 (var_location:SI i (subreg:SI (reg:DI 107 [ ivtmp.129 ]) 0)) -1
     (nil))
(insn 121 120 122 8 (set (reg/f:DI 138 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 123 8 (set (reg:DI 4 si)
        (reg:DI 107 [ ivtmp.129 ])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (nil))
(insn 123 122 124 8 (set (reg:DI 5 di)
        (reg/f:DI 138 [ variables_list ])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 138 [ variables_list ])
        (nil)))
(call_insn 124 123 125 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9b89f7bd00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:225 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 8 (set (reg/f:DI 91 [ D.11917 ])
        (reg:DI 0 ax)) tilesInt.C:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 126 125 127 8 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.11917 ])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.11917 ])
        (nil)))
(call_insn 127 126 128 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b9b89f5be00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:225 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 128 127 129 8 (set (reg:DF 92 [ D.11921 ])
        (reg:DF 21 xmm0)) tilesInt.C:225 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 129 128 130 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.129 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 68 [ variables ])) [0 MEM[base: variables_28, index: ivtmp.129_113, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 92 [ D.11921 ]))) tilesInt.C:225 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 92 [ D.11921 ])
        (nil)))
(debug_insn 130 129 132 8 (var_location:SI D#9 (plus:SI (subreg:SI (reg:DI 107 [ ivtmp.129 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 132 130 133 8 (var_location:SI i (debug_expr:SI D#9)) -1
     (nil))
(insn 133 132 135 8 (parallel [
            (set (reg:DI 107 [ ivtmp.129 ])
                (plus:DI (reg:DI 107 [ ivtmp.129 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 135 133 136 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 86 [ num_variables ])
            (subreg:SI (reg:DI 107 [ ivtmp.129 ]) 0))) tilesInt.C:224 7 {*cmpsi_1}
     (nil))
(jump_insn 136 135 141 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) tilesInt.C:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 134)
;;  succ:       8 [91.0%]  (FALLTHRU,DFS_BACK)
;;              7 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 139 140 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 139 140 141
;; live  kill	
(code_label 141 136 142 9 92 "" [1 uses])
(note 142 141 143 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 143 142 144 9 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:229 -1
     (nil))
(insn 144 143 145 9 (set (reg/f:DI 139 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:229 87 {*movdi_internal_rex64}
     (nil))
(insn 145 144 146 9 (set (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 139 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 139 [ memorctable ])
        (nil)))
(insn 146 145 147 9 (set (reg:SI 141 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:230 89 {*movsi_internal}
     (nil))
(insn 147 146 148 9 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:230 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 148 147 149 9 (set (reg:DI 38 r9)
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 149 148 150 9 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:230 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.11919 ])
        (nil)))
(insn 150 149 151 9 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 151 150 152 9 (set (reg:DI 1 dx)
        (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])
        (nil)))
(insn 152 151 153 9 (set (reg:SI 4 si)
        (reg:SI 141 [ num_tilings ])) tilesInt.C:230 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141 [ num_tilings ])
        (nil)))
(insn 153 152 154 9 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (nil))
(call_insn 154 153 158 9 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b9b8a092400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:230 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 10, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u173(6){ }u174(7){ }u175(16){ }u176(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 100 142 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 100 142 143
;; live  kill	
(note 158 154 159 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 10 (set (reg/f:DI 142 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:234 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 10 (set (reg:DI 5 di)
        (reg/f:DI 142 [ memorctable ])) tilesInt.C:234 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 142 [ memorctable ])
        (nil)))
(call_insn 161 160 162 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b9b89f4cf00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:234 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 162 161 163 10 (set (reg:DI 100 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:234 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 163 162 164 10 (var_location:SI memory_size (subreg:SI (reg:DI 100 [ D.11919 ]) 0)) tilesInt.C:234 -1
     (nil))
(insn 164 163 165 10 (set (reg:SI 143 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:235 89 {*movsi_internal}
     (nil))
(insn 165 164 166 10 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:235 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 166 165 167 10 (set (reg:DI 38 r9)
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 167 166 168 10 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 85 [ D.11919 ]) 0)) tilesInt.C:235 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.11919 ])
        (nil)))
(insn 168 167 169 10 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 169 168 170 10 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 100 [ D.11919 ]) 0)) tilesInt.C:235 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ D.11919 ])
        (nil)))
(insn 170 169 171 10 (set (reg:SI 4 si)
        (reg:SI 143 [ num_tilings ])) tilesInt.C:235 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ num_tilings ])
        (nil)))
(insn 171 170 172 10 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (nil))
(call_insn 172 171 173 10 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9b8a086b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:235 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u200(6){ }u201(7){ }u202(16){ }u203(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 144 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 144 145
;; live  kill	
(code_label 173 172 174 11 96 "" [0 uses])
(note 174 173 175 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 11 (set (reg:SI 145 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:237 89 {*movsi_internal}
     (nil))
(insn 176 175 177 11 (set (reg:DI 144 [ D.11919 ])
        (sign_extend:DI (reg:SI 145 [ num_tilings ]))) tilesInt.C:237 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 145 [ num_tilings ])
        (nil)))
(insn 177 176 178 11 (set (reg:DI 5 di)
        (reg:DI 144 [ D.11919 ])) tilesInt.C:237 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 144 [ D.11919 ])
        (nil)))
(call_insn 178 177 179 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9b89f7bb00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:237 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 11 (set (reg/v/f:DI 105 [ tiles_list ])
        (reg:DI 0 ax)) tilesInt.C:237 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 180 179 181 11 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 181 180 182 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:238 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 182 181 183 11 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 249)
            (pc))) tilesInt.C:238 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 249)
;;  succ:       12 [91.0%]  (FALLTHRU)
;;              14 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105

;; basic block 12, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u212(6){ }u213(7){ }u214(16){ }u215(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  gen 	 115
;; live  kill	
(note 183 182 10 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 10 183 202 12 (set (reg:DI 115 [ ivtmp.124 ])
        (const_int 0 [0])) tilesInt.C:238 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

;; basic block 13, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [91.0%]  (FALLTHRU,DFS_BACK)
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u216(6){ }u217(7){ }u218(16){ }u219(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 111 115 117 146 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 111 115 117 146 147
;; live  kill	 17 [flags]
(code_label 202 10 184 13 97 "" [0 uses])
(note 184 202 185 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 185 184 186 13 (var_location:SI i (subreg:SI (reg:DI 115 [ ivtmp.124 ]) 0)) -1
     (nil))
(insn 186 185 187 13 (set (reg:SI 147 [ MEM[base: the_tiles_33, index: ivtmp.124_122, step: 4, offset: 0B] ])
        (mem:SI (plus:DI (mult:DI (reg:DI 115 [ ivtmp.124 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 72 [ the_tiles ])) [0 MEM[base: the_tiles_33, index: ivtmp.124_122, step: 4, offset: 0B]+0 S4 A32])) tilesInt.C:239 89 {*movsi_internal}
     (nil))
(insn 187 186 188 13 (set (reg:DI 146 [ D.11919 ])
        (sign_extend:DI (reg:SI 147 [ MEM[base: the_tiles_33, index: ivtmp.124_122, step: 4, offset: 0B] ]))) tilesInt.C:239 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 147 [ MEM[base: the_tiles_33, index: ivtmp.124_122, step: 4, offset: 0B] ])
        (nil)))
(insn 188 187 189 13 (set (reg:DI 5 di)
        (reg:DI 146 [ D.11919 ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 146 [ D.11919 ])
        (nil)))
(call_insn 189 188 190 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:239 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 190 189 191 13 (set (reg/f:DI 111 [ D.11917 ])
        (reg:DI 0 ax)) tilesInt.C:239 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 191 190 192 13 (set (reg:DI 1 dx)
        (reg/f:DI 111 [ D.11917 ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.11917 ])
        (nil)))
(insn 192 191 193 13 (set (reg:DI 4 si)
        (reg:DI 115 [ ivtmp.124 ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 13 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (nil))
(call_insn 194 193 195 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9b89f7be00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:239 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 195 194 197 13 (parallel [
            (set (reg:SI 117 [ D.11918 ])
                (plus:SI (subreg:SI (reg:DI 115 [ ivtmp.124 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 197 195 198 13 (var_location:SI i (reg:SI 117 [ D.11918 ])) -1
     (nil))
(insn 198 197 199 13 (parallel [
            (set (reg:DI 115 [ ivtmp.124 ])
                (plus:DI (reg:DI 115 [ ivtmp.124 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 198 200 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])
            (reg:SI 117 [ D.11918 ]))) tilesInt.C:238 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.11918 ])
        (nil)))
(jump_insn 200 199 249 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 253)
            (pc))) tilesInt.C:238 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 253)
;;  succ:       13 [91.0%]  (FALLTHRU,DFS_BACK)
;;              15 [9.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

;; basic block 14, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [9.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
(code_label 249 200 248 14 101 "" [1 uses])
(note 248 249 13 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 13 248 253 14 (set (reg/f:DI 62 [ D.11917 ])
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ tiles_list ])
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [9.0%]  (LOOP_EXIT)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u246(6){ }u247(7){ }u248(16){ }u249(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
(code_label 253 13 252 15 102 "" [1 uses])
(note 252 253 12 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 12 252 210 15 (set (reg/f:DI 62 [ D.11917 ])
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ tiles_list ])
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 16, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u251(6){ }u252(7){ }u253(16){ }u254(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 76 149 150 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 76 149 150 151
;; live  kill	 17 [flags]
(code_label 210 12 211 16 89 "" [1 uses])
(note 211 210 212 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 16 (set (reg/f:DI 149 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:216 87 {*movdi_internal_rex64}
     (nil))
(insn 213 212 214 16 (set (reg:DI 5 di)
        (reg/f:DI 149 [ ints_list ])) tilesInt.C:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 149 [ ints_list ])
        (nil)))
(call_insn 214 213 215 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9b89f7bc00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:216 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 16 (set (reg:DI 76 [ D.11919 ])
        (reg:DI 0 ax)) tilesInt.C:216 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 216 215 217 16 (set (reg/v:SI 61 [ num_ints ])
        (subreg:SI (reg:DI 76 [ D.11919 ]) 0)) tilesInt.C:216 89 {*movsi_internal}
     (nil))
(debug_insn 217 216 218 16 (var_location:SI num_ints (subreg:SI (reg:DI 76 [ D.11919 ]) 0)) tilesInt.C:216 -1
     (nil))
(insn 218 217 219 16 (set (reg:DI 150 [ D.11920 ])
        (sign_extend:DI (subreg:SI (reg:DI 76 [ D.11919 ]) 0))) tilesInt.C:217 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 220 16 (parallel [
            (set (reg:DI 151 [ D.11920 ])
                (ashift:DI (reg:DI 150 [ D.11920 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:217 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.11920 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 221 16 (set (reg:DI 5 di)
        (reg:DI 151 [ D.11920 ])) tilesInt.C:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 151 [ D.11920 ])
        (nil)))
(call_insn 221 220 222 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b9b895d0000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:217 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 222 221 224 16 (set (reg/v/f:DI 60 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 152)
            (nil))))
(debug_insn 224 222 226 16 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) tilesInt.C:217 -1
     (nil))
(debug_insn 226 224 228 16 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 228 226 229 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 76 [ D.11919 ]) 0)
            (const_int 0 [0]))) tilesInt.C:218 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 76 [ D.11919 ])
        (nil)))
(jump_insn 229 228 230 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) tilesInt.C:218 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 227)
;;  succ:       17 [91.0%]  (FALLTHRU)
;;              6 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

;; basic block 17, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [91.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u271(6){ }u272(7){ }u273(16){ }u274(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 87
;; live  kill	
(note 230 229 6 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 6 230 234 17 (set (reg:DI 87 [ ivtmp.134 ])
        (const_int 0 [0])) tilesInt.C:218 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

;; basic block 18, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              4 [27.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u275(6){ }u276(7){ }u277(16){ }u278(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 60 61
;; live  kill	
(code_label 234 6 235 18 88 "" [1 uses])
(note 235 234 7 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 7 235 8 18 (set (reg/v:SI 61 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:204 89 {*movsi_internal}
     (nil))
(insn 8 7 259 18 (set (reg/v/f:DI 60 [ ints ])
        (const_int 0 [0])) tilesInt.C:203 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

;; basic block 19, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 18, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              2 [21.4%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u279(6){ }u280(7){ }u281(16){ }u282(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 259 8 254 19 105 "" [1 uses])
(note 254 259 239 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 239 254 242 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 62 [ D.11917 ])) tilesInt.C:241 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.11917 ])
        (nil)))
(insn 242 239 0 19 (use (reg/i:DI 0 ax)) tilesInt.C:241 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int CollisionTable_init(CollisionTable*, PyObject*, PyObject*) (_ZL19CollisionTable_initP14CollisionTableP7_objectS2_, funcdef_no=147, decl_uid=11218, cgraph_uid=147)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 8 (    1)


int CollisionTable_init(CollisionTable*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={10d,7u} r1={10d,3u} r2={8d,1u} r4={9d,3u} r5={13d,7u} r6={1d,7u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,6u} r17={12d,4u} r18={6d} r19={6d} r20={1d,11u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,1u} r38={8d,1u} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r60={2d,1u} r61={1d,1u} r63={1d,1u,1e} r64={2d,3u} r65={1d,3u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d} r79={1d} r80={2d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r87={1d,1u} 
;;    total ref usage 424{331d,90u,3e} in 51{45 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305
;;  reg->defs[] map:	0[0,9] 1[10,19] 2[20,27] 4[28,36] 5[37,49] 6[50,50] 7[51,51] 8[52,57] 9[58,63] 10[64,69] 11[70,75] 12[76,81] 13[82,87] 14[88,93] 15[94,99] 16[100,100] 17[101,112] 18[113,118] 19[119,124] 20[125,125] 21[126,132] 22[133,139] 23[140,146] 24[147,153] 25[154,160] 26[161,167] 27[168,174] 28[175,181] 29[182,187] 30[188,193] 31[194,199] 32[200,205] 33[206,211] 34[212,217] 35[218,223] 36[224,229] 37[230,237] 38[238,245] 39[246,251] 40[252,257] 45[258,263] 46[264,269] 47[270,275] 48[276,281] 49[282,287] 50[288,293] 51[294,299] 52[300,305] 60[306,307] 61[308,308] 63[309,309] 64[310,311] 65[312,312] 70[313,313] 71[314,314] 72[315,315] 73[316,316] 74[317,317] 75[318,318] 76[319,319] 77[320,320] 78[321,321] 79[322,322] 80[323,324] 81[325,325] 82[326,326] 83[327,327] 84[328,328] 85[329,329] 87[330,330] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d19(1){ }d27(2){ }d36(4){ }d49(5){ }d50(6){ }d51(7){ }d100(16){ }d125(20){ }d132(21){ }d139(22){ }d146(23){ }d153(24){ }d160(25){ }d167(26){ }d174(27){ }d181(28){ }d237(37){ }d245(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[9],1[19],2[27],4[36],5[49],6[50],7[51],16[100],20[125],21[132],22[139],23[146],24[153],25[160],26[167],27[174],28[181],37[237],38[245]
;; rd  kill	(126) 0[0,1,2,3,4,5,6,7,8,9],1[10,11,12,13,14,15,16,17,18,19],2[20,21,22,23,24,25,26,27],4[28,29,30,31,32,33,34,35,36],5[37,38,39,40,41,42,43,44,45,46,47,48,49],6[50],7[51],16[100],20[125],21[126,127,128,129,130,131,132],22[133,134,135,136,137,138,139],23[140,141,142,143,144,145,146],24[147,148,149,150,151,152,153],25[154,155,156,157,158,159,160],26[161,162,163,164,165,166,167],27[168,169,170,171,172,173,174],28[175,176,177,178,179,180,181],37[230,231,232,233,234,235,236,237],38[238,239,240,241,242,243,244,245]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[19],4[36],5[49],6[50],7[51],16[100],20[125]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d50(bb 0 insn -1) }u1(7){ d51(bb 0 insn -1) }u2(16){ d100(bb 0 insn -1) }u3(20){ d125(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 70 71 72 73 74 75
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 61 70 71 72 73 74 75
;; live  kill	 17 [flags]
;; rd  in  	(7) 1[19],4[36],5[49],6[50],7[51],16[100],20[125]
;; rd  gen 	(9) 0[7],17[109],61[308],70[313],71[314],72[315],73[316],74[317],75[318]
;; rd  kill	(29) 0[0,1,2,3,4,5,6,7,8,9],17[101,102,103,104,105,106,107,108,109,110,111,112],61[308],70[313],71[314],72[315],73[316],74[317],75[318]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; rd  out 	(5) 6[50],7[51],16[100],20[125],70[313]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d50(bb 0 insn -1) }
;;   reg 7 { d51(bb 0 insn -1) }
;;   reg 16 { d100(bb 0 insn -1) }
;;   reg 20 { d125(bb 0 insn -1) }

( 2 )->[3]->( 6(EH) 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(6){ d50(bb 0 insn -1) }u30(7){ d51(bb 0 insn -1) }u31(16){ d100(bb 0 insn -1) }u32(20){ d125(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 76 77 78 79 80 81 82 83 84 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 63 64 65 76 77 80 81 82 83 84 85
;; live  kill	 17 [flags] 78 79 80
;; rd  in  	(5) 6[50],7[51],16[100],20[125],70[313]
;; rd  gen 	(10) 63[309],64[310],65[312],76[319],77[320],81[325],82[326],83[327],84[328],85[329]
;; rd  kill	(15) 63[309],64[310,311],65[312],76[319],77[320],78[321],79[322],80[323,324],81[325],82[326],83[327],84[328],85[329]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; rd  out 	(6) 6[50],7[51],16[100],20[125],65[312],70[313]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d50(bb 0 insn -1) }
;;   reg 7 { d51(bb 0 insn -1) }
;;   reg 16 { d100(bb 0 insn -1) }
;;   reg 20 { d125(bb 0 insn -1) }

( 3 )->[4]->( 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u62(6){ d50(bb 0 insn -1) }u63(7){ d51(bb 0 insn -1) }u64(16){ d100(bb 0 insn -1) }u65(20){ d125(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; lr  def 	 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; live  gen 	 60
;; live  kill	
;; rd  in  	(6) 6[50],7[51],16[100],20[125],65[312],70[313]
;; rd  gen 	(1) 60[307]
;; rd  kill	(2) 60[306,307]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; rd  out 	(5) 6[50],7[51],16[100],20[125],60[307]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d50(bb 0 insn -1) }
;;   reg 7 { d51(bb 0 insn -1) }
;;   reg 16 { d100(bb 0 insn -1) }
;;   reg 20 { d125(bb 0 insn -1) }

( 2 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u68(6){ d50(bb 0 insn -1) }u69(7){ d51(bb 0 insn -1) }u70(16){ d100(bb 0 insn -1) }u71(20){ d125(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 60
;; live  kill	
;; rd  in  	(5) 6[50],7[51],16[100],20[125],70[313]
;; rd  gen 	(1) 60[306]
;; rd  kill	(2) 60[306,307]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; rd  out 	(5) 6[50],7[51],16[100],20[125],60[306]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d50(bb 0 insn -1) }
;;   reg 7 { d51(bb 0 insn -1) }
;;   reg 16 { d100(bb 0 insn -1) }
;;   reg 20 { d125(bb 0 insn -1) }

( 3(EH) )->[6]->( )
;; bb 6 artificial_defs: { d1(0){ }d10(1){ }}
;; bb 6 artificial_uses: { u72(6){ d50(bb 0 insn -1) }u73(7){ d51(bb 0 insn -1) }u74(16){ d100(bb 0 insn -1) }u75(20){ d125(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 87
;; live  kill	
;; rd  in  	(6) 6[50],7[51],16[100],20[125],65[312],70[313]
;; rd  gen 	(1) 87[330]
;; rd  kill	(1) 87[330]
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[51],16[100],20[125]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d50(bb 0 insn -1) }
;;   reg 7 { d51(bb 0 insn -1) }
;;   reg 16 { d100(bb 0 insn -1) }
;;   reg 20 { d125(bb 0 insn -1) }

( 5 4 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u83(6){ d50(bb 0 insn -1) }u84(7){ d51(bb 0 insn -1) }u85(16){ d100(bb 0 insn -1) }u86(20){ d125(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(6) 6[50],7[51],16[100],20[125],60[306,307]
;; rd  gen 	(1) 0[0]
;; rd  kill	(10) 0[0,1,2,3,4,5,6,7,8,9]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[50],7[51],16[100],20[125]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d50(bb 0 insn -1) }
;;   reg 7 { d51(bb 0 insn -1) }
;;   reg 16 { d100(bb 0 insn -1) }
;;   reg 20 { d125(bb 0 insn -1) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u89(0){ d0(bb 7 insn 67) }u90(6){ d50(bb 0 insn -1) }u91(7){ d51(bb 0 insn -1) }u92(20){ d125(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[50],7[51],16[100],20[125]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 7 insn 67) }
;;   reg 6 { d50(bb 0 insn -1) }
;;   reg 7 { d51(bb 0 insn -1) }
;;   reg 20 { d125(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 12 to worklist
  Adding insn 50 to worklist
  Adding insn 41 to worklist
  Adding insn 28 to worklist
  Adding insn 52 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 70 to worklist
Finished finding needed instructions:
  Adding insn 67 to worklist
Processing use of (reg 60 [ D.11928 ]) in insn 67:
  Adding insn 7 to worklist
  Adding insn 6 to worklist
Processing use of (reg 0 ax) in insn 70:
Processing use of (reg 7 sp) in insn 61:
Processing use of (reg 5 di) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 65 [ D.11930 ]) in insn 60:
  Adding insn 42 to worklist
Processing use of (reg 0 ax) in insn 42:
Processing use of (reg 7 sp) in insn 64:
Processing use of (reg 5 di) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 87) in insn 63:
  Adding insn 78 to worklist
Processing use of (reg 0 ax) in insn 78:
Processing use of (reg 65 [ D.11930 ]) in insn 52:
Processing use of (reg 70 [ self ]) in insn 52:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 28:
Processing use of (reg 5 di) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 76 [ safety ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 20 frame) in insn 26:
Processing use of (reg 7 sp) in insn 41:
Processing use of (reg 5 di) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 7 sp) in insn 50:
Processing use of (reg 1 dx) in insn 50:
  Adding insn 47 to worklist
Processing use of (reg 4 si) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 5 di) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 65 [ D.11930 ]) in insn 49:
Processing use of (reg 85 [ size ]) in insn 48:
  Adding insn 46 to worklist
Processing use of (reg 20 frame) in insn 46:
Processing use of (reg 83 [ D.11931 ]) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 84) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 17 flags) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 64 [ D.11928 ]) in insn 43:
  Adding insn 38 to worklist
Processing use of (subreg (reg 64 [ D.11928 ]) 0) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 81) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 82) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 17 flags) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 63 [ D.11929 ]) in insn 34:
  Adding insn 29 to worklist
Processing use of (reg 77) in insn 34:
  Adding insn 30 to worklist
Processing use of (reg 80) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 0 ax) in insn 29:
Processing use of (reg 17 flags) in insn 35:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 74) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 20 frame) in insn 11:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 0 ax) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 1 dx) in insn 21:
  Adding insn 17 to worklist
Processing use of (reg 2 cx) in insn 21:
  Adding insn 16 to worklist
Processing use of (reg 4 si) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 5 di) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 37 r8) in insn 21:
  Adding insn 15 to worklist
Processing use of (reg 38 r9) in insn 21:
  Adding insn 14 to worklist
Processing use of (reg 75) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 73) in insn 15:
  Adding insn 10 to worklist
Processing use of (reg 20 frame) in insn 10:
Processing use of (reg 71 [ args ]) in insn 19:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 72 [ kwds ]) in insn 18:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 17 flags) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 61 [ D.11928 ]) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 0 ax) in insn 22:
starting the processing of deferred insns
ending the processing of deferred insns


int CollisionTable_init(CollisionTable*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={10d,7u} r1={10d,3u} r2={8d,1u} r4={9d,3u} r5={13d,7u} r6={1d,7u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,6u} r17={12d,4u} r18={6d} r19={6d} r20={1d,11u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,1u} r38={8d,1u} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r60={2d,1u} r61={1d,1u} r63={1d,1u,1e} r64={2d,3u} r65={1d,3u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d} r79={1d} r80={2d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r87={1d,1u} 
;;    total ref usage 424{331d,90u,3e} in 51{45 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 70 71 72 73 74 75
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 61 70 71 72 73 74 75
;; live  kill	 17 [flags]
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 70 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 71 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 72 [ kwds ])
        (reg:DI 1 dx [ kwds ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ kwds ])
        (nil)))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 5 11 2 (parallel [
            (set (reg/f:DI 73)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:37 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 74)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:37 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 74)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 75)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyString_Type") [flags 0x40]  <var_decl 0x2b9b89f66688 PyString_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:DI 38 r9)
        (reg:DI 75)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 75)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyString_Type") [flags 0x40]  <var_decl 0x2b9b89f66688 PyString_Type>)
            (nil))))
(insn 15 14 16 2 (set (reg:DI 37 r8)
        (reg/f:DI 73)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (symbol_ref:DI ("_ZZL19CollisionTable_initP14CollisionTableP7_objectS2_E6kwlist") [flags 0x2]  <var_decl 0x2b9b8a090be0 kwlist>)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b9b8a269980 *.LC4>)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/v/f:DI 72 [ kwds ])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 72 [ kwds ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 71 [ args ])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 71 [ args ])
        (nil)))
(insn 20 19 21 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:37 91 {*movqi_internal}
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTupleAndKeywords") [flags 0x41]  <function_decl 0x2b9b8a018400 PyArg_ParseTupleAndKeywords>) [0 PyArg_ParseTupleAndKeywords S1 A8])
            (const_int 8 [0x8]))) tilesInt.C:37 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (nil))))))))))
(insn 22 21 23 2 (set (reg:SI 61 [ D.11928 ])
        (reg:SI 0 ax)) tilesInt.C:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.11928 ])
            (const_int 0 [0]))) tilesInt.C:37 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.11928 ])
        (nil)))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) tilesInt.C:37 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 926 [0x39e])
            (nil)))
 -> 75)
;;  succ:       5 [9.3%] 
;;              3 [90.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70

;; basic block 3, loop depth 0, count 0, freq 9074, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [90.7%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 76 77 78 79 80 81 82 83 84 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 63 64 65 76 77 80 81 82 83 84 85
;; live  kill	 17 [flags] 78 79 80
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg/f:DI 76 [ safety ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 safety+0 S8 A128])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 3 (set (reg:DI 5 di)
        (reg/f:DI 76 [ safety ])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ safety ])
        (nil)))
(call_insn 28 27 29 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyString_AsString") [flags 0x41]  <function_decl 0x2b9b89f65c00 PyString_AsString>) [0 PyString_AsString S1 A8])
            (const_int 0 [0]))) tilesInt.C:40 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 3 (set (reg/f:DI 63 [ D.11929 ])
        (reg:DI 0 ax)) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 30 29 33 3 (set (reg/f:DI 77)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b9b8a269a18 *.LC5>)) tilesInt.C:40 87 {*movdi_internal_rex64}
     (nil))
(insn 33 30 34 3 (set (reg:DI 80)
        (const_int 7 [0x7])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 3 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg/f:DI 63 [ D.11929 ]) [0 MEM[(void *)_11]+0 A8])
                    (mem/u/c:BLK (reg/f:DI 77) [0 MEM[(void *)"unsafe"]+0 A8])))
            (use (reg:DI 80))
            (use (const_int 1 [0x1]))
            (clobber (reg/f:DI 78 [ D.11929 ]))
            (clobber (reg/f:DI 79))
            (clobber (reg:DI 80))
        ]) tilesInt.C:40 921 {*cmpstrnqi_nz_1}
     (expr_list:REG_DEAD (reg:DI 80)
        (expr_list:REG_DEAD (reg/f:DI 77)
            (expr_list:REG_DEAD (reg/f:DI 63 [ D.11929 ])
                (expr_list:REG_UNUSED (reg:DI 80)
                    (expr_list:REG_UNUSED (reg/f:DI 79)
                        (expr_list:REG_UNUSED (reg/f:DI 78 [ D.11929 ])
                            (expr_list:REG_EQUAL (compare:CC (mem:BLK (reg/f:DI 63 [ D.11929 ]) [0 MEM[(void *)_11]+0 A8])
                                    (mem/u/c:BLK (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b9b8a269a18 *.LC5>) [0 MEM[(void *)"unsafe"]+0 A8]))
                                (nil)))))))))
(insn 35 34 36 3 (set (reg:QI 81)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (nil))
(insn 36 35 37 3 (set (reg:QI 82)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 3 (parallel [
            (set (subreg:QI (reg:SI 64 [ D.11928 ]) 0)
                (minus:QI (reg:QI 81)
                    (reg:QI 82)))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:40 307 {*subqi_1}
     (expr_list:REG_DEAD (reg:QI 82)
        (expr_list:REG_DEAD (reg:QI 81)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 3 (set (reg:SI 64 [ D.11928 ])
        (sign_extend:SI (subreg:QI (reg:SI 64 [ D.11928 ]) 0))) tilesInt.C:40 155 {extendqisi2}
     (nil))
(debug_insn 39 38 40 3 (var_location:SI isafety (zero_extend:SI (ne:QI (reg:SI 64 [ D.11928 ])
            (const_int 0 [0])))) -1
     (nil))
(insn 40 39 41 3 (set (reg:DI 5 di)
        (const_int 48 [0x30])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (nil))
(call_insn 41 40 42 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x2b9b8963e700 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) tilesInt.C:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 3 (set (reg/f:DI 65 [ D.11930 ])
        (reg:DI 0 ax)) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 43 42 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.11928 ])
            (const_int 0 [0]))) tilesInt.C:40 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 64 [ D.11928 ])
        (nil)))
(insn 44 43 45 3 (set (reg:QI 84)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 45 44 46 3 (set (reg:SI 83 [ D.11931 ])
        (zero_extend:SI (reg:QI 84))) tilesInt.C:40 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 84)
        (nil)))
(insn 46 45 47 3 (set (reg:SI 85 [ size ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S4 A128])) tilesInt.C:44 89 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (reg:SI 1 dx)
        (reg:SI 83 [ D.11931 ])) tilesInt.C:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.11931 ])
        (nil)))
(insn 48 47 49 3 (set (reg:SI 4 si)
        (reg:SI 85 [ size ])) tilesInt.C:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ size ])
        (nil)))
(insn 49 48 50 3 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.11930 ])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (nil))
(call_insn 50 49 51 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_tableC1Eii") [flags 0x41]  <function_decl 0x2b9b8a092000 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) tilesInt.C:44 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70

;; basic block 4, loop depth 0, count 0, freq 9074, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u62(6){ }u63(7){ }u64(16){ }u65(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; lr  def 	 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70
;; live  gen 	 60
;; live  kill	
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 7 4 (set (mem/f/j:DI (plus:DI (reg/v/f:DI 70 [ self ])
                (const_int 16 [0x10])) [0 self_17(D)->ct+0 S8 A64])
        (reg/f:DI 65 [ D.11930 ])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 70 [ self ])
        (expr_list:REG_DEAD (reg/f:DI 65 [ D.11930 ])
            (nil))))
(insn 7 52 75 4 (set (reg:SI 60 [ D.11928 ])
        (const_int 0 [0])) tilesInt.C:45 89 {*movsi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 5, loop depth 0, count 0, freq 926, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.3%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u68(6){ }u69(7){ }u70(16){ }u71(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 60
;; live  kill	
(code_label 75 7 74 5 115 "" [1 uses])
(note 74 75 6 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 6 74 77 5 (set (reg:SI 60 [ D.11928 ])
        (const_int -1 [0xffffffffffffffff])) tilesInt.C:38 89 {*movsi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 6 artificial_defs: { d1(0){ }d10(1){ }}
;; bb 6 artificial_uses: { u72(6){ }u73(7){ }u74(16){ }u75(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 87
;; live  kill	
(code_label/s 77 6 79 6 116 "" [1 uses])
(note 79 77 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 78 79 60 6 (set (reg:DI 87)
        (reg:DI 0 ax)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 60 78 61 6 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.11930 ])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.11930 ])
        (nil)))
(call_insn 61 60 63 6 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b9b8963e900 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) tilesInt.C:44 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 63 61 64 6 (set (reg:DI 5 di)
        (reg:DI 87)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 64 63 76 6 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2b9b8963cb00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 20000, maybe hot
;; Invalid sum of incoming frequencies 10000, should be 20000
;;  prev block 6, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	
(note 76 64 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 76 70 7 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ D.11928 ])) tilesInt.C:46 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 60 [ D.11928 ])
        (nil)))
(insn 70 67 0 7 (use (reg/i:SI 0 ax)) tilesInt.C:46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* CollisionTable_restore(CollisionTable*, PyObject*) (_ZL22CollisionTable_restoreP14CollisionTableP7_object, funcdef_no=151, decl_uid=11248, cgraph_uid=151)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


PyObject* CollisionTable_restore(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={5d,1u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,6u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 213{170d,42u,1e} in 23{20 regular + 3 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
;;  reg->defs[] map:	0[0,6] 1[7,11] 2[12,15] 4[16,21] 5[22,28] 6[29,29] 7[30,30] 8[31,33] 9[34,36] 10[37,39] 11[40,42] 12[43,45] 13[46,48] 14[49,51] 15[52,54] 16[55,55] 17[56,60] 18[61,63] 19[64,66] 20[67,67] 21[68,71] 22[72,75] 23[76,79] 24[80,83] 25[84,87] 26[88,91] 27[92,95] 28[96,99] 29[100,102] 30[103,105] 31[106,108] 32[109,111] 33[112,114] 34[115,117] 35[118,120] 36[121,123] 37[124,127] 38[128,131] 39[132,134] 40[135,137] 45[138,140] 46[141,143] 47[144,146] 48[147,149] 49[150,152] 50[153,155] 51[156,158] 52[159,161] 59[162,163] 60[164,164] 64[165,165] 65[166,166] 66[167,167] 67[168,168] 68[169,169] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d11(1){ }d15(2){ }d21(4){ }d28(5){ }d29(6){ }d30(7){ }d55(16){ }d67(20){ }d71(21){ }d75(22){ }d79(23){ }d83(24){ }d87(25){ }d91(26){ }d95(27){ }d99(28){ }d127(37){ }d131(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[11],2[15],4[21],5[28],6[29],7[30],16[55],20[67],21[71],22[75],23[79],24[83],25[87],26[91],27[95],28[99],37[127],38[131]
;; rd  kill	(73) 0[0,1,2,3,4,5,6],1[7,8,9,10,11],2[12,13,14,15],4[16,17,18,19,20,21],5[22,23,24,25,26,27,28],6[29],7[30],16[55],20[67],21[68,69,70,71],22[72,73,74,75],23[76,77,78,79],24[80,81,82,83],25[84,85,86,87],26[88,89,90,91],27[92,93,94,95],28[96,97,98,99],37[124,125,126,127],38[128,129,130,131]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[21],5[28],6[29],7[30],16[55],20[67]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d29(bb 0 insn -1) }u1(7){ d30(bb 0 insn -1) }u2(16){ d55(bb 0 insn -1) }u3(20){ d67(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 64 65 66
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 59 60 64 65 66
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[21],5[28],6[29],7[30],16[55],20[67]
;; rd  gen 	(7) 0[4],17[58],59[162],60[164],64[165],65[166],66[167]
;; rd  kill	(18) 0[0,1,2,3,4,5,6],17[56,57,58,59,60],59[162,163],60[164],64[165],65[166],66[167]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; rd  out 	(6) 6[29],7[30],16[55],20[67],59[162],64[165]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d55(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ d29(bb 0 insn -1) }u19(7){ d30(bb 0 insn -1) }u20(16){ d55(bb 0 insn -1) }u21(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax] 4 [si] 5 [di] 59 67 68
;; live  kill	
;; rd  in  	(6) 6[29],7[30],16[55],20[67],59[162],64[165]
;; rd  gen 	(4) 0[1],59[163],67[168],68[169]
;; rd  kill	(11) 0[0,1,2,3,4,5,6],59[162,163],67[168],68[169]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; rd  out 	(5) 6[29],7[30],16[55],20[67],59[163]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d55(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(6){ d29(bb 0 insn -1) }u34(7){ d30(bb 0 insn -1) }u35(16){ d55(bb 0 insn -1) }u36(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(7) 6[29],7[30],16[55],20[67],59[162,163],64[165]
;; rd  gen 	(1) 0[0]
;; rd  kill	(7) 0[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[29],7[30],16[55],20[67]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d55(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u39(0){ d0(bb 4 insn 33) }u40(6){ d29(bb 0 insn -1) }u41(7){ d30(bb 0 insn -1) }u42(20){ d67(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[29],7[30],16[55],20[67]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 4 insn 33) }
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 36 to worklist
Finished finding needed instructions:
  Adding insn 33 to worklist
Processing use of (reg 59 [ D.11936 ]) in insn 33:
  Adding insn 26 to worklist
  Adding insn 5 to worklist
Processing use of (reg 0 ax) in insn 26:
Processing use of (reg 0 ax) in insn 36:
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 4 si) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 5 di) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 68 [ self_8(D)->ct ]) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 64 [ self ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 67 [ file ]) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 7 sp) in insn 25:
Processing use of (reg 0 ax) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 0 ax) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 1 dx) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 4 si) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 5 di) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 65 [ args ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 66) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 20 frame) in insn 8:
Processing use of (reg 17 flags) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 60 [ D.11937 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 0 ax) in insn 14:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_restore(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={5d,1u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,6u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 213{170d,42u,1e} in 23{20 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 64 65 66
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 59 60 64 65 66
;; live  kill	 17 [flags]
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 64 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 65 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (parallel [
            (set (reg/f:DI 66)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:74 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/f:DI 66)) tilesInt.C:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b9b8a2834c0 *.LC6>)) tilesInt.C:74 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 65 [ args ])) tilesInt.C:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 65 [ args ])
        (nil)))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:74 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) tilesInt.C:74 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 14 13 5 2 (set (reg:SI 60 [ D.11937 ])
        (reg:SI 0 ax)) tilesInt.C:74 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 5 14 15 2 (set (reg/f:DI 59 [ D.11936 ])
        (const_int 0 [0])) tilesInt.C:75 87 {*movdi_internal_rex64}
     (nil))
(insn 15 5 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.11937 ])
            (const_int 0 [0]))) tilesInt.C:74 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.11937 ])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) tilesInt.C:74 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 27)
;;  succ:       4 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64

;; basic block 3, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax] 4 [si] 5 [di] 59 67 68
;; live  kill	
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:SI 67 [ file ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 file+0 S4 A128])) tilesInt.C:76 89 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 68 [ self_8(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 64 [ self ])
                (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])) tilesInt.C:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 64 [ self ])
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (reg:SI 67 [ file ])) tilesInt.C:76 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 67 [ file ])
        (nil)))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/f:DI 68 [ self_8(D)->ct ])) tilesInt.C:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ self_8(D)->ct ])
        (nil)))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table7restoreEi") [flags 0x41]  <function_decl 0x2b9b8a086a00 restore>) [0 restore S1 A8])
        (const_int 0 [0])) tilesInt.C:76 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:77 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:77 91 {*movqi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:77 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 26 25 27 3 (set (reg/f:DI 59 [ D.11936 ])
        (reg:DI 0 ax)) tilesInt.C:77 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 27 26 28 4 120 "" [1 uses])
(note 28 27 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 28 36 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 59 [ D.11936 ])) tilesInt.C:78 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.11936 ])
        (nil)))
(insn 36 33 0 4 (use (reg/i:DI 0 ax)) tilesInt.C:78 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* CollisionTable_save(CollisionTable*, PyObject*) (_ZL19CollisionTable_saveP14CollisionTableP7_object, funcdef_no=150, decl_uid=11243, cgraph_uid=150)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


PyObject* CollisionTable_save(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={5d,1u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,6u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 213{170d,42u,1e} in 23{20 regular + 3 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
;;  reg->defs[] map:	0[0,6] 1[7,11] 2[12,15] 4[16,21] 5[22,28] 6[29,29] 7[30,30] 8[31,33] 9[34,36] 10[37,39] 11[40,42] 12[43,45] 13[46,48] 14[49,51] 15[52,54] 16[55,55] 17[56,60] 18[61,63] 19[64,66] 20[67,67] 21[68,71] 22[72,75] 23[76,79] 24[80,83] 25[84,87] 26[88,91] 27[92,95] 28[96,99] 29[100,102] 30[103,105] 31[106,108] 32[109,111] 33[112,114] 34[115,117] 35[118,120] 36[121,123] 37[124,127] 38[128,131] 39[132,134] 40[135,137] 45[138,140] 46[141,143] 47[144,146] 48[147,149] 49[150,152] 50[153,155] 51[156,158] 52[159,161] 59[162,163] 60[164,164] 64[165,165] 65[166,166] 66[167,167] 67[168,168] 68[169,169] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d11(1){ }d15(2){ }d21(4){ }d28(5){ }d29(6){ }d30(7){ }d55(16){ }d67(20){ }d71(21){ }d75(22){ }d79(23){ }d83(24){ }d87(25){ }d91(26){ }d95(27){ }d99(28){ }d127(37){ }d131(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[11],2[15],4[21],5[28],6[29],7[30],16[55],20[67],21[71],22[75],23[79],24[83],25[87],26[91],27[95],28[99],37[127],38[131]
;; rd  kill	(73) 0[0,1,2,3,4,5,6],1[7,8,9,10,11],2[12,13,14,15],4[16,17,18,19,20,21],5[22,23,24,25,26,27,28],6[29],7[30],16[55],20[67],21[68,69,70,71],22[72,73,74,75],23[76,77,78,79],24[80,81,82,83],25[84,85,86,87],26[88,89,90,91],27[92,93,94,95],28[96,97,98,99],37[124,125,126,127],38[128,129,130,131]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[21],5[28],6[29],7[30],16[55],20[67]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d29(bb 0 insn -1) }u1(7){ d30(bb 0 insn -1) }u2(16){ d55(bb 0 insn -1) }u3(20){ d67(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 64 65 66
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 59 60 64 65 66
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[21],5[28],6[29],7[30],16[55],20[67]
;; rd  gen 	(7) 0[4],17[58],59[162],60[164],64[165],65[166],66[167]
;; rd  kill	(18) 0[0,1,2,3,4,5,6],17[56,57,58,59,60],59[162,163],60[164],64[165],65[166],66[167]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; rd  out 	(6) 6[29],7[30],16[55],20[67],59[162],64[165]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d55(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ d29(bb 0 insn -1) }u19(7){ d30(bb 0 insn -1) }u20(16){ d55(bb 0 insn -1) }u21(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax] 4 [si] 5 [di] 59 67 68
;; live  kill	
;; rd  in  	(6) 6[29],7[30],16[55],20[67],59[162],64[165]
;; rd  gen 	(4) 0[1],59[163],67[168],68[169]
;; rd  kill	(11) 0[0,1,2,3,4,5,6],59[162,163],67[168],68[169]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; rd  out 	(5) 6[29],7[30],16[55],20[67],59[163]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d55(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(6){ d29(bb 0 insn -1) }u34(7){ d30(bb 0 insn -1) }u35(16){ d55(bb 0 insn -1) }u36(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(7) 6[29],7[30],16[55],20[67],59[162,163],64[165]
;; rd  gen 	(1) 0[0]
;; rd  kill	(7) 0[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[29],7[30],16[55],20[67]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d55(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u39(0){ d0(bb 4 insn 33) }u40(6){ d29(bb 0 insn -1) }u41(7){ d30(bb 0 insn -1) }u42(20){ d67(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[29],7[30],16[55],20[67]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 4 insn 33) }
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 36 to worklist
Finished finding needed instructions:
  Adding insn 33 to worklist
Processing use of (reg 59 [ D.11942 ]) in insn 33:
  Adding insn 26 to worklist
  Adding insn 5 to worklist
Processing use of (reg 0 ax) in insn 26:
Processing use of (reg 0 ax) in insn 36:
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 4 si) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 5 di) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 68 [ self_8(D)->ct ]) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 64 [ self ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 67 [ file ]) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 7 sp) in insn 25:
Processing use of (reg 0 ax) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 0 ax) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 1 dx) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 4 si) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 5 di) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 65 [ args ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 66) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 20 frame) in insn 8:
Processing use of (reg 17 flags) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 60 [ D.11943 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 0 ax) in insn 14:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_save(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={5d,1u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={5d,1u} r18={3d} r19={3d} r20={1d,6u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 213{170d,42u,1e} in 23{20 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 64 65 66
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 59 60 64 65 66
;; live  kill	 17 [flags]
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 64 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 65 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (parallel [
            (set (reg/f:DI 66)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:65 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/f:DI 66)) tilesInt.C:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b9b8a2834c0 *.LC6>)) tilesInt.C:65 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 65 [ args ])) tilesInt.C:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 65 [ args ])
        (nil)))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:65 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b9b8a018300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) tilesInt.C:65 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 14 13 5 2 (set (reg:SI 60 [ D.11943 ])
        (reg:SI 0 ax)) tilesInt.C:65 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 5 14 15 2 (set (reg/f:DI 59 [ D.11942 ])
        (const_int 0 [0])) tilesInt.C:66 87 {*movdi_internal_rex64}
     (nil))
(insn 15 5 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.11943 ])
            (const_int 0 [0]))) tilesInt.C:65 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.11943 ])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) tilesInt.C:65 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 27)
;;  succ:       4 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64

;; basic block 3, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; live  gen 	 0 [ax] 4 [si] 5 [di] 59 67 68
;; live  kill	
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:SI 67 [ file ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 file+0 S4 A128])) tilesInt.C:67 89 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 68 [ self_8(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 64 [ self ])
                (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])) tilesInt.C:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 64 [ self ])
        (nil)))
(insn 20 19 21 3 (set (reg:SI 4 si)
        (reg:SI 67 [ file ])) tilesInt.C:67 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 67 [ file ])
        (nil)))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/f:DI 68 [ self_8(D)->ct ])) tilesInt.C:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ self_8(D)->ct ])
        (nil)))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table4saveEi") [flags 0x41]  <function_decl 0x2b9b8a086500 save>) [0 save S1 A8])
        (const_int 0 [0])) tilesInt.C:67 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:68 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:68 91 {*movqi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:68 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 26 25 27 3 (set (reg/f:DI 59 [ D.11942 ])
        (reg:DI 0 ax)) tilesInt.C:68 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 27 26 28 4 125 "" [1 uses])
(note 28 27 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 28 36 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 59 [ D.11942 ])) tilesInt.C:69 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.11942 ])
        (nil)))
(insn 36 33 0 4 (use (reg/i:DI 0 ax)) tilesInt.C:69 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* CollisionTable_usage(CollisionTable*) (_ZL20CollisionTable_usageP14CollisionTable, funcdef_no=149, decl_uid=11238, cgraph_uid=149)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


PyObject* CollisionTable_usage(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r60={1d,2u} r64={1d,1u} r65={1d,1u} r66={1d,1u} 
;;    total ref usage 132{113d,19u,0e} in 9{7 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,37] 18[38,39] 19[40,41] 20[42,42] 21[43,45] 22[46,48] 23[49,51] 24[52,54] 25[55,57] 26[58,60] 27[61,63] 28[64,66] 29[67,68] 30[69,70] 31[71,72] 32[73,74] 33[75,76] 34[77,78] 35[79,80] 36[81,82] 37[83,85] 38[86,88] 39[89,90] 40[91,92] 45[93,94] 46[95,96] 47[97,98] 48[99,100] 49[101,102] 50[103,104] 51[105,106] 52[107,108] 60[109,109] 64[110,110] 65[111,111] 66[112,112] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d42(20){ }d45(21){ }d48(22){ }d51(23){ }d54(24){ }d57(25){ }d60(26){ }d63(27){ }d66(28){ }d85(37){ }d88(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[42],21[45],22[48],23[51],24[54],25[57],26[60],27[63],28[66],37[85],38[88]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[42],21[43,44,45],22[46,47,48],23[49,50,51],24[52,53,54],25[55,56,57],26[58,59,60],27[61,62,63],28[64,65,66],37[83,84,85],38[86,87,88]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d42(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 64 65 66
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 60 64 65 66
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[42]
;; rd  gen 	(5) 0[0],60[109],64[110],65[111],66[112]
;; rd  kill	(7) 0[0,1,2],60[109],64[110],65[111],66[112]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(0){ d0(bb 2 insn 13) }u16(6){ d17(bb 0 insn -1) }u17(7){ d18(bb 0 insn -1) }u18(20){ d42(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[17],7[18],16[35],20[42]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 8:
Processing use of (reg 5 di) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 65 [ self_2(D)->ct ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 64 [ self ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 66 [ D.11948 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 60 [ ret ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 0 ax) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_usage(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r60={1d,2u} r64={1d,1u} r65={1d,1u} r66={1d,1u} 
;;    total ref usage 132{113d,19u,0e} in 9{7 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 64 65 66
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 60 64 65 66
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 64 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:55 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 65 [ self_2(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 64 [ self ])
                (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])) tilesInt.C:58 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 64 [ self ])
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 65 [ self_2(D)->ct ])) tilesInt.C:58 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ self_2(D)->ct ])
        (nil)))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x41]  <function_decl 0x2b9b8a086f00 usage>) [0 usage S1 A8])
            (const_int 0 [0]))) tilesInt.C:58 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/v:SI 60 [ ret ])
        (reg:SI 0 ax)) tilesInt.C:58 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 10 9 11 2 (var_location:SI ret (reg/v:SI 60 [ ret ])) tilesInt.C:58 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 66 [ D.11948 ])
        (sign_extend:DI (reg/v:SI 60 [ ret ]))) tilesInt.C:59 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 60 [ ret ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 66 [ D.11948 ])) tilesInt.C:59 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66 [ D.11948 ])
        (nil)))
(call_insn/j 13 12 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b9b89f4cc00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:59 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* CollisionTable_reset(CollisionTable*) (_ZL20CollisionTable_resetP14CollisionTable, funcdef_no=148, decl_uid=11235, cgraph_uid=148)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


PyObject* CollisionTable_reset(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r62={1d,1u} r63={1d,1u} 
;;    total ref usage 128{112d,16u,0e} in 7{5 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109
;;  reg->defs[] map:	0[0,3] 1[4,6] 2[7,9] 4[10,12] 5[13,17] 6[18,18] 7[19,19] 8[20,21] 9[22,23] 10[24,25] 11[26,27] 12[28,29] 13[30,31] 14[32,33] 15[34,35] 16[36,36] 17[37,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 62[110,110] 63[111,111] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[6],2[9],4[12],5[17],6[18],7[19],16[36],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(52) 0[0,1,2,3],1[4,5,6],2[7,8,9],4[10,11,12],5[13,14,15,16,17],6[18],7[19],16[36],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[17],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d18(bb 0 insn -1) }u1(7){ d19(bb 0 insn -1) }u2(16){ d36(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 62 63
;; live  kill	
;; rd  in  	(5) 5[17],6[18],7[19],16[36],20[43]
;; rd  gen 	(3) 0[0],62[110],63[111]
;; rd  kill	(6) 0[0,1,2,3],62[110],63[111]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(0){ d0(bb 2 insn 11) }u13(6){ d18(bb 0 insn -1) }u14(7){ d19(bb 0 insn -1) }u15(20){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[18],7[19],16[36],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 11) }
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 8:
Processing use of (reg 5 di) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 63 [ self_2(D)->ct ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 62 [ self ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 0 ax) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 5 di) in insn 11:
  Adding insn 9 to worklist
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_reset(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r62={1d,1u} r63={1d,1u} 
;;    total ref usage 128{112d,16u,0e} in 7{5 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 62 63
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 62 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 63 [ self_2(D)->ct ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 62 [ self ])
                (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])) tilesInt.C:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ self ])
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 63 [ self_2(D)->ct ])) tilesInt.C:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ self_2(D)->ct ])
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x41]  <function_decl 0x2b9b8a086e00 reset>) [0 reset S1 A8])
        (const_int 0 [0])) tilesInt.C:50 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9b8a16a7b8 *.LC1>)) tilesInt.C:51 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:51 91 {*movqi_internal}
     (nil))
(call_insn/j 11 10 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b9b8a018600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:51 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void inittiles() (inittiles, funcdef_no=156, decl_uid=11376, cgraph_uid=156)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)


void inittiles()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={4d,2u} r1={6d,2u} r2={5d,1u} r4={6d,2u} r5={7d,3u} r6={1d,5u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,4u} r17={6d,2u} r18={3d} r19={3d} r20={1d,5u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,3u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 208{167d,41u,0e} in 22{19 regular + 3 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162
;;  reg->defs[] map:	0[0,3] 1[4,9] 2[10,14] 4[15,20] 5[21,27] 6[28,28] 7[29,29] 8[30,32] 9[33,35] 10[36,38] 11[39,41] 12[42,44] 13[45,47] 14[48,50] 15[51,53] 16[54,54] 17[55,60] 18[61,63] 19[64,66] 20[67,67] 21[68,71] 22[72,75] 23[76,79] 24[80,83] 25[84,87] 26[88,91] 27[92,95] 28[96,99] 29[100,102] 30[103,105] 31[106,108] 32[109,111] 33[112,114] 34[115,117] 35[118,120] 36[121,123] 37[124,128] 38[129,132] 39[133,135] 40[136,138] 45[139,141] 46[142,144] 47[145,147] 48[148,150] 49[151,153] 50[154,156] 51[157,159] 52[160,162] 59[163,163] 60[164,164] 67[165,165] 68[166,166] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d9(1){ }d14(2){ }d20(4){ }d27(5){ }d28(6){ }d29(7){ }d54(16){ }d67(20){ }d71(21){ }d75(22){ }d79(23){ }d83(24){ }d87(25){ }d91(26){ }d95(27){ }d99(28){ }d128(37){ }d132(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[9],2[14],4[20],5[27],6[28],7[29],16[54],20[67],21[71],22[75],23[79],24[83],25[87],26[91],27[95],28[99],37[128],38[132]
;; rd  kill	(73) 0[0,1,2,3],1[4,5,6,7,8,9],2[10,11,12,13,14],4[15,16,17,18,19,20],5[21,22,23,24,25,26,27],6[28],7[29],16[54],20[67],21[68,69,70,71],22[72,73,74,75],23[76,77,78,79],24[80,81,82,83],25[84,85,86,87],26[88,89,90,91],27[92,93,94,95],28[96,97,98,99],37[124,125,126,127,128],38[129,130,131,132]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[28],7[29],16[54],20[67]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d28(bb 0 insn -1) }u1(7){ d29(bb 0 insn -1) }u2(16){ d54(bb 0 insn -1) }u3(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 59
;; live  kill	
;; rd  in  	(4) 6[28],7[29],16[54],20[67]
;; rd  gen 	(3) 0[2],17[59],59[163]
;; rd  kill	(11) 0[0,1,2,3],17[55,56,57,58,59,60],59[163]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[28],7[29],16[54],20[67]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ d28(bb 0 insn -1) }u10(7){ d29(bb 0 insn -1) }u11(16){ d54(bb 0 insn -1) }u12(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 60
;; live  kill	
;; rd  in  	(4) 6[28],7[29],16[54],20[67]
;; rd  gen 	(3) 0[1],17[57],60[164]
;; rd  kill	(11) 0[0,1,2,3],17[55,56,57,58,59,60],60[164]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; rd  out 	(5) 6[28],7[29],16[54],20[67],60[164]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ d28(bb 0 insn -1) }u24(7){ d29(bb 0 insn -1) }u25(16){ d54(bb 0 insn -1) }u26(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 67 68
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[28],7[29],16[54],20[67],60[164]
;; rd  gen 	(3) 0[0],67[165],68[166]
;; rd  kill	(6) 0[0,1,2,3],67[165],68[166]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[28],7[29],16[54],20[67]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 3 2 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(6){ d28(bb 0 insn -1) }u35(7){ d29(bb 0 insn -1) }u36(16){ d54(bb 0 insn -1) }u37(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 6[28],7[29],16[54],20[67],60[164]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[28],7[29],16[54],20[67]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

( 4 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u38(6){ d28(bb 0 insn -1) }u39(7){ d29(bb 0 insn -1) }u40(20){ d67(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[28],7[29],16[54],20[67]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 20 { d67(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 6 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
Processing use of (reg 67 [ D.11957 ]) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 68 [ MEM[(struct PyObject *)&CollisionTableType].ob_refcnt ]) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 7 sp) in insn 38:
Processing use of (reg 1 dx) in insn 38:
  Adding insn 35 to worklist
Processing use of (reg 4 si) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 5 di) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 60 [ m ]) in insn 37:
  Adding insn 21 to worklist
Processing use of (reg 0 ax) in insn 21:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 1 dx) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 2 cx) in insn 20:
  Adding insn 16 to worklist
Processing use of (reg 4 si) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 5 di) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 37 r8) in insn 20:
  Adding insn 15 to worklist
Processing use of (reg 17 flags) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 60 [ m ]) in insn 24:
Processing use of (reg 7 sp) in insn 6:
Processing use of (reg 5 di) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 59 [ D.11956 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 0 ax) in insn 7:
starting the processing of deferred insns
ending the processing of deferred insns


void inittiles()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={4d,2u} r1={6d,2u} r2={5d,1u} r4={6d,2u} r5={7d,3u} r6={1d,5u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,4u} r17={6d,2u} r18={3d} r19={3d} r20={1d,5u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,3u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 208{167d,41u,0e} in 22{19 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 59
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:380 87 {*movdi_internal_rex64}
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyType_Ready") [flags 0x41]  <function_decl 0x2b9b89e48c00 PyType_Ready>) [0 PyType_Ready S1 A8])
            (const_int 0 [0]))) tilesInt.C:380 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 59 [ D.11956 ])
        (reg:SI 0 ax)) tilesInt.C:380 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 8 7 9 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 59 [ D.11956 ])
            (const_int 0 [0]))) tilesInt.C:380 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.11956 ])
        (nil)))
(jump_insn 9 8 13 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) tilesInt.C:380 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 6333 [0x18bd])
            (nil)))
 -> 13)
;;  succ:       5 [36.7%]  (FALLTHRU)
;;              3 [63.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 6333, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [63.3%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 60
;; live  kill	
(code_label 13 9 14 3 134 "" [1 uses])
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 37 r8)
        (const_int 1013 [0x3f5])) tilesInt.C:382 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:DI 1 dx)
        (const_int 0 [0])) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL12TilesMethods") [flags 0x2]  <var_decl 0x2b9b8a0c44c0 TilesMethods>)) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b9b8a29bb48 *.LC7>)) tilesInt.C:382 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x2b9b8a018f00 Py_InitModule4_64>) [0 Py_InitModule4_64 S1 A8])
            (const_int 0 [0]))) tilesInt.C:382 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (nil)))))))
(insn 21 20 22 3 (set (reg/v/f:DI 60 [ m ])
        (reg:DI 0 ax)) tilesInt.C:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 22 21 24 3 (var_location:DI m (reg/v/f:DI 60 [ m ])) tilesInt.C:382 -1
     (nil))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 60 [ m ])
            (const_int 0 [0]))) tilesInt.C:384 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) tilesInt.C:384 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2164 [0x874])
            (nil)))
 -> 42)
;;  succ:       5 [21.6%] 
;;              4 [78.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 4, loop depth 0, count 0, freq 4963, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.4%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 67 68
;; live  kill	 17 [flags]
(note 26 25 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 26 33 4 (set (reg:DI 68 [ MEM[(struct PyObject *)&CollisionTableType].ob_refcnt ])
        (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])) tilesInt.C:387 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:DI 67 [ D.11957 ])
                (plus:DI (reg:DI 68 [ MEM[(struct PyObject *)&CollisionTableType].ob_refcnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:387 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 68 [ MEM[(struct PyObject *)&CollisionTableType].ob_refcnt ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 4 (set (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])
        (reg:DI 67 [ D.11957 ])) tilesInt.C:387 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67 [ D.11957 ])
        (nil)))
(insn 35 34 36 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b9b8a0b0000 CollisionTableType>)) tilesInt.C:388 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b9b8a29bbe0 *.LC8>)) tilesInt.C:388 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg/v/f:DI 60 [ m ])) tilesInt.C:388 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ m ])
        (nil)))
(call_insn/j 38 37 42 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyModule_AddObject") [flags 0x41]  <function_decl 0x2b9b8a018c00 PyModule_AddObject>) [0 PyModule_AddObject S1 A8])
            (const_int 0 [0]))) tilesInt.C:388 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 5037, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [21.6%] 
;;              2 [36.7%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 42 38 43 5 133 "" [1 uses])
(note 43 42 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

