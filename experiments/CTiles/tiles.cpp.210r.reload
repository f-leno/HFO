
;; Function int hash_UNH(int*, int, long int, int) (_Z8hash_UNHPiili, funcdef_no=1063, decl_uid=23699, cgraph_uid=307)


********** Local #1: **********

          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 169:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 46:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 59
	 Choosing alt 0 in insn 59:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 64:  (0) =r  (1) %0  (2) rme {*addsi_2}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 75:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=7,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 168:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=25,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 100:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=134 from oldreg=123, assigning class GENERAL_REGS to r134
  100: {r134:SI=r134:SI*r105:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  176: r134:SI=r117:SI
    Inserting insn reload after:
  177: r123:SI=r134:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 107:  (0) =r  (1) %0  (2) Z {*anddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 112:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmoddi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 126:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=1,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 141:  (0) =r  (1) %0  (2) rme {*adddi_2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 159: point = 0
   Insn 156: point = 0
  BB 13
   Insn 174: point = 2
   Insn 149: point = 2
  BB 12
   Insn 142: point = 5
   Insn 141: point = 5
  BB 11
   Insn 130: point = 6
   Insn 129: point = 6
   Insn 126: point = 6
   Insn 125: point = 8
   Insn 124: point = 9
  BB 10
   Insn 117: point = 12
   Insn 116: point = 12
   Insn 112: point = 12
   Insn 110: point = 12
   Insn 109: point = 13
   Insn 107: point = 15
   Insn 102: point = 15
   Insn 177: point = 17
	Hard reg 2 is preferable by r134 with profit 40
   Insn 100: point = 19
   Insn 176: point = 19
   Insn 98: point = 20
   Insn 96: point = 22
  BB 9
   Insn 168: point = 24
   Insn 36: point = 25
   Insn 35: point = 26
  BB 14
   Insn 37: point = 28
  BB 8
   Insn 91: point = 29
   Insn 90: point = 29
  BB 7
   Insn 84: point = 30
  BB 6
   Insn 77: point = 31
   Insn 76: point = 31
   Insn 75: point = 31
  BB 5
   Insn 65: point = 32
   Insn 64: point = 32
   Insn 60: point = 32
   Insn 59: point = 32
   Insn 58: point = 33
   Insn 57: point = 33
   Insn 56: point = 35
   Insn 55: point = 36
  BB 4
   Insn 34: point = 37
   Insn 33: point = 38
   Insn 50: point = 39
  BB 3
   Insn 46: point = 40
   Insn 169: point = 41
  BB 2
   Insn 42: point = 43
   Insn 41: point = 43
   Insn 31: point = 43
   Insn 30: point = 44
   Insn 29: point = 45
   Insn 28: point = 46
 r87: [34..35]
 r90: [32..37]
 r91: [31..41]
 r96: [16..20]
 r104: [10..26]
 r105: [12..25]
 r107: [3..6]
 r108: [32..38]
 r109: [28..28] [6..8] [0..2]
 r110: [31..40]
 r114: [29..46] [12..27]
 r115: [29..45] [12..27]
 r116: [29..44] [5..27]
 r117: [29..43] [12..27]
 r119: [32..33]
 r121: [21..22]
 r123: [16..17]
 r126: [14..15]
 r128: [12..13]
 r130: [7..10]
 r131: [9..9]
 r133: [12..24]
 r134: [18..19]
Compressing live ranges: from 47 to 23 - 48%
Ranges after the compression:
 r87: [21..22]
 r90: [19..22]
 r91: [19..22]
 r96: [12..15]
 r104: [7..17]
 r105: [8..17]
 r107: [2..3]
 r108: [19..22]
 r109: [18..18] [3..5] [0..1]
 r110: [19..22]
 r114: [19..22] [8..17]
 r115: [19..22] [8..17]
 r116: [19..22] [2..17]
 r117: [19..22] [8..17]
 r119: [19..20]
 r121: [16..17]
 r123: [12..13]
 r126: [10..11]
 r128: [8..9]
 r130: [4..7]
 r131: [6..6]
 r133: [8..17]
 r134: [14..15]
	 Assigning to 134 (cl=GENERAL_REGS, orig=123, freq=120, tfirst=134, tfreq=120)...
	   Assign 2 to reload r134 (freq=120)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********


********** Local #2: **********

  Slot 0 regnos (width = 4):	 115
  Slot 1 regnos (width = 8):	 116
Changing spilled pseudos to memory in insn #29
Changing spilled pseudos to memory in insn #30
Changing spilled pseudos to memory in insn #90
Changing spilled pseudos to memory in insn #116
Changing spilled pseudos to memory in insn #124
Changing spilled pseudos to memory in insn #140
Changing spilled pseudos to memory in insn #141
New elimination table:
Can eliminate 16 to 7 (offset=80, prev_offset=64)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)

********** Local #3: **********

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 141:  (0) =r  (1) %0  (2) rme {*adddi_2}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmoddi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=80, prev_offset=80)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=16)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
changing reg in insn 56
changing reg in insn 59
changing reg in insn 58
changing reg in insn 34
changing reg in insn 58
changing reg in insn 60
changing reg in insn 169
changing reg in insn 75
changing reg in insn 60
changing reg in insn 50
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 98
changing reg in insn 102
changing reg in insn 173
changing reg in insn 99
changing reg in insn 110
changing reg in insn 35
changing reg in insn 124
changing reg in insn 124
changing reg in insn 114
changing reg in insn 111
changing reg in insn 110
changing reg in insn 94
changing reg in insn 112
changing reg in insn 36
changing reg in insn 116
changing reg in insn 115
changing reg in insn 112
changing reg in insn 100
changing reg in insn 96
changing reg in insn 95
changing reg in insn 141
changing reg in insn 126
changing reg in insn 141
changing reg in insn 141
changing reg in insn 140
changing reg in insn 129
changing reg in insn 128
changing reg in insn 64
changing reg in insn 33
changing reg in insn 64
changing reg in insn 64
changing reg in insn 37
changing reg in insn 149
changing reg in insn 125
changing reg in insn 156
changing reg in insn 46
changing reg in insn 76
changing reg in insn 28
changing reg in insn 98
changing reg in insn 31
changing reg in insn 57
changing reg in insn 96
changing reg in insn 98
changing reg in insn 172
changing reg in insn 107
changing reg in insn 102
changing reg in insn 107
changing reg in insn 109
changing reg in insn 109
changing reg in insn 109
changing reg in insn 110
changing reg in insn 124
changing reg in insn 124
changing reg in insn 168
changing reg in insn 109


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 18 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 20 (  1.2)


int hash_UNH(int*, int, long int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={11d,12u} r1={7d,15u} r2={9d,9u,1e} r3={2d,2u} r4={3d,4u} r5={3d,2u} r6={2d,4u,1e} r7={1d,25u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={16d,7u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r41={1d,1u} r42={3d,3u} r43={1d,1u} r44={1d,1u} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 196{108d,86u,2e} in 71{70 regular + 1 call} insns.
(note 27 0 38 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags] 43 [r14] 44 [r15]
;; live  kill	
(note 38 27 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 28 38 29 2 (set (reg/v/f:DI 43 r14 [orig:114 ints ] [114])
        (reg:DI 5 di [ ints ])) tiles.cpp:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ ints ])
        (nil)))
(insn 29 28 30 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
        (reg:SI 4 si [ num_ints ])) tiles.cpp:129 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_ints ])
        (nil)))
(insn 30 29 31 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])
        (reg:DI 1 dx [ m ])) tiles.cpp:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ m ])
        (nil)))
(insn 31 30 32 2 (set (reg/v:SI 44 r15 [orig:117 increment ] [117])
        (reg:SI 2 cx [ increment ])) tiles.cpp:129 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ increment ])
        (nil)))
(note 32 31 40 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 40 32 41 2 (var_location:DI sum (const_int 0 [0])) tiles.cpp:134 -1
     (nil))
(insn 41 40 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b67b8f8c688 first_call>) [0 first_call+0 S4 A128])
            (const_int 0 [0]))) tiles.cpp:137 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) tiles.cpp:137 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 85)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 7 [sp] 43 [r14] 44 [r15]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 20, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 41 [r12]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 41 [r12]
;; live  kill	
(note 43 42 169 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 169 43 46 3 (set (reg:DI 6 bp [orig:91 ivtmp.78 ] [91])
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)) 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)
        (nil)))
(insn 46 169 79 3 (set (reg/f:DI 41 r12 [orig:110 D.25971 ] [110])
        (const:DI (plus:DI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)
                (const_int 8192 [0x2000])))) 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)
                (const_int 8192 [0x2000])))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [99.0%]  (DFS_BACK)
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx] 42 [r13]
;; live  kill	
(code_label 79 46 47 4 6 "" [1 uses])
(note 47 79 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 48 47 50 4 (var_location:SI k (clobber (const_int 0 [0]))) -1
     (nil))
(insn 50 48 52 4 (set (mem:SI (reg:DI 6 bp [orig:91 ivtmp.78 ] [91]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) tiles.cpp:139 89 {*movsi_internal}
     (nil))
(debug_insn 52 50 33 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 33 52 34 4 (set (reg:SI 3 bx [orig:108 D.25970 ] [108])
        (const_int 4 [0x4])) tiles.cpp:139 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
(insn 34 33 68 4 (set (reg:SI 42 r13 [orig:90 D.25965 ] [90])
        (const_int 0 [0])) tiles.cpp:139 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 5, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [75.0%]  (DFS_BACK)
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
(code_label 68 34 53 5 4 "" [1 uses])
(note 53 68 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 5 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(call_insn 55 54 56 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x2b67b8e39500 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) tiles.cpp:141 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 56 55 57 5 (set (reg:SI 0 ax [orig:87 D.25966 ] [87])
        (reg:SI 0 ax)) tiles.cpp:141 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 57 56 58 5 (set (reg:SI 0 ax [orig:119 D.25965 ] [119])
        (zero_extend:SI (reg:QI 0 ax [orig:87 D.25966 ] [87]))) tiles.cpp:141 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:87 D.25966 ] [87])
        (nil)))
(insn 58 57 59 5 (parallel [
            (set (reg:SI 42 r13 [orig:90 D.25965 ] [90])
                (ashift:SI (reg:SI 42 r13 [orig:90 D.25965 ] [90])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 512 {*ashlsi3_1}
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:SI 42 r13 [orig:90 D.25965 ] [90])
                (ior:SI (reg:SI 42 r13 [orig:90 D.25965 ] [90])
                    (reg:SI 0 ax [orig:119 D.25965 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:141 412 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:119 D.25965 ] [119])
        (nil)))
(insn 60 59 62 5 (set (mem:SI (reg:DI 6 bp [orig:91 ivtmp.78 ] [91]) [0 MEM[base: _115, offset: 0B]+0 S4 A32])
        (reg:SI 42 r13 [orig:90 D.25965 ] [90])) tiles.cpp:141 89 {*movsi_internal}
     (nil))
(debug_insn 62 60 63 5 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(note 63 62 64 5 NOTE_INSN_DELETED)
(insn 64 63 65 5 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:SI (reg:SI 3 bx [orig:108 D.25970 ] [108])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 3 bx [orig:108 D.25970 ] [108])
                (plus:SI (reg:SI 3 bx [orig:108 D.25970 ] [108])
                    (const_int -1 [0xffffffffffffffff])))
        ]) tiles.cpp:140 281 {*addsi_2}
     (nil))
(jump_insn 65 64 72 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) tiles.cpp:140 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
        (nil))
 -> 68)
;;  succ:       5 [75.0%]  (DFS_BACK)
;;              6 [25.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 6, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [25.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 6 [bp] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(note 72 65 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 74 72 75 6 (var_location:SI k (debug_expr:SI D#2)) -1
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg:DI 6 bp [orig:91 ivtmp.78 ] [91])
                (plus:DI (reg:DI 6 bp [orig:91 ivtmp.78 ] [91])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 76 75 77 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [orig:91 ivtmp.78 ] [91])
            (reg/f:DI 41 r12 [orig:110 D.25971 ] [110]))) tiles.cpp:138 8 {*cmpdi_1}
     (expr_list:REG_EQUAL (compare:CCZ (reg:DI 6 bp [orig:91 ivtmp.78 ] [91])
            (const:DI (plus:DI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)
                    (const_int 8192 [0x2000]))))
        (nil)))
(jump_insn 77 76 83 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 79)
            (pc))) tiles.cpp:138 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9899 [0x26ab])
        (nil))
 -> 79)
;;  succ:       4 [99.0%]  (DFS_BACK)
;;              7 [1.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

;; basic block 7, loop depth 0, count 0, freq 20, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [1.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 83 77 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 7 (set (mem/c:SI (symbol_ref:DI ("_ZZ8hash_UNHPiiliE10first_call") [flags 0x2]  <var_decl 0x2b67b8f8c688 first_call>) [0 first_call+0 S4 A128])
        (const_int 0 [0])) tiles.cpp:143 89 {*movsi_internal}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp] 43 [r14] 44 [r15]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 85 84 86 8 2 "" [1 uses])
(note 86 85 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 88 86 89 8 (var_location:DI sum (const_int 0 [0])) -1
     (nil))
(debug_insn 89 88 90 8 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 90 89 91 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
            (const_int 0 [0]))) tiles.cpp:146 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 91 90 92 8 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) tiles.cpp:146 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 164)
;;  succ:       9 [91.0%]  (FALLTHRU)
;;              14 [9.0%] 
;; lr  out 	 7 [sp] 43 [r14] 44 [r15]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [91.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
(note 92 91 35 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 35 92 36 9 (set (reg/v:DI 0 ax [orig:104 sum ] [104])
        (const_int 0 [0])) tiles.cpp:134 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 36 35 168 9 (set (reg/v:SI 1 dx [orig:105 i ] [105])
        (const_int 0 [0])) tiles.cpp:146 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 168 36 119 9 (set (reg/f:DI 5 di [133])
        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)) 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp] 43 [r14] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 409, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [91.0%]  (DFS_BACK)
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 5 [di] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(code_label 119 168 93 10 9 "" [1 uses])
(note 93 119 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 10 (var_location:DI sum (reg/v:DI 0 ax [orig:104 sum ] [104])) -1
     (nil))
(debug_insn 95 94 96 10 (var_location:SI i (reg/v:SI 1 dx [orig:105 i ] [105])) -1
     (nil))
(insn 96 95 97 10 (set (reg:DI 2 cx [orig:121 D.25967 ] [121])
        (sign_extend:DI (reg/v:SI 1 dx [orig:105 i ] [105]))) tiles.cpp:148 149 {*extendsidi2_rex64}
     (nil))
(note 97 96 98 10 NOTE_INSN_DELETED)
(insn 98 97 173 10 (set (reg/v:DI 4 si [orig:96 index ] [96])
        (sign_extend:DI (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:121 D.25967 ] [121])
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 43 r14 [orig:114 ints ] [114])) [0 *_29+0 S4 A32]))) tiles.cpp:148 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:121 D.25967 ] [121])
        (nil)))
(debug_insn 173 98 99 10 (var_location:DI D#4 (reg/v:DI 4 si [orig:96 index ] [96])) -1
     (nil))
(debug_insn 99 173 176 10 (var_location:DI index (reg/v:DI 4 si [orig:96 index ] [96])) tiles.cpp:148 -1
     (nil))
(insn 176 99 100 10 (set (reg:SI 2 cx [orig:123 D.25966 ] [123])
        (reg/v:SI 44 r15 [orig:117 increment ] [117])) tiles.cpp:149 89 {*movsi_internal}
     (nil))
(insn 100 176 177 10 (parallel [
            (set (reg:SI 2 cx [orig:123 D.25966 ] [123])
                (mult:SI (reg:SI 2 cx [orig:123 D.25966 ] [123])
                    (reg/v:SI 1 dx [orig:105 i ] [105])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:149 344 {*mulsi3_1}
     (nil))
(insn 177 100 172 10 (set (reg:SI 2 cx [orig:123 D.25966 ] [123])
        (reg:SI 2 cx [orig:123 D.25966 ] [123])) tiles.cpp:149 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:123 D.25966 ] [123])
        (nil)))
(debug_insn 172 177 101 10 (var_location:SI D#3 (reg:SI 2 cx [orig:123 D.25966 ] [123])) -1
     (nil))
(note 101 172 102 10 NOTE_INSN_DELETED)
(insn 102 101 105 10 (set (reg:DI 2 cx [orig:126 index ] [126])
        (plus:DI (reg/v:DI 4 si [orig:96 index ] [96])
            (reg:DI 2 cx [orig:123 D.25966 ] [123]))) tiles.cpp:149 267 {*leadi}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:123 D.25966 ] [123])
        (expr_list:REG_DEAD (reg/v:DI 4 si [orig:96 index ] [96])
            (nil))))
(debug_insn 105 102 106 10 (var_location:DI index (and:DI (plus:DI (sign_extend:DI (debug_expr:SI D#3))
            (debug_expr:DI D#4))
        (const_int 2047 [0x7ff]))) -1
     (nil))
(note 106 105 107 10 NOTE_INSN_DELETED)
(insn 107 106 109 10 (parallel [
            (set (reg:DI 2 cx [orig:126 index ] [126])
                (and:DI (reg:DI 2 cx [orig:126 index ] [126])
                    (const_int 2047 [0x7ff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:155 392 {*anddi_1}
     (nil))
(insn 109 107 110 10 (set (reg:DI 2 cx [orig:128 D.25969 ] [128])
        (zero_extend:DI (mem/j:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:126 index ] [126])
                        (const_int 4 [0x4]))
                    (reg/f:DI 5 di [133])) [0 rndseq S4 A32]))) tiles.cpp:155 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:126 index ] [126])
        (expr_list:REG_EQUAL (zero_extend:DI (mem/j:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:126 index ] [126])
                            (const_int 4 [0x4]))
                        (symbol_ref:DI ("_ZZ8hash_UNHPiiliE6rndseq") [flags 0x2]  <var_decl 0x2b67b8f8c5f0 rndseq>)) [0 rndseq S4 A32]))
            (nil))))
(insn 110 109 111 10 (parallel [
            (set (reg/v:DI 0 ax [orig:104 sum ] [104])
                (plus:DI (reg/v:DI 0 ax [orig:104 sum ] [104])
                    (reg:DI 2 cx [orig:128 D.25969 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:155 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:128 D.25969 ] [128])
        (nil)))
(debug_insn 111 110 112 10 (var_location:DI sum (reg/v:DI 0 ax [orig:104 sum ] [104])) tiles.cpp:155 -1
     (nil))
(insn 112 111 114 10 (parallel [
            (set (reg/v:SI 1 dx [orig:105 i ] [105])
                (plus:SI (reg/v:SI 1 dx [orig:105 i ] [105])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:146 273 {*addsi_1}
     (nil))
(debug_insn 114 112 115 10 (var_location:DI sum (reg/v:DI 0 ax [orig:104 sum ] [104])) -1
     (nil))
(debug_insn 115 114 116 10 (var_location:SI i (reg/v:SI 1 dx [orig:105 i ] [105])) -1
     (nil))
(insn 116 115 117 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
            (reg/v:SI 1 dx [orig:105 i ] [105]))) tiles.cpp:146 7 {*cmpsi_1}
     (nil))
(jump_insn 117 116 123 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 119)
            (pc))) tiles.cpp:146 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 119)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp] 43 [r14] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
(note 123 117 124 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 11 (parallel [
            (set (reg:DI 0 ax [131])
                (div:DI (reg/v:DI 0 ax [orig:104 sum ] [104])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])))
            (set (reg:DI 1 dx [orig:130 D.25969 ] [130])
                (mod:DI (reg/v:DI 0 ax [orig:104 sum ] [104])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:157 367 {*divmoddi4}
     (expr_list:REG_DEAD (reg/v:DI 0 ax [orig:104 sum ] [104])
        (expr_list:REG_UNUSED (reg:DI 0 ax [131])
            (nil))))
(insn 125 124 126 11 (set (reg:SI 0 ax [orig:109 D.25966 ] [109])
        (reg:SI 1 dx [orig:130 D.25969 ] [130])) tiles.cpp:157 89 {*movsi_internal}
     (nil))
(insn 126 125 128 11 (set (reg/v:DI 1 dx [orig:107 index ] [107])
        (sign_extend:DI (reg:SI 1 dx [orig:130 D.25969 ] [130]))) tiles.cpp:157 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:130 D.25969 ] [130])
        (nil)))
(debug_insn 128 126 129 11 (var_location:DI index (reg/v:DI 1 dx [orig:107 index ] [107])) -1
     (nil))
(insn 129 128 130 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 1 dx [orig:107 index ] [107])
            (const_int 0 [0]))) tiles.cpp:158 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 130 129 171 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 150)
            (pc))) tiles.cpp:158 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 0 [0])
        (nil))
 -> 150)
;;  succ:       12 [100.0%]  (FALLTHRU)
;;              15
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

;; basic block 12, loop depth 0, count 0, freq 409, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              12 [91.0%]  (DFS_BACK)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 171 130 170 12 14 "" [1 uses])
(note 170 171 138 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 138 170 140 12 NOTE_INSN_DELETED)
(debug_insn 140 138 141 12 (var_location:DI index (plus:DI (reg/v:DI 1 dx [orig:107 index ] [107])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64]))) -1
     (nil))
(insn 141 140 142 12 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:DI (reg/v:DI 1 dx [orig:107 index ] [107])
                        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64]))
                    (const_int 0 [0])))
            (set (reg/v:DI 1 dx [orig:107 index ] [107])
                (plus:DI (reg/v:DI 1 dx [orig:107 index ] [107])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])))
        ]) tiles.cpp:158 282 {*adddi_2}
     (nil))
(jump_insn 142 141 148 12 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 171)
            (pc))) tiles.cpp:158 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 171)
;;  succ:       12 [91.0%]  (DFS_BACK)
;;              13 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

;; basic block 13, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 148 142 149 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 174 13 (set (reg:SI 0 ax [orig:109 D.25966 ] [109])
        (reg:SI 1 dx [orig:107 index ] [107])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:DI 1 dx [orig:107 index ] [107])
        (nil)))
(jump_insn 174 149 175 13 (set (pc)
        (label_ref 150)) 650 {jump}
     (nil)
 -> 150)
;;  succ:       15 [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 175 174 164)
;; basic block 14, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 164 175 163 14 13 "" [1 uses])
(note 163 164 37 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 37 163 150 14 (set (reg:SI 0 ax [orig:109 D.25966 ] [109])
        (const_int 0 [0])) tiles.cpp:146 89 {*movsi_internal}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 15, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 14, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              11
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 150 37 151 15 7 "" [2 uses])
(note 151 150 156 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 156 151 159 15 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:109 D.25966 ] [109])) tiles.cpp:163 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:109 D.25966 ] [109])
        (nil)))
(insn 159 156 0 15 (use (reg/i:SI 0 ax)) tiles.cpp:163 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Function void tiles(int*, int, int, float*, int, int*, int) (_Z5tilesPiiiPfiS_i, funcdef_no=1061, decl_uid=23639, cgraph_uid=305)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=400, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=336, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 118
Updating elimination of equiv for reg 137
Updating elimination of equiv for reg 156
Updating elimination of equiv for reg 182
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 43:  (0) =r  (1) p {*leasi}
      Creating newreg=212 from oldreg=84, assigning class GENERAL_REGS to r212
   43: r212:SI=r135:SI+r137:SI+0x1
    Inserting insn reload after:
  270: r84:SI=r212:SI

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 270:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) p {*leadi}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=15,losers=2 -- reject
	 Choosing alt 0 in insn 87:  (0) =x  (1) r {*floatsisf2_sse_interunit}
      Creating newreg=213 from oldreg=125, assigning class SSE_REGS to r213
   87: r213:SF=float(r132:SI)
    Inserting insn reload after:
  271: r125:SF=r213:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 271:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 94:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
      Creating newreg=214 from oldreg=154, assigning class SSE_REGS to r214
   94: r214:SF=r214:SF*[r209:DI+r207:DI]
    Inserting insn reload before:
  272: r214:SF=r125:SF
    Inserting insn reload after:
  273: r154:SF=r214:SF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 272:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) x {fix_truncsfsi_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 103:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (1) rzw {*call_value}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 127:  (0) r  (1) rm {*extendsidi2_rex64}
      Creating newreg=215 from oldreg=121, assigning class GENERAL_REGS to r215
  127: r215:DI=sign_extend(r133:SI)
      REG_DEAD r133:SI
    Inserting insn reload after:
  274: r121:DI=r215:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 274:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 145:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=216 from oldreg=169, assigning class GENERAL_REGS to r216
  145: {r216:SI=r216:SI-r101:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  275: r216:SI=r100:SI
    Inserting insn reload after:
  276: r169:SI=r216:SI

          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 153:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=217 from oldreg=174, assigning class GENERAL_REGS to r217
  153: {r217:SI=r217:SI-r100:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  277: r217:SI=r101:SI
    Inserting insn reload after:
  278: r174:SI=r217:SI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 154:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) p {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 167:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 168:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 182:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 183:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 186:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) p {*leadi}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
  BB 7
   Insn 228: point = 0
  BB 18
   Insn 188: point = 0
   Insn 187: point = 0
   Insn 186: point = 0
   Insn 183: point = 0
   Insn 182: point = 0
   Insn 181: point = 1
   Insn 180: point = 2
   Insn 179: point = 2
   Insn 178: point = 2
   Insn 177: point = 2
   Insn 176: point = 2
   Insn 174: point = 2
   Insn 173: point = 3
  BB 16
   Insn 236: point = 6
   Insn 37: point = 6
   Insn 259: point = 7
   Insn 258: point = 9
   Insn 257: point = 11
   Insn 256: point = 13
   Insn 255: point = 15
   Insn 254: point = 17
  BB 15
   Insn 171: point = 20
   Insn 170: point = 20
   Insn 168: point = 20
   Insn 167: point = 20
   Insn 164: point = 20
   Insn 163: point = 21
   Insn 161: point = 23
  BB 13
   Insn 234: point = 25
   Insn 147: point = 25
   Insn 146: point = 27
   Insn 276: point = 29
	Hard reg 0 is preferable by r216 with profit 476
   Insn 145: point = 31
   Insn 275: point = 31
  BB 14
   Insn 157: point = 33
   Insn 156: point = 33
   Insn 155: point = 35
   Insn 154: point = 37
   Insn 278: point = 39
	Hard reg 0 is preferable by r217 with profit 476
   Insn 153: point = 41
   Insn 277: point = 41
  BB 12
   Insn 143: point = 43
   Insn 142: point = 43
   Insn 141: point = 43
   Insn 139: point = 44
  BB 20
   Insn 238: point = 46
   Insn 269: point = 46
   Insn 268: point = 48
   Insn 267: point = 50
   Insn 266: point = 52
   Insn 265: point = 54
   Insn 264: point = 56
   Insn 263: point = 58
   Insn 262: point = 60
   Insn 261: point = 62
   Insn 260: point = 64
   Insn 219: point = 66
   Insn 218: point = 67
   Insn 36: point = 68
   Insn 35: point = 69
  BB 17
   Insn 38: point = 71
  BB 19
   Insn 196: point = 73
   Insn 195: point = 73
  BB 11
   Insn 232: point = 74
   Insn 253: point = 74
   Insn 252: point = 76
   Insn 251: point = 78
   Insn 250: point = 80
   Insn 249: point = 82
   Insn 248: point = 84
   Insn 217: point = 86
   Insn 39: point = 87
   Insn 132: point = 88
   Insn 130: point = 90
   Insn 128: point = 91
   Insn 274: point = 93
   Insn 127: point = 95
  BB 6
   Insn 81: point = 98
   Insn 80: point = 98
  BB 10
   Insn 230: point = 99
   Insn 120: point = 99
   Insn 119: point = 99
   Insn 118: point = 100
   Insn 117: point = 100
   Insn 114: point = 101
   Insn 113: point = 102
   Insn 112: point = 104
   Insn 247: point = 105
   Insn 246: point = 107
  BB 9
   Insn 105: point = 110
   Insn 104: point = 110
   Insn 103: point = 110
   Insn 100: point = 110
   Insn 99: point = 111
   Insn 97: point = 113
   Insn 96: point = 114
   Insn 95: point = 114
   Insn 273: point = 115
	Hard reg 21 is preferable by r214 with profit 94
   Insn 94: point = 117
   Insn 272: point = 117
  BB 8
   Insn 245: point = 119
   Insn 244: point = 121
   Insn 243: point = 123
   Insn 242: point = 125
   Insn 241: point = 127
   Insn 240: point = 129
   Insn 216: point = 131
   Insn 34: point = 132
   Insn 91: point = 133
   Insn 89: point = 135
   Insn 271: point = 136
   Insn 87: point = 138
  BB 4
   Insn 223: point = 140
  BB 3
   Insn 52: point = 141
   Insn 51: point = 141
  BB 5
   Insn 225: point = 142
   Insn 71: point = 142
   Insn 70: point = 142
   Insn 69: point = 143
   Insn 68: point = 144
   Insn 64: point = 145
   Insn 63: point = 147
   Insn 62: point = 149
   Insn 59: point = 151
  BB 2
   Insn 48: point = 153
   Insn 47: point = 153
   Insn 270: point = 153
   Insn 43: point = 155
   Insn 32: point = 156
   Insn 31: point = 157
   Insn 30: point = 158
   Insn 29: point = 159
   Insn 28: point = 160
   Insn 27: point = 161
   Insn 26: point = 162
 r84: [0..153]
 r85: [65..68]
 r88: [112..113]
 r93: [85..88]
 r94: [61..69]
 r99: [130..133]
 r100: [34..44] [26..32]
 r101: [22..43]
 r104: [33..33] [23..25]
 r114: [83..91]
 r115: [128..132]
 r118: [0..1]
 r119: [81..87]
 r120: [71..71] [4..6]
 r121: [0..93]
 r125: [110..136]
 r131: [92..162]
 r132: [126..161] [79..107]
 r133: [96..160]
 r134: [141..159] [124..139]
 r135: [122..158] [77..105]
 r136: [143..157]
 r137: [148..156]
 r140: [150..151]
 r143: [142..149]
 r144: [146..147]
 r145: [144..145]
 r152: [134..135]
 r154: [114..115]
 r156: [110..111]
 r157: [103..104]
 r158: [100..102]
 r165: [89..90]
 r169: [28..29]
 r171: [26..28]
 r172: [27..27]
 r174: [38..39]
 r175: [36..37]
 r177: [34..36]
 r178: [35..35]
 r182: [20..21]
 r183: [2..3]
 r185: [120..131]
 r186: [75..86]
 r187: [99..101]
 r188: [63..84] [0..17]
 r189: [59..82] [0..15]
 r190: [57..80] [0..13]
 r191: [55..78] [0..11]
 r192: [53..76] [0..9]
 r193: [49..74] [0..7]
 r194: [47..66]
 r195: [51..67]
 r196: [20..64]
 r197: [18..62]
 r198: [20..60]
 r199: [16..58]
 r200: [14..56]
 r201: [12..54]
 r202: [10..52]
 r203: [20..50]
 r204: [8..48]
 r205: [20..46]
 r206: [110..129]
 r207: [110..127]
 r208: [108..125]
 r209: [110..123]
 r210: [106..121]
 r211: [110..119]
 r212: [154..155]
 r213: [137..138]
 r214: [116..117]
 r215: [94..95]
 r216: [30..31]
 r217: [40..41]
Compressing live ranges: from 163 to 115 - 70%
Ranges after the compression:
 r84: [0..112]
 r85: [53..54]
 r88: [83..84]
 r93: [67..68]
 r94: [49..54]
 r99: [99..100]
 r100: [27..34] [20..25]
 r101: [18..34]
 r104: [26..26] [18..19]
 r114: [65..70]
 r115: [97..100]
 r118: [0..1]
 r119: [63..68]
 r120: [55..55] [4..5]
 r121: [0..72]
 r125: [81..102]
 r131: [71..114]
 r132: [95..114] [61..80]
 r133: [75..114]
 r134: [93..114]
 r135: [91..114] [59..78]
 r136: [105..114]
 r137: [109..114]
 r140: [111..112]
 r143: [105..110]
 r144: [107..108]
 r145: [105..106]
 r152: [101..102]
 r154: [85..86]
 r156: [81..82]
 r157: [77..78]
 r158: [75..76]
 r165: [69..70]
 r169: [22..23]
 r171: [20..22]
 r172: [21..21]
 r174: [31..32]
 r175: [29..30]
 r177: [27..29]
 r178: [28..28]
 r182: [16..17]
 r183: [2..3]
 r185: [89..100]
 r186: [57..68]
 r187: [75..76]
 r188: [51..66] [0..15]
 r189: [47..64] [0..13]
 r190: [45..62] [0..11]
 r191: [43..60] [0..9]
 r192: [41..58] [0..7]
 r193: [37..56] [0..5]
 r194: [35..54]
 r195: [39..54]
 r196: [16..52]
 r197: [16..50]
 r198: [16..48]
 r199: [14..46]
 r200: [12..44]
 r201: [10..42]
 r202: [8..40]
 r203: [16..38]
 r204: [6..36]
 r205: [16..34]
 r206: [81..98]
 r207: [81..96]
 r208: [81..94]
 r209: [81..92]
 r210: [79..90]
 r211: [81..88]
 r212: [113..114]
 r213: [103..104]
 r214: [87..88]
 r215: [73..74]
 r216: [24..25]
 r217: [33..34]
	 Assigning to 216 (cl=GENERAL_REGS, orig=169, freq=1428, tfirst=216, tfreq=1428)...
	   Assign 0 to reload r216 (freq=1428)
	 Assigning to 217 (cl=GENERAL_REGS, orig=174, freq=1428, tfirst=217, tfreq=1428)...
	   Assign 0 to reload r217 (freq=1428)
	 Assigning to 212 (cl=GENERAL_REGS, orig=84, freq=8, tfirst=212, tfreq=8)...
	   Assign 1 to reload r212 (freq=8)
	 Assigning to 215 (cl=GENERAL_REGS, orig=121, freq=8, tfirst=215, tfreq=8)...
	   Assign 0 to reload r215 (freq=8)
	 Assigning to 214 (cl=SSE_REGS, orig=154, freq=282, tfirst=214, tfreq=282)...
	   Assign 21 to reload r214 (freq=282)
	 Assigning to 213 (cl=SSE_REGS, orig=125, freq=8, tfirst=213, tfreq=8)...
	   Assign 22 to reload r213 (freq=8)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********


********** Local #2: **********

  Slot 0 regnos (width = 8):	 125	 121
  Slot 1 regnos (width = 4):	 84
  Slot 2 regnos (width = 8):	 131
  Slot 3 regnos (width = 4):	 133
Changing spilled pseudos to memory in insn #26
Changing spilled pseudos to memory in insn #28
Changing spilled pseudos to memory in insn #270
Changing spilled pseudos to memory in insn #44
Changing spilled pseudos to memory in insn #271
Changing spilled pseudos to memory in insn #272
Changing spilled pseudos to memory in insn #127
Changing spilled pseudos to memory in insn #274
Changing spilled pseudos to memory in insn #128
Changing spilled pseudos to memory in insn #177
Changing spilled pseudos to memory in insn #178
New elimination table:
Can eliminate 16 to 7 (offset=432, prev_offset=400)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=368, prev_offset=336)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 118
Updating elimination of equiv for reg 137
Updating elimination of equiv for reg 156
Updating elimination of equiv for reg 182

********** Local #3: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) p {*leadi}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 274:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=15,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 272:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 271:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 270:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can eliminate 16 to 7 (offset=432, prev_offset=432)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=368, prev_offset=368)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 118
Updating elimination of equiv for reg 137
Updating elimination of equiv for reg 156
Updating elimination of equiv for reg 182
changing reg in insn 36
changing reg in insn 260
changing reg in insn 97
changing reg in insn 99
changing reg in insn 132
changing reg in insn 248
changing reg in insn 35
changing reg in insn 262
changing reg in insn 91
changing reg in insn 240
changing reg in insn 139
changing reg in insn 156
changing reg in insn 153
changing reg in insn 147
changing reg in insn 142
changing reg in insn 141
changing reg in insn 163
changing reg in insn 145
changing reg in insn 142
changing reg in insn 157
changing reg in insn 156
changing reg in insn 147
changing reg in insn 157
changing reg in insn 161
changing reg in insn 128
changing reg in insn 249
changing reg in insn 34
changing reg in insn 241
changing reg in insn 181
changing reg in insn 182
changing reg in insn 39
changing reg in insn 250
changing reg in insn 37
changing reg in insn 38
changing reg in insn 173
changing reg in insn 246
changing reg in insn 27
changing reg in insn 251
changing reg in insn 242
changing reg in insn 87
changing reg in insn 80
changing reg in insn 29
changing reg in insn 243
changing reg in insn 247
changing reg in insn 30
changing reg in insn 252
changing reg in insn 244
changing reg in insn 130
changing reg in insn 89
changing reg in insn 43
changing reg in insn 112
changing reg in insn 59
changing reg in insn 51
changing reg in insn 31
changing reg in insn 69
changing reg in insn 32
changing reg in insn 43
changing reg in insn 63
changing reg in insn 47
changing reg in insn 59
changing reg in insn 62
changing reg in insn 62
changing reg in insn 70
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 68
changing reg in insn 89
changing reg in insn 91
changing reg in insn 95
changing reg in insn 99
changing reg in insn 100
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 117
changing reg in insn 130
changing reg in insn 132
changing reg in insn 146
changing reg in insn 146
changing reg in insn 146
changing reg in insn 147
changing reg in insn 146
changing reg in insn 154
changing reg in insn 154
changing reg in insn 155
changing reg in insn 155
changing reg in insn 155
changing reg in insn 156
changing reg in insn 155
changing reg in insn 163
changing reg in insn 164
changing reg in insn 173
changing reg in insn 174
changing reg in insn 216
changing reg in insn 245
changing reg in insn 217
changing reg in insn 253
changing reg in insn 114
changing reg in insn 119
changing reg in insn 248
changing reg in insn 254
changing reg in insn 261
changing reg in insn 249
changing reg in insn 255
changing reg in insn 186
changing reg in insn 263
changing reg in insn 186
changing reg in insn 182
changing reg in insn 181
changing reg in insn 250
changing reg in insn 256
changing reg in insn 183
changing reg in insn 264
changing reg in insn 187
changing reg in insn 185
changing reg in insn 183
changing reg in insn 174
changing reg in insn 192
changing reg in insn 251
changing reg in insn 257
changing reg in insn 265
changing reg in insn 187
changing reg in insn 252
changing reg in insn 258
changing reg in insn 266
changing reg in insn 37
changing reg in insn 195
changing reg in insn 253
changing reg in insn 259
changing reg in insn 268
changing reg in insn 179
changing reg in insn 219
changing reg in insn 269
changing reg in insn 218
changing reg in insn 267
changing reg in insn 260
changing reg in insn 167
changing reg in insn 141
changing reg in insn 139
changing reg in insn 170
changing reg in insn 167
changing reg in insn 164
changing reg in insn 161
changing reg in insn 163
changing reg in insn 261
changing reg in insn 254
changing reg in insn 170
changing reg in insn 262
changing reg in insn 168
changing reg in insn 168
changing reg in insn 163
changing reg in insn 263
changing reg in insn 255
changing reg in insn 264
changing reg in insn 256
changing reg in insn 265
changing reg in insn 257
changing reg in insn 146
changing reg in insn 146
changing reg in insn 157
changing reg in insn 155
changing reg in insn 155
changing reg in insn 266
changing reg in insn 258
changing reg in insn 267
changing reg in insn 139
changing reg in insn 268
changing reg in insn 259
changing reg in insn 161
changing reg in insn 269
changing reg in insn 141
changing reg in insn 164
changing reg in insn 163
changing reg in insn 240
changing reg in insn 104
changing reg in insn 241
changing reg in insn 103
changing reg in insn 104
changing reg in insn 103
changing reg in insn 100
changing reg in insn 94
changing reg in insn 99
changing reg in insn 242
changing reg in insn 246
changing reg in insn 243
changing reg in insn 94
changing reg in insn 244
changing reg in insn 247
changing reg in insn 245
changing reg in insn 100
changing reg in insn 99


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 6 failed.
Forwarding edge 6->7 to 21 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 120.
verify found no changes in insn with uid = 180.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 28 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 25 (  1.1)


void tiles(int*, int, int, float*, int, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={24d,21u} r1={15d,11u} r2={9d,9u,1e} r3={6d,13u} r4={10d,9u} r5={13d,9u} r6={6d,13u} r7={1d,44u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1e} r17={28d,8u} r18={4d} r19={4d} r20={7e} r21={10d,6u} r22={6d,1u} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={9d,8u} r38={6d,2u} r39={6d,3u,1e} r40={6d,2u} r41={8d,10u,2e} r42={6d,7u,1e} r43={6d,6u} r44={7d,10u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 521{316d,192u,13e} in 147{143 regular + 4 call} insns.
(note 25 0 40 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 17 [flags] 38 [r9] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 17 [flags] 38 [r9] 44 [r15]
;; live  kill	
(note 40 25 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 26 40 27 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 27 26 28 2 (set (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 dx [ memory_size ])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory_size ])
        (nil)))
(insn 29 28 30 2 (set (reg/v/f:DI 44 r15 [orig:134 floats ] [134])
        (reg:DI 2 cx [ floats ])) tiles.cpp:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 30 29 31 2 (set (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 31 30 32 2 (set (reg/v/f:DI 38 r9 [orig:136 ints ] [136])
        (reg:DI 38 r9 [ ints ])) tiles.cpp:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ ints ])
        (nil)))
(insn 32 31 33 2 (set (reg/v:SI 0 ax [orig:137 num_ints ] [137])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 432 [0x1b0])) [0 num_ints+0 S4 A64])) tiles.cpp:37 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 num_ints+0 S4 A64])
        (nil)))
(note 33 32 42 2 NOTE_INSN_FUNCTION_BEG)
(note 42 33 43 2 NOTE_INSN_DELETED)
(insn 43 42 270 2 (set (reg/v:SI 1 dx [orig:84 num_coordinates ] [84])
        (plus:SI (plus:SI (reg/v:SI 6 bp [orig:135 num_floats ] [135])
                (reg/v:SI 0 ax [orig:137 num_ints ] [137]))
            (const_int 1 [0x1]))) tiles.cpp:42 266 {*leasi}
     (nil))
(insn 270 43 44 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S4 A32])
        (reg/v:SI 1 dx [orig:84 num_coordinates ] [84])) tiles.cpp:42 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:84 num_coordinates ] [84])
        (nil)))
(debug_insn 44 270 46 2 (var_location:SI num_coordinates (mem/c:SI (plus:DI (reg/f:DI 7 sp)
            (const_int 24 [0x18])) [0 %sfp+-8 S4 A32])) tiles.cpp:42 -1
     (nil))
(debug_insn 46 44 47 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 47 46 48 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 0 ax [orig:137 num_ints ] [137])
            (const_int 0 [0]))) tiles.cpp:44 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 74 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) tiles.cpp:44 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 56)
;;  succ:       5 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 38 [r9] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 38 [r9] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 74 48 49 3 21 "" [1 uses])
(note 49 74 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 50 49 51 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 51 50 52 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 6 bp [orig:135 num_floats ] [135])
            (const_int 0 [0]))) tiles.cpp:47 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 222 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) tiles.cpp:47 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 85)
;;  succ:       8 [95.2%] 
;;              4 [4.8%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [4.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 222 52 223 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 223 222 224 4 (set (pc)
        (label_ref 77)) 650 {jump}
     (nil)
 -> 77)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 224 223 56)
;; basic block 5, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 38 [r9] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 38 [r9] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 56 224 57 5 18 "" [1 uses])
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 58 57 59 5 NOTE_INSN_DELETED)
(insn 59 58 60 5 (set (reg:DI 1 dx [orig:140 D.26004 ] [140])
        (sign_extend:DI (reg/v:SI 6 bp [orig:135 num_floats ] [135]))) tiles.cpp:44 149 {*extendsidi2_rex64}
     (nil))
(note 60 59 61 5 NOTE_INSN_DELETED)
(note 61 60 62 5 NOTE_INSN_DELETED)
(insn 62 61 63 5 (set (reg:DI 5 di [orig:143 D.26007 ] [143])
        (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:140 D.26004 ] [140])
                    (const_int 4 [0x4]))
                (reg/f:DI 7 sp))
            (const_int 196 [0xc4]))) tiles.cpp:44 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:140 D.26004 ] [140])
        (nil)))
(insn 63 62 64 5 (set (reg:DI 0 ax [orig:144 D.26004 ] [144])
        (sign_extend:DI (reg/v:SI 0 ax [orig:137 num_ints ] [137]))) tiles.cpp:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:137 num_ints ] [137])
        (nil)))
(insn 64 63 68 5 (parallel [
            (set (reg:DI 1 dx [orig:145 D.26004 ] [145])
                (ashift:DI (reg:DI 0 ax [orig:144 D.26004 ] [144])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:144 D.26004 ] [144])
        (nil)))
(insn 68 64 69 5 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:145 D.26004 ] [145])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:145 D.26004 ] [145])
        (nil)))
(insn 69 68 70 5 (set (reg:DI 4 si)
        (reg/v/f:DI 38 r9 [orig:136 ints ] [136])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 38 r9 [orig:136 ints ] [136])
        (nil)))
(insn 70 69 71 5 (set (reg:DI 5 di)
        (reg:DI 5 di [orig:143 D.26007 ] [143])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:143 D.26007 ] [143])
        (nil)))
(call_insn 71 70 225 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b67b90e9500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 225 71 226 5 (set (pc)
        (label_ref 74)) 650 {jump}
     (nil)
 -> 74)
;;  succ:       3 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 226 225 77)
;; basic block 6, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;;              10 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 77 226 78 6 20 "" [2 uses])
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 79 78 80 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 80 79 81 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
            (const_int 0 [0]))) tiles.cpp:53 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 81 80 227 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) tiles.cpp:53 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 125)
;;  succ:       11 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 227 81 228 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 228 227 229 7 (set (pc)
        (label_ref 203)) 650 {jump}
     (nil)
 -> 203)
;;  succ:       21 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 229 228 85)
;; basic block 8, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 85 229 86 8 19 "" [1 uses])
(note 86 85 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 271 8 (set (reg:SF 22 xmm1 [orig:125 D.26002 ] [125])
        (float:SF (reg/v:SI 3 bx [orig:132 num_tilings ] [132]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 271 87 88 8 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A64])
        (reg:SF 22 xmm1 [orig:125 D.26002 ] [125])) 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:125 D.26002 ] [125])
        (nil)))
(note 88 271 89 8 NOTE_INSN_DELETED)
(insn 89 88 90 8 (set (reg:DI 0 ax [orig:152 D.26004 ] [152])
        (zero_extend:DI (plus:SI (reg/v:SI 6 bp [orig:135 num_floats ] [135])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (nil))
(note 90 89 91 8 NOTE_INSN_DELETED)
(insn 91 90 34 8 (set (reg:DI 43 r14 [orig:99 D.26004 ] [99])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:152 D.26004 ] [152])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:152 D.26004 ] [152])
        (nil)))
(insn 34 91 216 8 (set (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])
        (const_int 0 [0])) tiles.cpp:47 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 216 34 240 8 (set (reg/f:DI 42 r13 [185])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 240 216 241 8 (set (reg:DI 43 r14 [orig:99 D.26004 ] [99])
        (reg:DI 43 r14 [orig:99 D.26004 ] [99])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:99 D.26004 ] [99])
        (nil)))
(insn 241 240 242 8 (set (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])
        (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])
        (nil)))
(insn 242 241 243 8 (set (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (reg/v:SI 3 bx [orig:132 num_tilings ] [132])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (nil)))
(insn 243 242 244 8 (set (reg/v/f:DI 44 r15 [orig:134 floats ] [134])
        (reg/v/f:DI 44 r15 [orig:134 floats ] [134])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 44 r15 [orig:134 floats ] [134])
        (nil)))
(insn 244 243 245 8 (set (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (reg/v:SI 6 bp [orig:135 num_floats ] [135])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (nil)))
(insn 245 244 107 8 (set (reg/f:DI 42 r13 [185])
        (reg/f:DI 42 r13 [185])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [185])
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 942, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [95.2%]  (DFS_BACK)
;;              8 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 21 [xmm0] 41 [r12]
;; live  kill	 17 [flags]
(code_label 107 245 92 9 25 "" [1 uses])
(note 92 107 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 93 92 272 9 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 272 93 94 9 (set (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A64])) tiles.cpp:48 135 {*movsf_internal}
     (nil))
(insn 94 272 273 9 (set (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])
        (mult:SF (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])
            (mem:SF (plus:DI (reg/v/f:DI 44 r15 [orig:134 floats ] [134])
                    (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])) [0 MEM[base: floats_26(D), index: ivtmp.104_58, offset: 0B]+0 S4 A32]))) tiles.cpp:48 777 {*fop_sf_comm_sse}
     (nil))
(insn 273 94 95 9 (set (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])
        (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])) tiles.cpp:48 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])
        (nil)))
(insn 95 273 96 9 (set (reg:SF 21 xmm0)
        (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])) tiles.cpp:48 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:154 D.26002 ] [154])
        (nil)))
(call_insn/u 96 95 97 9 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b67b7876a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:48 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 97 96 99 9 (set (reg:SF 21 xmm0 [orig:88 D.26002 ] [88])
        (reg:SF 21 xmm0)) tiles.cpp:48 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 99 97 100 9 (set (reg:SI 0 ax [156])
        (fix:SI (reg:SF 21 xmm0 [orig:88 D.26002 ] [88]))) tiles.cpp:48 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:88 D.26002 ] [88])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 42 r13 [185])
                    (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])) [0 MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B]+0 S4 A32])
            (nil))))
(insn 100 99 102 9 (set (mem:SI (plus:DI (reg/f:DI 42 r13 [185])
                (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])) [0 MEM[symbol: qstate, index: ivtmp.104_58, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [156])) tiles.cpp:48 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [156])
        (nil)))
(debug_insn 102 100 103 9 (var_location:SI i (debug_expr:SI D#6)) -1
     (nil))
(insn 103 102 104 9 (parallel [
            (set (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])
                (plus:DI (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 104 103 105 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 41 r12 [orig:115 ivtmp.104 ] [115])
            (reg:DI 43 r14 [orig:99 D.26004 ] [99]))) tiles.cpp:47 8 {*cmpdi_1}
     (nil))
(jump_insn 105 104 111 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 107)
            (pc))) tiles.cpp:47 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 107)
;;  succ:       9 [95.2%]  (DFS_BACK)
;;              10 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
(note 111 105 246 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 246 111 247 10 (set (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (reg/v:SI 3 bx [orig:132 num_tilings ] [132])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (nil)))
(insn 247 246 112 10 (set (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (reg/v:SI 6 bp [orig:135 num_floats ] [135])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (nil)))
(insn 112 247 113 10 (set (reg:DI 1 dx [orig:157 D.26004 ] [157])
        (sign_extend:DI (reg/v:SI 6 bp [orig:135 num_floats ] [135]))) tiles.cpp:49 149 {*extendsidi2_rex64}
     (nil))
(insn 113 112 114 10 (parallel [
            (set (reg:DI 1 dx [orig:158 D.26004 ] [158])
                (ashift:DI (reg:DI 1 dx [orig:157 D.26004 ] [157])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:49 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:157 D.26004 ] [157])
        (nil)))
(insn 114 113 117 10 (parallel [
            (set (reg/f:DI 5 di [187])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -256 [0xffffffffffffff00]))
        (nil)))
(insn 117 114 118 10 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:158 D.26004 ] [158])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:158 D.26004 ] [158])
        (nil)))
(insn 118 117 119 10 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 119 118 120 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [187])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [187])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00]))
            (nil))))
(call_insn 120 119 230 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b67b90e9600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 230 120 231 10 (set (pc)
        (label_ref 77)) 650 {jump}
     (nil)
 -> 77)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 231 230 125)
;; basic block 11, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 125 231 126 11 22 "" [1 uses])
(note 126 125 127 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 274 11 (set (reg:DI 0 ax [orig:121 D.26006 ] [121])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 28 [0x1c])) [0 %sfp+-4 S4 A32]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 133 [ memory_size ])
        (nil)))
(insn 274 127 128 11 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S8 A64])
        (reg:DI 0 ax [orig:121 D.26006 ] [121])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:121 D.26006 ] [121])
        (nil)))
(insn 128 274 129 11 (set (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 131 [ the_tiles ])
        (nil)))
(note 129 128 130 11 NOTE_INSN_DELETED)
(insn 130 129 131 11 (set (reg:DI 0 ax [orig:165 D.26004 ] [165])
        (zero_extend:DI (plus:SI (reg/v:SI 6 bp [orig:135 num_floats ] [135])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (nil))
(note 131 130 132 11 NOTE_INSN_DELETED)
(insn 132 131 39 11 (set (reg:DI 43 r14 [orig:93 D.26004 ] [93])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:165 D.26004 ] [165])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:165 D.26004 ] [165])
        (nil)))
(insn 39 132 217 11 (set (reg/v:SI 44 r15 [orig:119 j ] [119])
        (const_int 0 [0])) tiles.cpp:53 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 217 39 248 11 (set (reg/f:DI 42 r13 [186])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 192 [0xc0]))) 267 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 248 217 249 11 (set (reg:DI 43 r14 [orig:93 D.26004 ] [93])
        (reg:DI 43 r14 [orig:93 D.26004 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:93 D.26004 ] [93])
        (nil)))
(insn 249 248 250 11 (set (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
        (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
        (nil)))
(insn 250 249 251 11 (set (reg/v:SI 44 r15 [orig:119 j ] [119])
        (reg/v:SI 44 r15 [orig:119 j ] [119])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:119 j ] [119])
        (nil)))
(insn 251 250 252 11 (set (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (reg/v:SI 3 bx [orig:132 num_tilings ] [132])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (nil)))
(insn 252 251 253 11 (set (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (reg/v:SI 6 bp [orig:135 num_floats ] [135])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (nil)))
(insn 253 252 232 11 (set (reg/f:DI 42 r13 [186])
        (reg/f:DI 42 r13 [186])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [186])
        (nil)))
(jump_insn 232 253 233 11 (set (pc)
        (label_ref 190)) 650 {jump}
     (nil)
 -> 190)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 233 232 198)
;; basic block 12, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [95.2%]  (DFS_BACK)
;;              20 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 39 [r10] 40 [r11]
;; lr  def 	 4 [si] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(code_label 198 233 136 12 31 "" [2 uses])
(note 136 198 137 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 137 136 139 12 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 139 137 141 12 (set (reg:SI 37 r8 [orig:100 D.26001 ] [100])
        (mem:SI (plus:DI (reg/f:DI 40 r11 [185])
                (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])) [0 MEM[symbol: qstate, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 89 {*movsi_internal}
     (nil))
(insn 141 139 142 12 (set (reg:SI 4 si [orig:101 D.26001 ] [101])
        (mem:SI (plus:DI (reg/f:DI 39 r10 [187])
                (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])) tiles.cpp:59 89 {*movsi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 37 r8 [orig:100 D.26001 ] [100])
            (reg:SI 4 si [orig:101 D.26001 ] [101]))) tiles.cpp:59 7 {*cmpsi_1}
     (nil))
(jump_insn 143 142 144 12 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) tiles.cpp:59 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 150)
;;  succ:       13 [50.0%]  (FALLTHRU)
;;              14 [50.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 13, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 37 [r8]
;; live  kill	 17 [flags]
(note 144 143 275 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 275 144 145 13 (set (reg:SI 0 ax [orig:169 D.26001 ] [169])
        (reg:SI 37 r8 [orig:100 D.26001 ] [100])) tiles.cpp:60 89 {*movsi_internal}
     (nil))
(insn 145 275 276 13 (parallel [
            (set (reg:SI 0 ax [orig:169 D.26001 ] [169])
                (minus:SI (reg:SI 0 ax [orig:169 D.26001 ] [169])
                    (reg:SI 4 si [orig:101 D.26001 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 309 {*subsi_1}
     (nil))
(insn 276 145 146 13 (set (reg:SI 0 ax [orig:169 D.26001 ] [169])
        (reg:SI 0 ax [orig:169 D.26001 ] [169])) tiles.cpp:60 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:169 D.26001 ] [169])
        (nil)))
(insn 146 276 147 13 (parallel [
            (set (reg:SI 0 ax [172])
                (div:SI (reg:SI 0 ax [orig:169 D.26001 ] [169])
                    (reg/v:SI 3 bx [orig:132 num_tilings ] [132])))
            (set (reg:SI 1 dx [orig:171 D.26001 ] [171])
                (mod:SI (reg:SI 0 ax [orig:169 D.26001 ] [169])
                    (reg/v:SI 3 bx [orig:132 num_tilings ] [132])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:169 D.26001 ] [169])
        (expr_list:REG_UNUSED (reg:SI 0 ax [172])
            (nil))))
(insn 147 146 234 13 (parallel [
            (set (reg:SI 37 r8 [orig:104 D.26001 ] [104])
                (minus:SI (reg:SI 37 r8 [orig:100 D.26001 ] [100])
                    (reg:SI 1 dx [orig:171 D.26001 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:60 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:171 D.26001 ] [171])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:100 D.26001 ] [100])
            (nil))))
(jump_insn 234 147 235 13 (set (pc)
        (label_ref 158)) 650 {jump}
     (nil)
 -> 158)
;;  succ:       15 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 235 234 150)
;; basic block 14, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 37 [r8]
;; live  kill	 17 [flags]
(code_label 150 235 151 14 27 "" [1 uses])
(note 151 150 152 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 152 151 277 14 NOTE_INSN_DELETED)
(insn 277 152 153 14 (set (reg:SI 0 ax [orig:174 D.26001 ] [174])
        (reg:SI 4 si [orig:101 D.26001 ] [101])) tiles.cpp:62 89 {*movsi_internal}
     (nil))
(insn 153 277 278 14 (parallel [
            (set (reg:SI 0 ax [orig:174 D.26001 ] [174])
                (minus:SI (reg:SI 0 ax [orig:174 D.26001 ] [174])
                    (reg:SI 37 r8 [orig:100 D.26001 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 309 {*subsi_1}
     (nil))
(insn 278 153 154 14 (set (reg:SI 0 ax [orig:174 D.26001 ] [174])
        (reg:SI 0 ax [orig:174 D.26001 ] [174])) tiles.cpp:62 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:174 D.26001 ] [174])
        (nil)))
(insn 154 278 155 14 (parallel [
            (set (reg:SI 0 ax [orig:175 D.26001 ] [175])
                (plus:SI (reg:SI 0 ax [orig:174 D.26001 ] [174])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:174 D.26001 ] [174])
        (nil)))
(insn 155 154 156 14 (parallel [
            (set (reg:SI 0 ax [178])
                (div:SI (reg:SI 0 ax [orig:175 D.26001 ] [175])
                    (reg/v:SI 3 bx [orig:132 num_tilings ] [132])))
            (set (reg:SI 1 dx [orig:177 D.26001 ] [177])
                (mod:SI (reg:SI 0 ax [orig:175 D.26001 ] [175])
                    (reg/v:SI 3 bx [orig:132 num_tilings ] [132])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:175 D.26001 ] [175])
        (expr_list:REG_UNUSED (reg:SI 0 ax [178])
            (nil))))
(insn 156 155 157 14 (set (reg:SI 37 r8 [orig:104 D.26001 ] [104])
        (plus:SI (plus:SI (reg:SI 37 r8 [orig:100 D.26001 ] [100])
                (reg:SI 1 dx [orig:177 D.26001 ] [177]))
            (const_int 1 [0x1]))) tiles.cpp:62 266 {*leasi}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:177 D.26001 ] [177])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:100 D.26001 ] [100])
            (nil))))
(insn 157 156 158 14 (parallel [
            (set (reg:SI 37 r8 [orig:104 D.26001 ] [104])
                (minus:SI (reg:SI 37 r8 [orig:104 D.26001 ] [104])
                    (reg/v:SI 3 bx [orig:132 num_tilings ] [132])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:62 309 {*subsi_1}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 15, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 39 [r10] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 158 157 159 15 28 "" [1 uses])
(note 159 158 161 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 161 159 163 15 (set (mem:SI (plus:DI (reg/f:DI 42 r13 [186])
                (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])) [0 MEM[symbol: coordinates, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 37 r8 [orig:104 D.26001 ] [104])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:104 D.26001 ] [104])
        (nil)))
(insn 163 161 164 15 (parallel [
            (set (reg:SI 4 si [182])
                (plus:SI (reg:SI 4 si [orig:101 D.26001 ] [101])
                    (reg:SI 5 di [orig:94 ivtmp.93 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:65 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:101 D.26001 ] [101])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 39 r10 [187])
                    (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
            (nil))))
(insn 164 163 166 15 (set (mem:SI (plus:DI (reg/f:DI 39 r10 [187])
                (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])) [0 MEM[symbol: base, index: ivtmp.87_15, offset: 0B]+0 S4 A32])
        (reg:SI 4 si [182])) tiles.cpp:65 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [182])
        (nil)))
(debug_insn 166 164 167 15 (var_location:SI i (debug_expr:SI D#5)) -1
     (nil))
(insn 167 166 168 15 (parallel [
            (set (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])
                (plus:DI (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 168 167 170 15 (parallel [
            (set (reg:SI 5 di [orig:94 ivtmp.93 ] [94])
                (plus:SI (reg:SI 5 di [orig:94 ivtmp.93 ] [94])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (nil))
(insn 170 168 171 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])
            (reg:DI 43 r14 [orig:93 D.26004 ] [93]))) tiles.cpp:56 8 {*cmpdi_1}
     (nil))
(jump_insn 171 170 205 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 198)
            (pc))) tiles.cpp:56 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 198)
;;  succ:       12 [95.2%]  (DFS_BACK)
;;              16 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 16, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 205 171 254 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 254 205 255 16 (set (reg:DI 43 r14 [orig:93 D.26004 ] [93])
        (reg:DI 43 r14 [orig:93 D.26004 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:93 D.26004 ] [93])
        (nil)))
(insn 255 254 256 16 (set (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
        (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
        (nil)))
(insn 256 255 257 16 (set (reg/v:SI 44 r15 [orig:119 j ] [119])
        (reg/v:SI 44 r15 [orig:119 j ] [119])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:119 j ] [119])
        (nil)))
(insn 257 256 258 16 (set (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (reg/v:SI 3 bx [orig:132 num_tilings ] [132])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (nil)))
(insn 258 257 259 16 (set (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (reg/v:SI 6 bp [orig:135 num_floats ] [135])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (nil)))
(insn 259 258 37 16 (set (reg/f:DI 42 r13 [186])
        (reg/f:DI 42 r13 [186])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [186])
        (nil)))
(insn 37 259 236 16 (set (reg/v:SI 0 ax [orig:120 num_floats ] [120])
        (reg/v:SI 6 bp [orig:135 num_floats ] [135])) 89 {*movsi_internal}
     (nil))
(jump_insn 236 37 237 16 (set (pc)
        (label_ref 194)) 650 {jump}
     (nil)
 -> 194)
;;  succ:       18 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 237 236 209)
;; basic block 17, loop depth 0, count 0, freq 23, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [4.8%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 209 237 208 17 32 "" [1 uses])
(note 208 209 38 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 38 208 194 17 (set (reg/v:SI 0 ax [orig:120 num_floats ] [120])
        (const_int 0 [0])) tiles.cpp:56 89 {*movsi_internal}
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 18, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 41 [r12] 44 [r15]
;; live  kill	 17 [flags]
(code_label 194 38 172 18 30 "" [1 uses])
(note 172 194 173 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 18 (set (reg:DI 0 ax [orig:183 num_floats ] [183])
        (sign_extend:DI (reg/v:SI 0 ax [orig:120 num_floats ] [120]))) tiles.cpp:68 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:120 num_floats ] [120])
        (nil)))
(insn 174 173 176 18 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:183 num_floats ] [183])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 coordinates S4 A32])
        (reg/v:SI 44 r15 [orig:119 j ] [119])) tiles.cpp:68 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:183 num_floats ] [183])
        (nil)))
(insn 176 174 177 18 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:70 89 {*movsi_internal}
     (nil))
(insn 177 176 178 18 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S8 A64])) tiles.cpp:70 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 18 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S4 A32])) tiles.cpp:70 89 {*movsi_internal}
     (nil))
(insn 179 178 180 18 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [186])) tiles.cpp:70 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 180 179 181 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b67b8f25700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:70 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 181 180 182 18 (set (reg:SI 0 ax [orig:118 D.26001 ] [118])
        (reg:SI 0 ax)) tiles.cpp:70 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_EQUIV (mem:SI (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
            (nil))))
(insn 182 181 183 18 (set (mem:SI (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:118 D.26001 ] [118])) tiles.cpp:70 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:118 D.26001 ] [118])
        (nil)))
(insn 183 182 185 18 (parallel [
            (set (reg/v:SI 44 r15 [orig:119 j ] [119])
                (plus:SI (reg/v:SI 44 r15 [orig:119 j ] [119])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:53 273 {*addsi_1}
     (nil))
(debug_insn 185 183 186 18 (var_location:SI j (reg/v:SI 44 r15 [orig:119 j ] [119])) -1
     (nil))
(insn 186 185 187 18 (parallel [
            (set (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
                (plus:DI (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 187 186 188 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 44 r15 [orig:119 j ] [119])
            (reg/v:SI 3 bx [orig:132 num_tilings ] [132]))) tiles.cpp:53 7 {*cmpsi_1}
     (nil))
(jump_insn 188 187 190 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 203)
            (pc))) tiles.cpp:53 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 203)
;;  succ:       19 [91.0%]  (FALLTHRU,DFS_BACK)
;;              21 [9.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 19, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [91.0%]  (FALLTHRU,DFS_BACK)
;;              11 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 190 188 191 19 26 "" [1 uses])
(note 191 190 192 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 192 191 193 19 (var_location:SI j (reg/v:SI 44 r15 [orig:119 j ] [119])) -1
     (nil))
(debug_insn 193 192 195 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 195 193 196 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 6 bp [orig:135 num_floats ] [135])
            (const_int 0 [0]))) tiles.cpp:56 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 196 195 197 19 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 209)
            (pc))) tiles.cpp:56 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 209)
;;  succ:       20 [95.2%]  (FALLTHRU)
;;              17 [4.8%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 20, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [95.2%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 197 196 35 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 35 197 36 20 (set (reg:SI 5 di [orig:94 ivtmp.93 ] [94])
        (const_int 1 [0x1])) tiles.cpp:56 89 {*movsi_internal}
     (nil))
(insn 36 35 218 20 (set (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])
        (const_int 0 [0])) tiles.cpp:56 87 {*movdi_internal_rex64}
     (nil))
(insn 218 36 219 20 (set (reg/f:DI 40 r11 [185])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 219 218 260 20 (set (reg/f:DI 39 r10 [187])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -256 [0xffffffffffffff00]))
        (nil)))
(insn 260 219 261 20 (set (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])
        (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:85 ivtmp.87 ] [85])
        (nil)))
(insn 261 260 262 20 (set (reg:DI 43 r14 [orig:93 D.26004 ] [93])
        (reg:DI 43 r14 [orig:93 D.26004 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:93 D.26004 ] [93])
        (nil)))
(insn 262 261 263 20 (set (reg:SI 5 di [orig:94 ivtmp.93 ] [94])
        (reg:SI 5 di [orig:94 ivtmp.93 ] [94])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:94 ivtmp.93 ] [94])
        (nil)))
(insn 263 262 264 20 (set (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
        (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:114 ivtmp.98 ] [114])
        (nil)))
(insn 264 263 265 20 (set (reg/v:SI 44 r15 [orig:119 j ] [119])
        (reg/v:SI 44 r15 [orig:119 j ] [119])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:119 j ] [119])
        (nil)))
(insn 265 264 266 20 (set (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (reg/v:SI 3 bx [orig:132 num_tilings ] [132])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:132 num_tilings ] [132])
        (nil)))
(insn 266 265 267 20 (set (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (reg/v:SI 6 bp [orig:135 num_floats ] [135])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:135 num_floats ] [135])
        (nil)))
(insn 267 266 268 20 (set (reg/f:DI 40 r11 [185])
        (reg/f:DI 40 r11 [185])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [185])
        (nil)))
(insn 268 267 269 20 (set (reg/f:DI 42 r13 [186])
        (reg/f:DI 42 r13 [186])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [186])
        (nil)))
(insn 269 268 238 20 (set (reg/f:DI 39 r10 [187])
        (reg/f:DI 39 r10 [187])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [187])
        (nil)))
(jump_insn 238 269 239 20 (set (pc)
        (label_ref 198)) 650 {jump}
     (nil)
 -> 198)
;;  succ:       12 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 239 238 203)
;; basic block 21, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 20, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [9.0%]  (LOOP_EXIT)
;;              7 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 203 239 204 21 17 "" [2 uses])
(note 204 203 0 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function int hash(int*, int, collision_table*) (_Z4hashPiiP15collision_table, funcdef_no=1064, decl_uid=23703, cgraph_uid=308)


********** Local #1: **********

          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 8:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) p {*leadi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 32:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 40:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 49:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) p {*leasi}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 67:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 72:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rzw {*call}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) p {*leadi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 88:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 102:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 104:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmoddi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 110:  (0) =rm  (1) 0  (2) re {*subdi_1}
      Creating newreg=116 from oldreg=113, assigning class GENERAL_REGS to r116
  110: {r116:DI=r116:DI-r92:DI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  149: r116:DI=r81:DI
    Inserting insn reload after:
  150: r113:DI=r116:DI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) rm  (1) re {*cmpdi_1}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6 7
EBB 8
EBB 9
EBB 10 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16

********** Pseudo live ranges #1: **********

  BB 9
   Insn 77: point = 0
   Insn 76: point = 0
   Insn 75: point = 0
   Insn 74: point = 0
   Insn 73: point = 0
   Insn 72: point = 0
  BB 15
   Insn 147: point = 0
  BB 16
   Insn 127: point = 0
   Insn 124: point = 0
  BB 12
   Insn 143: point = 2
   Insn 92: point = 2
  BB 10
   Insn 86: point = 4
   Insn 85: point = 4
   Insn 84: point = 4
   Insn 83: point = 5
   Insn 82: point = 7
   Insn 80: point = 8
  BB 14
   Insn 112: point = 11
   Insn 111: point = 11
   Insn 150: point = 12
	Hard reg 5 is preferable by r116 with profit 1000
   Insn 110: point = 14
   Insn 149: point = 14
   Insn 107: point = 15
   Insn 105: point = 16
   Insn 104: point = 18
   Insn 102: point = 20
  BB 8
   Insn 141: point = 21
   Insn 67: point = 21
   Insn 66: point = 22
   Insn 65: point = 23
   Insn 62: point = 24
   Insn 61: point = 26
   Insn 59: point = 28
   Insn 58: point = 29
   Insn 57: point = 29
   Insn 56: point = 30
   Insn 55: point = 31
   Insn 54: point = 31
  BB 13
   Insn 131: point = 32
  BB 11
   Insn 90: point = 35
   Insn 89: point = 35
   Insn 88: point = 36
  BB 5
   Insn 137: point = 37
   Insn 41: point = 37
   Insn 40: point = 38
  BB 3
   Insn 135: point = 40
   Insn 32: point = 40
  BB 7
   Insn 139: point = 42
   Insn 49: point = 42
  BB 6
   Insn 47: point = 44
   Insn 46: point = 44
  BB 4
   Insn 38: point = 45
   Insn 37: point = 45
  BB 2
   Insn 30: point = 47
   Insn 29: point = 47
   Insn 28: point = 47
   Insn 27: point = 48
   Insn 26: point = 50
   Insn 24: point = 51
   Insn 22: point = 52
   Insn 21: point = 54
   Insn 20: point = 55
   Insn 19: point = 55
   Insn 18: point = 55
   Insn 17: point = 55
   Insn 16: point = 55
   Insn 14: point = 55
   Insn 13: point = 56
   Insn 12: point = 56
   Insn 11: point = 56
   Insn 10: point = 56
   Insn 9: point = 56
   Insn 8: point = 56
   Insn 4: point = 56
   Insn 3: point = 57
   Insn 2: point = 58
 r59: [33..55] [0..15]
 r63: [53..54]
 r64: [44..52] [2..39]
 r68: [45..48] [37..39]
 r69: [45..47]
 r77: [27..28]
 r80: [32..36] [4..24]
 r81: [32..36] [4..21]
 r89: [35..36] [2..5]
 r90: [35..36] [4..4]
 r91: [32..36] [4..22]
 r92: [32..36] [4..23]
 r98: [44..58] [29..31]
 r99: [44..57] [30..31]
 r100: [38..56] [4..36]
 r103: [49..50]
 r105: [25..26]
 r106: [6..8]
 r108: [6..7]
 r110: [17..18]
 r111: [9..17]
 r112: [16..16]
 r113: [11..12]
 r115: [44..51] [19..32]
 r116: [13..14]
Compressing live ranges: from 59 to 31 - 52%
Ranges after the compression:
 r59: [21..30] [0..8]
 r63: [29..30]
 r64: [0..28]
 r68: [23..26]
 r69: [25..26]
 r77: [16..17]
 r80: [20..22] [1..13]
 r81: [20..22] [1..13]
 r89: [21..22] [0..2]
 r90: [21..22] [1..1]
 r91: [20..22] [1..13]
 r92: [20..22] [1..13]
 r98: [25..30] [18..19]
 r99: [25..30] [18..19]
 r100: [1..30]
 r103: [27..28]
 r105: [14..15]
 r106: [3..4]
 r108: [3..4]
 r110: [10..11]
 r111: [5..10]
 r112: [9..9]
 r113: [5..6]
 r115: [25..28] [12..20]
 r116: [7..8]
	 Assigning to 116 (cl=GENERAL_REGS, orig=113, freq=3000, tfirst=116, tfreq=3000)...
	   Assign 5 to reload r116 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=64)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 103
Updating elimination of equiv for reg 108
changing reg in insn 107
changing reg in insn 14
changing reg in insn 131
changing reg in insn 24
changing reg in insn 124
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 92
changing reg in insn 85
changing reg in insn 41
changing reg in insn 29
changing reg in insn 23
changing reg in insn 27
changing reg in insn 41
changing reg in insn 28
changing reg in insn 28
changing reg in insn 37
changing reg in insn 29
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 104
changing reg in insn 63
changing reg in insn 88
changing reg in insn 67
changing reg in insn 102
changing reg in insn 88
changing reg in insn 83
changing reg in insn 92
changing reg in insn 84
changing reg in insn 84
changing reg in insn 89
changing reg in insn 85
changing reg in insn 66
changing reg in insn 111
changing reg in insn 105
changing reg in insn 105
changing reg in insn 65
changing reg in insn 110
changing reg in insn 67
changing reg in insn 2
changing reg in insn 57
changing reg in insn 19
changing reg in insn 12
changing reg in insn 3
changing reg in insn 56
changing reg in insn 18
changing reg in insn 11
changing reg in insn 4
changing reg in insn 102
changing reg in insn 82
changing reg in insn 66
changing reg in insn 65
changing reg in insn 49
changing reg in insn 49
changing reg in insn 46
changing reg in insn 40
changing reg in insn 40
changing reg in insn 32
changing reg in insn 32
changing reg in insn 26
changing reg in insn 10
changing reg in insn 8
changing reg in insn 8
changing reg in insn 82
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 61
changing reg in insn 62
changing reg in insn 80
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 105
changing reg in insn 105
changing reg in insn 111
changing reg in insn 131
changing reg in insn 24
changing reg in insn 27
changing reg in insn 104


try_optimize_cfg iteration 1

Forwarding edge 14->15 to 9 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 77.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 21 count 19 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 21 count 22 (  1.3)


int hash(int*, int, collision_table*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={15d,16u} r1={13d,13u} r2={11d,7u} r3={1d,15u,2e} r4={11d,8u} r5={15d,10u} r6={2d,3u} r7={1d,21u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={20d,6u} r18={5d} r19={5d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={7d,3u} r38={8d,3u} r39={5d} r40={5d} r41={2d,2u} r42={1d,5u} r43={1d,3u} r44={1d,3u} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} 
;;    total ref usage 417{297d,118u,2e} in 87{82 regular + 5 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 2177, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 43 r14 [orig:98 ints ] [98])
        (reg:DI 5 di [ ints ])) tiles.cpp:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ ints ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 44 r15 [orig:99 num_ints ] [99])
        (reg:SI 4 si [ num_ints ])) tiles.cpp:172 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_ints ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 3 bx [orig:100 ct ] [100])
        (reg:DI 1 dx [ ct ])) tiles.cpp:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                        (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                            (const_int 24 [0x18])) [0 ct_7(D)->calls+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:176 274 {*adddi_1}
     (nil))
(insn 9 8 10 2 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:177 89 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (mem/j:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100]) [0 ct_7(D)->m+0 S8 A64])) tiles.cpp:177 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (reg/v:SI 44 r15 [orig:99 num_ints ] [99])) tiles.cpp:177 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:98 ints ] [98])) tiles.cpp:177 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 134 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b67b8f25700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:177 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(debug_insn 134 13 14 2 (var_location:SI D#7 (reg:SI 0 ax)) -1
     (nil))
(insn 14 134 15 2 (set (reg/v:SI 6 bp [orig:59 j ] [59])
        (reg:SI 0 ax)) tiles.cpp:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 15 14 16 2 (var_location:SI j (debug_expr:SI D#7)) tiles.cpp:177 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 2 cx)
        (const_int 457 [0x1c9])) tiles.cpp:178 89 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (const_int 2147483647 [0x7fffffff])) tiles.cpp:178 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 44 r15 [orig:99 num_ints ] [99])) tiles.cpp:178 89 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:98 ints ] [98])) tiles.cpp:178 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b67b8f25700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:178 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 21 20 22 2 (set (reg:SI 0 ax [orig:63 D.26025 ] [63])
        (reg:SI 0 ax)) tiles.cpp:178 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 22 21 23 2 (set (reg/v:DI 42 r13 [orig:64 ccheck ] [64])
        (sign_extend:DI (reg:SI 0 ax [orig:63 D.26025 ] [63]))) tiles.cpp:178 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.26025 ] [63])
        (nil)))
(debug_insn 23 22 24 2 (var_location:DI ccheck (reg/v:DI 42 r13 [orig:64 ccheck ] [64])) tiles.cpp:178 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 41 r12 [orig:115 D.26024 ] [115])
        (sign_extend:DI (reg/v:SI 6 bp [orig:59 j ] [59]))) tiles.cpp:179 149 {*extendsidi2_rex64}
     (nil))
(note 25 24 26 2 NOTE_INSN_DELETED)
(insn 26 25 27 2 (set (reg/f:DI 0 ax [orig:103 ct_7(D)->data ] [103])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:179 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])
        (nil)))
(insn 27 26 28 2 (set (reg/f:DI 1 dx [orig:68 D.26026 ] [68])
        (plus:DI (mult:DI (reg:DI 41 r12 [orig:115 D.26024 ] [115])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:103 ct_7(D)->data ] [103]))) tiles.cpp:179 267 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:103 ct_7(D)->data ] [103])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 0 ax [orig:69 D.26024 ] [69])
        (mem:DI (reg/f:DI 1 dx [orig:68 D.26026 ] [68]) [0 *_22+0 S8 A64])) tiles.cpp:179 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:69 D.26024 ] [69])
            (reg/v:DI 42 r13 [orig:64 ccheck ] [64]))) tiles.cpp:179 8 {*cmpdi_1}
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) tiles.cpp:179 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil))
 -> 35)
;;  succ:       3 [19.9%]  (FALLTHRU)
;;              4 [80.1%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 433, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [19.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	 17 [flags]
(note 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 135 3 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:180 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:100 ct ] [100])
        (nil)))
(jump_insn 135 32 136 3 (set (pc)
        (label_ref 117)) 650 {jump}
     (nil)
 -> 117)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 136 135 35)
;; basic block 4, loop depth 0, count 0, freq 1743, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [80.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 35 136 36 4 37 "" [1 uses])
(note 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:69 D.26024 ] [69])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:181 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 D.26024 ] [69])
        (nil)))
(jump_insn 38 37 39 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) tiles.cpp:181 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil))
 -> 44)
;;  succ:       5 [19.9%]  (FALLTHRU)
;;              6 [80.1%] 
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 5, loop depth 0, count 0, freq 347, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [19.9%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	 17 [flags]
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                        (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                            (const_int 32 [0x20])) [0 ct_7(D)->clearhits+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:182 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:100 ct ] [100])
        (nil)))
(insn 41 40 137 5 (set (mem:DI (reg/f:DI 1 dx [orig:68 D.26026 ] [68]) [0 *_22+0 S8 A64])
        (reg/v:DI 42 r13 [orig:64 ccheck ] [64])) tiles.cpp:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:68 D.26026 ] [68])
        (expr_list:REG_DEAD (reg/v:DI 42 r13 [orig:64 ccheck ] [64])
            (nil))))
(jump_insn 137 41 138 5 (set (pc)
        (label_ref 117)) 650 {jump}
     (nil)
 -> 117)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 138 137 44)
;; basic block 6, loop depth 0, count 0, freq 1396, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [80.1%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 44 138 45 6 39 "" [1 uses])
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:SI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                    (const_int 16 [0x10])) [0 ct_7(D)->safe+0 S4 A64])
            (const_int 0 [0]))) tiles.cpp:184 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) tiles.cpp:184 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil))
 -> 52)
;;  succ:       7 [61.0%]  (FALLTHRU)
;;              8 [39.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 7, loop depth 0, count 0, freq 852, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [61.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	 17 [flags]
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 139 7 (parallel [
            (set (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                        (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                (plus:DI (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                            (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:185 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:100 ct ] [100])
        (nil)))
(jump_insn 139 49 140 7 (set (pc)
        (label_ref 117)) 650 {jump}
     (nil)
 -> 117)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 140 139 52)
;; basic block 8, loop depth 0, count 0, freq 544, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [39.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
(code_label 52 140 53 8 40 "" [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:187 89 {*movsi_internal}
     (nil))
(insn 55 54 56 8 (set (reg:DI 1 dx)
        (const_int 536870911 [0x1fffffff])) tiles.cpp:187 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 8 (set (reg:SI 4 si)
        (reg/v:SI 44 r15 [orig:99 num_ints ] [99])) tiles.cpp:187 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:99 num_ints ] [99])
        (nil)))
(insn 57 56 58 8 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:98 ints ] [98])) tiles.cpp:187 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:98 ints ] [98])
        (nil)))
(call_insn 58 57 59 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b67b8f25700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:187 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 59 58 60 8 (set (reg:SI 0 ax [orig:77 D.26025 ] [77])
        (reg:SI 0 ax)) tiles.cpp:187 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(note 60 59 61 8 NOTE_INSN_DELETED)
(insn 61 60 62 8 (set (reg:SI 38 r9 [orig:105 D.26025 ] [105])
        (plus:SI (mult:SI (reg:SI 0 ax [orig:77 D.26025 ] [77])
                (const_int 2 [0x2]))
            (const_int 1 [0x1]))) tiles.cpp:187 266 {*leasi}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:77 D.26025 ] [77])
        (nil)))
(insn 62 61 63 8 (set (reg/v:DI 38 r9 [orig:80 h2 ] [80])
        (sign_extend:DI (reg:SI 38 r9 [orig:105 D.26025 ] [105]))) tiles.cpp:187 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:105 D.26025 ] [105])
        (nil)))
(debug_insn 63 62 64 8 (var_location:DI h2 (reg/v:DI 38 r9 [orig:80 h2 ] [80])) tiles.cpp:187 -1
     (nil))
(debug_insn 64 63 65 8 (var_location:SI i (const_int 0 [0])) tiles.cpp:188 -1
     (nil))
(insn 65 64 66 8 (set (reg:DI 37 r8 [orig:92 D.26024 ] [92])
        (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 8 (set (reg:DI 4 si [orig:91 D.26024 ] [91])
        (mem/j:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100]) [0 ct_7(D)->m+0 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 141 8 (parallel [
            (set (reg:DI 2 cx [orig:81 ivtmp.112 ] [81])
                (plus:DI (reg:DI 37 r8 [orig:92 D.26024 ] [92])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(jump_insn 141 67 142 8 (set (pc)
        (label_ref 97)) tiles.cpp:189 650 {jump}
     (nil)
 -> 97)
;;  succ:       14 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13]

(barrier 142 141 109)
;; basic block 9, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 109 142 70 9 43 "" [1 uses])
(note 70 109 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 9 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b67bf528da8 *.LC0>)) -1
     (nil))
(insn 72 71 73 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b67bf528da8 *.LC0>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 9 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (nil))
(insn 74 73 75 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 91 {*movqi_internal}
     (nil))
(call_insn 75 74 76 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b67b7917600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 76 75 77 9 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:193 89 {*movsi_internal}
     (nil))
(call_insn 77 76 78 9 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b67b78fd700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:193 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 78 77 145)
;; basic block 10, loop depth 0, count 0, freq 9896, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  kill	
(code_label 145 78 79 10 45 "" [1 uses])
(note 79 145 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 10 (set (reg:DI 1 dx [orig:106 D.26027 ] [106])
        (sign_extend:DI (reg:SI 1 dx [111]))) tiles.cpp:194 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [111])
        (nil)))
(note 81 80 82 10 NOTE_INSN_DELETED)
(insn 82 81 83 10 (set (reg/f:DI 5 di [orig:108 ct_7(D)->data ] [108])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])) tiles.cpp:194 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                (const_int 8 [0x8])) [0 ct_7(D)->data+0 S8 A64])
        (nil)))
(insn 83 82 84 10 (set (reg/f:DI 0 ax [orig:89 D.26026 ] [89])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:106 D.26027 ] [106])
                (const_int 8 [0x8]))
            (reg/f:DI 5 di [orig:108 ct_7(D)->data ] [108]))) tiles.cpp:194 267 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:108 ct_7(D)->data ] [108])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:106 D.26027 ] [106])
            (nil))))
(insn 84 83 85 10 (set (reg:DI 1 dx [orig:90 D.26024 ] [90])
        (mem:DI (reg/f:DI 0 ax [orig:89 D.26026 ] [89]) [0 *_55+0 S8 A64])) tiles.cpp:194 87 {*movdi_internal_rex64}
     (nil))
(insn 85 84 86 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1 dx [orig:90 D.26024 ] [90])
            (reg/v:DI 42 r13 [orig:64 ccheck ] [64]))) tiles.cpp:194 8 {*cmpdi_1}
     (nil))
(jump_insn 86 85 87 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) tiles.cpp:194 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 225 [0xe1])
        (nil))
 -> 117)
;;  succ:       16 [2.2%]  (LOOP_EXIT)
;;              11 [97.8%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]

;; basic block 11, loop depth 0, count 0, freq 9673, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [97.8%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (parallel [
            (set (reg:DI 2 cx [orig:81 ivtmp.112 ] [81])
                (plus:DI (reg:DI 2 cx [orig:81 ivtmp.112 ] [81])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 89 88 90 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1 dx [orig:90 D.26024 ] [90])
            (const_int -1 [0xffffffffffffffff]))) tiles.cpp:195 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:90 D.26024 ] [90])
        (nil)))
(jump_insn 90 89 91 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) tiles.cpp:195 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil))
 -> 95)
;;  succ:       12 [2.2%]  (FALLTHRU,LOOP_EXIT)
;;              13 [97.8%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]

;; basic block 12, loop depth 0, count 0, freq 218, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [2.2%]  (FALLTHRU,LOOP_EXIT)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	
(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 143 12 (set (mem:DI (reg/f:DI 0 ax [orig:89 D.26026 ] [89]) [0 *_78+0 S8 A64])
        (reg/v:DI 42 r13 [orig:64 ccheck ] [64])) tiles.cpp:195 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 D.26026 ] [89])
        (expr_list:REG_DEAD (reg/v:DI 42 r13 [orig:64 ccheck ] [64])
            (nil))))
(jump_insn 143 92 144 12 (set (pc)
        (label_ref 117)) tiles.cpp:195 650 {jump}
     (nil)
 -> 117)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 144 143 95)
;; basic block 13, loop depth 0, count 0, freq 9455, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [97.8%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	
(code_label 95 144 96 13 42 "" [1 uses])
(note 96 95 131 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 131 96 97 13 (set (reg:DI 41 r12 [orig:115 D.26024 ] [115])
        (sign_extend:DI (reg/v:SI 6 bp [orig:59 j ] [59]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:59 j ] [59])
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13]

;; basic block 14, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 97 131 98 14 41 "" [1 uses])
(note 98 97 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 100 98 101 14 (var_location:SI j (debug_expr:SI D#7)) -1
     (nil))
(debug_insn 101 100 102 14 (var_location:SI i (minus:SI (reg:SI 2 cx [orig:81 ivtmp.112 ] [81])
        (reg:SI 37 r8 [orig:92 D.26024 ] [92]))) tiles.cpp:189 -1
     (nil))
(insn 102 101 104 14 (set (mem/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:100 ct ] [100])
                (const_int 40 [0x28])) [0 ct_7(D)->collisions+0 S8 A64])
        (reg:DI 2 cx [orig:81 ivtmp.112 ] [81])) tiles.cpp:190 87 {*movdi_internal_rex64}
     (nil))
(insn 104 102 105 14 (parallel [
            (set (reg:DI 0 ax [orig:110 D.26024 ] [110])
                (plus:DI (reg:DI 41 r12 [orig:115 D.26024 ] [115])
                    (reg/v:DI 38 r9 [orig:80 h2 ] [80])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:115 D.26024 ] [115])
        (nil)))
(insn 105 104 133 14 (parallel [
            (set (reg:DI 0 ax [112])
                (div:DI (reg:DI 0 ax [orig:110 D.26024 ] [110])
                    (reg:DI 4 si [orig:91 D.26024 ] [91])))
            (set (reg:DI 1 dx [111])
                (mod:DI (reg:DI 0 ax [orig:110 D.26024 ] [110])
                    (reg:DI 4 si [orig:91 D.26024 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:191 367 {*divmoddi4}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:110 D.26024 ] [110])
        (expr_list:REG_UNUSED (reg:DI 0 ax [112])
            (nil))))
(debug_insn 133 105 107 14 (var_location:SI D#7 (reg:SI 1 dx [111])) -1
     (nil))
(insn 107 133 108 14 (set (reg/v:SI 6 bp [orig:59 j ] [59])
        (reg:SI 1 dx [111])) tiles.cpp:191 89 {*movsi_internal}
     (nil))
(debug_insn 108 107 149 14 (var_location:SI j (reg:SI 1 dx [111])) tiles.cpp:191 -1
     (nil))
(insn 149 108 110 14 (set (reg:DI 5 di [orig:113 D.26028 ] [113])
        (reg:DI 2 cx [orig:81 ivtmp.112 ] [81])) 87 {*movdi_internal_rex64}
     (nil))
(insn 110 149 150 14 (parallel [
            (set (reg:DI 5 di [orig:113 D.26028 ] [113])
                (minus:DI (reg:DI 5 di [orig:113 D.26028 ] [113])
                    (reg:DI 37 r8 [orig:92 D.26024 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) 310 {*subdi_1}
     (nil))
(insn 150 110 111 14 (set (reg:DI 5 di [orig:113 D.26028 ] [113])
        (reg:DI 5 di [orig:113 D.26028 ] [113])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:113 D.26028 ] [113])
        (nil)))
(insn 111 150 112 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 4 si [orig:91 D.26024 ] [91])
            (reg:DI 5 di [orig:113 D.26028 ] [113]))) tiles.cpp:193 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:113 D.26028 ] [113])
        (nil)))
(jump_insn 112 111 146 14 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 145)
            (pc))) tiles.cpp:193 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil))
 -> 145)
;;  succ:       15 [0.0%]  (FALLTHRU)
;;              10 [100.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13]

;; basic block 15, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 [0.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 146 112 147 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 147 146 148 15 (set (pc)
        (label_ref 109)) 650 {jump}
     (nil)
 -> 109)
;;  succ:       9 [100.0%]  (LOOP_EXIT)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 148 147 117)
;; basic block 16, loop depth 0, count 0, freq 2173, maybe hot
;;  prev block 15, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%] 
;;              3 [100.0%] 
;;              5 [100.0%] 
;;              10 [2.2%]  (LOOP_EXIT)
;;              12 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 117 148 118 16 38 "" [5 uses])
(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 119 118 124 16 (var_location:SI j (debug_expr:SI D#7)) -1
     (nil))
(insn 124 119 127 16 (set (reg/i:SI 0 ax)
        (reg/v:SI 6 bp [orig:59 j ] [59])) tiles.cpp:199 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:59 j ] [59])
        (nil)))
(insn 127 124 0 16 (use (reg/i:SI 0 ax)) tiles.cpp:199 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Function void tiles(int*, int, collision_table*, float*, int, int*, int) (_Z5tilesPiiP15collision_tablePfiS_i, funcdef_no=1062, decl_uid=23694, cgraph_uid=306)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=400, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=336, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 94
Updating elimination of equiv for reg 114
Updating elimination of equiv for reg 133
Updating elimination of equiv for reg 159
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 21:  (0) =r  (1) p {*leasi}
      Creating newreg=189 from oldreg=62, assigning class GENERAL_REGS to r189
   21: r189:SI=r112:SI+r114:SI+0x1
    Inserting insn reload after:
  246: r62:SI=r189:SI

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 246:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) p {*leadi}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=15,losers=2 -- reject
	 Choosing alt 0 in insn 65:  (0) =x  (1) r {*floatsisf2_sse_interunit}
      Creating newreg=190 from oldreg=102, assigning class SSE_REGS to r190
   65: r190:SF=float(r109:SI)
    Inserting insn reload after:
  247: r102:SF=r190:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 247:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 72:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
      Creating newreg=191 from oldreg=131, assigning class SSE_REGS to r191
   72: r191:SF=r191:SF*[r186:DI+r184:DI]
    Inserting insn reload before:
  248: r191:SF=r102:SF
    Inserting insn reload after:
  249: r131:SF=r191:SF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 248:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) x {fix_truncsfsi_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 81:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 92:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (1) rzw {*call_value}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 122:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=192 from oldreg=146, assigning class GENERAL_REGS to r192
  122: {r192:SI=r192:SI-r79:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  250: r192:SI=r78:SI
    Inserting insn reload after:
  251: r146:SI=r192:SI

          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 130:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=193 from oldreg=151, assigning class GENERAL_REGS to r193
  130: {r193:SI=r193:SI-r78:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  252: r193:SI=r79:SI
    Inserting insn reload after:
  253: r151:SI=r193:SI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 131:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) p {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 144:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 145:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 159:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 162:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) p {*leadi}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
  BB 7
   Insn 204: point = 0
  BB 18
   Insn 164: point = 0
   Insn 163: point = 0
   Insn 162: point = 0
   Insn 159: point = 0
   Insn 158: point = 0
   Insn 157: point = 1
   Insn 156: point = 2
   Insn 155: point = 2
   Insn 154: point = 2
   Insn 153: point = 2
   Insn 151: point = 2
   Insn 150: point = 3
  BB 16
   Insn 212: point = 6
   Insn 15: point = 6
   Insn 235: point = 7
   Insn 234: point = 9
   Insn 233: point = 11
   Insn 232: point = 13
   Insn 231: point = 15
   Insn 230: point = 17
  BB 15
   Insn 148: point = 20
   Insn 147: point = 20
   Insn 145: point = 20
   Insn 144: point = 20
   Insn 141: point = 20
   Insn 140: point = 21
   Insn 138: point = 23
  BB 13
   Insn 210: point = 25
   Insn 124: point = 25
   Insn 123: point = 27
   Insn 251: point = 29
	Hard reg 0 is preferable by r192 with profit 476
   Insn 122: point = 31
   Insn 250: point = 31
  BB 14
   Insn 134: point = 33
   Insn 133: point = 33
   Insn 132: point = 35
   Insn 131: point = 37
   Insn 253: point = 39
	Hard reg 0 is preferable by r193 with profit 476
   Insn 130: point = 41
   Insn 252: point = 41
  BB 12
   Insn 120: point = 43
   Insn 119: point = 43
   Insn 118: point = 43
   Insn 116: point = 44
  BB 20
   Insn 214: point = 46
   Insn 245: point = 46
   Insn 244: point = 48
   Insn 243: point = 50
   Insn 242: point = 52
   Insn 241: point = 54
   Insn 240: point = 56
   Insn 239: point = 58
   Insn 238: point = 60
   Insn 237: point = 62
   Insn 236: point = 64
   Insn 195: point = 66
   Insn 194: point = 67
   Insn 14: point = 68
   Insn 13: point = 69
  BB 17
   Insn 16: point = 71
  BB 19
   Insn 172: point = 73
   Insn 171: point = 73
  BB 11
   Insn 208: point = 74
   Insn 229: point = 74
   Insn 228: point = 76
   Insn 227: point = 78
   Insn 226: point = 80
   Insn 225: point = 82
   Insn 224: point = 84
   Insn 193: point = 86
   Insn 17: point = 87
   Insn 109: point = 88
   Insn 107: point = 90
   Insn 105: point = 91
  BB 6
   Insn 59: point = 94
   Insn 58: point = 94
  BB 10
   Insn 206: point = 95
   Insn 98: point = 95
   Insn 97: point = 95
   Insn 96: point = 96
   Insn 95: point = 96
   Insn 92: point = 97
   Insn 91: point = 98
   Insn 90: point = 100
   Insn 223: point = 101
   Insn 222: point = 103
  BB 9
   Insn 83: point = 106
   Insn 82: point = 106
   Insn 81: point = 106
   Insn 78: point = 106
   Insn 77: point = 107
   Insn 75: point = 109
   Insn 74: point = 110
   Insn 73: point = 110
   Insn 249: point = 111
	Hard reg 21 is preferable by r191 with profit 94
   Insn 72: point = 113
   Insn 248: point = 113
  BB 8
   Insn 221: point = 115
   Insn 220: point = 117
   Insn 219: point = 119
   Insn 218: point = 121
   Insn 217: point = 123
   Insn 216: point = 125
   Insn 192: point = 127
   Insn 12: point = 128
   Insn 69: point = 129
   Insn 67: point = 131
   Insn 247: point = 132
   Insn 65: point = 134
  BB 4
   Insn 199: point = 136
  BB 3
   Insn 30: point = 137
   Insn 29: point = 137
  BB 5
   Insn 201: point = 138
   Insn 49: point = 138
   Insn 48: point = 138
   Insn 47: point = 139
   Insn 46: point = 140
   Insn 42: point = 141
   Insn 41: point = 143
   Insn 40: point = 145
   Insn 37: point = 147
  BB 2
   Insn 26: point = 149
   Insn 25: point = 149
   Insn 246: point = 149
   Insn 21: point = 151
   Insn 10: point = 152
   Insn 9: point = 153
   Insn 8: point = 154
   Insn 7: point = 155
   Insn 6: point = 156
   Insn 5: point = 157
   Insn 4: point = 158
 r62: [0..149]
 r63: [65..68]
 r66: [108..109]
 r71: [85..88]
 r72: [61..69]
 r77: [126..129]
 r78: [34..44] [26..32]
 r79: [22..43]
 r82: [33..33] [23..25]
 r91: [83..91]
 r92: [124..128]
 r94: [0..1]
 r95: [81..87]
 r96: [71..71] [4..6]
 r102: [106..132]
 r108: [92..158]
 r109: [122..157] [79..103]
 r110: [0..156]
 r111: [137..155] [120..135]
 r112: [118..154] [77..101]
 r113: [139..153]
 r114: [144..152]
 r117: [146..147]
 r120: [138..145]
 r121: [142..143]
 r122: [140..141]
 r129: [130..131]
 r131: [110..111]
 r133: [106..107]
 r134: [99..100]
 r135: [96..98]
 r142: [89..90]
 r146: [28..29]
 r148: [26..28]
 r149: [27..27]
 r151: [38..39]
 r152: [36..37]
 r154: [34..36]
 r155: [35..35]
 r159: [20..21]
 r160: [2..3]
 r162: [75..86]
 r163: [95..97]
 r164: [116..127]
 r165: [63..84] [0..17]
 r166: [59..82] [0..15]
 r167: [57..80] [0..13]
 r168: [55..78] [0..11]
 r169: [53..76] [0..9]
 r170: [51..74] [0..7]
 r171: [49..66]
 r172: [47..67]
 r173: [20..64]
 r174: [18..62]
 r175: [20..60]
 r176: [16..58]
 r177: [14..56]
 r178: [12..54]
 r179: [10..52]
 r180: [8..50]
 r181: [20..48]
 r182: [20..46]
 r183: [106..125]
 r184: [106..123]
 r185: [104..121]
 r186: [106..119]
 r187: [102..117]
 r188: [106..115]
 r189: [150..151]
 r190: [133..134]
 r191: [112..113]
 r192: [30..31]
 r193: [40..41]
Compressing live ranges: from 159 to 111 - 69%
Ranges after the compression:
 r62: [0..108]
 r63: [53..54]
 r66: [79..80]
 r71: [67..68]
 r72: [49..54]
 r77: [95..96]
 r78: [27..34] [20..25]
 r79: [18..34]
 r82: [26..26] [18..19]
 r91: [65..70]
 r92: [93..96]
 r94: [0..1]
 r95: [63..68]
 r96: [55..55] [4..5]
 r102: [77..98]
 r108: [71..110]
 r109: [91..110] [61..76]
 r110: [0..110]
 r111: [89..110]
 r112: [87..110] [59..74]
 r113: [101..110]
 r114: [105..110]
 r117: [107..108]
 r120: [101..106]
 r121: [103..104]
 r122: [101..102]
 r129: [97..98]
 r131: [81..82]
 r133: [77..78]
 r134: [73..74]
 r135: [71..72]
 r142: [69..70]
 r146: [22..23]
 r148: [20..22]
 r149: [21..21]
 r151: [31..32]
 r152: [29..30]
 r154: [27..29]
 r155: [28..28]
 r159: [16..17]
 r160: [2..3]
 r162: [57..68]
 r163: [71..72]
 r164: [85..96]
 r165: [51..66] [0..15]
 r166: [47..64] [0..13]
 r167: [45..62] [0..11]
 r168: [43..60] [0..9]
 r169: [41..58] [0..7]
 r170: [39..56] [0..5]
 r171: [37..54]
 r172: [35..54]
 r173: [16..52]
 r174: [16..50]
 r175: [16..48]
 r176: [14..46]
 r177: [12..44]
 r178: [10..42]
 r179: [8..40]
 r180: [6..38]
 r181: [16..36]
 r182: [16..34]
 r183: [77..94]
 r184: [77..92]
 r185: [77..90]
 r186: [77..88]
 r187: [75..86]
 r188: [77..84]
 r189: [109..110]
 r190: [99..100]
 r191: [83..84]
 r192: [24..25]
 r193: [33..34]
	 Assigning to 192 (cl=GENERAL_REGS, orig=146, freq=1428, tfirst=192, tfreq=1428)...
	   Assign 0 to reload r192 (freq=1428)
	 Assigning to 193 (cl=GENERAL_REGS, orig=151, freq=1428, tfirst=193, tfreq=1428)...
	   Assign 0 to reload r193 (freq=1428)
	 Assigning to 189 (cl=GENERAL_REGS, orig=62, freq=8, tfirst=189, tfreq=8)...
	   Assign 1 to reload r189 (freq=8)
	 Assigning to 191 (cl=SSE_REGS, orig=131, freq=282, tfirst=191, tfreq=282)...
	   Assign 21 to reload r191 (freq=282)
	 Assigning to 190 (cl=SSE_REGS, orig=102, freq=8, tfirst=190, tfreq=8)...
	   Assign 22 to reload r190 (freq=8)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********


********** Local #2: **********

  Slot 0 regnos (width = 4):	 102
  Slot 1 regnos (width = 4):	 62
  Slot 2 regnos (width = 8):	 110
  Slot 3 regnos (width = 8):	 108
Changing spilled pseudos to memory in insn #4
Changing spilled pseudos to memory in insn #6
Changing spilled pseudos to memory in insn #246
Changing spilled pseudos to memory in insn #22
Changing spilled pseudos to memory in insn #247
Changing spilled pseudos to memory in insn #248
Changing spilled pseudos to memory in insn #105
Changing spilled pseudos to memory in insn #153
Changing spilled pseudos to memory in insn #154
New elimination table:
Can eliminate 16 to 7 (offset=432, prev_offset=400)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=368, prev_offset=336)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 94
Updating elimination of equiv for reg 114
Updating elimination of equiv for reg 133
Updating elimination of equiv for reg 159

********** Local #3: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) p {*leadi}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 92:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 248:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 247:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 246:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can eliminate 16 to 7 (offset=432, prev_offset=432)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=368, prev_offset=368)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 94
Updating elimination of equiv for reg 114
Updating elimination of equiv for reg 133
Updating elimination of equiv for reg 159
changing reg in insn 14
changing reg in insn 236
changing reg in insn 75
changing reg in insn 77
changing reg in insn 109
changing reg in insn 224
changing reg in insn 13
changing reg in insn 238
changing reg in insn 69
changing reg in insn 216
changing reg in insn 116
changing reg in insn 133
changing reg in insn 130
changing reg in insn 124
changing reg in insn 119
changing reg in insn 118
changing reg in insn 140
changing reg in insn 122
changing reg in insn 119
changing reg in insn 134
changing reg in insn 133
changing reg in insn 124
changing reg in insn 134
changing reg in insn 138
changing reg in insn 105
changing reg in insn 225
changing reg in insn 12
changing reg in insn 217
changing reg in insn 157
changing reg in insn 158
changing reg in insn 17
changing reg in insn 226
changing reg in insn 15
changing reg in insn 16
changing reg in insn 150
changing reg in insn 222
changing reg in insn 5
changing reg in insn 227
changing reg in insn 218
changing reg in insn 65
changing reg in insn 58
changing reg in insn 7
changing reg in insn 219
changing reg in insn 223
changing reg in insn 8
changing reg in insn 228
changing reg in insn 220
changing reg in insn 107
changing reg in insn 67
changing reg in insn 21
changing reg in insn 90
changing reg in insn 37
changing reg in insn 29
changing reg in insn 9
changing reg in insn 47
changing reg in insn 10
changing reg in insn 21
changing reg in insn 41
changing reg in insn 25
changing reg in insn 37
changing reg in insn 40
changing reg in insn 40
changing reg in insn 48
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 46
changing reg in insn 67
changing reg in insn 69
changing reg in insn 73
changing reg in insn 77
changing reg in insn 78
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 95
changing reg in insn 107
changing reg in insn 109
changing reg in insn 123
changing reg in insn 123
changing reg in insn 123
changing reg in insn 124
changing reg in insn 123
changing reg in insn 131
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 132
changing reg in insn 133
changing reg in insn 132
changing reg in insn 140
changing reg in insn 141
changing reg in insn 150
changing reg in insn 151
changing reg in insn 193
changing reg in insn 229
changing reg in insn 92
changing reg in insn 97
changing reg in insn 192
changing reg in insn 221
changing reg in insn 224
changing reg in insn 230
changing reg in insn 237
changing reg in insn 225
changing reg in insn 231
changing reg in insn 162
changing reg in insn 239
changing reg in insn 162
changing reg in insn 158
changing reg in insn 157
changing reg in insn 226
changing reg in insn 232
changing reg in insn 159
changing reg in insn 240
changing reg in insn 163
changing reg in insn 161
changing reg in insn 159
changing reg in insn 151
changing reg in insn 168
changing reg in insn 227
changing reg in insn 233
changing reg in insn 241
changing reg in insn 163
changing reg in insn 228
changing reg in insn 234
changing reg in insn 242
changing reg in insn 15
changing reg in insn 171
changing reg in insn 229
changing reg in insn 235
changing reg in insn 243
changing reg in insn 155
changing reg in insn 195
changing reg in insn 244
changing reg in insn 194
changing reg in insn 245
changing reg in insn 236
changing reg in insn 144
changing reg in insn 118
changing reg in insn 116
changing reg in insn 147
changing reg in insn 144
changing reg in insn 141
changing reg in insn 138
changing reg in insn 140
changing reg in insn 237
changing reg in insn 230
changing reg in insn 147
changing reg in insn 238
changing reg in insn 145
changing reg in insn 145
changing reg in insn 140
changing reg in insn 239
changing reg in insn 231
changing reg in insn 240
changing reg in insn 232
changing reg in insn 241
changing reg in insn 233
changing reg in insn 123
changing reg in insn 123
changing reg in insn 134
changing reg in insn 132
changing reg in insn 132
changing reg in insn 242
changing reg in insn 234
changing reg in insn 243
changing reg in insn 235
changing reg in insn 138
changing reg in insn 244
changing reg in insn 118
changing reg in insn 141
changing reg in insn 140
changing reg in insn 245
changing reg in insn 116
changing reg in insn 216
changing reg in insn 82
changing reg in insn 217
changing reg in insn 81
changing reg in insn 82
changing reg in insn 81
changing reg in insn 78
changing reg in insn 72
changing reg in insn 77
changing reg in insn 218
changing reg in insn 222
changing reg in insn 219
changing reg in insn 72
changing reg in insn 220
changing reg in insn 223
changing reg in insn 221
changing reg in insn 78
changing reg in insn 77


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 6 failed.
Forwarding edge 6->7 to 21 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 156.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 28 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 25 (  1.1)


void tiles(int*, int, collision_table*, float*, int, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={23d,20u} r1={15d,11u} r2={8d,8u,1e} r3={6d,13u} r4={10d,9u} r5={12d,9u,1e} r6={8d,10u,2e} r7={1d,42u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1e} r17={28d,8u} r18={4d} r19={4d} r20={7e} r21={10d,6u} r22={6d,1u} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={9d,8u} r38={9d,5u} r39={4d} r40={6d,2u} r41={6d,13u} r42={6d,7u,1e} r43={6d,6u} r44={7d,10u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 515{314d,188u,13e} in 144{140 regular + 4 call} insns.
(note 3 0 18 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 38 [r9] 41 [r12] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 38 [r9] 41 [r12] 44 [r15]
;; live  kill	
(note 18 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 18 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S8 A64])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:84 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])
        (reg:DI 1 dx [ ctable ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ctable ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 44 r15 [orig:111 floats ] [111])
        (reg:DI 2 cx [ floats ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 8 7 9 2 (set (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:84 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 9 8 10 2 (set (reg/v/f:DI 38 r9 [orig:113 ints ] [113])
        (reg:DI 38 r9 [ ints ])) tiles.cpp:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ ints ])
        (nil)))
(insn 10 9 11 2 (set (reg/v:SI 0 ax [orig:114 num_ints ] [114])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 432 [0x1b0])) [0 num_ints+0 S4 A64])) tiles.cpp:84 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 num_ints+0 S4 A64])
        (nil)))
(note 11 10 20 2 NOTE_INSN_FUNCTION_BEG)
(note 20 11 21 2 NOTE_INSN_DELETED)
(insn 21 20 246 2 (set (reg/v:SI 1 dx [orig:62 num_coordinates ] [62])
        (plus:SI (plus:SI (reg/v:SI 3 bx [orig:112 num_floats ] [112])
                (reg/v:SI 0 ax [orig:114 num_ints ] [114]))
            (const_int 1 [0x1]))) tiles.cpp:89 266 {*leasi}
     (nil))
(insn 246 21 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [0 %sfp+-20 S4 A32])
        (reg/v:SI 1 dx [orig:62 num_coordinates ] [62])) tiles.cpp:89 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:62 num_coordinates ] [62])
        (nil)))
(debug_insn 22 246 24 2 (var_location:SI num_coordinates (mem/c:SI (plus:DI (reg/f:DI 7 sp)
            (const_int 12 [0xc])) [0 %sfp+-20 S4 A32])) tiles.cpp:89 -1
     (nil))
(debug_insn 24 22 25 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 25 24 26 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 0 ax [orig:114 num_ints ] [114])
            (const_int 0 [0]))) tiles.cpp:91 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 52 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) tiles.cpp:91 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 34)
;;  succ:       5 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 38 [r9] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 38 [r9] 41 [r12] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 52 26 27 3 54 "" [1 uses])
(note 27 52 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 28 27 29 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 29 28 30 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:112 num_floats ] [112])
            (const_int 0 [0]))) tiles.cpp:94 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 30 29 198 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) tiles.cpp:94 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 63)
;;  succ:       8 [95.2%] 
;;              4 [4.8%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [4.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
(note 198 30 199 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 199 198 200 4 (set (pc)
        (label_ref 55)) 650 {jump}
     (nil)
 -> 55)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 7 [sp] 41 [r12]

(barrier 200 199 34)
;; basic block 5, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 38 [r9] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 38 [r9] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 34 200 35 5 51 "" [1 uses])
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 36 35 37 5 NOTE_INSN_DELETED)
(insn 37 36 38 5 (set (reg:DI 1 dx [orig:117 D.26059 ] [117])
        (sign_extend:DI (reg/v:SI 3 bx [orig:112 num_floats ] [112]))) tiles.cpp:91 149 {*extendsidi2_rex64}
     (nil))
(note 38 37 39 5 NOTE_INSN_DELETED)
(note 39 38 40 5 NOTE_INSN_DELETED)
(insn 40 39 41 5 (set (reg:DI 5 di [orig:120 D.26061 ] [120])
        (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:117 D.26059 ] [117])
                    (const_int 4 [0x4]))
                (reg/f:DI 7 sp))
            (const_int 196 [0xc4]))) tiles.cpp:91 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:117 D.26059 ] [117])
        (nil)))
(insn 41 40 42 5 (set (reg:DI 0 ax [orig:121 D.26059 ] [121])
        (sign_extend:DI (reg/v:SI 0 ax [orig:114 num_ints ] [114]))) tiles.cpp:91 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:114 num_ints ] [114])
        (nil)))
(insn 42 41 46 5 (parallel [
            (set (reg:DI 1 dx [orig:122 D.26059 ] [122])
                (ashift:DI (reg:DI 0 ax [orig:121 D.26059 ] [121])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:91 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:121 D.26059 ] [121])
        (nil)))
(insn 46 42 47 5 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:122 D.26059 ] [122])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:122 D.26059 ] [122])
        (nil)))
(insn 47 46 48 5 (set (reg:DI 4 si)
        (reg/v/f:DI 38 r9 [orig:113 ints ] [113])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 38 r9 [orig:113 ints ] [113])
        (nil)))
(insn 48 47 49 5 (set (reg:DI 5 di)
        (reg:DI 5 di [orig:120 D.26061 ] [120])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:120 D.26061 ] [120])
        (nil)))
(call_insn 49 48 201 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b67b90e9500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 201 49 202 5 (set (pc)
        (label_ref 52)) 650 {jump}
     (nil)
 -> 52)
;;  succ:       3 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 44 [r15]

(barrier 202 201 55)
;; basic block 6, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;;              10 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 55 202 56 6 53 "" [2 uses])
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 57 56 58 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 58 57 59 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
            (const_int 0 [0]))) tiles.cpp:100 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 203 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) tiles.cpp:100 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 103)
;;  succ:       11 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 7 [sp] 41 [r12]

;; basic block 7, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 203 59 204 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 204 203 205 7 (set (pc)
        (label_ref 179)) 650 {jump}
     (nil)
 -> 179)
;;  succ:       21 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 205 204 63)
;; basic block 8, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 63 205 64 8 52 "" [1 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 247 8 (set (reg:SF 22 xmm1 [orig:102 D.26057 ] [102])
        (float:SF (reg/v:SI 41 r12 [orig:109 num_tilings ] [109]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 247 65 66 8 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A32])
        (reg:SF 22 xmm1 [orig:102 D.26057 ] [102])) 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:102 D.26057 ] [102])
        (nil)))
(note 66 247 67 8 NOTE_INSN_DELETED)
(insn 67 66 68 8 (set (reg:DI 0 ax [orig:129 D.26059 ] [129])
        (zero_extend:DI (plus:SI (reg/v:SI 3 bx [orig:112 num_floats ] [112])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (nil))
(note 68 67 69 8 NOTE_INSN_DELETED)
(insn 69 68 12 8 (set (reg:DI 43 r14 [orig:77 D.26059 ] [77])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:129 D.26059 ] [129])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:129 D.26059 ] [129])
        (nil)))
(insn 12 69 192 8 (set (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])
        (const_int 0 [0])) tiles.cpp:94 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 192 12 216 8 (set (reg/f:DI 42 r13 [164])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 216 192 217 8 (set (reg:DI 43 r14 [orig:77 D.26059 ] [77])
        (reg:DI 43 r14 [orig:77 D.26059 ] [77])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:77 D.26059 ] [77])
        (nil)))
(insn 217 216 218 8 (set (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])
        (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])
        (nil)))
(insn 218 217 219 8 (set (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (nil)))
(insn 219 218 220 8 (set (reg/v/f:DI 44 r15 [orig:111 floats ] [111])
        (reg/v/f:DI 44 r15 [orig:111 floats ] [111])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 44 r15 [orig:111 floats ] [111])
        (nil)))
(insn 220 219 221 8 (set (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (reg/v:SI 3 bx [orig:112 num_floats ] [112])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (nil)))
(insn 221 220 85 8 (set (reg/f:DI 42 r13 [164])
        (reg/f:DI 42 r13 [164])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [164])
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 942, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [95.2%]  (DFS_BACK)
;;              8 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 6 [bp] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 85 221 70 9 58 "" [1 uses])
(note 70 85 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 248 9 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 248 71 72 9 (set (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A32])) tiles.cpp:95 135 {*movsf_internal}
     (nil))
(insn 72 248 249 9 (set (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])
        (mult:SF (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])
            (mem:SF (plus:DI (reg/v/f:DI 44 r15 [orig:111 floats ] [111])
                    (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])) [0 MEM[base: floats_26(D), index: ivtmp.138_58, offset: 0B]+0 S4 A32]))) tiles.cpp:95 777 {*fop_sf_comm_sse}
     (nil))
(insn 249 72 73 9 (set (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])
        (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])) tiles.cpp:95 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])
        (nil)))
(insn 73 249 74 9 (set (reg:SF 21 xmm0)
        (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])) tiles.cpp:95 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:131 D.26057 ] [131])
        (nil)))
(call_insn/u 74 73 75 9 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b67b7876a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:95 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 75 74 77 9 (set (reg:SF 21 xmm0 [orig:66 D.26057 ] [66])
        (reg:SF 21 xmm0)) tiles.cpp:95 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 77 75 78 9 (set (reg:SI 0 ax [133])
        (fix:SI (reg:SF 21 xmm0 [orig:66 D.26057 ] [66]))) tiles.cpp:95 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:66 D.26057 ] [66])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 42 r13 [164])
                    (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])) [0 MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B]+0 S4 A32])
            (nil))))
(insn 78 77 80 9 (set (mem:SI (plus:DI (reg/f:DI 42 r13 [164])
                (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])) [0 MEM[symbol: qstate, index: ivtmp.138_58, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [133])) tiles.cpp:95 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [133])
        (nil)))
(debug_insn 80 78 81 9 (var_location:SI i (debug_expr:SI D#9)) -1
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])
                (plus:DI (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 82 81 83 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [orig:92 ivtmp.138 ] [92])
            (reg:DI 43 r14 [orig:77 D.26059 ] [77]))) tiles.cpp:94 8 {*cmpdi_1}
     (nil))
(jump_insn 83 82 89 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 85)
            (pc))) tiles.cpp:94 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 85)
;;  succ:       9 [95.2%]  (DFS_BACK)
;;              10 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 41 [r12]
;; live  kill	 17 [flags]
(note 89 83 222 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 222 89 223 10 (set (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (nil)))
(insn 223 222 90 10 (set (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (reg/v:SI 3 bx [orig:112 num_floats ] [112])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (nil)))
(insn 90 223 91 10 (set (reg:DI 1 dx [orig:134 D.26059 ] [134])
        (sign_extend:DI (reg/v:SI 3 bx [orig:112 num_floats ] [112]))) tiles.cpp:96 149 {*extendsidi2_rex64}
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:DI 1 dx [orig:135 D.26059 ] [135])
                (ashift:DI (reg:DI 1 dx [orig:134 D.26059 ] [134])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:96 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:134 D.26059 ] [134])
        (nil)))
(insn 92 91 95 10 (parallel [
            (set (reg/f:DI 5 di [163])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -256 [0xffffffffffffff00]))
        (nil)))
(insn 95 92 96 10 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:135 D.26059 ] [135])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:135 D.26059 ] [135])
        (nil)))
(insn 96 95 97 10 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 97 96 98 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [163])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [163])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -256 [0xffffffffffffff00]))
            (nil))))
(call_insn 98 97 206 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b67b90e9600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 206 98 207 10 (set (pc)
        (label_ref 55)) 650 {jump}
     (nil)
 -> 55)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 7 [sp] 41 [r12]

(barrier 207 206 103)
;; basic block 11, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 103 207 104 11 55 "" [1 uses])
(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 11 (set (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 108 [ the_tiles ])
        (nil)))
(note 106 105 107 11 NOTE_INSN_DELETED)
(insn 107 106 108 11 (set (reg:DI 0 ax [orig:142 D.26059 ] [142])
        (zero_extend:DI (plus:SI (reg/v:SI 3 bx [orig:112 num_floats ] [112])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (nil))
(note 108 107 109 11 NOTE_INSN_DELETED)
(insn 109 108 17 11 (set (reg:DI 43 r14 [orig:71 D.26059 ] [71])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:142 D.26059 ] [142])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:142 D.26059 ] [142])
        (nil)))
(insn 17 109 193 11 (set (reg/v:SI 44 r15 [orig:95 j ] [95])
        (const_int 0 [0])) tiles.cpp:100 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 193 17 224 11 (set (reg/f:DI 42 r13 [162])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 192 [0xc0]))) 267 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 224 193 225 11 (set (reg:DI 43 r14 [orig:71 D.26059 ] [71])
        (reg:DI 43 r14 [orig:71 D.26059 ] [71])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:71 D.26059 ] [71])
        (nil)))
(insn 225 224 226 11 (set (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
        (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
        (nil)))
(insn 226 225 227 11 (set (reg/v:SI 44 r15 [orig:95 j ] [95])
        (reg/v:SI 44 r15 [orig:95 j ] [95])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:95 j ] [95])
        (nil)))
(insn 227 226 228 11 (set (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (nil)))
(insn 228 227 229 11 (set (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (reg/v:SI 3 bx [orig:112 num_floats ] [112])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (nil)))
(insn 229 228 208 11 (set (reg/f:DI 42 r13 [162])
        (reg/f:DI 42 r13 [162])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [162])
        (nil)))
(jump_insn 208 229 209 11 (set (pc)
        (label_ref 166)) 650 {jump}
     (nil)
 -> 166)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 209 208 174)
;; basic block 12, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [95.2%]  (DFS_BACK)
;;              20 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 5 [di] 7 [sp] 40 [r11]
;; lr  def 	 4 [si] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(code_label 174 209 113 12 64 "" [2 uses])
(note 113 174 114 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 114 113 116 12 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 116 114 118 12 (set (reg:SI 37 r8 [orig:78 D.26056 ] [78])
        (mem:SI (plus:DI (reg/f:DI 40 r11 [164])
                (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])) [0 MEM[symbol: qstate, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 89 {*movsi_internal}
     (nil))
(insn 118 116 119 12 (set (reg:SI 4 si [orig:79 D.26056 ] [79])
        (mem:SI (plus:DI (reg/f:DI 5 di [163])
                (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])) tiles.cpp:106 89 {*movsi_internal}
     (nil))
(insn 119 118 120 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 37 r8 [orig:78 D.26056 ] [78])
            (reg:SI 4 si [orig:79 D.26056 ] [79]))) tiles.cpp:106 7 {*cmpsi_1}
     (nil))
(jump_insn 120 119 121 12 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) tiles.cpp:106 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 127)
;;  succ:       13 [50.0%]  (FALLTHRU)
;;              14 [50.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 13, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 37 [r8]
;; live  kill	 17 [flags]
(note 121 120 250 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 250 121 122 13 (set (reg:SI 0 ax [orig:146 D.26056 ] [146])
        (reg:SI 37 r8 [orig:78 D.26056 ] [78])) tiles.cpp:107 89 {*movsi_internal}
     (nil))
(insn 122 250 251 13 (parallel [
            (set (reg:SI 0 ax [orig:146 D.26056 ] [146])
                (minus:SI (reg:SI 0 ax [orig:146 D.26056 ] [146])
                    (reg:SI 4 si [orig:79 D.26056 ] [79])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 309 {*subsi_1}
     (nil))
(insn 251 122 123 13 (set (reg:SI 0 ax [orig:146 D.26056 ] [146])
        (reg:SI 0 ax [orig:146 D.26056 ] [146])) tiles.cpp:107 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:146 D.26056 ] [146])
        (nil)))
(insn 123 251 124 13 (parallel [
            (set (reg:SI 0 ax [149])
                (div:SI (reg:SI 0 ax [orig:146 D.26056 ] [146])
                    (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])))
            (set (reg:SI 1 dx [orig:148 D.26056 ] [148])
                (mod:SI (reg:SI 0 ax [orig:146 D.26056 ] [146])
                    (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:146 D.26056 ] [146])
        (expr_list:REG_UNUSED (reg:SI 0 ax [149])
            (nil))))
(insn 124 123 210 13 (parallel [
            (set (reg:SI 37 r8 [orig:82 D.26056 ] [82])
                (minus:SI (reg:SI 37 r8 [orig:78 D.26056 ] [78])
                    (reg:SI 1 dx [orig:148 D.26056 ] [148])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:107 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:148 D.26056 ] [148])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:78 D.26056 ] [78])
            (nil))))
(jump_insn 210 124 211 13 (set (pc)
        (label_ref 135)) 650 {jump}
     (nil)
 -> 135)
;;  succ:       15 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 211 210 127)
;; basic block 14, loop depth 0, count 0, freq 4762, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 37 [r8]
;; live  kill	 17 [flags]
(code_label 127 211 128 14 60 "" [1 uses])
(note 128 127 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 129 128 252 14 NOTE_INSN_DELETED)
(insn 252 129 130 14 (set (reg:SI 0 ax [orig:151 D.26056 ] [151])
        (reg:SI 4 si [orig:79 D.26056 ] [79])) tiles.cpp:109 89 {*movsi_internal}
     (nil))
(insn 130 252 253 14 (parallel [
            (set (reg:SI 0 ax [orig:151 D.26056 ] [151])
                (minus:SI (reg:SI 0 ax [orig:151 D.26056 ] [151])
                    (reg:SI 37 r8 [orig:78 D.26056 ] [78])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 309 {*subsi_1}
     (nil))
(insn 253 130 131 14 (set (reg:SI 0 ax [orig:151 D.26056 ] [151])
        (reg:SI 0 ax [orig:151 D.26056 ] [151])) tiles.cpp:109 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:151 D.26056 ] [151])
        (nil)))
(insn 131 253 132 14 (parallel [
            (set (reg:SI 0 ax [orig:152 D.26056 ] [152])
                (plus:SI (reg:SI 0 ax [orig:151 D.26056 ] [151])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:151 D.26056 ] [151])
        (nil)))
(insn 132 131 133 14 (parallel [
            (set (reg:SI 0 ax [155])
                (div:SI (reg:SI 0 ax [orig:152 D.26056 ] [152])
                    (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])))
            (set (reg:SI 1 dx [orig:154 D.26056 ] [154])
                (mod:SI (reg:SI 0 ax [orig:152 D.26056 ] [152])
                    (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:152 D.26056 ] [152])
        (expr_list:REG_UNUSED (reg:SI 0 ax [155])
            (nil))))
(insn 133 132 134 14 (set (reg:SI 37 r8 [orig:82 D.26056 ] [82])
        (plus:SI (plus:SI (reg:SI 37 r8 [orig:78 D.26056 ] [78])
                (reg:SI 1 dx [orig:154 D.26056 ] [154]))
            (const_int 1 [0x1]))) tiles.cpp:109 266 {*leasi}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:154 D.26056 ] [154])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:78 D.26056 ] [78])
            (nil))))
(insn 134 133 135 14 (parallel [
            (set (reg:SI 37 r8 [orig:82 D.26056 ] [82])
                (minus:SI (reg:SI 37 r8 [orig:82 D.26056 ] [82])
                    (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:109 309 {*subsi_1}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 15, loop depth 0, count 0, freq 9524, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 17 [flags] 38 [r9]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 4 [si] 17 [flags] 38 [r9]
;; live  kill	 17 [flags]
(code_label 135 134 136 15 61 "" [1 uses])
(note 136 135 138 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 138 136 140 15 (set (mem:SI (plus:DI (reg/f:DI 42 r13 [162])
                (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])) [0 MEM[symbol: coordinates, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 37 r8 [orig:82 D.26056 ] [82])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:82 D.26056 ] [82])
        (nil)))
(insn 140 138 141 15 (parallel [
            (set (reg:SI 4 si [159])
                (plus:SI (reg:SI 4 si [orig:79 D.26056 ] [79])
                    (reg:SI 38 r9 [orig:72 ivtmp.127 ] [72])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:112 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:79 D.26056 ] [79])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 5 di [163])
                    (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
            (nil))))
(insn 141 140 143 15 (set (mem:SI (plus:DI (reg/f:DI 5 di [163])
                (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])) [0 MEM[symbol: base, index: ivtmp.121_15, offset: 0B]+0 S4 A32])
        (reg:SI 4 si [159])) tiles.cpp:112 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [159])
        (nil)))
(debug_insn 143 141 144 15 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))
(insn 144 143 145 15 (parallel [
            (set (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])
                (plus:DI (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 145 144 147 15 (parallel [
            (set (reg:SI 38 r9 [orig:72 ivtmp.127 ] [72])
                (plus:SI (reg:SI 38 r9 [orig:72 ivtmp.127 ] [72])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (nil))
(insn 147 145 148 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])
            (reg:DI 43 r14 [orig:71 D.26059 ] [71]))) tiles.cpp:103 8 {*cmpdi_1}
     (nil))
(jump_insn 148 147 181 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 174)
            (pc))) tiles.cpp:103 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 174)
;;  succ:       12 [95.2%]  (DFS_BACK)
;;              16 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 16, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 181 148 230 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 230 181 231 16 (set (reg:DI 43 r14 [orig:71 D.26059 ] [71])
        (reg:DI 43 r14 [orig:71 D.26059 ] [71])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:71 D.26059 ] [71])
        (nil)))
(insn 231 230 232 16 (set (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
        (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
        (nil)))
(insn 232 231 233 16 (set (reg/v:SI 44 r15 [orig:95 j ] [95])
        (reg/v:SI 44 r15 [orig:95 j ] [95])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:95 j ] [95])
        (nil)))
(insn 233 232 234 16 (set (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (nil)))
(insn 234 233 235 16 (set (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (reg/v:SI 3 bx [orig:112 num_floats ] [112])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (nil)))
(insn 235 234 15 16 (set (reg/f:DI 42 r13 [162])
        (reg/f:DI 42 r13 [162])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [162])
        (nil)))
(insn 15 235 212 16 (set (reg/v:SI 0 ax [orig:96 num_floats ] [96])
        (reg/v:SI 3 bx [orig:112 num_floats ] [112])) 89 {*movsi_internal}
     (nil))
(jump_insn 212 15 213 16 (set (pc)
        (label_ref 170)) 650 {jump}
     (nil)
 -> 170)
;;  succ:       18 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 213 212 185)
;; basic block 17, loop depth 0, count 0, freq 23, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [4.8%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 185 213 184 17 65 "" [1 uses])
(note 184 185 16 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 16 184 170 17 (set (reg/v:SI 0 ax [orig:96 num_floats ] [96])
        (const_int 0 [0])) tiles.cpp:103 89 {*movsi_internal}
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 18, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags] 44 [r15]
;; live  kill	 17 [flags]
(code_label 170 16 149 18 63 "" [1 uses])
(note 149 170 150 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 18 (set (reg:DI 0 ax [orig:160 num_floats ] [160])
        (sign_extend:DI (reg/v:SI 0 ax [orig:96 num_floats ] [96]))) tiles.cpp:115 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:96 num_floats ] [96])
        (nil)))
(insn 151 150 153 18 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:160 num_floats ] [160])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 coordinates S4 A32])
        (reg/v:SI 44 r15 [orig:95 j ] [95])) tiles.cpp:115 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:160 num_floats ] [160])
        (nil)))
(insn 153 151 154 18 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])) tiles.cpp:117 87 {*movdi_internal_rex64}
     (nil))
(insn 154 153 155 18 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [0 %sfp+-20 S4 A32])) tiles.cpp:117 89 {*movsi_internal}
     (nil))
(insn 155 154 156 18 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [162])) tiles.cpp:117 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 156 155 157 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b67b8f25800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:117 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 157 156 158 18 (set (reg:SI 0 ax [orig:94 D.26056 ] [94])
        (reg:SI 0 ax)) tiles.cpp:117 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_EQUIV (mem:SI (reg:DI 6 bp [orig:91 ivtmp.132 ] [91]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
            (nil))))
(insn 158 157 159 18 (set (mem:SI (reg:DI 6 bp [orig:91 ivtmp.132 ] [91]) [0 MEM[base: _31, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:94 D.26056 ] [94])) tiles.cpp:117 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:94 D.26056 ] [94])
        (nil)))
(insn 159 158 161 18 (parallel [
            (set (reg/v:SI 44 r15 [orig:95 j ] [95])
                (plus:SI (reg/v:SI 44 r15 [orig:95 j ] [95])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:100 273 {*addsi_1}
     (nil))
(debug_insn 161 159 162 18 (var_location:SI j (reg/v:SI 44 r15 [orig:95 j ] [95])) -1
     (nil))
(insn 162 161 163 18 (parallel [
            (set (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
                (plus:DI (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 163 162 164 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 44 r15 [orig:95 j ] [95])
            (reg/v:SI 41 r12 [orig:109 num_tilings ] [109]))) tiles.cpp:100 7 {*cmpsi_1}
     (nil))
(jump_insn 164 163 166 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 179)
            (pc))) tiles.cpp:100 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 179)
;;  succ:       19 [91.0%]  (FALLTHRU,DFS_BACK)
;;              21 [9.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 19, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [91.0%]  (FALLTHRU,DFS_BACK)
;;              11 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 166 164 167 19 59 "" [1 uses])
(note 167 166 168 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 168 167 169 19 (var_location:SI j (reg/v:SI 44 r15 [orig:95 j ] [95])) -1
     (nil))
(debug_insn 169 168 171 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 171 169 172 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:112 num_floats ] [112])
            (const_int 0 [0]))) tiles.cpp:103 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 172 171 173 19 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 185)
            (pc))) tiles.cpp:103 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 185)
;;  succ:       20 [95.2%]  (FALLTHRU)
;;              17 [4.8%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 20, loop depth 0, count 0, freq 453, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [95.2%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 173 172 13 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 13 173 14 20 (set (reg:SI 38 r9 [orig:72 ivtmp.127 ] [72])
        (const_int 1 [0x1])) tiles.cpp:103 89 {*movsi_internal}
     (nil))
(insn 14 13 194 20 (set (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])
        (const_int 0 [0])) tiles.cpp:103 87 {*movdi_internal_rex64}
     (nil))
(insn 194 14 195 20 (set (reg/f:DI 40 r11 [164])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 195 194 236 20 (set (reg/f:DI 5 di [163])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -256 [0xffffffffffffff00]))
        (nil)))
(insn 236 195 237 20 (set (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])
        (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:63 ivtmp.121 ] [63])
        (nil)))
(insn 237 236 238 20 (set (reg:DI 43 r14 [orig:71 D.26059 ] [71])
        (reg:DI 43 r14 [orig:71 D.26059 ] [71])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:71 D.26059 ] [71])
        (nil)))
(insn 238 237 239 20 (set (reg:SI 38 r9 [orig:72 ivtmp.127 ] [72])
        (reg:SI 38 r9 [orig:72 ivtmp.127 ] [72])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:72 ivtmp.127 ] [72])
        (nil)))
(insn 239 238 240 20 (set (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
        (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:91 ivtmp.132 ] [91])
        (nil)))
(insn 240 239 241 20 (set (reg/v:SI 44 r15 [orig:95 j ] [95])
        (reg/v:SI 44 r15 [orig:95 j ] [95])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:95 j ] [95])
        (nil)))
(insn 241 240 242 20 (set (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:109 num_tilings ] [109])
        (nil)))
(insn 242 241 243 20 (set (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (reg/v:SI 3 bx [orig:112 num_floats ] [112])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:112 num_floats ] [112])
        (nil)))
(insn 243 242 244 20 (set (reg/f:DI 42 r13 [162])
        (reg/f:DI 42 r13 [162])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [162])
        (nil)))
(insn 244 243 245 20 (set (reg/f:DI 5 di [163])
        (reg/f:DI 5 di [163])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [163])
        (nil)))
(insn 245 244 214 20 (set (reg/f:DI 40 r11 [164])
        (reg/f:DI 40 r11 [164])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [164])
        (nil)))
(jump_insn 214 245 215 20 (set (pc)
        (label_ref 174)) 650 {jump}
     (nil)
 -> 174)
;;  succ:       12 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 215 214 179)
;; basic block 21, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 20, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [9.0%]  (LOOP_EXIT)
;;              7 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 179 215 180 21 50 "" [2 uses])
(note 180 179 0 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void collision_table::reset() (_ZN15collision_table5resetEv, funcdef_no=1065, decl_uid=23655, cgraph_uid=309)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 29:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 30:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rm {*cmpdi_1}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 67
changing reg in insn 28
changing reg in insn 32
changing reg in insn 30
changing reg in insn 4
changing reg in insn 30
changing reg in insn 28
changing reg in insn 29
changing reg in insn 5
changing reg in insn 24
changing reg in insn 29
changing reg in insn 2
changing reg in insn 32
changing reg in insn 22
changing reg in insn 15
changing reg in insn 14
changing reg in insn 13
changing reg in insn 10
changing reg in insn 22
changing reg in insn 22
changing reg in insn 24


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 8 (  1.1)


void collision_table::reset()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 5[di] 17[flags]
;;  ref usage 	r0={3d,2u} r1={3d,4u} r2={3d,2u} r4={1d} r5={2d,7u,1e} r7={1d,6u} r17={4d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 51{27d,23u,1e} in 21{21 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  kill	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 5 di [orig:66 this ] [66])
        (reg:DI 5 di [ this ])) tiles.cpp:201 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 3 4 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 4 9 5 2 (set (reg:DI 1 dx [orig:63 ivtmp.147 ] [63])
        (const_int 1 [0x1])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 5 4 10 2 (set (reg:DI 0 ax [orig:65 ivtmp.146 ] [65])
        (const_int 0 [0])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 10 5 11 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/j:DI (reg/f:DI 5 di [orig:66 this ] [66]) [0 this_5(D)->m+0 S8 A64])
            (const_int 0 [0]))) tiles.cpp:202 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 31 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) tiles.cpp:202 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 41)
;;  succ:       4 [91.0%] 
;;              3 [9.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%]  (FALLTHRU)
;;              5 [100.0%]  (LOOP_EXIT)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 31 11 12 3 71 "" [1 uses])
(note 12 31 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (mem/j:DI (plus:DI (reg/f:DI 5 di [orig:66 this ] [66])
                (const_int 24 [0x18])) [0 this_5(D)->calls+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:203 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (mem/j:DI (plus:DI (reg/f:DI 5 di [orig:66 this ] [66])
                (const_int 32 [0x20])) [0 this_5(D)->clearhits+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:204 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 43 3 (set (mem/j:DI (plus:DI (reg/f:DI 5 di [orig:66 this ] [66])
                (const_int 40 [0x28])) [0 this_5(D)->collisions+0 S8 A64])
        (const_int 0 [0])) tiles.cpp:205 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:66 this ] [66])
        (nil)))
(jump_insn 43 15 44 3 (set (pc)
        (label_ref 42)) 650 {jump}
     (nil)
 -> 42)
;;  succ:       6 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 44 43 41)
;; basic block 4, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%] 
;;              4 [91.0%]  (DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 41 44 40 4 73 "" [2 uses])
(note 40 41 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 40 22 4 (var_location:SI i (plus:SI (reg:SI 1 dx [orig:63 ivtmp.147 ] [63])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 22 21 24 4 (set (reg/f:DI 2 cx [orig:67 this_5(D)->data ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 5 di [orig:66 this ] [66])
                (const_int 8 [0x8])) [0 this_5(D)->data+0 S8 A64])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 5 di [orig:66 this ] [66])
                (const_int 8 [0x8])) [0 this_5(D)->data+0 S8 A64])
        (nil)))
(insn 24 22 25 4 (set (mem:DI (plus:DI (reg/f:DI 2 cx [orig:67 this_5(D)->data ] [67])
                (reg:DI 0 ax [orig:65 ivtmp.146 ] [65])) [0 *_10+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:67 this_5(D)->data ] [67])
        (nil)))
(debug_insn 25 24 27 4 (var_location:SI D#10 (reg:SI 1 dx [orig:63 ivtmp.147 ] [63])) -1
     (nil))
(debug_insn 27 25 28 4 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 2 cx [orig:59 D.26075 ] [59])
        (reg:DI 1 dx [orig:63 ivtmp.147 ] [63])) tiles.cpp:202 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 0 ax [orig:65 ivtmp.146 ] [65])
                (plus:DI (reg:DI 0 ax [orig:65 ivtmp.146 ] [65])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 32 4 (parallel [
            (set (reg:DI 1 dx [orig:63 ivtmp.147 ] [63])
                (plus:DI (reg:DI 1 dx [orig:63 ivtmp.147 ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 30 33 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 2 cx [orig:59 D.26075 ] [59])
            (mem/j:DI (reg/f:DI 5 di [orig:66 this ] [66]) [0 this_5(D)->m+0 S8 A64]))) tiles.cpp:202 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:59 D.26075 ] [59])
        (nil)))
(jump_insn 33 32 45 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) tiles.cpp:202 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 41)
;;  succ:       4 [91.0%]  (DFS_BACK)
;;              5 [9.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [9.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 45 33 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 46 45 47 5 (set (pc)
        (label_ref 31)) 650 {jump}
     (nil)
 -> 31)
;;  succ:       3 [100.0%]  (LOOP_EXIT)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

(barrier 47 46 42)
;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 42 47 39 6 74 "" [1 uses])
(note 39 42 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function collision_table::collision_table(int, int) (_ZN15collision_tableC2Eii, funcdef_no=1067, decl_uid=23671, cgraph_uid=311)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=610,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=613,losers=1 -- reject
          alt=1,overall=9,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 88:  (0) r  (1) e {*testsi_1}
          alt=0,overall=601,losers=0,rld_nregs=0
          alt=0,overall=613,losers=1 -- reject
          alt=2,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 87:  (0) %!*a  (1) e {*testsi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 32:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 89:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) Uz {*sibcall}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-24, prev_offset=0)
Updating elimination of equiv for reg 64
changing reg in insn 81
changing reg in insn 80
changing reg in insn 81
changing reg in insn 60
changing reg in insn 44
changing reg in insn 6
changing reg in insn 87
changing reg in insn 48
changing reg in insn 46
changing reg in insn 44
changing reg in insn 43
changing reg in insn 62
changing reg in insn 63
changing reg in insn 2
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 63
changing reg in insn 62
changing reg in insn 3
changing reg in insn 88
changing reg in insn 52
changing reg in insn 6
changing reg in insn 31
changing reg in insn 12
changing reg in insn 11
changing reg in insn 4
changing reg in insn 66
changing reg in insn 89
changing reg in insn 79
changing reg in insn 52
changing reg in insn 79
changing reg in insn 78
changing reg in insn 65
changing reg in insn 79
changing reg in insn 78
changing reg in insn 81
changing reg in insn 81


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 6 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 12 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 13 (  1.3)


collision_table::collision_table(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={10d,9u,1e} r1={7d,3u} r2={5d} r3={1d,4u,1e} r4={7d,8u} r5={11d,7u} r6={1d,3u,1e} r7={1d,13u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={11d,5u,1e} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r41={1d,1u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 274{217d,53u,4e} in 39{35 regular + 4 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 454, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 17 [flags] 41 [r12]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 3 bx [orig:68 this ] [68])
        (reg:DI 5 di [ this ])) tiles.cpp:208 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:69 size ] [69])
        (reg:SI 4 si [ size ])) tiles.cpp:208 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 41 r12 [orig:70 safety ] [70])
        (reg:SI 1 dx [ safety ])) tiles.cpp:208 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ safety ])
        (nil)))
(note 5 4 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 5 12 2 (var_location:SI tmp (reg/v:SI 4 si [orig:69 size ] [69])) -1
     (nil))
(insn 12 11 13 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 4 si [orig:69 size ] [69])
            (const_int 2 [0x2]))) tiles.cpp:210 7 {*cmpsi_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) tiles.cpp:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil)))
 -> 50)
;;  succ:       3 [95.5%]  (FALLTHRU)
;;              9 [4.5%] 
;; lr  out 	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 430, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [95.5%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 15 14 88 3 NOTE_INSN_DELETED)
(insn 88 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:SI (reg/v:SI 4 si [orig:69 size ] [69])
                (const_int 1 [0x1]))
            (const_int 0 [0]))) tiles.cpp:211 385 {*testsi_1}
     (nil))
(jump_insn 17 88 84 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) tiles.cpp:211 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil)))
 -> 83)
;;  succ:       4 [0.0%]  (FALLTHRU)
;;              7 [100.0%] 
;; lr  out 	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 7 [sp] 41 [r12]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [0.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	
;; live  kill	
(note 84 17 85 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 85 84 86 4 (set (pc)
        (label_ref 28)) 650 {jump}
     (nil)
 -> 28)
;;  succ:       6 [100.0%] 
;; lr  out 	 4 [si] 7 [sp]
;; live  out 	 4 [si] 7 [sp]

(barrier 86 85 47)
;; basic block 5, loop depth 0, count 0, freq 9120, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [95.5%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 47 86 21 5 80 "" [1 uses])
(note 21 47 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 22 21 87 5 NOTE_INSN_DELETED)
(insn 87 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:SI (reg/v:SI 0 ax [orig:62 size ] [62])
                (const_int 1 [0x1]))
            (const_int 0 [0]))) tiles.cpp:211 385 {*testsi_1}
     (nil))
(jump_insn 24 87 28 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) tiles.cpp:211 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil)))
 -> 41)
;;  succ:       6 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              8 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]

;; basic block 6, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 28 24 29 6 77 "" [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 30 29 31 6 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b67bf5af130 *.LC1>)) -1
     (nil))
(insn 31 30 32 6 (set (reg:SI 1 dx)
        (reg/v:SI 4 si [orig:69 size ] [69])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:69 size ] [69])
        (nil)))
(insn 32 31 33 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b67bf5af130 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 6 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 91 {*movqi_internal}
     (nil))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b67b7917600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
(insn 36 35 37 6 (set (reg:SI 5 di)
        (const_int 0 [0])) tiles.cpp:213 89 {*movsi_internal}
     (nil))
(call_insn 37 36 38 6 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b67b78fd700 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) tiles.cpp:213 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 38 37 83)
;; basic block 7, loop depth 0, count 0, freq 430, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 83 38 40 7 83 "" [1 uses])
(note 40 83 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 40 41 7 (set (reg/v:SI 0 ax [orig:62 size ] [62])
        (reg/v:SI 4 si [orig:69 size ] [69])) tiles.cpp:211 89 {*movsi_internal}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]

;; basic block 8, loop depth 0, count 0, freq 9546, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 41 6 42 8 79 "" [1 uses])
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 8 (var_location:SI tmp (reg/v:SI 0 ax [orig:62 size ] [62])) -1
     (nil))
(insn 44 43 46 8 (parallel [
            (set (reg/v:SI 0 ax [orig:62 size ] [62])
                (ashiftrt:SI (reg/v:SI 0 ax [orig:62 size ] [62])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:215 546 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 46 44 48 8 (var_location:SI tmp (reg/v:SI 0 ax [orig:62 size ] [62])) -1
     (nil))
(insn 48 46 49 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 0 ax [orig:62 size ] [62])
            (const_int 2 [0x2]))) tiles.cpp:210 7 {*cmpsi_1}
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) tiles.cpp:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil)))
 -> 47)
;;  succ:       5 [95.5%] 
;;              9 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 41 [r12]

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              2 [4.5%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 50 49 51 9 76 "" [1 uses])
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 78 9 (set (reg:DI 6 bp [orig:75 size ] [75])
        (sign_extend:DI (reg/v:SI 4 si [orig:69 size ] [69]))) tiles.cpp:217 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:69 size ] [69])
        (nil)))
(insn 78 52 80 9 (parallel [
            (set (reg:DI 0 ax [76])
                (ashift:DI (reg:DI 6 bp [orig:75 size ] [75])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:217 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 80 78 89 9 (set (reg:DI 5 di [orig:59 iftmp.7 ] [59])
        (const_int -1 [0xffffffffffffffff])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 89 80 79 9 (set (reg:DI 1 dx [73])
        (const_int 1143914305352105984 [0xfe0000000000000])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (const_int 1143914305352105984 [0xfe0000000000000])
        (nil)))
(insn 79 89 81 9 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 6 bp [orig:75 size ] [75])
            (reg:DI 1 dx [73]))) tiles.cpp:217 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [73])
        (expr_list:REG_EQUAL (compare:CC (reg:DI 6 bp [orig:75 size ] [75])
                (const_int 1143914305352105984 [0xfe0000000000000]))
            (nil))))
(insn 81 79 60 9 (set (reg:DI 5 di [orig:59 iftmp.7 ] [59])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [76])
            (reg:DI 5 di [orig:59 iftmp.7 ] [59]))) tiles.cpp:217 934 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 0 ax [76])
        (expr_list:REG_DEAD (reg:CC 17 flags)
            (expr_list:REG_EQUAL (if_then_else:DI (leu (reg:CC 17 flags)
                        (const_int 0 [0]))
                    (reg:DI 0 ax [76])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 60 81 61 9 (set (reg:DI 5 di)
        (reg:DI 5 di [orig:59 iftmp.7 ] [59])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:59 iftmp.7 ] [59])
        (nil)))
(call_insn 61 60 62 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x2b67b797b800 operator new []>) [0 operator new [] S1 A8])
            (const_int 0 [0]))) tiles.cpp:217 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 62 61 63 9 (set (reg/f:DI 0 ax [orig:64 D.26081 ] [64])
        (reg:DI 0 ax)) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 8 [0x8])) [0 this_14(D)->data+0 S8 A64])
            (nil))))
(insn 63 62 65 9 (set (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                (const_int 8 [0x8])) [0 this_14(D)->data+0 S8 A64])
        (reg/f:DI 0 ax [orig:64 D.26081 ] [64])) tiles.cpp:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.26081 ] [64])
        (nil)))
(insn 65 63 66 9 (set (mem/j:DI (reg/f:DI 3 bx [orig:68 this ] [68]) [0 this_14(D)->m+0 S8 A64])
        (reg:DI 6 bp [orig:75 size ] [75])) tiles.cpp:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:75 size ] [75])
        (nil)))
(insn 66 65 67 9 (set (mem/j:SI (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                (const_int 16 [0x10])) [0 this_14(D)->safe+0 S4 A64])
        (reg/v:SI 41 r12 [orig:70 safety ] [70])) tiles.cpp:219 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:70 safety ] [70])
        (nil)))
(insn 67 66 68 9 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:68 this ] [68])) tiles.cpp:220 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:68 this ] [68])
        (nil)))
(call_insn/j 68 67 69 9 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x1]  <function_decl 0x2b67b8f14500 reset>) [0 reset S1 A8])
        (const_int 0 [0])) tiles.cpp:220 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 69 68 0)

;; Function collision_table::~collision_table() (_ZN15collision_tableD2Ev, funcdef_no=1070, decl_uid=23678, cgraph_uid=314)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) Uz {*sibcall}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 10
changing reg in insn 7
changing reg in insn 2
changing reg in insn 6


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


collision_table::~collision_table()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={5d,5u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={2d,1u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 75{64d,11u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 5 di [orig:60 this ] [60])
        (reg:DI 5 di [ this ])) tiles.cpp:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 5 di [orig:59 D.26086 ] [59])
        (mem/f/j:DI (plus:DI (reg/f:DI 5 di [orig:60 this ] [60])
                (const_int 8 [0x8])) [0 this_3(D)->data+0 S8 A64])) tiles.cpp:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:60 this ] [60])
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:59 D.26086 ] [59])
            (const_int 0 [0]))) tiles.cpp:224 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) tiles.cpp:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil)))
 -> 15)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:59 D.26086 ] [59])) tiles.cpp:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:59 D.26086 ] [59])
        (nil)))
(call_insn/j 11 10 12 3 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x2b67b797ba00 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) tiles.cpp:224 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 12 11 15)
;; basic block 4, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 15 12 16 4 85 "" [1 uses])
(note 16 15 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function int collision_table::usage() (_ZN15collision_table5usageEv, funcdef_no=1072, decl_uid=23657, cgraph_uid=316)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 44:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 53:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 47
changing reg in insn 27
changing reg in insn 26
changing reg in insn 66
changing reg in insn 47
changing reg in insn 52
changing reg in insn 44
changing reg in insn 53
changing reg in insn 38
changing reg in insn 40
changing reg in insn 54
changing reg in insn 53
changing reg in insn 46
changing reg in insn 44
changing reg in insn 47
changing reg in insn 34
changing reg in insn 40
changing reg in insn 35
changing reg in insn 40
changing reg in insn 54
changing reg in insn 24
changing reg in insn 38
changing reg in insn 34


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 7 failed.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 9 (  1.1)


int collision_table::usage()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 17[flags]
;;  ref usage 	r0={6d,8u} r1={3d,4u} r2={2d,1u} r4={2d,1u} r5={2d,3u} r7={1d,7u} r17={5d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 58{31d,27u,0e} in 24{24 regular + 0 call} insns.
(note 23 0 28 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 28 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 28 25 2 (set (reg/f:DI 5 di [orig:92 this ] [92])
        (reg:DI 5 di [ this ])) tiles.cpp:227 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 25 24 32 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 32 25 33 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 33 32 34 2 (var_location:SI count (const_int 0 [0])) -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 0 ax [orig:87 D.26097 ] [87])
        (mem/j:DI (reg/f:DI 5 di [orig:92 this ] [92]) [0 this_6(D)->m+0 S8 A64])) tiles.cpp:229 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 0 ax [orig:87 D.26097 ] [87])
            (const_int 0 [0]))) tiles.cpp:229 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 36 35 37 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 72)
            (pc))) tiles.cpp:229 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 72)
;;  succ:       3 [91.0%]  (FALLTHRU)
;;              6 [9.0%] 
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si]
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si]
;; live  kill	
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 3 (set (reg:DI 1 dx [orig:84 ivtmp.157 ] [84])
        (mem/f/j:DI (plus:DI (reg/f:DI 5 di [orig:92 this ] [92])
                (const_int 8 [0x8])) [0 this_6(D)->data+0 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:92 this ] [92])
        (nil)))
(note 39 38 40 3 NOTE_INSN_DELETED)
(insn 40 39 26 3 (set (reg:DI 4 si [orig:88 D.26095 ] [88])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:87 D.26097 ] [87])
                (const_int 8 [0x8]))
            (reg:DI 1 dx [orig:84 ivtmp.157 ] [84]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:87 D.26097 ] [87])
        (nil)))
(insn 26 40 57 3 (set (reg/v:SI 0 ax [orig:81 count ] [81])
        (const_int 0 [0])) tiles.cpp:228 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [91.0%]  (DFS_BACK)
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 57 26 41 4 89 "" [1 uses])
(note 41 57 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 42 41 43 4 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 43 42 44 4 (var_location:SI count (clobber (const_int 0 [0]))) -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/v:SI 2 cx [orig:86 count ] [86])
                (plus:SI (reg/v:SI 0 ax [orig:81 count ] [81])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:232 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 45 44 46 4 (var_location:SI count (clobber (const_int 0 [0]))) tiles.cpp:232 -1
     (nil))
(insn 46 45 47 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (reg:DI 1 dx [orig:84 ivtmp.157 ] [84]) [0 MEM[base: _3, offset: 0B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) 8 {*cmpdi_1}
     (nil))
(insn 47 46 51 4 (set (reg/v:SI 0 ax [orig:81 count ] [81])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 2 cx [orig:86 count ] [86])
            (reg/v:SI 0 ax [orig:81 count ] [81]))) 933 {*movsicc_noc}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:86 count ] [86])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
(debug_insn 51 47 52 4 (var_location:SI i (debug_expr:SI D#11)) -1
     (nil))
(debug_insn 52 51 53 4 (var_location:SI count (reg/v:SI 0 ax [orig:81 count ] [81])) -1
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 1 dx [orig:84 ivtmp.157 ] [84])
                (plus:DI (reg:DI 1 dx [orig:84 ivtmp.157 ] [84])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1 dx [orig:84 ivtmp.157 ] [84])
            (reg:DI 4 si [orig:88 D.26095 ] [88]))) tiles.cpp:229 8 {*cmpdi_1}
     (nil))
(jump_insn 55 54 74 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) tiles.cpp:229 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 57)
;;  succ:       4 [91.0%]  (DFS_BACK)
;;              5 [9.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [9.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(note 74 55 75 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 75 74 76 5 (set (pc)
        (label_ref 60)) 650 {jump}
     (nil)
 -> 60)
;;  succ:       7 [100.0%]  (LOOP_EXIT)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 76 75 72)
;; basic block 6, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 72 76 71 6 90 "" [1 uses])
(note 71 72 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 71 60 6 (set (reg/v:SI 0 ax [orig:81 count ] [81])
        (const_int 0 [0])) tiles.cpp:228 89 {*movsi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 60 27 61 7 88 "" [1 uses])
(note 61 60 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 61 69 7 (set (reg/i:SI 0 ax)
        (reg/v:SI 0 ax [orig:81 count ] [81])) tiles.cpp:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:81 count ] [81])
        (nil)))
(insn 69 66 0 7 (use (reg/i:SI 0 ax)) tiles.cpp:236 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Function void collision_table::print() (_ZN15collision_table5printEv, funcdef_no=1073, decl_uid=23659, cgraph_uid=317)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 19:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rzw {*call_value}
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-40, prev_offset=0)
changing reg in insn 6
changing reg in insn 14
changing reg in insn 7
changing reg in insn 15
changing reg in insn 8
changing reg in insn 16
changing reg in insn 11
changing reg in insn 17
changing reg in insn 2
changing reg in insn 13
changing reg in insn 9
changing reg in insn 8
changing reg in insn 7
changing reg in insn 6
changing reg in insn 13
changing reg in insn 18


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void collision_table::print()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 37[r8] 38[r9] 41[r12] 42[r13]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={1d,5u} r4={4d,1u} r5={5d,3u} r6={1d,1u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,1u} r38={4d,1u} r39={2d} r40={2d} r41={1d,1u} r42={1d,1u} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 144{118d,26u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  kill	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 3 bx [orig:64 this ] [64])
        (reg:DI 5 di [ this ])) tiles.cpp:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 42 r13 [orig:59 D.26101 ] [59])
        (mem/j:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                (const_int 40 [0x28])) [0 this_2(D)->collisions+0 S8 A64])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 41 r12 [orig:60 D.26101 ] [60])
        (mem/j:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                (const_int 24 [0x18])) [0 this_2(D)->calls+0 S8 A64])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 6 bp [orig:61 D.26101 ] [61])
        (mem/j:DI (reg/f:DI 3 bx [orig:64 this ] [64]) [0 this_2(D)->m+0 S8 A64])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:64 this ] [64])) tiles.cpp:239 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x1]  <function_decl 0x2b67b8f14900 usage>) [0 usage S1 A8])
            (const_int 0 [0]))) tiles.cpp:239 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:62 D.26102 ] [62])
        (reg:SI 0 ax)) tiles.cpp:239 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 12 11 13 2 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b67bf5c7c78 *.LC2>)) tiles.cpp:239 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 dx [orig:65 this_2(D)->safe ] [65])
        (mem/j:SI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                (const_int 16 [0x10])) [0 this_2(D)->safe+0 S4 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:64 this ] [64])
        (nil)))
(insn 14 13 15 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 42 r13 [orig:59 D.26101 ] [59])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:59 D.26101 ] [59])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 38 r9)
        (reg:DI 41 r12 [orig:60 D.26101 ] [60])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:60 D.26101 ] [60])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 37 r8)
        (reg:DI 6 bp [orig:61 D.26101 ] [61])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:61 D.26101 ] [61])
        (nil)))
(insn 17 16 18 2 (set (reg:SI 2 cx)
        (reg:SI 0 ax [orig:62 D.26102 ] [62])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.26102 ] [62])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (reg:SI 1 dx [orig:65 this_2(D)->safe ] [65])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:65 this_2(D)->safe ] [65])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b67bf5c7c78 *.LC2>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 89 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 91 {*movqi_internal}
     (nil))
(call_insn 22 21 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2b67b7917600 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 8 [0x8]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:SI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_BR_PRED (use (reg:SI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (nil))))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void collision_table::save(int) (_ZN15collision_table4saveEi, funcdef_no=1074, decl_uid=23662, cgraph_uid=318)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 11:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 16:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 21:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 26:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) rzw {*call_value}
      Removing equiv init insn 31 (freq=10000)
   31: r75:DI=[r68:DI]
      REG_EQUIV [r68:DI]
deleting insn with uid = 31.
Changing pseudo 75 in operand 1 of insn 32 on equiv [r68:DI]
          alt=0,overall=11,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 32:  (0) r  (1) l  (2) M {*ashldi3_1}
      Creating newreg=77, assigning class INDEX_REGS to r77
   32: {r74:DI=r77:DI<<0x3;clobber flags:CC;}
      REG_DEAD r75:DI
      REG_UNUSED flags:CC
      REG_EQUAL [r68:DI]<<0x3
    Inserting insn reload before:
   41: r77:DI=[r68:DI]

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) Uz {*sibcall_value}

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 37: point = 0
   Insn 36: point = 0
   Insn 35: point = 1
   Insn 34: point = 2
   Insn 33: point = 3
   Insn 32: point = 5
   Insn 41: point = 7
   Insn 30: point = 8
   Insn 29: point = 8
   Insn 28: point = 8
   Insn 27: point = 9
   Insn 26: point = 9
   Insn 25: point = 10
   Insn 24: point = 10
   Insn 23: point = 10
   Insn 22: point = 11
   Insn 21: point = 11
   Insn 20: point = 12
   Insn 19: point = 12
   Insn 18: point = 12
   Insn 17: point = 13
   Insn 16: point = 13
   Insn 15: point = 14
   Insn 14: point = 14
   Insn 13: point = 14
   Insn 12: point = 15
   Insn 11: point = 15
   Insn 10: point = 16
   Insn 9: point = 16
   Insn 8: point = 16
   Insn 7: point = 16
   Insn 3: point = 16
   Insn 2: point = 17
 r68: [4..17]
 r69: [0..16]
 r70: [14..15]
 r71: [12..13]
 r72: [10..11]
 r73: [8..9]
 r74: [2..5]
 r76: [1..3]
 r77: [6..7]
Compressing live ranges: from 18 to 14 - 77%
Ranges after the compression:
 r68: [2..13]
 r69: [0..13]
 r70: [12..13]
 r71: [10..11]
 r72: [8..9]
 r73: [6..7]
 r74: [0..3]
 r76: [0..1]
 r77: [4..5]
	 Assigning to 77 (cl=INDEX_REGS, orig=77, freq=2000, tfirst=77, tfreq=2000)...
	   Assign 0 to reload r77 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-24, prev_offset=0)
changing reg in insn 2
changing reg in insn 33
changing reg in insn 26
changing reg in insn 21
changing reg in insn 16
changing reg in insn 11
changing reg in insn 8
changing reg in insn 32
changing reg in insn 3
changing reg in insn 36
changing reg in insn 29
changing reg in insn 24
changing reg in insn 19
changing reg in insn 14
changing reg in insn 9
changing reg in insn 11
changing reg in insn 13
changing reg in insn 16
changing reg in insn 18
changing reg in insn 21
changing reg in insn 23
changing reg in insn 26
changing reg in insn 28
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 35


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void collision_table::save(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={14d,7u} r2={7d} r3={1d,7u,1e} r4={18d,12u} r5={13d,7u} r6={1d,6u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={11d} r18={6d} r19={6d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 361{312d,48u,1e} in 33{27 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 3 bx [orig:68 this ] [68])
        (reg:DI 5 di [ this ])) tiles.cpp:242 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 6 bp [orig:69 file ] [69])
        (reg:SI 4 si [ file ])) tiles.cpp:242 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ file ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:243 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [orig:68 this ] [68])) tiles.cpp:243 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:243 89 {*movsi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b67b8e9c900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:243 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 4 si [orig:70 D.26107 ] [70])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:244 274 {*adddi_1}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tiles.cpp:244 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:70 D.26107 ] [70])) tiles.cpp:244 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:70 D.26107 ] [70])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:244 89 {*movsi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b67b8e9c900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:244 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 4 si [orig:71 D.26106 ] [71])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:245 274 {*adddi_1}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:245 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:71 D.26106 ] [71])) tiles.cpp:245 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:71 D.26106 ] [71])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:245 89 {*movsi_internal}
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b67b8e9c900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:245 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 22 2 (parallel [
            (set (reg/f:DI 4 si [orig:72 D.26106 ] [72])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:246 274 {*adddi_1}
     (nil))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:246 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:72 D.26106 ] [72])) tiles.cpp:246 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:72 D.26106 ] [72])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:246 89 {*movsi_internal}
     (nil))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b67b8e9c900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:246 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 4 si [orig:73 D.26106 ] [73])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:247 274 {*adddi_1}
     (nil))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) tiles.cpp:247 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:73 D.26106 ] [73])) tiles.cpp:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:73 D.26106 ] [73])
        (nil)))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:247 89 {*movsi_internal}
     (nil))
(call_insn 30 29 31 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b67b8e9c900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:247 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(note 31 30 41 2 NOTE_INSN_DELETED)
(insn 41 31 32 2 (set (reg:DI 0 ax [77])
        (mem/j:DI (reg/f:DI 3 bx [orig:68 this ] [68]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (nil))
(insn 32 41 33 2 (parallel [
            (set (reg:DI 1 dx [orig:74 D.26109 ] [74])
                (ashift:DI (reg:DI 0 ax [77])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:248 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [77])
        (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 3 bx [orig:68 this ] [68]) [0 this_1(D)->m+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 33 32 34 2 (set (reg/f:DI 4 si [orig:76 this_1(D)->data ] [76])
        (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:68 this ] [68])
        (nil)))
(insn 34 33 35 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:74 D.26109 ] [74])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.26109 ] [74])
        (nil)))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:76 this_1(D)->data ] [76])) tiles.cpp:248 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:76 this_1(D)->data ] [76])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:248 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:69 file ] [69])
        (nil)))
(call_insn/j 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2b67b8e9c900 write>) [0 write S1 A8])
            (const_int 0 [0]))) tiles.cpp:248 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 38 37 0)

;; Function void collision_table::restore(int) (_ZN15collision_table7restoreEi, funcdef_no=1075, decl_uid=23665, cgraph_uid=319)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 25:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 33:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 41:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (1) rzw {*call_value}
      Removing equiv init insn 49 (freq=10000)
   49: r75:DI=[r68:DI]
      REG_EQUIV [r68:DI]
deleting insn with uid = 49.
Changing pseudo 75 in operand 1 of insn 50 on equiv [r68:DI]
          alt=0,overall=11,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 50:  (0) r  (1) l  (2) M {*ashldi3_1}
      Creating newreg=77, assigning class INDEX_REGS to r77
   50: {r74:DI=r77:DI<<0x3;clobber flags:CC;}
      REG_DEAD r75:DI
      REG_UNUSED flags:CC
      REG_EQUAL [r68:DI]<<0x3
    Inserting insn reload before:
   59: r77:DI=[r68:DI]

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) Uz {*sibcall_value}

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 55: point = 0
   Insn 54: point = 0
   Insn 53: point = 1
   Insn 52: point = 2
   Insn 51: point = 3
   Insn 50: point = 5
   Insn 59: point = 7
   Insn 45: point = 8
   Insn 44: point = 8
   Insn 43: point = 8
   Insn 42: point = 9
   Insn 41: point = 9
   Insn 37: point = 10
   Insn 36: point = 10
   Insn 35: point = 10
   Insn 34: point = 11
   Insn 33: point = 11
   Insn 29: point = 12
   Insn 28: point = 12
   Insn 27: point = 12
   Insn 26: point = 13
   Insn 25: point = 13
   Insn 21: point = 14
   Insn 20: point = 14
   Insn 19: point = 14
   Insn 18: point = 15
   Insn 17: point = 15
   Insn 13: point = 16
   Insn 12: point = 16
   Insn 11: point = 16
   Insn 10: point = 16
   Insn 3: point = 16
   Insn 2: point = 17
 r68: [4..17]
 r69: [0..16]
 r70: [14..15]
 r71: [12..13]
 r72: [10..11]
 r73: [8..9]
 r74: [2..5]
 r76: [1..3]
 r77: [6..7]
Compressing live ranges: from 18 to 14 - 77%
Ranges after the compression:
 r68: [2..13]
 r69: [0..13]
 r70: [12..13]
 r71: [10..11]
 r72: [8..9]
 r73: [6..7]
 r74: [0..3]
 r76: [0..1]
 r77: [4..5]
	 Assigning to 77 (cl=INDEX_REGS, orig=77, freq=2000, tfirst=77, tfreq=2000)...
	   Assign 0 to reload r77 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-24, prev_offset=0)
changing reg in insn 2
changing reg in insn 51
changing reg in insn 48
changing reg in insn 47
changing reg in insn 41
changing reg in insn 39
changing reg in insn 33
changing reg in insn 31
changing reg in insn 25
changing reg in insn 23
changing reg in insn 17
changing reg in insn 15
changing reg in insn 11
changing reg in insn 8
changing reg in insn 50
changing reg in insn 3
changing reg in insn 54
changing reg in insn 46
changing reg in insn 44
changing reg in insn 38
changing reg in insn 36
changing reg in insn 30
changing reg in insn 28
changing reg in insn 22
changing reg in insn 20
changing reg in insn 14
changing reg in insn 12
changing reg in insn 7
changing reg in insn 17
changing reg in insn 19
changing reg in insn 25
changing reg in insn 27
changing reg in insn 33
changing reg in insn 35
changing reg in insn 41
changing reg in insn 43
changing reg in insn 50
changing reg in insn 52
changing reg in insn 51
changing reg in insn 53


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void collision_table::restore(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={14d,7u} r2={7d} r3={1d,14u,1e} r4={18d,12u} r5={13d,7u} r6={1d,12u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={11d} r18={6d} r19={6d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 374{312d,61u,1e} in 51{45 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 3 bx [orig:68 this ] [68])
        (reg:DI 5 di [ this ])) tiles.cpp:251 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 6 bp [orig:69 file ] [69])
        (reg:SI 4 si [ file ])) tiles.cpp:251 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ file ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:SI __fd (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:252 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:DI __buf (reg/f:DI 3 bx [orig:68 this ] [68])) tiles.cpp:252 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:252 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [orig:68 this ] [68])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b67b8ef3500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 14 13 15 2 (var_location:SI __fd (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:253 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:DI __buf (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
        (const_int 16 [0x10]))) tiles.cpp:253 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:DI __nbytes (const_int 4 [0x4])) tiles.cpp:253 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 4 si [orig:70 D.26113 ] [70])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:253 274 {*adddi_1}
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:70 D.26113 ] [70])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:70 D.26113 ] [70])
        (nil)))
(insn 20 19 21 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b67b8ef3500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 22 21 23 2 (var_location:SI __fd (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:254 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:DI __buf (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
        (const_int 24 [0x18]))) tiles.cpp:254 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:254 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg/f:DI 4 si [orig:71 D.26112 ] [71])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:254 274 {*adddi_1}
     (nil))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:71 D.26112 ] [71])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:71 D.26112 ] [71])
        (nil)))
(insn 28 27 29 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b67b8ef3500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 30 29 31 2 (var_location:SI __fd (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:255 -1
     (nil))
(debug_insn 31 30 32 2 (var_location:DI __buf (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
        (const_int 32 [0x20]))) tiles.cpp:255 -1
     (nil))
(debug_insn 32 31 33 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:255 -1
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:DI 4 si [orig:72 D.26112 ] [72])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:255 274 {*adddi_1}
     (nil))
(insn 34 33 35 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:72 D.26112 ] [72])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:72 D.26112 ] [72])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b67b8ef3500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 38 37 39 2 (var_location:SI __fd (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:256 -1
     (nil))
(debug_insn 39 38 40 2 (var_location:DI __buf (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
        (const_int 40 [0x28]))) tiles.cpp:256 -1
     (nil))
(debug_insn 40 39 41 2 (var_location:DI __nbytes (const_int 8 [0x8])) tiles.cpp:256 -1
     (nil))
(insn 41 40 42 2 (parallel [
            (set (reg/f:DI 4 si [orig:73 D.26112 ] [73])
                (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:256 274 {*adddi_1}
     (nil))
(insn 42 41 43 2 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:73 D.26112 ] [73])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:73 D.26112 ] [73])
        (nil)))
(insn 44 43 45 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (nil))
(call_insn 45 44 46 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b67b8ef3500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 46 45 47 2 (var_location:SI __fd (reg/v:SI 6 bp [orig:69 file ] [69])) tiles.cpp:257 -1
     (nil))
(debug_insn 47 46 48 2 (var_location:DI __buf (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
            (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) tiles.cpp:257 -1
     (nil))
(debug_insn 48 47 49 2 (var_location:DI __nbytes (ashift:DI (mem/j:DI (reg/f:DI 3 bx [orig:68 this ] [68]) [0 this_1(D)->m+0 S8 A64])
        (const_int 3 [0x3]))) tiles.cpp:257 -1
     (nil))
(note 49 48 59 2 NOTE_INSN_DELETED)
(insn 59 49 50 2 (set (reg:DI 0 ax [77])
        (mem/j:DI (reg/f:DI 3 bx [orig:68 this ] [68]) [0 this_1(D)->m+0 S8 A64])) tiles.cpp:257 87 {*movdi_internal_rex64}
     (nil))
(insn 50 59 51 2 (parallel [
            (set (reg:DI 1 dx [orig:74 D.26115 ] [74])
                (ashift:DI (reg:DI 0 ax [77])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:257 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [77])
        (expr_list:REG_EQUAL (ashift:DI (mem/j:DI (reg/f:DI 3 bx [orig:68 this ] [68]) [0 this_1(D)->m+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 51 50 52 2 (set (reg/f:DI 4 si [orig:76 this_1(D)->data ] [76])
        (mem/f/j:DI (plus:DI (reg/f:DI 3 bx [orig:68 this ] [68])
                (const_int 8 [0x8])) [0 this_1(D)->data+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:68 this ] [68])
        (nil)))
(insn 52 51 53 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:74 D.26115 ] [74])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.26115 ] [74])
        (nil)))
(insn 53 52 54 2 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:76 this_1(D)->data ] [76])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:76 this_1(D)->data ] [76])
        (nil)))
(insn 54 53 55 2 (set (reg:SI 5 di)
        (reg/v:SI 6 bp [orig:69 file ] [69])) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:69 file ] [69])
        (nil)))
(call_insn/j 55 54 56 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2b67b8ef3500 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/unistd.h:44 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 56 55 0)

;; Function void tiles(int*, int, int, float*, int) (_Z5tilesPiiiPfi, funcdef_no=1076, decl_uid=23709, cgraph_uid=320)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 2
changing reg in insn 17
changing reg in insn 3
changing reg in insn 16
changing reg in insn 4
changing reg in insn 15
changing reg in insn 5
changing reg in insn 14


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 88{69d,19u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:276 89 {*movsi_internal}
     (nil))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 14 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
        (nil)))
(insn 14 12 15 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:276 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:276 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 18 17 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:276 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles(int*, int, collision_table*, float*, int) (_Z5tilesPiiP15collision_tablePfi, funcdef_no=1077, decl_uid=23715, cgraph_uid=321)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 2
changing reg in insn 17
changing reg in insn 3
changing reg in insn 16
changing reg in insn 4
changing reg in insn 15
changing reg in insn 5
changing reg in insn 14


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 88{69d,19u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:279 89 {*movsi_internal}
     (nil))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 14 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
        (nil)))
(insn 14 12 15 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 18 17 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:279 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles(int*, int, int, float*, int, int) (_Z5tilesPiiiPfii, funcdef_no=1078, decl_uid=23722, cgraph_uid=322)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 65
changing reg in insn 2
changing reg in insn 20
changing reg in insn 3
changing reg in insn 19
changing reg in insn 4
changing reg in insn 18
changing reg in insn 5
changing reg in insn 17
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={3d,2u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 92{70d,22u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 8 2 NOTE_INSN_DELETED)
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:284 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 12 11 13 2 (set (mem/j/c:SI (reg/f:DI 0 ax [65]) [0 i_tmp_arr+0 S4 A256])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:284 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 13 12 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:285 89 {*movsi_internal}
     (nil))
(insn 15 13 17 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [65])) tiles.cpp:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 17 15 18 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:285 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:285 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 21 20 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:285 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles(int*, int, collision_table*, float*, int, int) (_Z5tilesPiiP15collision_tablePfii, funcdef_no=1079, decl_uid=23729, cgraph_uid=323)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 65
changing reg in insn 2
changing reg in insn 20
changing reg in insn 3
changing reg in insn 19
changing reg in insn 4
changing reg in insn 18
changing reg in insn 5
changing reg in insn 17
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={3d,2u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 92{70d,22u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:287 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 8 2 NOTE_INSN_DELETED)
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:288 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 12 11 13 2 (set (mem/j/c:SI (reg/f:DI 0 ax [65]) [0 i_tmp_arr+0 S4 A256])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:288 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 13 12 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:289 89 {*movsi_internal}
     (nil))
(insn 15 13 17 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [65])) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 17 15 18 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:289 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:289 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 21 20 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:289 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles(int*, int, int, float*, int, int, int) (_Z5tilesPiiiPfiii, funcdef_no=1080, decl_uid=23737, cgraph_uid=324)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) Uz {*sibcall}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
changing reg in insn 2
changing reg in insn 23
changing reg in insn 3
changing reg in insn 22
changing reg in insn 4
changing reg in insn 21
changing reg in insn 5
changing reg in insn 20
changing reg in insn 28
changing reg in insn 15
changing reg in insn 12
changing reg in insn 13
changing reg in insn 18
changing reg in insn 15


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={3d,3u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1u,1e} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={4d,3u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 97{71d,25u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:293 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 9 2 NOTE_INSN_DELETED)
(note 9 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 0 ax [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:294 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 28 2 (set (mem/j/c:SI (reg/f:DI 0 ax [66]) [0 i_tmp_arr+0 S4 A256])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:294 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 28 13 15 2 (set (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 h2+0 S4 A64])) tiles.cpp:295 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])
        (nil)))
(insn 15 28 16 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [66])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 38 r9 [orig:65 h2 ] [65])) tiles.cpp:295 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (nil)))
(insn 16 15 18 2 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:296 89 {*movsi_internal}
     (nil))
(insn 18 16 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [66])) tiles.cpp:296 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 20 18 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:296 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:296 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:296 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:296 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn/j 24 23 25 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:296 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 25 24 0)

;; Function void tiles(int*, int, collision_table*, float*, int, int, int) (_Z5tilesPiiP15collision_tablePfiii, funcdef_no=1081, decl_uid=23745, cgraph_uid=325)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) Uz {*sibcall}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
changing reg in insn 2
changing reg in insn 23
changing reg in insn 3
changing reg in insn 22
changing reg in insn 4
changing reg in insn 21
changing reg in insn 5
changing reg in insn 20
changing reg in insn 28
changing reg in insn 15
changing reg in insn 12
changing reg in insn 13
changing reg in insn 18
changing reg in insn 15


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={3d,3u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1u,1e} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={4d,3u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 97{71d,25u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:298 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 9 2 NOTE_INSN_DELETED)
(note 9 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 0 ax [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:299 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 28 2 (set (mem/j/c:SI (reg/f:DI 0 ax [66]) [0 i_tmp_arr+0 S4 A256])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 28 13 15 2 (set (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 h2+0 S4 A64])) tiles.cpp:300 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])
        (nil)))
(insn 15 28 16 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [66])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 38 r9 [orig:65 h2 ] [65])) tiles.cpp:300 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (nil)))
(insn 16 15 18 2 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:301 89 {*movsi_internal}
     (nil))
(insn 18 16 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [66])) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 20 18 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:301 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:301 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn/j 24 23 25 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:301 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 25 24 0)

;; Function void tiles(int*, int, int, float*, int, int, int, int) (_Z5tilesPiiiPfiiii, funcdef_no=1082, decl_uid=23754, cgraph_uid=326)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 67
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) Uz {*sibcall}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 67
changing reg in insn 2
changing reg in insn 26
changing reg in insn 3
changing reg in insn 25
changing reg in insn 4
changing reg in insn 24
changing reg in insn 5
changing reg in insn 23
changing reg in insn 32
changing reg in insn 16
changing reg in insn 31
changing reg in insn 18
changing reg in insn 13
changing reg in insn 14
changing reg in insn 21
changing reg in insn 18
changing reg in insn 16


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, int, float*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1u,2e} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={5d,4u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 102{72d,28u,2e} in 17{16 regular + 1 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:305 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:305 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 10 2 NOTE_INSN_DELETED)
(note 10 7 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 0 ax [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:306 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 14 13 32 2 (set (mem/j/c:SI (reg/f:DI 0 ax [67]) [0 i_tmp_arr+0 S4 A256])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:306 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 32 14 16 2 (set (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 h2+0 S4 A64])) tiles.cpp:307 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])
        (nil)))
(insn 16 32 31 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 38 r9 [orig:65 h2 ] [65])) tiles.cpp:307 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (nil)))
(insn 31 16 18 2 (set (reg/v:SI 38 r9 [orig:66 h3 ] [66])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 h3+0 S4 A64])) tiles.cpp:308 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 h3+0 S4 A64])
        (nil)))
(insn 18 31 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 38 r9 [orig:66 h3 ] [66])) tiles.cpp:308 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:66 h3 ] [66])
        (nil)))
(insn 19 18 21 2 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:309 89 {*movsi_internal}
     (nil))
(insn 21 19 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [67])) tiles.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 23 21 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:309 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:309 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn/j 27 26 28 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:309 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 28 27 0)

;; Function void tiles(int*, int, collision_table*, float*, int, int, int, int) (_Z5tilesPiiP15collision_tablePfiiii, funcdef_no=1083, decl_uid=23763, cgraph_uid=327)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 67
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) Uz {*sibcall}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 67
changing reg in insn 2
changing reg in insn 26
changing reg in insn 3
changing reg in insn 25
changing reg in insn 4
changing reg in insn 24
changing reg in insn 5
changing reg in insn 23
changing reg in insn 32
changing reg in insn 16
changing reg in insn 31
changing reg in insn 18
changing reg in insn 13
changing reg in insn 14
changing reg in insn 21
changing reg in insn 18
changing reg in insn 16


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles(int*, int, collision_table*, float*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1u,2e} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={5d,4u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 102{72d,28u,2e} in 17{16 regular + 1 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:311 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (reg:DI 2 cx [ floats ])) tiles.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 10 2 NOTE_INSN_DELETED)
(note 10 7 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 0 ax [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:312 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 14 13 32 2 (set (mem/j/c:SI (reg/f:DI 0 ax [67]) [0 i_tmp_arr+0 S4 A256])
        (reg:SI 38 r9 [ h1 ])) tiles.cpp:312 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h1 ])
        (nil)))
(insn 32 14 16 2 (set (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 h2+0 S4 A64])) tiles.cpp:313 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [0 h2+0 S4 A64])
        (nil)))
(insn 16 32 31 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg/v:SI 38 r9 [orig:65 h2 ] [65])) tiles.cpp:313 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:65 h2 ] [65])
        (nil)))
(insn 31 16 18 2 (set (reg/v:SI 38 r9 [orig:66 h3 ] [66])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 h3+0 S4 A64])) tiles.cpp:314 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 h3+0 S4 A64])
        (nil)))
(insn 18 31 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg/v:SI 38 r9 [orig:66 h3 ] [66])) tiles.cpp:314 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:66 h3 ] [66])
        (nil)))
(insn 19 18 21 2 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:315 89 {*movsi_internal}
     (nil))
(insn 21 19 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [67])) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 23 21 24 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 2 cx [orig:62 floats ] [62])) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:62 floats ] [62])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:315 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn/j 27 26 28 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:315 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 16 argp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 28 27 0)

;; Function void tiles1(int*, int, int, float) (_Z6tiles1Piiif, funcdef_no=1084, decl_uid=23768, cgraph_uid=328)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 10:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 63
changing reg in insn 2
changing reg in insn 19
changing reg in insn 3
changing reg in insn 18
changing reg in insn 4
changing reg in insn 17
changing reg in insn 5
changing reg in insn 10
changing reg in insn 9
changing reg in insn 16
changing reg in insn 10


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 92{71d,21u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:319 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:319 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:319 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:319 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 2 cx [63])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:320 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 10 9 11 2 (set (mem/j/c:SF (reg/f:DI 2 cx [63]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:320 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:321 89 {*movsi_internal}
     (nil))
(note 12 11 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
        (nil)))
(insn 14 13 16 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:321 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [63])) tiles.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [63])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:321 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:321 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 20 19 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:321 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles1(int*, int, collision_table*, float) (_Z6tiles1PiiP15collision_tablef, funcdef_no=1085, decl_uid=23773, cgraph_uid=329)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 10:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 63
changing reg in insn 2
changing reg in insn 19
changing reg in insn 3
changing reg in insn 18
changing reg in insn 4
changing reg in insn 17
changing reg in insn 5
changing reg in insn 10
changing reg in insn 9
changing reg in insn 16
changing reg in insn 10


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 92{71d,21u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:323 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:323 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:323 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:323 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 2 cx [63])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:324 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 10 9 11 2 (set (mem/j/c:SF (reg/f:DI 2 cx [63]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:324 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:325 89 {*movsi_internal}
     (nil))
(note 12 11 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
        (nil)))
(insn 14 13 16 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:325 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [63])) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [63])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:325 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 20 19 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:325 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles1(int*, int, int, float, int) (_Z6tiles1Piiifi, funcdef_no=1086, decl_uid=23779, cgraph_uid=330)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 11:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 64
Updating elimination of equiv for reg 65
changing reg in insn 2
changing reg in insn 22
changing reg in insn 3
changing reg in insn 21
changing reg in insn 4
changing reg in insn 20
changing reg in insn 5
changing reg in insn 11
changing reg in insn 6
changing reg in insn 13
changing reg in insn 10
changing reg in insn 19
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 13


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={3d,2u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={4d,3u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 98{73d,25u,0e} in 17{16 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:329 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 0 ax [64])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:330 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 0 ax [64]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:330 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 38 r9 [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:331 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [65]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:63 h1 ] [63])) tiles.cpp:331 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (nil)))
(insn 14 13 16 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:332 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [65])) tiles.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:332 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [64])) tiles.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:332 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:332 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:332 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles1(int*, int, collision_table*, float, int) (_Z6tiles1PiiP15collision_tablefi, funcdef_no=1087, decl_uid=23785, cgraph_uid=331)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 11:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 64
Updating elimination of equiv for reg 65
changing reg in insn 2
changing reg in insn 22
changing reg in insn 3
changing reg in insn 21
changing reg in insn 4
changing reg in insn 20
changing reg in insn 5
changing reg in insn 11
changing reg in insn 6
changing reg in insn 13
changing reg in insn 10
changing reg in insn 19
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 13


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={3d,2u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={4d,3u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 98{73d,25u,0e} in 17{16 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:334 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:334 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:334 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 0 ax [64])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:335 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 11 10 12 2 (set (mem/j/c:SF (reg/f:DI 0 ax [64]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:335 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 38 r9 [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:336 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 14 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [65]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:63 h1 ] [63])) tiles.cpp:336 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (nil)))
(insn 14 13 16 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:337 89 {*movsi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [65])) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:337 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [64])) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:337 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:337 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles1(int*, int, int, float, int, int) (_Z6tiles1Piiifii, funcdef_no=1088, decl_uid=23792, cgraph_uid=332)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 12:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
changing reg in insn 2
changing reg in insn 25
changing reg in insn 3
changing reg in insn 24
changing reg in insn 4
changing reg in insn 23
changing reg in insn 5
changing reg in insn 12
changing reg in insn 6
changing reg in insn 14
changing reg in insn 11
changing reg in insn 22
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 19
changing reg in insn 14


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={3d,2u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={4d,4u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 100{73d,27u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:341 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:341 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:341 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:341 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 8 2 NOTE_INSN_DELETED)
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:342 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 0 ax [65]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:342 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 38 r9 [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:343 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 14 13 16 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [66]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:63 h1 ] [63])) tiles.cpp:343 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 38 r9 [66])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:344 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:345 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [66])) tiles.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:345 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [65])) tiles.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:345 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:345 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:345 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles1(int*, int, collision_table*, float, int, int) (_Z6tiles1PiiP15collision_tablefii, funcdef_no=1089, decl_uid=23799, cgraph_uid=333)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 12:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 66
changing reg in insn 2
changing reg in insn 25
changing reg in insn 3
changing reg in insn 24
changing reg in insn 4
changing reg in insn 23
changing reg in insn 5
changing reg in insn 12
changing reg in insn 6
changing reg in insn 14
changing reg in insn 11
changing reg in insn 22
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 19
changing reg in insn 14


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={3d,2u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={4d,4u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 100{73d,27u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:347 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:347 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:347 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 8 2 NOTE_INSN_DELETED)
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:348 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 12 11 13 2 (set (mem/j/c:SF (reg/f:DI 0 ax [65]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:348 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 38 r9 [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:349 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 14 13 16 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [66]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:63 h1 ] [63])) tiles.cpp:349 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 38 r9 [66])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:350 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:351 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [66])) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:351 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [65])) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:351 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:351 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles1(int*, int, int, float, int, int, int) (_Z6tiles1Piiifiii, funcdef_no=1090, decl_uid=23807, cgraph_uid=334)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 67
changing reg in insn 2
changing reg in insn 28
changing reg in insn 3
changing reg in insn 27
changing reg in insn 4
changing reg in insn 26
changing reg in insn 5
changing reg in insn 13
changing reg in insn 6
changing reg in insn 15
changing reg in insn 12
changing reg in insn 25
changing reg in insn 13
changing reg in insn 14
changing reg in insn 19
changing reg in insn 17
changing reg in insn 22
changing reg in insn 15


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, int, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={2d,2u} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 102{73d,29u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:355 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:355 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 8 2 NOTE_INSN_DELETED)
(note 8 7 9 2 NOTE_INSN_DELETED)
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 39 r10 [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:356 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 39 r10 [66]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:356 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:357 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 15 14 17 2 (set (mem/j/c:SI (reg/f:DI 0 ax [67]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:63 h1 ] [63])) tiles.cpp:357 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (nil)))
(insn 17 15 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:358 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:360 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [67])) tiles.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:360 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 39 r10 [66])) tiles.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:360 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:360 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:360 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles1(int*, int, collision_table*, float, int, int, int) (_Z6tiles1PiiP15collision_tablefiii, funcdef_no=1091, decl_uid=23815, cgraph_uid=335)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 67
changing reg in insn 2
changing reg in insn 28
changing reg in insn 3
changing reg in insn 27
changing reg in insn 4
changing reg in insn 26
changing reg in insn 5
changing reg in insn 13
changing reg in insn 6
changing reg in insn 15
changing reg in insn 12
changing reg in insn 25
changing reg in insn 13
changing reg in insn 14
changing reg in insn 19
changing reg in insn 17
changing reg in insn 22
changing reg in insn 15


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles1(int*, int, collision_table*, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={2d,2u} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 102{73d,29u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:362 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:362 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:362 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:362 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:362 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 7 6 8 2 NOTE_INSN_DELETED)
(note 8 7 9 2 NOTE_INSN_DELETED)
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 39 r10 [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:363 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 14 2 (set (mem/j/c:SF (reg/f:DI 39 r10 [66]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:363 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:364 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 15 14 17 2 (set (mem/j/c:SI (reg/f:DI 0 ax [67]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:63 h1 ] [63])) tiles.cpp:364 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:63 h1 ] [63])
        (nil)))
(insn 17 15 19 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:365 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:366 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:367 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [67])) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) tiles.cpp:367 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 39 r10 [66])) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:367 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:367 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:367 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, int, float, float) (_Z6tiles2Piiiff, funcdef_no=1092, decl_uid=23821, cgraph_uid=336)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 11:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 64
changing reg in insn 2
changing reg in insn 22
changing reg in insn 3
changing reg in insn 21
changing reg in insn 4
changing reg in insn 20
changing reg in insn 5
changing reg in insn 11
changing reg in insn 10
changing reg in insn 13
changing reg in insn 19
changing reg in insn 11


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={4d,3u} r2={4d,4u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 94{71d,23u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:371 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:371 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:371 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:371 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 2 cx [64])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:372 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 11 10 13 2 (set (mem/j/c:SF (reg/f:DI 2 cx [64]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:372 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 13 11 14 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 2 cx [64])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:373 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:374 89 {*movsi_internal}
     (nil))
(note 15 14 16 2 NOTE_INSN_DELETED)
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
        (nil)))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:374 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [64])) tiles.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [64])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:374 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:374 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:374 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, collision_table*, float, float) (_Z6tiles2PiiP15collision_tableff, funcdef_no=1093, decl_uid=23827, cgraph_uid=337)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 11:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 64
changing reg in insn 2
changing reg in insn 22
changing reg in insn 3
changing reg in insn 21
changing reg in insn 4
changing reg in insn 20
changing reg in insn 5
changing reg in insn 11
changing reg in insn 10
changing reg in insn 13
changing reg in insn 19
changing reg in insn 11


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={2d} r1={4d,3u} r2={4d,4u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 94{71d,23u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:376 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:376 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:376 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:376 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 2 cx [64])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:377 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 11 10 13 2 (set (mem/j/c:SF (reg/f:DI 2 cx [64]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:377 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 13 11 14 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 2 cx [64])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:378 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 14 13 15 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 0 [0])) tiles.cpp:379 89 {*movsi_internal}
     (nil))
(note 15 14 16 2 NOTE_INSN_DELETED)
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
        (nil)))
(insn 17 16 19 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:379 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [64])) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [64])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:379 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 23 22 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:379 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, int, float, float, int) (_Z6tiles2Piiiffi, funcdef_no=1094, decl_uid=23834, cgraph_uid=338)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 12:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 14:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 67
changing reg in insn 2
changing reg in insn 25
changing reg in insn 3
changing reg in insn 24
changing reg in insn 4
changing reg in insn 23
changing reg in insn 5
changing reg in insn 12
changing reg in insn 7
changing reg in insn 16
changing reg in insn 11
changing reg in insn 14
changing reg in insn 22
changing reg in insn 12
changing reg in insn 15
changing reg in insn 19
changing reg in insn 16


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={3d,3u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={4d,3u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 100{73d,27u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:383 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:383 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:383 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:383 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:383 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:384 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 12 11 14 2 (set (mem/j/c:SF (reg/f:DI 0 ax [65]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:384 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 14 12 15 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 0 ax [65])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:385 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 38 r9 [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:386 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 16 15 17 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [67]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:64 h1 ] [64])) tiles.cpp:386 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:387 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [67])) tiles.cpp:387 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:387 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [65])) tiles.cpp:387 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:387 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:387 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:387 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:387 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, collision_table*, float, float, int) (_Z6tiles2PiiP15collision_tableffi, funcdef_no=1095, decl_uid=23841, cgraph_uid=339)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 12:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 14:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 65
Updating elimination of equiv for reg 67
changing reg in insn 2
changing reg in insn 25
changing reg in insn 3
changing reg in insn 24
changing reg in insn 4
changing reg in insn 23
changing reg in insn 5
changing reg in insn 12
changing reg in insn 7
changing reg in insn 16
changing reg in insn 11
changing reg in insn 14
changing reg in insn 22
changing reg in insn 12
changing reg in insn 15
changing reg in insn 19
changing reg in insn 16


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={3d,3u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={4d,3u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 100{73d,27u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:389 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:389 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:389 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:389 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:389 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:390 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 12 11 14 2 (set (mem/j/c:SF (reg/f:DI 0 ax [65]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:390 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 14 12 15 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 0 ax [65])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:391 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 38 r9 [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:392 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 16 15 17 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [67]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:64 h1 ] [64])) tiles.cpp:392 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (nil)))
(insn 17 16 19 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 1 [0x1])) tiles.cpp:393 89 {*movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [67])) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 20 19 22 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:393 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [65])) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:393 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:393 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 26 25 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:393 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, int, float, float, int, int) (_Z6tiles2Piiiffii, funcdef_no=1096, decl_uid=23849, cgraph_uid=340)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 15:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 68
changing reg in insn 2
changing reg in insn 28
changing reg in insn 3
changing reg in insn 27
changing reg in insn 4
changing reg in insn 26
changing reg in insn 5
changing reg in insn 13
changing reg in insn 7
changing reg in insn 17
changing reg in insn 12
changing reg in insn 15
changing reg in insn 25
changing reg in insn 13
changing reg in insn 16
changing reg in insn 19
changing reg in insn 22
changing reg in insn 17


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={3d,3u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={4d,4u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 102{73d,29u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:397 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:397 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:397 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:397 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:397 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 9 2 NOTE_INSN_DELETED)
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 0 ax [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:398 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 15 2 (set (mem/j/c:SF (reg/f:DI 0 ax [66]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:398 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 15 13 16 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 0 ax [66])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:399 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 38 r9 [68])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:400 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 17 16 19 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [68]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:64 h1 ] [64])) tiles.cpp:400 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 38 r9 [68])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:401 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:402 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [68])) tiles.cpp:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [68])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:402 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [66])) tiles.cpp:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:402 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:402 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:402 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:402 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, collision_table*, float, float, int, int) (_Z6tiles2PiiP15collision_tableffii, funcdef_no=1097, decl_uid=23857, cgraph_uid=341)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 15:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 66
Updating elimination of equiv for reg 68
changing reg in insn 2
changing reg in insn 28
changing reg in insn 3
changing reg in insn 27
changing reg in insn 4
changing reg in insn 26
changing reg in insn 5
changing reg in insn 13
changing reg in insn 7
changing reg in insn 17
changing reg in insn 12
changing reg in insn 15
changing reg in insn 25
changing reg in insn 13
changing reg in insn 16
changing reg in insn 19
changing reg in insn 22
changing reg in insn 17


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={3d,3u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={4d,4u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 102{73d,29u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:404 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:404 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:404 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 9 2 NOTE_INSN_DELETED)
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg/f:DI 0 ax [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:405 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 13 12 15 2 (set (mem/j/c:SF (reg/f:DI 0 ax [66]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:405 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 15 13 16 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 0 ax [66])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:406 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 38 r9 [68])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:407 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 17 16 19 2 (set (mem/j/c:SI (reg/f:DI 38 r9 [68]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:64 h1 ] [64])) tiles.cpp:407 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (nil)))
(insn 19 17 20 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 38 r9 [68])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:408 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 20 19 22 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 2 [0x2])) tiles.cpp:409 89 {*movsi_internal}
     (nil))
(insn 22 20 23 2 (set (reg:DI 38 r9)
        (reg/f:DI 38 r9 [68])) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 38 r9 [68])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 23 22 25 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:409 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [66])) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:409 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 29 28 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:409 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, int, float, float, int, int, int) (_Z6tiles2Piiiffiii, funcdef_no=1098, decl_uid=23866, cgraph_uid=342)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 14:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 16:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 67
Updating elimination of equiv for reg 69
changing reg in insn 2
changing reg in insn 31
changing reg in insn 3
changing reg in insn 30
changing reg in insn 4
changing reg in insn 29
changing reg in insn 5
changing reg in insn 14
changing reg in insn 7
changing reg in insn 18
changing reg in insn 13
changing reg in insn 16
changing reg in insn 28
changing reg in insn 14
changing reg in insn 17
changing reg in insn 22
changing reg in insn 20
changing reg in insn 25
changing reg in insn 18


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, int, float, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={2d,3u} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 104{73d,31u,0e} in 20{19 regular + 1 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:413 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 1 dx [orig:61 memory ] [61])
        (reg:SI 1 dx [ memory ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:413 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:413 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 9 2 NOTE_INSN_DELETED)
(note 9 8 10 2 NOTE_INSN_DELETED)
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 39 r10 [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:414 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 14 13 16 2 (set (mem/j/c:SF (reg/f:DI 39 r10 [67]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:414 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 39 r10 [67])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:415 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [69])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:416 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 18 17 20 2 (set (mem/j/c:SI (reg/f:DI 0 ax [69]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:64 h1 ] [64])) tiles.cpp:416 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (nil)))
(insn 20 18 22 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [69])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:417 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 22 20 23 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [69])
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:418 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(insn 23 22 25 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:419 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [69])) tiles.cpp:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 26 25 28 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:419 89 {*movsi_internal}
     (nil))
(insn 28 26 29 2 (set (reg:DI 2 cx)
        (reg/f:DI 39 r10 [67])) tiles.cpp:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (reg/v:SI 1 dx [orig:61 memory ] [61])) tiles.cpp:419 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:61 memory ] [61])
        (nil)))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:419 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:419 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 32 31 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x1]  <function_decl 0x2b67b8f14e00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:419 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tiles2(int*, int, collision_table*, float, float, int, int, int) (_Z6tiles2PiiP15collision_tableffiii, funcdef_no=1099, decl_uid=23875, cgraph_uid=343)


********** Local #1: **********

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 14:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 16:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
Updating elimination of equiv for reg 67
Updating elimination of equiv for reg 69
changing reg in insn 2
changing reg in insn 31
changing reg in insn 3
changing reg in insn 30
changing reg in insn 4
changing reg in insn 29
changing reg in insn 5
changing reg in insn 14
changing reg in insn 7
changing reg in insn 18
changing reg in insn 13
changing reg in insn 16
changing reg in insn 28
changing reg in insn 14
changing reg in insn 17
changing reg in insn 22
changing reg in insn 20
changing reg in insn 25
changing reg in insn 18


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void tiles2(int*, int, collision_table*, float, float, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={3d,2u} r22={2d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={2d,3u} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 104{73d,31u,0e} in 20{19 regular + 1 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:421 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 4 si [orig:60 nt ] [60])
        (reg:SI 4 si [ nt ])) tiles.cpp:421 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nt ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (reg:DI 1 dx [ ct ])) tiles.cpp:421 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ct ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (reg:SF 21 xmm0 [ f1 ])) tiles.cpp:421 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ f1 ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (reg:SI 2 cx [ h1 ])) tiles.cpp:421 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ h1 ])
        (nil)))
(note 8 7 9 2 NOTE_INSN_DELETED)
(note 9 8 10 2 NOTE_INSN_DELETED)
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg/f:DI 39 r10 [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:422 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 14 13 16 2 (set (mem/j/c:SF (reg/f:DI 39 r10 [67]) [0 f_tmp_arr+0 S4 A256])
        (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])) tiles.cpp:422 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:62 f1 ] [62])
        (nil)))
(insn 16 14 17 2 (set (mem/j/c:SF (plus:DI (reg/f:DI 39 r10 [67])
                (const_int 4 [0x4])) [0 f_tmp_arr+4 S4 A32])
        (reg:SF 22 xmm1 [ f2 ])) tiles.cpp:423 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ f2 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [69])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tiles.cpp:424 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 18 17 20 2 (set (mem/j/c:SI (reg/f:DI 0 ax [69]) [0 i_tmp_arr+0 S4 A256])
        (reg/v:SI 2 cx [orig:64 h1 ] [64])) tiles.cpp:424 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:64 h1 ] [64])
        (nil)))
(insn 20 18 22 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [69])
                (const_int 4 [0x4])) [0 i_tmp_arr+4 S4 A32])
        (reg:SI 37 r8 [ h2 ])) tiles.cpp:425 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ h2 ])
        (nil)))
(insn 22 20 23 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 0 ax [69])
                (const_int 8 [0x8])) [0 i_tmp_arr+8 S4 A64])
        (reg:SI 38 r9 [ h3 ])) tiles.cpp:426 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ h3 ])
        (nil)))
(insn 23 22 25 2 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (const_int 3 [0x3])) tiles.cpp:427 89 {*movsi_internal}
     (nil))
(insn 25 23 26 2 (set (reg:DI 38 r9)
        (reg/f:DI 0 ax [69])) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (expr_list:REG_EQUAL (symbol_ref:DI ("i_tmp_arr")  <var_decl 0x2b67b8f8ced8 i_tmp_arr>)
            (nil))))
(insn 26 25 28 2 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) tiles.cpp:427 89 {*movsi_internal}
     (nil))
(insn 28 26 29 2 (set (reg:DI 2 cx)
        (reg/f:DI 39 r10 [67])) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [67])
        (expr_list:REG_EQUAL (symbol_ref:DI ("f_tmp_arr")  <var_decl 0x2b67b8fac000 f_tmp_arr>)
            (nil))))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 1 dx [orig:61 ct ] [61])) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:61 ct ] [61])
        (nil)))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (reg/v:SI 4 si [orig:60 nt ] [60])) tiles.cpp:427 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:60 nt ] [60])
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])) tiles.cpp:427 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:59 the_tiles ] [59])
        (nil)))
(call_insn 32 31 0 2 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x1]  <function_decl 0x2b67b8f25600 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tiles.cpp:427 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tileswrap(int*, int, int, float*, int, int*, int*, int) (_Z9tileswrapPiiiPfiS_S_i, funcdef_no=1100, decl_uid=23884, cgraph_uid=344)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=480, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=416, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 106
Updating elimination of equiv for reg 154
Updating elimination of equiv for reg 173
Updating elimination of equiv for reg 218
Updating elimination of equiv for reg 222
Updating elimination of equiv for reg 226
Updating elimination of equiv for reg 251
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=296 from oldreg=151, assigning class GENERAL_REGS to address r296
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 24:  (0) =r  (1) p {*leasi}
      Creating newreg=297 from oldreg=71, assigning class GENERAL_REGS to r297
   24: r297:SI=r296:SI+r154:SI+0x1
    Inserting insn reload before:
  460: r296:SI=r151:SI
    Inserting insn reload after:
  461: r71:SI=r297:SI

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 461:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=7,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) p {*leadi}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=15,losers=2 -- reject
	 Choosing alt 0 in insn 69:  (0) =x  (1) r {*floatsisf2_sse_interunit}
      Creating newreg=298 from oldreg=131, assigning class SSE_REGS to r298
   69: r298:SF=float(r148:SI)
    Inserting insn reload after:
  462: r131:SF=r298:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 462:  (0) m  (1) x {*movsf_internal}
      Creating newreg=299 from oldreg=151, assigning class GENERAL_REGS to address r299
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) p {*leadi}
   72: r169:DI=zero_extend(r299:SI-0x1)
    Inserting insn reload before:
  463: r299:SI=r151:SI

          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 77:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
      Creating newreg=300 from oldreg=171, assigning class SSE_REGS to r300
   77: r300:SF=r300:SF*[r293:DI+r290:DI]
    Inserting insn reload before:
  464: r300:SF=r131:SF
    Inserting insn reload after:
  465: r171:SF=r300:SF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 464:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) x {fix_truncsfsi_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 86:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 97:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 106:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=301 from oldreg=80, assigning class GENERAL_REGS to r301
  106: {r301:SI=r301:SI 0>>0x2;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  466: r301:SI=r151:SI
    Inserting insn reload after:
  467: r80:SI=r301:SI

          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=12,losers=2,rld_nregs=1
          alt=2,overall=14,losers=2 -- reject
	 Choosing alt 0 in insn 117:  (0) =x  (1) x {*vec_dupv4si}
      Creating newreg=302 from oldreg=148, assigning class SSE_REGS to r302
  117: r185:V4SI=vec_duplicate(r302:SI)
    Inserting insn reload before:
  468: r302:SI=r148:SI

          alt=0,overall=13,losers=2,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=0
          alt=2,overall=14,losers=2 -- reject
          alt=3,overall=14,losers=2 -- reject
          alt=4,overall=19,losers=2 -- reject
          alt=5,overall=20,losers=2 -- reject
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=19,losers=2 -- reject
          alt=9,overall=22,losers=3 -- reject
          alt=11,overall=10,losers=1 -- reject
      Creating newreg=303, assigning class NO_REGS to secondary r303
  468: r303:SI=r148:SI
    Inserting the sec. move after:
  469: r302:SI=r303:SI

          alt=0,overall=14,losers=2,rld_nregs=1
          alt=1,overall=15,losers=2 -- reject
          alt=3,overall=21,losers=3 -- reject
          alt=4,overall=19,losers=2 -- reject
          alt=5,overall=20,losers=2 -- reject
          alt=7,overall=9,losers=1,rld_nregs=1
          alt=8,overall=19,losers=2 -- reject
          alt=9,overall=16,losers=2 -- reject
          alt=11,overall=3,losers=0,rld_nregs=0
	 Choosing alt 11 in insn 469:  (0) *x  (1) m {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 121:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=304, assigning class SSE_REGS to r304
  121: r304:V2DI=zero_extend(vec_select(r304:V2DI#0,parallel))*zero_extend(vec_select(r185:V4SI,parallel))
    Inserting insn reload before:
  470: clobber r304:V2DI
  471: r304:V2DI#0=r186:V4SI
    Inserting insn reload after:
  472: r188:V4SI#0=r304:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 472:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 471:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 122:  (0) =x  (1) 0  (2) xN {lshrv2di3}
      Creating newreg=305 from oldreg=190, assigning class SSE_REGS to r305
  122: r305:V2DI=r305:V2DI 0>>0x20
      REG_DEAD r186:V4SI
    Inserting insn reload before:
  473: r305:V2DI=r186:V4SI#0
    Inserting insn reload after:
  474: r190:V2DI=r305:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 473:  (0) x  (1) xm {*movv2di_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 123:  (0) =x  (1) 0  (2) xN {lshrv2di3}
      Creating newreg=306 from oldreg=191, assigning class SSE_REGS to r306
  123: r306:V2DI=r306:V2DI 0>>0x20
    Inserting insn reload before:
  475: r306:V2DI=r185:V4SI#0
    Inserting insn reload after:
  476: r191:V2DI=r306:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 475:  (0) x  (1) xm {*movv2di_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 124:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 128:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 136:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=307, assigning class SSE_REGS to r307
  136: r307:V2DI=zero_extend(vec_select(r307:V2DI#0,parallel))*zero_extend(vec_select(r185:V4SI,parallel))
    Inserting insn reload before:
  477: clobber r307:V2DI
  478: r307:V2DI#0=r192:V4SI
    Inserting insn reload after:
  479: r194:V4SI#0=r307:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 479:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 478:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 139:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 143:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 151:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=308, assigning class SSE_REGS to r308
  151: r308:V2DI=zero_extend(vec_select(r308:V2DI#0,parallel))*zero_extend(vec_select(r185:V4SI,parallel))
    Inserting insn reload before:
  480: clobber r308:V2DI
  481: r308:V2DI#0=r198:V4SI
    Inserting insn reload after:
  482: r200:V4SI#0=r308:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 482:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 481:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 154:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 158:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 166:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=309, assigning class SSE_REGS to r309
  166: r309:V2DI=zero_extend(vec_select(r309:V2DI#0,parallel))*zero_extend(vec_select(r185:V4SI,parallel))
    Inserting insn reload before:
  483: clobber r309:V2DI
  484: r309:V2DI#0=r204:V4SI
    Inserting insn reload after:
  485: r206:V4SI#0=r309:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 485:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 484:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 169:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 173:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 181
	 Choosing alt 0 in insn 181:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 0 in insn 184:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=11,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
  Commutative operand exchange in insn 198
	 Choosing alt 2 in insn 198:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=310 from oldreg=218, assigning class GENERAL_REGS to r310
  198: {r310:SI=r310:SI*[r216:DI*0x4+r152:DI];clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV [r216:DI*0x4+frame:DI-0x100]
    Inserting insn reload before:
  486: r310:SI=r148:SI
    Inserting insn reload after:
  487: r218:SI=r310:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 214:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=2,overall=11,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
  Commutative operand exchange in insn 217
	 Choosing alt 2 in insn 217:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=311 from oldreg=222, assigning class GENERAL_REGS to r311
  217: {r311:SI=r311:SI*[r220:DI*0x4+r152:DI];clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV [r220:DI*0x4+frame:DI-0x100]
    Inserting insn reload before:
  488: r311:SI=r148:SI
    Inserting insn reload after:
  489: r222:SI=r311:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 219:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=2,overall=11,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
  Commutative operand exchange in insn 229
	 Choosing alt 2 in insn 229:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=312 from oldreg=226, assigning class GENERAL_REGS to r312
  229: {r312:SI=r312:SI*[r224:DI*0x4+r152:DI];clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV [r224:DI*0x4+frame:DI-0x100]
    Inserting insn reload before:
  490: r312:SI=r148:SI
    Inserting insn reload after:
  491: r226:SI=r312:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 231:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 242:  (0) r  (1) rm {*extendsidi2_rex64}
      Creating newreg=313 from oldreg=122, assigning class GENERAL_REGS to r313
  242: r313:DI=sign_extend(r149:SI)
      REG_DEAD r149:SI
    Inserting insn reload after:
  492: r122:DI=r313:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 492:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 243:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=314 from oldreg=151, assigning class GENERAL_REGS to address r314
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) p {*leadi}
  245: r229:DI=zero_extend(r314:SI-0x1)
    Inserting insn reload before:
  493: r314:SI=r151:SI

          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 260:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=315 from oldreg=233, assigning class GENERAL_REGS to r315
  260: {r315:SI=r315:SI-r84:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  494: r315:SI=r83:SI
    Inserting insn reload after:
  495: r233:SI=r315:SI

          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 262:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=316 from oldreg=93, assigning class GENERAL_REGS to r316
  262: {r316:SI=r316:SI-r235:SI;clobber flags:CC;}
      REG_DEAD r235:SI
      REG_DEAD r83:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  496: r316:SI=r83:SI
    Inserting insn reload after:
  497: r93:SI=r316:SI

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 268:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=317 from oldreg=238, assigning class GENERAL_REGS to r317
  268: {r317:SI=r317:SI-r83:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  498: r317:SI=r84:SI
    Inserting insn reload after:
  499: r238:SI=r317:SI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 269:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) p {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 277:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=12,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 282:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
      Creating newreg=318 from oldreg=248, assigning class AREG to r318
  282: {r318:SI=r318:SI/[frame:DI+r268:DI+0xa0];r93:SI=r318:SI%[frame:DI+r268:DI+0xa0];clobber flags:CC;}
      REG_UNUSED r248:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  500: r318:SI=r93:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 292:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 295:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 296:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) %0  (2) rme {*addsi_2}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 313:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 325:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 328:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 333:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 334:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 337:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=7,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 345:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) p {*leadi}

********** Inheritance #1: **********

EBB 2
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=319 from oldreg=151, assigning class GENERAL_REGS to inheritance r319
    Original reg change 151->319 (bb2):
    8: r319:SI=r8:SI
      REG_DEAD r8:SI
    Add original<-inheritance after:
  501: r151:SI=r319:SI

    Inheritance reuse change 151->319 (bb2):
  460: r296:SI=r319:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10 11 12 13 14 15 16
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=320 from oldreg=151, assigning class GENERAL_REGS to inheritance r320
    Original reg change 151->320 (bb10):
  466: r301:SI=r320:SI
    Add inheritance<-original before:
  502: r320:SI=r151:SI

    Inheritance reuse change 151->320 (bb11):
  114: flags:CC=cmp(r320:SI,0x3)
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=321 from oldreg=151, assigning class GENERAL_REGS to inheritance r321
    Original reg change 151->321 (bb10):
   95: r174:DI=sign_extend(r321:SI)
    Add inheritance<-original before:
  503: r321:SI=r151:SI

    Inheritance reuse change 151->321 (bb10):
  502: r320:SI=r321:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21 22
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=322 from oldreg=151, assigning class GENERAL_REGS to inheritance r322
    Original reg change 151->322 (bb21):
  222: flags:CCGC=cmp(r322:SI,r81:SI)
    Add inheritance<-original before:
  504: r322:SI=r151:SI

    Inheritance reuse change 151->322 (bb22):
  235: flags:CCGC=cmp(r66:SI,r322:SI)
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38 39
EBB 40

********** Pseudo live ranges #1: **********

  BB 40
  BB 7
   Insn 383: point = 0
  BB 37
   Insn 339: point = 0
   Insn 338: point = 0
   Insn 337: point = 0
   Insn 334: point = 0
   Insn 333: point = 0
   Insn 332: point = 1
   Insn 331: point = 2
   Insn 330: point = 2
   Insn 329: point = 2
   Insn 328: point = 2
   Insn 327: point = 2
   Insn 325: point = 2
   Insn 324: point = 3
  BB 32
   Insn 399: point = 6
   Insn 18: point = 6
   Insn 424: point = 7
   Insn 423: point = 9
   Insn 422: point = 11
   Insn 421: point = 13
   Insn 420: point = 15
   Insn 419: point = 17
  BB 31
   Insn 299: point = 20
   Insn 298: point = 20
   Insn 296: point = 20
   Insn 295: point = 20
   Insn 292: point = 20
   Insn 291: point = 21
  BB 35
   Insn 401: point = 24
   Insn 313: point = 24
   Insn 449: point = 25
   Insn 448: point = 27
   Insn 447: point = 29
   Insn 446: point = 31
   Insn 445: point = 33
   Insn 444: point = 35
   Insn 443: point = 37
   Insn 442: point = 39
   Insn 441: point = 41
   Insn 440: point = 43
   Insn 439: point = 45
   Insn 438: point = 47
  BB 34
   Insn 310: point = 50
   Insn 309: point = 50
  BB 33
   Insn 437: point = 51
   Insn 436: point = 53
   Insn 435: point = 55
   Insn 434: point = 57
   Insn 433: point = 59
   Insn 432: point = 61
   Insn 431: point = 63
   Insn 430: point = 65
   Insn 429: point = 67
   Insn 428: point = 69
   Insn 427: point = 71
   Insn 426: point = 73
   Insn 425: point = 75
   Insn 306: point = 77
  BB 30
   Insn 288: point = 79
   Insn 287: point = 79
  BB 29
   Insn 284: point = 80
   Insn 282: point = 80
   Insn 500: point = 82
	Hard reg 1 is preferable by r318 with profit 166
  BB 28
   Insn 278: point = 85
   Insn 277: point = 85
   Insn 276: point = 85
  BB 26
   Insn 397: point = 86
   Insn 497: point = 86
	Hard reg 1 is preferable by r316 with profit 166
   Insn 262: point = 88
   Insn 496: point = 89
	Hard reg 1 is preferable by r316 with profit 166
	Hard reg 37 is preferable by r316 with profit 166
   Insn 261: point = 91
   Insn 495: point = 93
	Hard reg 0 is preferable by r315 with profit 166
   Insn 260: point = 95
   Insn 494: point = 95
  BB 27
   Insn 272: point = 97
   Insn 271: point = 97
   Insn 270: point = 99
   Insn 269: point = 101
   Insn 499: point = 103
	Hard reg 0 is preferable by r317 with profit 166
   Insn 268: point = 105
   Insn 498: point = 105
  BB 25
   Insn 258: point = 107
   Insn 257: point = 107
   Insn 256: point = 107
   Insn 254: point = 108
  BB 39
   Insn 403: point = 110
   Insn 459: point = 110
   Insn 458: point = 112
   Insn 457: point = 114
   Insn 456: point = 116
   Insn 455: point = 118
   Insn 454: point = 120
   Insn 453: point = 122
   Insn 452: point = 124
   Insn 451: point = 126
   Insn 450: point = 128
   Insn 374: point = 130
   Insn 373: point = 131
   Insn 16: point = 132
   Insn 15: point = 133
  BB 36
   Insn 19: point = 135
  BB 38
   Insn 346: point = 137
   Insn 345: point = 137
  BB 24
   Insn 395: point = 138
   Insn 418: point = 138
   Insn 417: point = 140
   Insn 416: point = 142
   Insn 415: point = 144
   Insn 414: point = 146
   Insn 413: point = 148
   Insn 372: point = 150
   Insn 20: point = 151
   Insn 247: point = 152
   Insn 245: point = 154
   Insn 493: point = 156
   Insn 243: point = 157
   Insn 492: point = 159
   Insn 242: point = 161
  BB 6
   Insn 63: point = 164
   Insn 62: point = 164
  BB 23
   Insn 393: point = 165
  BB 17
   Insn 387: point = 166
   Insn 199: point = 166
   Insn 487: point = 167
	Hard reg 1 is preferable by r310 with profit 1
   Insn 198: point = 169
   Insn 486: point = 169
   Insn 195: point = 170
  BB 22
   Insn 236: point = 173
   Insn 235: point = 173
   Insn 231: point = 174
   Insn 230: point = 176
   Insn 491: point = 177
	Hard reg 2 is preferable by r312 with profit 1
   Insn 229: point = 179
   Insn 490: point = 179
   Insn 226: point = 180
  BB 4
   Insn 378: point = 183
  BB 21
   Insn 223: point = 184
   Insn 222: point = 184
   Insn 504: point = 184
   Insn 219: point = 185
   Insn 218: point = 186
   Insn 489: point = 187
	Hard reg 2 is preferable by r311 with profit 1
   Insn 217: point = 189
   Insn 488: point = 189
   Insn 214: point = 190
  BB 20
   Insn 14: point = 192
  BB 19
   Insn 390: point = 194
  BB 18
   Insn 210: point = 195
   Insn 209: point = 195
   Insn 208: point = 195
  BB 16
   Insn 385: point = 198
   Insn 188: point = 198
   Insn 187: point = 199
   Insn 186: point = 200
   Insn 185: point = 200
   Insn 184: point = 202
   Insn 182: point = 204
   Insn 181: point = 206
   Insn 180: point = 208
  BB 15
   Insn 177: point = 210
   Insn 176: point = 210
   Insn 173: point = 211
   Insn 172: point = 212
   Insn 171: point = 213
   Insn 170: point = 213
   Insn 169: point = 215
   Insn 167: point = 217
   Insn 485: point = 219
   Insn 166: point = 221
   Insn 484: point = 223
   Insn 483: point = 224
   Insn 165: point = 225
  BB 14
   Insn 162: point = 227
   Insn 161: point = 227
   Insn 158: point = 227
   Insn 157: point = 228
   Insn 156: point = 229
   Insn 155: point = 229
   Insn 154: point = 231
   Insn 152: point = 233
   Insn 482: point = 235
   Insn 151: point = 237
   Insn 481: point = 239
   Insn 480: point = 240
   Insn 150: point = 241
  BB 13
   Insn 147: point = 243
   Insn 146: point = 243
   Insn 143: point = 243
   Insn 142: point = 244
   Insn 141: point = 245
   Insn 140: point = 245
   Insn 139: point = 247
   Insn 137: point = 249
   Insn 479: point = 251
   Insn 136: point = 253
   Insn 478: point = 255
   Insn 477: point = 256
   Insn 135: point = 257
  BB 12
   Insn 132: point = 259
   Insn 131: point = 259
   Insn 128: point = 259
   Insn 127: point = 260
   Insn 126: point = 261
   Insn 125: point = 261
   Insn 124: point = 263
   Insn 476: point = 265
	Hard reg 22 is preferable by r306 with profit 1
   Insn 123: point = 267
   Insn 475: point = 267
   Insn 474: point = 268
	Hard reg 24 is preferable by r305 with profit 1
   Insn 122: point = 270
   Insn 473: point = 270
   Insn 472: point = 272
   Insn 121: point = 274
   Insn 471: point = 276
   Insn 470: point = 277
   Insn 120: point = 278
   Insn 117: point = 279
   Insn 469: point = 281
	   Creating copy r302<-r303@1
   Insn 468: point = 283
  BB 11
   Insn 115: point = 285
   Insn 114: point = 285
  BB 10
   Insn 111: point = 287
   Insn 110: point = 287
   Insn 107: point = 287
   Insn 467: point = 288
	Hard reg 1 is preferable by r301 with profit 1
   Insn 106: point = 290
   Insn 466: point = 290
	   Creating copy r301<-r320@1
   Insn 502: point = 291
	   Creating copy r320<-r321@1
   Insn 103: point = 293
   Insn 102: point = 293
   Insn 101: point = 294
   Insn 100: point = 294
   Insn 97: point = 295
   Insn 96: point = 296
   Insn 95: point = 298
   Insn 503: point = 299
   Insn 412: point = 300
   Insn 411: point = 302
  BB 9
   Insn 88: point = 305
   Insn 87: point = 305
   Insn 86: point = 305
   Insn 83: point = 305
   Insn 82: point = 306
   Insn 80: point = 308
   Insn 79: point = 309
   Insn 78: point = 309
   Insn 465: point = 310
	Hard reg 21 is preferable by r300 with profit 33
   Insn 77: point = 312
   Insn 464: point = 312
  BB 8
   Insn 410: point = 314
   Insn 409: point = 316
   Insn 408: point = 318
   Insn 407: point = 320
   Insn 406: point = 322
   Insn 405: point = 324
   Insn 371: point = 326
   Insn 13: point = 327
   Insn 74: point = 328
   Insn 72: point = 330
   Insn 463: point = 332
   Insn 462: point = 333
   Insn 69: point = 335
  BB 3
   Insn 33: point = 337
   Insn 32: point = 337
  BB 5
   Insn 380: point = 338
   Insn 52: point = 338
   Insn 51: point = 338
   Insn 50: point = 339
   Insn 49: point = 339
   Insn 45: point = 340
   Insn 44: point = 342
   Insn 43: point = 344
   Insn 40: point = 346
  BB 2
   Insn 29: point = 348
   Insn 28: point = 348
   Insn 461: point = 348
   Insn 24: point = 350
   Insn 460: point = 352
	   Creating copy r296<-r319@1
   Insn 11: point = 354
   Insn 9: point = 355
   Insn 501: point = 356
   Insn 8: point = 357
	Hard reg 37 is preferable by r319 with profit 1
   Insn 7: point = 358
   Insn 6: point = 359
   Insn 5: point = 360
   Insn 4: point = 361
 r63: [129..133]
 r66: [171..174]
 r71: [0..348]
 r72: [127..132]
 r75: [307..308]
 r79: [196..287]
 r80: [210..288]
 r81: [184..185] [181..182]
 r83: [98..108] [90..96]
 r84: [72..107] [22..43]
 r93: [97..97] [83..86] [70..81] [24..41]
 r94: [149..157]
 r104: [325..327]
 r106: [0..1]
 r107: [147..151]
 r110: [135..135] [4..6]
 r114: [195..195] [184..192] [175..182]
 r122: [0..159]
 r129: [64..77]
 r131: [305..333]
 r144: [145..152]
 r146: [323..328]
 r147: [158..361]
 r148: [321..360] [143..302]
 r149: [162..359]
 r150: [319..358]
 r151: [0..356]
 r152: [317..355] [141..300]
 r154: [343..354]
 r157: [345..346]
 r160: [338..344]
 r161: [341..342]
 r162: [339..340]
 r169: [329..330]
 r171: [309..310]
 r173: [305..306]
 r174: [297..298]
 r175: [294..296]
 r185: [207..279]
 r186: [271..278]
 r187: [259..261]
 r188: [262..272]
 r189: [260..263]
 r190: [264..268]
 r191: [203..265]
 r192: [250..257]
 r193: [243..245]
 r194: [246..251]
 r195: [244..247]
 r196: [248..249]
 r198: [234..241]
 r199: [227..229]
 r200: [230..235]
 r201: [228..231]
 r202: [232..233]
 r204: [218..225]
 r205: [211..213]
 r206: [214..219]
 r207: [212..215]
 r208: [216..217]
 r210: [205..208]
 r211: [198..200]
 r212: [201..206]
 r213: [199..202]
 r214: [203..204]
 r216: [166..170]
 r218: [166..167]
 r220: [186..190]
 r222: [186..187]
 r224: [176..180]
 r226: [176..177]
 r229: [153..154]
 r233: [92..93]
 r235: [88..92]
 r236: [91..91]
 r238: [102..103]
 r239: [100..101]
 r241: [98..100]
 r242: [99..99]
 r251: [20..21]
 r254: [2..3]
 r256: [139..150]
 r257: [293..295]
 r258: [315..326]
 r259: [125..148] [0..17]
 r260: [123..146] [0..15]
 r261: [121..144] [0..13]
 r262: [119..142] [0..11]
 r263: [117..140] [0..9]
 r264: [115..138] [0..7]
 r265: [113..130]
 r266: [111..131]
 r267: [76..128] [20..47]
 r268: [74..126] [20..45]
 r269: [68..124] [18..39]
 r270: [66..122] [16..37]
 r271: [62..120] [14..35]
 r272: [60..118] [12..33]
 r273: [58..116] [10..31]
 r274: [56..114] [8..29]
 r275: [54..112] [20..27]
 r276: [52..110] [20..25]
 r277: [48..75]
 r278: [46..73]
 r279: [44..71]
 r280: [42..69]
 r281: [40..67]
 r282: [38..65]
 r283: [50..63]
 r284: [36..61]
 r285: [34..59]
 r286: [32..57]
 r287: [30..55]
 r288: [28..53]
 r289: [26..51]
 r290: [305..324]
 r291: [305..322]
 r292: [303..320]
 r293: [305..318]
 r294: [301..316]
 r295: [305..314]
 r296: [351..352]
 r297: [349..350]
 r298: [334..335]
 r299: [331..332]
 r300: [311..312]
 r301: [289..290]
 r302: [280..281]
 r303: [282..283]
 r304: [273..277]
 r305: [269..270]
 r306: [266..267]
 r307: [252..256]
 r308: [236..240]
 r309: [220..224]
 r310: [168..169]
 r311: [188..189]
 r312: [178..179]
 r313: [160..161]
 r314: [155..156]
 r315: [94..95]
 r316: [87..89]
 r317: [104..105]
 r318: [80..82]
 r319: [353..357]
 r320: [285..291]
 r321: [292..299]
 r322: [184..184] [173..182]
Compressing live ranges: from 362 to 260 - 71%
Ranges after the compression:
 r63: [109..110]
 r66: [137..138]
 r71: [0..253]
 r72: [107..110]
 r75: [222..223]
 r79: [152..211]
 r80: [162..211]
 r81: [143..146]
 r83: [83..90] [76..81]
 r84: [64..90] [18..37]
 r93: [82..82] [62..73] [18..35]
 r94: [123..128]
 r104: [238..239]
 r106: [0..1]
 r107: [121..124]
 r110: [111..111] [4..5]
 r114: [139..151]
 r122: [0..130]
 r129: [56..69]
 r131: [220..243]
 r144: [119..124]
 r146: [236..239]
 r147: [129..259]
 r148: [234..259] [117..219]
 r149: [133..259]
 r150: [232..259]
 r151: [0..259]
 r152: [230..259] [115..217]
 r154: [250..259]
 r157: [252..253]
 r160: [246..251]
 r161: [248..249]
 r162: [246..247]
 r169: [240..241]
 r171: [224..225]
 r173: [220..221]
 r174: [216..217]
 r175: [214..215]
 r185: [160..205]
 r186: [202..205]
 r187: [192..193]
 r188: [194..203]
 r189: [192..195]
 r190: [196..199]
 r191: [156..197]
 r192: [188..191]
 r193: [182..183]
 r194: [184..189]
 r195: [182..185]
 r196: [186..187]
 r198: [178..181]
 r199: [172..173]
 r200: [174..179]
 r201: [172..175]
 r202: [176..177]
 r204: [168..171]
 r205: [162..163]
 r206: [164..169]
 r207: [162..165]
 r208: [166..167]
 r210: [158..161]
 r211: [152..153]
 r212: [154..159]
 r213: [152..155]
 r214: [156..157]
 r216: [133..136]
 r218: [133..134]
 r220: [147..150]
 r222: [147..148]
 r224: [139..142]
 r226: [139..140]
 r229: [125..126]
 r233: [78..79]
 r235: [74..78]
 r236: [77..77]
 r238: [87..88]
 r239: [85..86]
 r241: [83..85]
 r242: [84..84]
 r251: [16..17]
 r254: [2..3]
 r256: [113..124]
 r257: [214..215]
 r258: [228..239]
 r259: [105..122] [0..15]
 r260: [103..120] [0..13]
 r261: [101..118] [0..11]
 r262: [99..116] [0..9]
 r263: [97..114] [0..7]
 r264: [95..112] [0..5]
 r265: [93..110]
 r266: [91..110]
 r267: [68..108] [16..41]
 r268: [66..106] [16..39]
 r269: [60..104] [16..33]
 r270: [58..102] [14..31]
 r271: [54..100] [12..29]
 r272: [52..98] [10..27]
 r273: [50..96] [8..25]
 r274: [48..94] [6..23]
 r275: [46..92] [16..21]
 r276: [44..90] [16..19]
 r277: [42..67]
 r278: [40..65]
 r279: [38..63]
 r280: [36..61]
 r281: [34..59]
 r282: [32..57]
 r283: [42..55]
 r284: [30..53]
 r285: [28..51]
 r286: [26..49]
 r287: [24..47]
 r288: [22..45]
 r289: [20..43]
 r290: [220..237]
 r291: [220..235]
 r292: [220..233]
 r293: [220..231]
 r294: [218..229]
 r295: [220..227]
 r296: [256..257]
 r297: [254..255]
 r298: [244..245]
 r299: [242..243]
 r300: [226..227]
 r301: [212..213]
 r302: [206..207]
 r303: [208..209]
 r304: [204..205]
 r305: [200..201]
 r306: [198..199]
 r307: [190..191]
 r308: [180..181]
 r309: [170..171]
 r310: [135..136]
 r311: [149..150]
 r312: [141..142]
 r313: [131..132]
 r314: [127..128]
 r315: [80..81]
 r316: [74..75]
 r317: [89..90]
 r318: [70..71]
 r319: [258..259]
 r320: [210..213]
 r321: [214..217]
 r322: [137..145]
	 Assigning to 318 (cl=AREG, orig=248, freq=332, tfirst=318, tfreq=332)...
	   Assign 0 to reload r318 (freq=332)
	 Assigning to 315 (cl=GENERAL_REGS, orig=233, freq=498, tfirst=315, tfreq=498)...
	   Assign 0 to reload r315 (freq=498)
	 Assigning to 316 (cl=GENERAL_REGS, orig=93, freq=498, tfirst=316, tfreq=498)...
	   Assign 37 to reload r316 (freq=498)
	 Assigning to 317 (cl=GENERAL_REGS, orig=238, freq=498, tfirst=317, tfreq=498)...
	   Assign 0 to reload r317 (freq=498)
	 Assigning to 301 (cl=GENERAL_REGS, orig=80, freq=3, tfirst=301, tfreq=5)...
	   Assign 1 to reload r301 (freq=3)
	Hard reg 1 is preferable by r320 with profit 1
	Hard reg 1 is preferable by r321 with profit 1
	 Assigning to 320 (cl=GENERAL_REGS, orig=151, freq=3, tfirst=301, tfreq=5)...
	   Assign 5 to inheritance r320 (freq=3)
	Hard reg 1 is preferable by r321 with profit 1
	Hard reg 5 is preferable by r321 with profit 1
	 Assigning to 321 (cl=GENERAL_REGS, orig=151, freq=3, tfirst=301, tfreq=5)...
	   Assign 44 to inheritance r321 (freq=3)
	 Assigning to 296 (cl=GENERAL_REGS, orig=151, freq=2, tfirst=296, tfreq=3)...
	   Assign 5 to reload r296 (freq=2)
	Hard reg 37 is preferable by r319 with profit 1
	Hard reg 5 is preferable by r319 with profit 1
	 Assigning to 319 (cl=GENERAL_REGS, orig=151, freq=3, tfirst=296, tfreq=3)...
	   Assign 5 to inheritance r319 (freq=3)
	 Assigning to 310 (cl=GENERAL_REGS, orig=218, freq=3, tfirst=310, tfreq=3)...
	   Assign 1 to reload r310 (freq=3)
	 Assigning to 311 (cl=GENERAL_REGS, orig=222, freq=3, tfirst=311, tfreq=3)...
	   Assign 2 to reload r311 (freq=3)
	 Assigning to 312 (cl=GENERAL_REGS, orig=226, freq=3, tfirst=312, tfreq=3)...
	   Assign 2 to reload r312 (freq=3)
	 Assigning to 322 (cl=GENERAL_REGS, orig=151, freq=3, tfirst=322, tfreq=3)...
	   Assign 5 to inheritance r322 (freq=3)
	 Assigning to 297 (cl=GENERAL_REGS, orig=71, freq=2, tfirst=297, tfreq=2)...
	   Assign 5 to reload r297 (freq=2)
	 Assigning to 299 (cl=GENERAL_REGS, orig=151, freq=2, tfirst=299, tfreq=2)...
	   Assign 0 to reload r299 (freq=2)
	 Assigning to 313 (cl=GENERAL_REGS, orig=122, freq=2, tfirst=313, tfreq=2)...
	   Assign 0 to reload r313 (freq=2)
	 Assigning to 314 (cl=GENERAL_REGS, orig=151, freq=2, tfirst=314, tfreq=2)...
	   Assign 0 to reload r314 (freq=2)
	 Assigning to 300 (cl=SSE_REGS, orig=171, freq=99, tfirst=300, tfreq=99)...
	   Assign 21 to reload r300 (freq=99)
	 Assigning to 304 (cl=SSE_REGS, orig=304, freq=5, tfirst=304, tfreq=5)...
	   Assign 25 to reload r304 (freq=5)
	 Assigning to 307 (cl=SSE_REGS, orig=307, freq=5, tfirst=307, tfreq=5)...
	   Assign 26 to reload r307 (freq=5)
	 Assigning to 308 (cl=SSE_REGS, orig=308, freq=5, tfirst=308, tfreq=5)...
	   Assign 27 to reload r308 (freq=5)
	 Assigning to 309 (cl=SSE_REGS, orig=309, freq=5, tfirst=309, tfreq=5)...
	   Assign 28 to reload r309 (freq=5)
	 Assigning to 305 (cl=SSE_REGS, orig=190, freq=3, tfirst=305, tfreq=3)...
	   Assign 24 to reload r305 (freq=3)
	 Assigning to 306 (cl=SSE_REGS, orig=191, freq=3, tfirst=306, tfreq=3)...
	   Assign 22 to reload r306 (freq=3)
	 Assigning to 298 (cl=SSE_REGS, orig=131, freq=2, tfirst=298, tfreq=2)...
	   Assign 25 to reload r298 (freq=2)
	 Assigning to 302 (cl=SSE_REGS, orig=148, freq=2, tfirst=302, tfreq=2)...
	   Assign 26 to reload r302 (freq=2)
	Hard reg 26 is preferable by r303 with profit 1
	Improving inheritance for 320(5) and 321(44)...
	   Assign 44 to inheritance r321 (freq=3)
	Improving inheritance for 321(44) and 320(5)...
	   Assign 44 to inheritance r320 (freq=3)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 4 out of 4 (100.00%)

********** Local #2: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) m  (1) re {*movsi_internal}
  Slot 0 regnos (width = 4):	 151
  Slot 1 regnos (width = 8):	 131	 303	 122
  Slot 2 regnos (width = 4):	 71
  Slot 3 regnos (width = 8):	 147
  Slot 4 regnos (width = 4):	 149
Changing spilled pseudos to memory in insn #4
Changing spilled pseudos to memory in insn #6
Changing spilled pseudos to memory in insn #501
Changing spilled pseudos to memory in insn #461
Changing spilled pseudos to memory in insn #25
Changing spilled pseudos to memory in insn #32
Changing spilled pseudos to memory in insn #40
Changing spilled pseudos to memory in insn #462
Changing spilled pseudos to memory in insn #463
Changing spilled pseudos to memory in insn #464
Changing spilled pseudos to memory in insn #503
Changing spilled pseudos to memory in insn #468
Changing spilled pseudos to memory in insn #469
Changing spilled pseudos to memory in insn #209
Changing spilled pseudos to memory in insn #504
Changing spilled pseudos to memory in insn #242
Changing spilled pseudos to memory in insn #492
Changing spilled pseudos to memory in insn #243
Changing spilled pseudos to memory in insn #493
Changing spilled pseudos to memory in insn #18
Changing spilled pseudos to memory in insn #328
Changing spilled pseudos to memory in insn #329
Changing spilled pseudos to memory in insn #345
New elimination table:
Can eliminate 16 to 7 (offset=512, prev_offset=480)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=448, prev_offset=416)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 106
Updating elimination of equiv for reg 154
Updating elimination of equiv for reg 173
Updating elimination of equiv for reg 218
Updating elimination of equiv for reg 222
Updating elimination of equiv for reg 226
Updating elimination of equiv for reg 251

********** Local #3: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) p {*leadi}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 325:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 173:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 158:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 143:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 128:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 97:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 345:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 328:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 243:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 492:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=15,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=13,losers=2,rld_nregs=1
          alt=1,overall=18,losers=2 -- reject
          alt=2,overall=14,losers=2 -- reject
          alt=3,overall=14,losers=2 -- reject
          alt=4,overall=19,losers=2 -- reject
          alt=5,overall=20,losers=2 -- reject
          alt=7,overall=11,losers=1,rld_nregs=1
          alt=8,overall=19,losers=2 -- reject
          alt=9,overall=19,losers=2 -- reject
          alt=11,overall=1,losers=0,rld_nregs=0
	 Choosing alt 11 in insn 469:  (0) *x  (1) m {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 464:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 462:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=25,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 461:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can eliminate 16 to 7 (offset=512, prev_offset=512)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=448, prev_offset=448)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 106
Updating elimination of equiv for reg 154
Updating elimination of equiv for reg 173
Updating elimination of equiv for reg 218
Updating elimination of equiv for reg 222
Updating elimination of equiv for reg 226
Updating elimination of equiv for reg 251
changing reg in insn 15
changing reg in insn 450
changing reg in insn 231
changing reg in insn 235
changing reg in insn 195
changing reg in insn 16
changing reg in insn 451
changing reg in insn 80
changing reg in insn 82
changing reg in insn 107
changing reg in insn 110
changing reg in insn 208
changing reg in insn 176
changing reg in insn 161
changing reg in insn 146
changing reg in insn 131
changing reg in insn 107
changing reg in insn 219
changing reg in insn 226
changing reg in insn 225
changing reg in insn 222
changing reg in insn 221
changing reg in insn 254
changing reg in insn 271
changing reg in insn 268
changing reg in insn 257
changing reg in insn 440
changing reg in insn 256
changing reg in insn 427
changing reg in insn 291
changing reg in insn 260
changing reg in insn 257
changing reg in insn 441
changing reg in insn 272
changing reg in insn 282
changing reg in insn 271
changing reg in insn 428
changing reg in insn 272
changing reg in insn 276
changing reg in insn 284
changing reg in insn 313
changing reg in insn 287
changing reg in insn 243
changing reg in insn 413
changing reg in insn 13
changing reg in insn 405
changing reg in insn 332
changing reg in insn 333
changing reg in insn 20
changing reg in insn 414
changing reg in insn 19
changing reg in insn 18
changing reg in insn 324
changing reg in insn 14
changing reg in insn 208
changing reg in insn 209
changing reg in insn 363
changing reg in insn 231
changing reg in insn 219
changing reg in insn 214
changing reg in insn 213
changing reg in insn 306
changing reg in insn 431
changing reg in insn 247
changing reg in insn 415
changing reg in insn 74
changing reg in insn 406
changing reg in insn 411
changing reg in insn 5
changing reg in insn 416
changing reg in insn 407
changing reg in insn 69
changing reg in insn 62
changing reg in insn 7
changing reg in insn 408
changing reg in insn 412
changing reg in insn 9
changing reg in insn 417
changing reg in insn 409
changing reg in insn 229
changing reg in insn 217
changing reg in insn 198
changing reg in insn 180
changing reg in insn 165
changing reg in insn 150
changing reg in insn 135
changing reg in insn 120
changing reg in insn 11
changing reg in insn 24
changing reg in insn 44
changing reg in insn 28
changing reg in insn 40
changing reg in insn 43
changing reg in insn 43
changing reg in insn 51
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 49
changing reg in insn 72
changing reg in insn 74
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 100
changing reg in insn 117
changing reg in insn 166
changing reg in insn 151
changing reg in insn 136
changing reg in insn 121
changing reg in insn 127
changing reg in insn 125
changing reg in insn 127
changing reg in insn 128
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 126
changing reg in insn 142
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 140
changing reg in insn 141
changing reg in insn 142
changing reg in insn 141
changing reg in insn 137
changing reg in insn 157
changing reg in insn 155
changing reg in insn 157
changing reg in insn 158
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 156
changing reg in insn 152
changing reg in insn 172
changing reg in insn 170
changing reg in insn 172
changing reg in insn 173
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 171
changing reg in insn 167
changing reg in insn 187
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 185
changing reg in insn 186
changing reg in insn 187
changing reg in insn 186
changing reg in insn 182
changing reg in insn 195
changing reg in insn 198
changing reg in insn 199
changing reg in insn 198
changing reg in insn 199
changing reg in insn 214
changing reg in insn 217
changing reg in insn 218
changing reg in insn 217
changing reg in insn 218
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 229
changing reg in insn 230
changing reg in insn 245
changing reg in insn 247
changing reg in insn 261
changing reg in insn 261
changing reg in insn 261
changing reg in insn 262
changing reg in insn 261
changing reg in insn 269
changing reg in insn 269
changing reg in insn 270
changing reg in insn 270
changing reg in insn 270
changing reg in insn 271
changing reg in insn 270
changing reg in insn 291
changing reg in insn 292
changing reg in insn 324
changing reg in insn 325
changing reg in insn 372
changing reg in insn 418
changing reg in insn 97
changing reg in insn 102
changing reg in insn 371
changing reg in insn 410
changing reg in insn 413
changing reg in insn 419
changing reg in insn 337
changing reg in insn 452
changing reg in insn 337
changing reg in insn 333
changing reg in insn 332
changing reg in insn 414
changing reg in insn 420
changing reg in insn 334
changing reg in insn 453
changing reg in insn 338
changing reg in insn 336
changing reg in insn 334
changing reg in insn 325
changing reg in insn 343
changing reg in insn 415
changing reg in insn 421
changing reg in insn 454
changing reg in insn 416
changing reg in insn 422
changing reg in insn 455
changing reg in insn 338
changing reg in insn 417
changing reg in insn 423
changing reg in insn 456
changing reg in insn 418
changing reg in insn 424
changing reg in insn 457
changing reg in insn 330
changing reg in insn 374
changing reg in insn 458
changing reg in insn 373
changing reg in insn 459
changing reg in insn 450
changing reg in insn 438
changing reg in insn 296
changing reg in insn 425
changing reg in insn 296
changing reg in insn 291
changing reg in insn 451
changing reg in insn 439
changing reg in insn 295
changing reg in insn 426
changing reg in insn 256
changing reg in insn 254
changing reg in insn 277
changing reg in insn 276
changing reg in insn 284
changing reg in insn 282
changing reg in insn 282
changing reg in insn 298
changing reg in insn 295
changing reg in insn 292
changing reg in insn 306
changing reg in insn 313
changing reg in insn 291
changing reg in insn 452
changing reg in insn 442
changing reg in insn 429
changing reg in insn 419
changing reg in insn 453
changing reg in insn 443
changing reg in insn 430
changing reg in insn 420
changing reg in insn 454
changing reg in insn 444
changing reg in insn 432
changing reg in insn 421
changing reg in insn 298
changing reg in insn 455
changing reg in insn 445
changing reg in insn 433
changing reg in insn 422
changing reg in insn 261
changing reg in insn 261
changing reg in insn 272
changing reg in insn 270
changing reg in insn 270
changing reg in insn 456
changing reg in insn 446
changing reg in insn 434
changing reg in insn 423
changing reg in insn 277
changing reg in insn 457
changing reg in insn 447
changing reg in insn 435
changing reg in insn 424
changing reg in insn 276
changing reg in insn 284
changing reg in insn 313
changing reg in insn 458
changing reg in insn 448
changing reg in insn 436
changing reg in insn 256
changing reg in insn 292
changing reg in insn 291
changing reg in insn 459
changing reg in insn 449
changing reg in insn 437
changing reg in insn 254
changing reg in insn 425
changing reg in insn 438
changing reg in insn 426
changing reg in insn 439
changing reg in insn 427
changing reg in insn 440
changing reg in insn 428
changing reg in insn 309
changing reg in insn 441
changing reg in insn 309
changing reg in insn 309
changing reg in insn 429
changing reg in insn 442
changing reg in insn 430
changing reg in insn 443
changing reg in insn 431
changing reg in insn 309
changing reg in insn 309
changing reg in insn 432
changing reg in insn 444
changing reg in insn 433
changing reg in insn 445
changing reg in insn 434
changing reg in insn 446
changing reg in insn 435
changing reg in insn 447
changing reg in insn 436
changing reg in insn 448
changing reg in insn 437
changing reg in insn 449
changing reg in insn 405
changing reg in insn 86
changing reg in insn 87
changing reg in insn 86
changing reg in insn 83
changing reg in insn 77
changing reg in insn 82
changing reg in insn 406
changing reg in insn 87
changing reg in insn 407
changing reg in insn 411
changing reg in insn 408
changing reg in insn 77
changing reg in insn 409
changing reg in insn 412
changing reg in insn 410
changing reg in insn 83
changing reg in insn 82
deleting insn with uid = 470.
deleting insn with uid = 477.
deleting insn with uid = 480.
deleting insn with uid = 483.


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 6 failed.
Forwarding edge 6->7 to 40 failed.
Forwarding edge 18->19 to 6 failed.
Forwarding edge 22->23 to 6 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 331.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 60 count 48 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 60 count 45 (  1.1)


void tileswrap(int*, int, int, float*, int, int*, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={35d,40u,1e} r1={30d,38u,2e} r2={17d,23u,1e} r3={8d,19u} r4={12d,11u} r5={19d,17u} r6={8d,11u,1e} r7={1d,87u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1e} r17={48d,20u} r18={4d} r19={4d} r20={10e} r21={14d,15u} r22={11d,11u} r23={19d,15u} r24={22d,20u} r25={8d,3u} r26={8d,3u} r27={7d,2u} r28={7d,2u} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={8d,8u} r38={6d,2u} r39={8d,5u,1e} r40={8d,4u} r41={8d,8u} r42={9d,12u} r43={8d,16u} r44={11d,15u,2e} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 870{444d,407u,19e} in 311{307 regular + 4 call} insns.
(note 3 0 21 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 17 [flags] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	
(note 21 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 21 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:439 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 dx [ memory_size ])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ memory_size ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 42 r13 [orig:150 floats ] [150])
        (reg:DI 2 cx [ floats ])) tiles.cpp:439 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 8 7 501 2 (set (reg/v:SI 5 di [orig:151 num_floats ] [151])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 501 8 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])
        (reg/v:SI 5 di [orig:151 num_floats ] [151])) tiles.cpp:439 89 {*movsi_internal}
     (nil))
(insn 9 501 11 2 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg:DI 38 r9 [ wrap_widths ])) tiles.cpp:439 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ wrap_widths ])
        (nil)))
(insn 11 9 12 2 (set (reg/v:SI 0 ax [orig:154 num_ints ] [154])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 520 [0x208])) [0 num_ints+0 S4 A64])) tiles.cpp:439 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])
        (nil)))
(note 12 11 23 2 NOTE_INSN_FUNCTION_BEG)
(note 23 12 460 2 NOTE_INSN_DELETED)
(insn 460 23 24 2 (set (reg/v:SI 5 di [orig:151 num_floats ] [151])
        (reg/v:SI 5 di [orig:151 num_floats ] [151])) tiles.cpp:445 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:151 num_floats ] [151])
        (nil)))
(insn 24 460 461 2 (set (reg/v:SI 5 di [orig:71 num_coordinates ] [71])
        (plus:SI (plus:SI (reg/v:SI 5 di [orig:151 num_floats ] [151])
                (reg/v:SI 0 ax [orig:154 num_ints ] [154]))
            (const_int 1 [0x1]))) tiles.cpp:445 266 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:151 num_floats ] [151])
        (nil)))
(insn 461 24 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S4 A32])
        (reg/v:SI 5 di [orig:71 num_coordinates ] [71])) tiles.cpp:445 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:71 num_coordinates ] [71])
        (nil)))
(debug_insn 25 461 27 2 (var_location:SI num_coordinates (mem/c:SI (plus:DI (reg/f:DI 7 sp)
            (const_int 24 [0x18])) [0 %sfp+-8 S4 A32])) tiles.cpp:445 -1
     (nil))
(debug_insn 27 25 28 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 28 27 29 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 0 ax [orig:154 num_ints ] [154])
            (const_int 0 [0]))) tiles.cpp:447 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 29 28 55 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) tiles.cpp:447 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 37)
;;  succ:       5 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 42 [r13] 43 [r14]

;; basic block 3, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 55 29 30 3 145 "" [1 uses])
(note 30 55 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 32 31 33 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])
            (const_int 0 [0]))) tiles.cpp:450 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 33 32 377 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 67)
;;  succ:       8 [95.2%] 
;;              4 [4.8%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14]

;; basic block 4, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [4.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	
;; live  kill	
(note 377 33 378 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 378 377 379 4 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 43 [r14]

(barrier 379 378 37)
;; basic block 5, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 37 379 38 5 142 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 39 38 40 5 NOTE_INSN_DELETED)
(insn 40 39 41 5 (set (reg:DI 1 dx [orig:157 D.26221 ] [157])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32]))) tiles.cpp:447 149 {*extendsidi2_rex64}
     (nil))
(note 41 40 42 5 NOTE_INSN_DELETED)
(note 42 41 43 5 NOTE_INSN_DELETED)
(insn 43 42 44 5 (set (reg:DI 5 di [orig:160 D.26220 ] [160])
        (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:157 D.26221 ] [157])
                    (const_int 4 [0x4]))
                (reg/f:DI 7 sp))
            (const_int 276 [0x114]))) tiles.cpp:447 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:157 D.26221 ] [157])
        (nil)))
(insn 44 43 45 5 (set (reg:DI 0 ax [orig:161 D.26221 ] [161])
        (sign_extend:DI (reg/v:SI 0 ax [orig:154 num_ints ] [154]))) tiles.cpp:447 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:154 num_ints ] [154])
        (nil)))
(insn 45 44 49 5 (parallel [
            (set (reg:DI 1 dx [orig:162 D.26221 ] [162])
                (ashift:DI (reg:DI 0 ax [orig:161 D.26221 ] [161])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:447 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:161 D.26221 ] [161])
        (nil)))
(insn 49 45 50 5 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:162 D.26221 ] [162])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:162 D.26221 ] [162])
        (nil)))
(insn 50 49 51 5 (set (reg:DI 4 si)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 512 [0x200])) [0 ints+0 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 5 di [orig:160 D.26220 ] [160])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:160 D.26220 ] [160])
        (nil)))
(call_insn 52 51 380 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b67b90e9500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 380 52 381 5 (set (pc)
        (label_ref 55)) 650 {jump}
     (nil)
 -> 55)
;;  succ:       3 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14]

(barrier 381 380 59)
;; basic block 6, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;;              21 [25.0%] 
;;              4 [100.0%] 
;;              17 [100.0%] 
;;              23 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 59 381 60 6 144 "" [5 uses])
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 62 61 63 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
            (const_int 0 [0]))) tiles.cpp:457 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 63 62 382 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) tiles.cpp:457 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 240)
;;  succ:       24 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 43 [r14]

;; basic block 7, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 382 63 383 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 383 382 384 7 (set (pc)
        (label_ref 353)) 650 {jump}
     (nil)
 -> 353)
;;  succ:       40 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 384 383 67)
;; basic block 8, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 25 [xmm4] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 25 [xmm4] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 67 384 68 8 143 "" [1 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 462 8 (set (reg:SF 25 xmm4 [orig:131 D.26217 ] [131])
        (float:SF (reg/v:SI 3 bx [orig:148 num_tilings ] [148]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 462 69 71 8 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A64])
        (reg:SF 25 xmm4 [orig:131 D.26217 ] [131])) 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 25 xmm4 [orig:131 D.26217 ] [131])
        (nil)))
(note 71 462 463 8 NOTE_INSN_DELETED)
(insn 463 71 72 8 (set (reg/v:SI 0 ax [orig:151 num_floats ] [151])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) 89 {*movsi_internal}
     (nil))
(insn 72 463 73 8 (set (reg:DI 0 ax [orig:169 D.26221 ] [169])
        (zero_extend:DI (plus:SI (reg/v:SI 0 ax [orig:151 num_floats ] [151])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:151 num_floats ] [151])
        (nil)))
(note 73 72 74 8 NOTE_INSN_DELETED)
(insn 74 73 13 8 (set (reg:DI 41 r12 [orig:146 D.26221 ] [146])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:169 D.26221 ] [169])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:169 D.26221 ] [169])
        (nil)))
(insn 13 74 371 8 (set (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])
        (const_int 0 [0])) tiles.cpp:450 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 371 13 405 8 (set (reg/f:DI 6 bp [258])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))
        (nil)))
(insn 405 371 406 8 (set (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])
        (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])
        (nil)))
(insn 406 405 407 8 (set (reg:DI 41 r12 [orig:146 D.26221 ] [146])
        (reg:DI 41 r12 [orig:146 D.26221 ] [146])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:146 D.26221 ] [146])
        (nil)))
(insn 407 406 408 8 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (nil)))
(insn 408 407 409 8 (set (reg/v/f:DI 42 r13 [orig:150 floats ] [150])
        (reg/v/f:DI 42 r13 [orig:150 floats ] [150])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:150 floats ] [150])
        (nil)))
(insn 409 408 410 8 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (nil)))
(insn 410 409 90 8 (set (reg/f:DI 6 bp [258])
        (reg/f:DI 6 bp [258])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [258])
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 330, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [95.2%]  (DFS_BACK)
;;              8 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 21 [xmm0] 44 [r15]
;; live  kill	 17 [flags]
(code_label 90 410 75 9 149 "" [1 uses])
(note 75 90 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 464 9 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 464 76 77 9 (set (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A64])) tiles.cpp:451 135 {*movsf_internal}
     (nil))
(insn 77 464 465 9 (set (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])
        (mult:SF (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])
            (mem:SF (plus:DI (reg/v/f:DI 42 r13 [orig:150 floats ] [150])
                    (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])) [0 MEM[base: floats_29(D), index: ivtmp.261_79, offset: 0B]+0 S4 A32]))) tiles.cpp:451 777 {*fop_sf_comm_sse}
     (nil))
(insn 465 77 78 9 (set (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])
        (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])) tiles.cpp:451 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])
        (nil)))
(insn 78 465 79 9 (set (reg:SF 21 xmm0)
        (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])) tiles.cpp:451 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:171 D.26217 ] [171])
        (nil)))
(call_insn/u 79 78 80 9 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b67b7876a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:451 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 80 79 82 9 (set (reg:SF 21 xmm0 [orig:75 D.26217 ] [75])
        (reg:SF 21 xmm0)) tiles.cpp:451 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 82 80 83 9 (set (reg:SI 0 ax [173])
        (fix:SI (reg:SF 21 xmm0 [orig:75 D.26217 ] [75]))) tiles.cpp:451 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:75 D.26217 ] [75])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 6 bp [258])
                    (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])) [0 MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B]+0 S4 A32])
            (nil))))
(insn 83 82 85 9 (set (mem:SI (plus:DI (reg/f:DI 6 bp [258])
                (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])) [0 MEM[symbol: qstate, index: ivtmp.261_79, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [173])) tiles.cpp:451 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [173])
        (nil)))
(debug_insn 85 83 86 9 (var_location:SI i (debug_expr:SI D#14)) -1
     (nil))
(insn 86 85 87 9 (parallel [
            (set (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])
                (plus:DI (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 87 86 88 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 44 r15 [orig:104 ivtmp.261 ] [104])
            (reg:DI 41 r12 [orig:146 D.26221 ] [146]))) tiles.cpp:450 8 {*cmpdi_1}
     (nil))
(jump_insn 88 87 94 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 90)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 90)
;;  succ:       9 [95.2%]  (DFS_BACK)
;;              10 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 94 88 411 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 411 94 412 10 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (nil)))
(insn 412 411 503 10 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (nil)))
(insn 503 412 95 10 (set (reg/v:SI 44 r15 [orig:151 num_floats ] [151])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) tiles.cpp:452 89 {*movsi_internal}
     (nil))
(insn 95 503 96 10 (set (reg:DI 1 dx [orig:174 D.26221 ] [174])
        (sign_extend:DI (reg/v:SI 44 r15 [orig:151 num_floats ] [151]))) tiles.cpp:452 149 {*extendsidi2_rex64}
     (nil))
(insn 96 95 97 10 (parallel [
            (set (reg:DI 1 dx [orig:175 D.26221 ] [175])
                (ashift:DI (reg:DI 1 dx [orig:174 D.26221 ] [174])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:452 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:174 D.26221 ] [174])
        (nil)))
(insn 97 96 100 10 (parallel [
            (set (reg/f:DI 5 di [257])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 100 97 101 10 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:175 D.26221 ] [175])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:175 D.26221 ] [175])
        (nil)))
(insn 101 100 102 10 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 102 101 103 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [257])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0]))
            (nil))))
(call_insn 103 102 502 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b67b90e9600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 502 103 466 10 (set (reg/v:SI 44 r15 [orig:151 num_floats ] [151])
        (reg/v:SI 44 r15 [orig:151 num_floats ] [151])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:151 num_floats ] [151])
        (nil)))
(insn 466 502 106 10 (set (reg:SI 1 dx [orig:80 bnd.218 ] [80])
        (reg/v:SI 44 r15 [orig:151 num_floats ] [151])) 89 {*movsi_internal}
     (nil))
(insn 106 466 467 10 (parallel [
            (set (reg:SI 1 dx [orig:80 bnd.218 ] [80])
                (lshiftrt:SI (reg:SI 1 dx [orig:80 bnd.218 ] [80])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 545 {*lshrsi3_1}
     (nil))
(insn 467 106 107 10 (set (reg:SI 1 dx [orig:80 bnd.218 ] [80])
        (reg:SI 1 dx [orig:80 bnd.218 ] [80])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:80 bnd.218 ] [80])
        (nil)))
(insn 107 467 108 10 (parallel [
            (set (reg:SI 0 ax [orig:79 ratio_mult_vf.219 ] [79])
                (ashift:SI (reg:SI 1 dx [orig:80 bnd.218 ] [80])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashlsi3_1}
     (nil))
(note 108 107 109 10 NOTE_INSN_DELETED)
(note 109 108 110 10 NOTE_INSN_DELETED)
(insn 110 109 111 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:79 ratio_mult_vf.219 ] [79])
            (const_int 0 [0]))) 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 111 110 362 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 359)
;;  succ:       20 [33.3%] 
;;              11 [66.7%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [66.7%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 362 111 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 112 362 113 11 NOTE_INSN_DELETED)
(note 113 112 114 11 NOTE_INSN_DELETED)
(insn 114 113 115 11 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 44 r15 [orig:151 num_floats ] [151])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:151 num_floats ] [151])
        (nil)))
(jump_insn 115 114 116 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 359)
;;  succ:       12 [66.7%]  (FALLTHRU)
;;              20 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14]

;; basic block 12, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [66.7%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5]
;; live  kill	
(note 116 115 468 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 468 116 469 12 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A64])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (nil))
(insn 469 468 117 12 (set (reg/v:SI 26 xmm5 [orig:148 num_tilings ] [148])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A64])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 303)
        (nil)))
(insn 117 469 119 12 (set (reg:V4SI 21 xmm0 [185])
        (vec_duplicate:V4SI (reg/v:SI 26 xmm5 [orig:148 num_tilings ] [148]))) 1643 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg/v:SI 26 xmm5 [orig:148 num_tilings ] [148])
        (nil)))
(debug_insn 119 117 120 12 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 120 119 471 12 (set (reg:V16QI 22 xmm1 [orig:186 vect_var_.225 ] [186])
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 471 120 121 12 (set (reg:V4SI 25 xmm4 [304])
        (reg:V4SI 22 xmm1 [orig:186 vect_var_.225 ] [186])) tiles.cpp:453 1142 {*movv4si_internal}
     (nil))
(insn 121 471 472 12 (set (reg:V2DI 25 xmm4 [304])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 25 xmm4 [304])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [185])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 472 121 473 12 (set (reg:V2DI 23 xmm2 [188])
        (reg:V2DI 25 xmm4 [304])) tiles.cpp:453 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 25 xmm4 [304])
        (nil)))
(insn 473 472 122 12 (set (reg:V2DI 24 xmm3 [190])
        (reg:V2DI 22 xmm1 [orig:186 vect_var_.225 ] [186])) tiles.cpp:453 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [orig:186 vect_var_.225 ] [186])
        (nil)))
(insn 122 473 474 12 (set (reg:V2DI 24 xmm3 [190])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [190])
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (nil))
(insn 474 122 475 12 (set (reg:V2DI 24 xmm3 [190])
        (reg:V2DI 24 xmm3 [190])) tiles.cpp:453 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [190])
        (nil)))
(insn 475 474 123 12 (set (reg:V2DI 22 xmm1 [191])
        (reg:V2DI 21 xmm0 [185])) tiles.cpp:453 1144 {*movv2di_internal}
     (nil))
(insn 123 475 476 12 (set (reg:V2DI 22 xmm1 [191])
        (lshiftrt:V2DI (reg:V2DI 22 xmm1 [191])
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (nil))
(insn 476 123 124 12 (set (reg:V2DI 22 xmm1 [191])
        (reg:V2DI 22 xmm1 [191])) tiles.cpp:453 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [191])
        (nil)))
(insn 124 476 125 12 (set (reg:V2DI 24 xmm3 [189])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [190])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [191])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [190])
        (nil)))
(insn 125 124 126 12 (set (reg:V4SI 23 xmm2 [orig:187 vect_var_.226 ] [187])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [188])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [188])
        (nil)))
(insn 126 125 127 12 (set (reg:V4SI 24 xmm3 [189])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [189])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 127 126 128 12 (set (reg:V4SI 23 xmm2 [orig:187 vect_var_.226 ] [187])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:187 vect_var_.226 ] [187])
                (reg:V4SI 24 xmm3 [189]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [189])
        (nil)))
(insn 128 127 130 12 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:187 vect_var_.226 ] [187])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:187 vect_var_.226 ] [187])
        (nil)))
(debug_insn 130 128 131 12 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 131 130 132 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:80 bnd.218 ] [80])
            (const_int 1 [0x1]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 132 131 133 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       13 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]

;; basic block 13, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [66.7%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  def 	 17 [flags] 23 [xmm2] 24 [xmm3] 26 [xmm5]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  gen 	 17 [flags] 23 [xmm2] 24 [xmm3] 26 [xmm5]
;; live  kill	
(note 133 132 134 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 134 133 135 13 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 135 134 478 13 (set (reg:V16QI 24 xmm3 [orig:192 vect_var_.225 ] [192])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 478 135 136 13 (set (reg:V4SI 26 xmm5 [307])
        (reg:V4SI 24 xmm3 [orig:192 vect_var_.225 ] [192])) tiles.cpp:453 1142 {*movv4si_internal}
     (nil))
(insn 136 478 479 13 (set (reg:V2DI 26 xmm5 [307])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [307])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [185])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 479 136 137 13 (set (reg:V2DI 23 xmm2 [194])
        (reg:V2DI 26 xmm5 [307])) tiles.cpp:453 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 26 xmm5 [307])
        (nil)))
(insn 137 479 139 13 (set (reg:V2DI 24 xmm3 [196])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [orig:192 vect_var_.225 ] [192])
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:192 vect_var_.225 ] [192])
        (nil)))
(insn 139 137 140 13 (set (reg:V2DI 24 xmm3 [195])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [196])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [191])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [196])
        (nil)))
(insn 140 139 141 13 (set (reg:V4SI 23 xmm2 [orig:193 vect_var_.226 ] [193])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [194])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [194])
        (nil)))
(insn 141 140 142 13 (set (reg:V4SI 24 xmm3 [195])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [195])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 142 141 143 13 (set (reg:V4SI 23 xmm2 [orig:193 vect_var_.226 ] [193])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:193 vect_var_.226 ] [193])
                (reg:V4SI 24 xmm3 [195]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [195])
        (nil)))
(insn 143 142 145 13 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:193 vect_var_.226 ] [193])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:193 vect_var_.226 ] [193])
        (nil)))
(debug_insn 145 143 146 13 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 146 145 147 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:80 bnd.218 ] [80])
            (const_int 2 [0x2]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 147 146 148 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       14 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]

;; basic block 14, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [66.7%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  def 	 17 [flags] 23 [xmm2] 24 [xmm3] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  gen 	 17 [flags] 23 [xmm2] 24 [xmm3] 27 [xmm6]
;; live  kill	
(note 148 147 149 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 14 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 150 149 481 14 (set (reg:V16QI 24 xmm3 [orig:198 vect_var_.225 ] [198])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 481 150 151 14 (set (reg:V4SI 27 xmm6 [308])
        (reg:V4SI 24 xmm3 [orig:198 vect_var_.225 ] [198])) tiles.cpp:453 1142 {*movv4si_internal}
     (nil))
(insn 151 481 482 14 (set (reg:V2DI 27 xmm6 [308])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 27 xmm6 [308])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [185])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 482 151 152 14 (set (reg:V2DI 23 xmm2 [200])
        (reg:V2DI 27 xmm6 [308])) tiles.cpp:453 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 27 xmm6 [308])
        (nil)))
(insn 152 482 154 14 (set (reg:V2DI 24 xmm3 [202])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [orig:198 vect_var_.225 ] [198])
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:198 vect_var_.225 ] [198])
        (nil)))
(insn 154 152 155 14 (set (reg:V2DI 24 xmm3 [201])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [202])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [191])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [202])
        (nil)))
(insn 155 154 156 14 (set (reg:V4SI 23 xmm2 [orig:199 vect_var_.226 ] [199])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [200])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [200])
        (nil)))
(insn 156 155 157 14 (set (reg:V4SI 24 xmm3 [201])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [201])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 157 156 158 14 (set (reg:V4SI 23 xmm2 [orig:199 vect_var_.226 ] [199])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:199 vect_var_.226 ] [199])
                (reg:V4SI 24 xmm3 [201]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [201])
        (nil)))
(insn 158 157 160 14 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:199 vect_var_.226 ] [199])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:199 vect_var_.226 ] [199])
        (nil)))
(debug_insn 160 158 161 14 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 161 160 162 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:80 bnd.218 ] [80])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 162 161 163 14 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       15 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]

;; basic block 15, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [66.7%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  def 	 17 [flags] 23 [xmm2] 24 [xmm3] 28 [xmm7]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  gen 	 17 [flags] 23 [xmm2] 24 [xmm3] 28 [xmm7]
;; live  kill	
(note 163 162 164 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 164 163 165 15 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 165 164 484 15 (set (reg:V16QI 24 xmm3 [orig:204 vect_var_.225 ] [204])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 484 165 166 15 (set (reg:V4SI 28 xmm7 [309])
        (reg:V4SI 24 xmm3 [orig:204 vect_var_.225 ] [204])) tiles.cpp:453 1142 {*movv4si_internal}
     (nil))
(insn 166 484 485 15 (set (reg:V2DI 28 xmm7 [309])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 28 xmm7 [309])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [185])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 485 166 167 15 (set (reg:V2DI 23 xmm2 [206])
        (reg:V2DI 28 xmm7 [309])) tiles.cpp:453 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 28 xmm7 [309])
        (nil)))
(insn 167 485 169 15 (set (reg:V2DI 24 xmm3 [208])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [orig:204 vect_var_.225 ] [204])
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:204 vect_var_.225 ] [204])
        (nil)))
(insn 169 167 170 15 (set (reg:V2DI 24 xmm3 [207])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [208])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [191])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [208])
        (nil)))
(insn 170 169 171 15 (set (reg:V4SI 23 xmm2 [orig:205 vect_var_.226 ] [205])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [206])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [206])
        (nil)))
(insn 171 170 172 15 (set (reg:V4SI 24 xmm3 [207])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [207])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 172 171 173 15 (set (reg:V4SI 23 xmm2 [orig:205 vect_var_.226 ] [205])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:205 vect_var_.226 ] [205])
                (reg:V4SI 24 xmm3 [207]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [207])
        (nil)))
(insn 173 172 175 15 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:205 vect_var_.226 ] [205])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:205 vect_var_.226 ] [205])
        (nil)))
(debug_insn 175 173 176 15 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(insn 176 175 177 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:80 bnd.218 ] [80])
            (const_int 4 [0x4]))) 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:80 bnd.218 ] [80])
        (nil)))
(jump_insn 177 176 178 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       16 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]

;; basic block 16, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [66.7%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  use 	 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; lr  def 	 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  gen 	 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  kill	
(note 178 177 179 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 179 178 180 16 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 180 179 181 16 (set (reg:V16QI 23 xmm2 [orig:210 vect_var_.225 ] [210])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:453 1162 {sse2_loaddqu}
     (nil))
(insn 181 180 182 16 (set (reg:V2DI 21 xmm0 [212])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [185])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [orig:210 vect_var_.225 ] [210])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [185])
        (nil)))
(insn 182 181 184 16 (set (reg:V2DI 23 xmm2 [214])
        (lshiftrt:V2DI (reg:V2DI 23 xmm2 [orig:210 vect_var_.225 ] [210])
            (const_int 32 [0x20]))) tiles.cpp:453 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:210 vect_var_.225 ] [210])
        (nil)))
(insn 184 182 185 16 (set (reg:V2DI 22 xmm1 [213])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [191])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [214])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:453 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 23 xmm2 [214])
        (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [191])
            (nil))))
(insn 185 184 186 16 (set (reg:V4SI 21 xmm0 [orig:211 vect_var_.226 ] [211])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [212])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [212])
        (nil)))
(insn 186 185 187 16 (set (reg:V4SI 22 xmm1 [213])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [213])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:453 1631 {sse2_pshufd_1}
     (nil))
(insn 187 186 188 16 (set (reg:V4SI 21 xmm0 [orig:211 vect_var_.226 ] [211])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [orig:211 vect_var_.226 ] [211])
                (reg:V4SI 22 xmm1 [213]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:453 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [213])
        (nil)))
(insn 188 187 190 16 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 21 xmm0 [orig:211 vect_var_.226 ] [211])) tiles.cpp:453 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [orig:211 vect_var_.226 ] [211])
        (nil)))
(debug_insn 190 188 385 16 (var_location:SI i (debug_expr:SI D#12)) -1
     (nil))
(jump_insn 385 190 386 16 (set (pc)
        (label_ref 206)) 650 {jump}
     (nil)
 -> 206)
;;  succ:       18 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]

(barrier 386 385 234)
;; basic block 17, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [75.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 234 386 193 17 153 "" [1 uses])
(note 193 234 194 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 17 (var_location:SI i (debug_expr:SI D#16)) -1
     (nil))
(insn 195 194 197 17 (set (reg:DI 0 ax [orig:216 i ] [216])
        (sign_extend:DI (reg/v:SI 0 ax [orig:66 i ] [66]))) tiles.cpp:453 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:66 i ] [66])
        (nil)))
(note 197 195 486 17 NOTE_INSN_DELETED)
(insn 486 197 198 17 (set (reg:SI 1 dx [orig:218 D.26216 ] [218])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) tiles.cpp:453 89 {*movsi_internal}
     (nil))
(insn 198 486 487 17 (parallel [
            (set (reg:SI 1 dx [orig:218 D.26216 ] [218])
                (mult:SI (reg:SI 1 dx [orig:218 D.26216 ] [218])
                    (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:216 i ] [216])
                                (const_int 4 [0x4]))
                            (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) [0 *_152+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 344 {*mulsi3_1}
     (expr_list:REG_EQUIV (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:216 i ] [216])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (nil)))
(insn 487 198 199 17 (set (reg:SI 1 dx [orig:218 D.26216 ] [218])
        (reg:SI 1 dx [orig:218 D.26216 ] [218])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:218 D.26216 ] [218])
        (nil)))
(insn 199 487 200 17 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:216 i ] [216])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 1 dx [orig:218 D.26216 ] [218])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:218 D.26216 ] [218])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:216 i ] [216])
            (nil))))
(debug_insn 200 199 202 17 (var_location:SI D#15 (plus:SI (debug_expr:SI D#16)
        (const_int 1 [0x1]))) tiles.cpp:450 -1
     (nil))
(debug_insn 202 200 387 17 (var_location:SI i (debug_expr:SI D#15)) -1
     (nil))
(jump_insn 387 202 388 17 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 43 [r14]

(barrier 388 387 206)
;; basic block 18, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [33.3%] 
;;              12 [33.3%] 
;;              13 [33.3%] 
;;              14 [33.3%] 
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 206 388 207 18 151 "" [5 uses])
(note 207 206 208 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 18 (set (reg/v:SI 0 ax [orig:114 i ] [114])
        (reg:SI 0 ax [orig:79 ratio_mult_vf.219 ] [79])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:79 ratio_mult_vf.219 ] [79])
        (nil)))
(insn 209 208 210 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:114 i ] [114])
            (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 210 209 389 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 211)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 6666 [0x1a0a])
        (nil))
 -> 211)
;;  succ:       21 [66.7%] 
;;              19 [33.3%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]

;; basic block 19, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 [33.3%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	
;; live  kill	
(note 389 210 390 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 390 389 391 19 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 43 [r14]

(barrier 391 390 359)
;; basic block 20, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [33.3%] 
;;              10 [33.3%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 359 391 358 20 165 "" [2 uses])
(note 358 359 14 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 14 358 211 20 (set (reg/v:SI 0 ax [orig:114 i ] [114])
        (const_int 0 [0])) tiles.cpp:452 89 {*movsi_internal}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]

;; basic block 21, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              18 [66.7%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 2 [cx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 211 14 212 21 150 "" [1 uses])
(note 212 211 213 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 21 (var_location:SI i (reg/v:SI 0 ax [orig:114 i ] [114])) -1
     (nil))
(insn 214 213 216 21 (set (reg:DI 1 dx [orig:220 i ] [220])
        (sign_extend:DI (reg/v:SI 0 ax [orig:114 i ] [114]))) tiles.cpp:453 149 {*extendsidi2_rex64}
     (nil))
(note 216 214 488 21 NOTE_INSN_DELETED)
(insn 488 216 217 21 (set (reg:SI 2 cx [orig:222 D.26216 ] [222])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) tiles.cpp:453 89 {*movsi_internal}
     (nil))
(insn 217 488 489 21 (parallel [
            (set (reg:SI 2 cx [orig:222 D.26216 ] [222])
                (mult:SI (reg:SI 2 cx [orig:222 D.26216 ] [222])
                    (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:220 i ] [220])
                                (const_int 4 [0x4]))
                            (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) [0 *_109+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 344 {*mulsi3_1}
     (expr_list:REG_EQUIV (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:220 i ] [220])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (nil)))
(insn 489 217 218 21 (set (reg:SI 2 cx [orig:222 D.26216 ] [222])
        (reg:SI 2 cx [orig:222 D.26216 ] [222])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:222 D.26216 ] [222])
        (nil)))
(insn 218 489 219 21 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:220 i ] [220])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 2 cx [orig:222 D.26216 ] [222])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:222 D.26216 ] [222])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:220 i ] [220])
            (nil))))
(insn 219 218 221 21 (parallel [
            (set (reg/v:SI 1 dx [orig:81 i ] [81])
                (plus:SI (reg/v:SI 0 ax [orig:114 i ] [114])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 273 {*addsi_1}
     (nil))
(debug_insn 221 219 504 21 (var_location:SI i (reg/v:SI 1 dx [orig:81 i ] [81])) -1
     (nil))
(insn 504 221 222 21 (set (reg/v:SI 5 di [orig:151 num_floats ] [151])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) tiles.cpp:450 89 {*movsi_internal}
     (nil))
(insn 222 504 223 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 5 di [orig:151 num_floats ] [151])
            (reg/v:SI 1 dx [orig:81 i ] [81]))) tiles.cpp:450 7 {*cmpsi_1}
     (nil))
(jump_insn 223 222 224 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil))
 -> 59)
;;  succ:       22 [75.0%]  (FALLTHRU)
;;              6 [25.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 43 [r14]

;; basic block 22, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [75.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(note 224 223 225 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 22 (var_location:SI i (reg/v:SI 1 dx [orig:81 i ] [81])) -1
     (nil))
(insn 226 225 228 22 (set (reg:DI 1 dx [orig:224 i ] [224])
        (sign_extend:DI (reg/v:SI 1 dx [orig:81 i ] [81]))) tiles.cpp:453 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:81 i ] [81])
        (nil)))
(note 228 226 490 22 NOTE_INSN_DELETED)
(insn 490 228 229 22 (set (reg:SI 2 cx [orig:226 D.26216 ] [226])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) tiles.cpp:453 89 {*movsi_internal}
     (nil))
(insn 229 490 491 22 (parallel [
            (set (reg:SI 2 cx [orig:226 D.26216 ] [226])
                (mult:SI (reg:SI 2 cx [orig:226 D.26216 ] [226])
                    (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:224 i ] [224])
                                (const_int 4 [0x4]))
                            (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) [0 *_33+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:453 344 {*mulsi3_1}
     (expr_list:REG_EQUIV (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:224 i ] [224])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (nil)))
(insn 491 229 230 22 (set (reg:SI 2 cx [orig:226 D.26216 ] [226])
        (reg:SI 2 cx [orig:226 D.26216 ] [226])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:226 D.26216 ] [226])
        (nil)))
(insn 230 491 363 22 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:224 i ] [224])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 2 cx [orig:226 D.26216 ] [226])) tiles.cpp:453 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:226 D.26216 ] [226])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:224 i ] [224])
            (nil))))
(debug_insn 363 230 231 22 (var_location:SI D#16 (plus:SI (reg/v:SI 0 ax [orig:114 i ] [114])
        (const_int 2 [0x2]))) -1
     (nil))
(insn 231 363 233 22 (parallel [
            (set (reg/v:SI 0 ax [orig:66 i ] [66])
                (plus:SI (reg/v:SI 0 ax [orig:114 i ] [114])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:450 273 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:114 i ] [114])
        (nil)))
(debug_insn 233 231 235 22 (var_location:SI i (debug_expr:SI D#16)) -1
     (nil))
(insn 235 233 236 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 0 ax [orig:66 i ] [66])
            (reg/v:SI 5 di [orig:151 num_floats ] [151]))) tiles.cpp:450 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:151 num_floats ] [151])
        (nil)))
(jump_insn 236 235 392 22 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:450 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
        (nil))
 -> 234)
;;  succ:       17 [75.0%] 
;;              23 [25.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14]

;; basic block 23, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 [25.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	
;; live  kill	
(note 392 236 393 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 393 392 394 23 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 43 [r14]

(barrier 394 393 240)
;; basic block 24, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 240 394 241 24 146 "" [1 uses])
(note 241 240 242 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 492 24 (set (reg:DI 0 ax [orig:122 D.26224 ] [122])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 28 [0x1c])) [0 %sfp+-4 S4 A32]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 149 [ memory_size ])
        (nil)))
(insn 492 242 243 24 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S8 A64])
        (reg:DI 0 ax [orig:122 D.26224 ] [122])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:122 D.26224 ] [122])
        (nil)))
(insn 243 492 244 24 (set (reg:DI 38 r9 [orig:94 ivtmp.255 ] [94])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 147 [ the_tiles ])
        (nil)))
(note 244 243 493 24 NOTE_INSN_DELETED)
(insn 493 244 245 24 (set (reg/v:SI 0 ax [orig:151 num_floats ] [151])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) 89 {*movsi_internal}
     (nil))
(insn 245 493 246 24 (set (reg:DI 0 ax [orig:229 D.26221 ] [229])
        (zero_extend:DI (plus:SI (reg/v:SI 0 ax [orig:151 num_floats ] [151])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:151 num_floats ] [151])
        (nil)))
(note 246 245 247 24 NOTE_INSN_DELETED)
(insn 247 246 20 24 (set (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:229 D.26221 ] [229])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:229 D.26221 ] [229])
        (nil)))
(insn 20 247 372 24 (set (reg/v:SI 42 r13 [orig:107 j ] [107])
        (const_int 0 [0])) tiles.cpp:457 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 372 20 413 24 (set (reg/f:DI 6 bp [256])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 272 [0x110]))) 267 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 413 372 414 24 (set (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (reg:DI 38 r9 [orig:94 ivtmp.255 ] [94])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [orig:94 ivtmp.255 ] [94])
        (nil)))
(insn 414 413 415 24 (set (reg/v:SI 42 r13 [orig:107 j ] [107])
        (reg/v:SI 42 r13 [orig:107 j ] [107])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:107 j ] [107])
        (nil)))
(insn 415 414 416 24 (set (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (reg:DI 41 r12 [orig:144 D.26221 ] [144])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (nil)))
(insn 416 415 417 24 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (nil)))
(insn 417 416 418 24 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (nil)))
(insn 418 417 395 24 (set (reg/f:DI 6 bp [256])
        (reg/f:DI 6 bp [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [256])
        (nil)))
(jump_insn 395 418 396 24 (set (pc)
        (label_ref 341)) 650 {jump}
     (nil)
 -> 341)
;;  succ:       38 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 396 395 348)
;; basic block 25, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [95.2%]  (DFS_BACK)
;;              39 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 39 [r10] 40 [r11]
;; lr  def 	 4 [si] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(code_label 348 396 251 25 164 "" [2 uses])
(note 251 348 252 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(debug_insn 252 251 254 25 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 254 252 256 25 (set (reg:SI 37 r8 [orig:83 D.26216 ] [83])
        (mem:SI (plus:DI (reg/f:DI 40 r11 [258])
                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[symbol: qstate, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 89 {*movsi_internal}
     (nil))
(insn 256 254 257 25 (set (reg:SI 4 si [orig:84 D.26216 ] [84])
        (mem:SI (plus:DI (reg/f:DI 39 r10 [257])
                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) tiles.cpp:463 89 {*movsi_internal}
     (nil))
(insn 257 256 258 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 37 r8 [orig:83 D.26216 ] [83])
            (reg:SI 4 si [orig:84 D.26216 ] [84]))) tiles.cpp:463 7 {*cmpsi_1}
     (nil))
(jump_insn 258 257 259 25 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) tiles.cpp:463 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 265)
;;  succ:       26 [50.0%]  (FALLTHRU)
;;              27 [50.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 26, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [50.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 37 [r8]
;; live  kill	 17 [flags]
(note 259 258 494 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 494 259 260 26 (set (reg:SI 0 ax [orig:233 D.26216 ] [233])
        (reg:SI 37 r8 [orig:83 D.26216 ] [83])) tiles.cpp:464 89 {*movsi_internal}
     (nil))
(insn 260 494 495 26 (parallel [
            (set (reg:SI 0 ax [orig:233 D.26216 ] [233])
                (minus:SI (reg:SI 0 ax [orig:233 D.26216 ] [233])
                    (reg:SI 4 si [orig:84 D.26216 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 309 {*subsi_1}
     (nil))
(insn 495 260 261 26 (set (reg:SI 0 ax [orig:233 D.26216 ] [233])
        (reg:SI 0 ax [orig:233 D.26216 ] [233])) tiles.cpp:464 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:233 D.26216 ] [233])
        (nil)))
(insn 261 495 496 26 (parallel [
            (set (reg:SI 0 ax [236])
                (div:SI (reg:SI 0 ax [orig:233 D.26216 ] [233])
                    (reg/v:SI 3 bx [orig:148 num_tilings ] [148])))
            (set (reg:SI 1 dx [orig:235 D.26216 ] [235])
                (mod:SI (reg:SI 0 ax [orig:233 D.26216 ] [233])
                    (reg/v:SI 3 bx [orig:148 num_tilings ] [148])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:233 D.26216 ] [233])
        (expr_list:REG_UNUSED (reg:SI 0 ax [236])
            (nil))))
(insn 496 261 262 26 (set (reg:SI 37 r8 [orig:93 D.26216 ] [93])
        (reg:SI 37 r8 [orig:83 D.26216 ] [83])) tiles.cpp:464 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:83 D.26216 ] [83])
        (nil)))
(insn 262 496 497 26 (parallel [
            (set (reg:SI 37 r8 [orig:93 D.26216 ] [93])
                (minus:SI (reg:SI 37 r8 [orig:93 D.26216 ] [93])
                    (reg:SI 1 dx [orig:235 D.26216 ] [235])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:464 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:235 D.26216 ] [235])
        (nil)))
(insn 497 262 397 26 (set (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (reg:SI 37 r8 [orig:93 D.26216 ] [93])) tiles.cpp:464 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:93 D.26216 ] [93])
        (nil)))
(jump_insn 397 497 398 26 (set (pc)
        (label_ref 273)) 650 {jump}
     (nil)
 -> 273)
;;  succ:       28 [100.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 398 397 265)
;; basic block 27, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 265 398 266 27 155 "" [1 uses])
(note 266 265 267 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(note 267 266 498 27 NOTE_INSN_DELETED)
(insn 498 267 268 27 (set (reg:SI 0 ax [orig:238 D.26216 ] [238])
        (reg:SI 4 si [orig:84 D.26216 ] [84])) tiles.cpp:466 89 {*movsi_internal}
     (nil))
(insn 268 498 499 27 (parallel [
            (set (reg:SI 0 ax [orig:238 D.26216 ] [238])
                (minus:SI (reg:SI 0 ax [orig:238 D.26216 ] [238])
                    (reg:SI 37 r8 [orig:83 D.26216 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 309 {*subsi_1}
     (nil))
(insn 499 268 269 27 (set (reg:SI 0 ax [orig:238 D.26216 ] [238])
        (reg:SI 0 ax [orig:238 D.26216 ] [238])) tiles.cpp:466 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:238 D.26216 ] [238])
        (nil)))
(insn 269 499 270 27 (parallel [
            (set (reg:SI 0 ax [orig:239 D.26216 ] [239])
                (plus:SI (reg:SI 0 ax [orig:238 D.26216 ] [238])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:238 D.26216 ] [238])
        (nil)))
(insn 270 269 271 27 (parallel [
            (set (reg:SI 0 ax [242])
                (div:SI (reg:SI 0 ax [orig:239 D.26216 ] [239])
                    (reg/v:SI 3 bx [orig:148 num_tilings ] [148])))
            (set (reg:SI 1 dx [orig:241 D.26216 ] [241])
                (mod:SI (reg:SI 0 ax [orig:239 D.26216 ] [239])
                    (reg/v:SI 3 bx [orig:148 num_tilings ] [148])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:239 D.26216 ] [239])
        (expr_list:REG_UNUSED (reg:SI 0 ax [242])
            (nil))))
(insn 271 270 272 27 (set (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (plus:SI (plus:SI (reg:SI 37 r8 [orig:83 D.26216 ] [83])
                (reg:SI 1 dx [orig:241 D.26216 ] [241]))
            (const_int 1 [0x1]))) tiles.cpp:466 266 {*leasi}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:241 D.26216 ] [241])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:83 D.26216 ] [83])
            (nil))))
(insn 272 271 273 27 (parallel [
            (set (reg:SI 1 dx [orig:93 D.26216 ] [93])
                (minus:SI (reg:SI 1 dx [orig:93 D.26216 ] [93])
                    (reg/v:SI 3 bx [orig:148 num_tilings ] [148])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:466 309 {*subsi_1}
     (nil))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 28, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;;              26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 273 272 274 28 156 "" [1 uses])
(note 274 273 276 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 276 274 277 28 (set (mem:SI (plus:DI (reg/f:DI 6 bp [256])
                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 1 dx [orig:93 D.26216 ] [93])) 89 {*movsi_internal}
     (nil))
(insn 277 276 278 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
                    (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.241_108, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:467 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 278 277 279 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) tiles.cpp:467 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 285)
;;  succ:       29 [50.0%]  (FALLTHRU)
;;              30 [50.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 29, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(note 279 278 280 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 280 279 281 29 NOTE_INSN_DELETED)
(note 281 280 500 29 NOTE_INSN_DELETED)
(insn 500 281 282 29 (set (reg:SI 0 ax [248])
        (reg:SI 1 dx [orig:93 D.26216 ] [93])) tiles.cpp:467 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (nil)))
(insn 282 500 284 29 (parallel [
            (set (reg:SI 0 ax [248])
                (div:SI (reg:SI 0 ax [248])
                    (mem:SI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72]))
                            (const_int 192 [0xc0])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (set (reg:SI 1 dx [orig:93 D.26216 ] [93])
                (mod:SI (reg:SI 0 ax [248])
                    (mem:SI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72]))
                            (const_int 192 [0xc0])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:467 366 {*divmodsi4}
     (expr_list:REG_UNUSED (reg:SI 0 ax [248])
        (nil)))
(insn 284 282 285 29 (set (mem:SI (plus:DI (reg/f:DI 6 bp [256])
                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 1 dx [orig:93 D.26216 ] [93])) tiles.cpp:467 89 {*movsi_internal}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 30, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%] 
;;              29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 285 284 286 30 157 "" [1 uses])
(note 286 285 287 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 30 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 1 dx [orig:93 D.26216 ] [93])
            (const_int 0 [0]))) tiles.cpp:469 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 288 287 314 30 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) tiles.cpp:469 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 303)
;;  succ:       33 [91.0%] 
;;              31 [9.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 31, loop depth 0, count 0, freq 3333, maybe hot
;; Invalid sum of incoming frequencies 1119, should be 3333
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [9.0%]  (FALLTHRU)
;;              35 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 7 [sp] 39 [r10] 41 [r12]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 314 288 289 31 162 "" [1 uses])
(note 289 314 291 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 291 289 292 31 (parallel [
            (set (reg:SI 4 si [251])
                (plus:SI (reg:SI 4 si [orig:84 D.26216 ] [84])
                    (reg:SI 5 di [orig:63 ivtmp.245 ] [63])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:473 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:84 D.26216 ] [84])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 39 r10 [257])
                    (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
            (nil))))
(insn 292 291 294 31 (set (mem:SI (plus:DI (reg/f:DI 39 r10 [257])
                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[symbol: base, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 4 si [251])) tiles.cpp:473 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [251])
        (nil)))
(debug_insn 294 292 295 31 (var_location:SI i (debug_expr:SI D#13)) -1
     (nil))
(insn 295 294 296 31 (parallel [
            (set (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
                (plus:DI (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 296 295 298 31 (parallel [
            (set (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
                (plus:SI (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (nil))
(insn 298 296 299 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
            (reg:DI 41 r12 [orig:144 D.26221 ] [144]))) tiles.cpp:460 8 {*cmpdi_1}
     (nil))
(jump_insn 299 298 302 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 348)
            (pc))) tiles.cpp:460 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 348)
;;  succ:       25 [95.2%]  (DFS_BACK)
;;              32 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 32, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 302 299 419 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 419 302 420 32 (set (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (nil)))
(insn 420 419 421 32 (set (reg/v:SI 42 r13 [orig:107 j ] [107])
        (reg/v:SI 42 r13 [orig:107 j ] [107])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:107 j ] [107])
        (nil)))
(insn 421 420 422 32 (set (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (reg:DI 41 r12 [orig:144 D.26221 ] [144])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (nil)))
(insn 422 421 423 32 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (nil)))
(insn 423 422 424 32 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (nil)))
(insn 424 423 18 32 (set (reg/f:DI 6 bp [256])
        (reg/f:DI 6 bp [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [256])
        (nil)))
(insn 18 424 399 32 (set (reg/v:SI 0 ax [orig:110 num_floats ] [110])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) 89 {*movsi_internal}
     (nil))
(jump_insn 399 18 400 32 (set (pc)
        (label_ref 322)) 650 {jump}
     (nil)
 -> 322)
;;  succ:       37 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 400 399 303)
;; basic block 33, loop depth 0, count 0, freq 819, maybe hot
;; Invalid sum of incoming frequencies 3033, should be 819
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [91.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 303 400 304 33 158 "" [1 uses])
(note 304 303 306 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 306 304 425 33 (set (reg:SI 0 ax [orig:129 D.26216 ] [129])
        (mem:SI (plus:DI (plus:DI (reg/f:DI 7 sp)
                    (reg:DI 2 cx [orig:72 ivtmp.241 ] [72]))
                (const_int 192 [0xc0])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.241_108, offset: 0B]+0 S4 A32])) 89 {*movsi_internal}
     (nil))
(insn 425 306 426 33 (set (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
        (reg:SI 5 di [orig:63 ivtmp.245 ] [63])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
        (nil)))
(insn 426 425 427 33 (set (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
        (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
        (nil)))
(insn 427 426 428 33 (set (reg:SI 4 si [orig:84 D.26216 ] [84])
        (reg:SI 4 si [orig:84 D.26216 ] [84])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:84 D.26216 ] [84])
        (nil)))
(insn 428 427 429 33 (set (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (reg:SI 1 dx [orig:93 D.26216 ] [93])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (nil)))
(insn 429 428 430 33 (set (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (nil)))
(insn 430 429 431 33 (set (reg/v:SI 42 r13 [orig:107 j ] [107])
        (reg/v:SI 42 r13 [orig:107 j ] [107])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:107 j ] [107])
        (nil)))
(insn 431 430 432 33 (set (reg:SI 0 ax [orig:129 D.26216 ] [129])
        (reg:SI 0 ax [orig:129 D.26216 ] [129])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:129 D.26216 ] [129])
        (nil)))
(insn 432 431 433 33 (set (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (reg:DI 41 r12 [orig:144 D.26221 ] [144])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (nil)))
(insn 433 432 434 33 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (nil)))
(insn 434 433 435 33 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (nil)))
(insn 435 434 436 33 (set (reg/f:DI 6 bp [256])
        (reg/f:DI 6 bp [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [256])
        (nil)))
(insn 436 435 437 33 (set (reg/f:DI 39 r10 [257])
        (reg/f:DI 39 r10 [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [257])
        (nil)))
(insn 437 436 319 33 (set (reg/f:DI 40 r11 [258])
        (reg/f:DI 40 r11 [258])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [258])
        (nil)))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 34, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [91.0%]  (DFS_BACK)
;;              33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 319 437 307 34 163 "" [1 uses])
(note 307 319 308 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(note 308 307 309 34 NOTE_INSN_DELETED)
(insn 309 308 310 34 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg:SI 1 dx [orig:93 D.26216 ] [93])
                        (reg:SI 0 ax [orig:129 D.26216 ] [129]))
                    (const_int 0 [0])))
            (set (reg:SI 1 dx [orig:93 D.26216 ] [93])
                (plus:SI (reg:SI 1 dx [orig:93 D.26216 ] [93])
                    (reg:SI 0 ax [orig:129 D.26216 ] [129])))
        ]) tiles.cpp:469 281 {*addsi_2}
     (nil))
(jump_insn 310 309 311 34 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 319)
            (pc))) tiles.cpp:469 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 319)
;;  succ:       34 [91.0%]  (DFS_BACK)
;;              35 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 35, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 311 310 438 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 438 311 439 35 (set (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
        (reg:SI 5 di [orig:63 ivtmp.245 ] [63])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
        (nil)))
(insn 439 438 440 35 (set (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
        (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
        (nil)))
(insn 440 439 441 35 (set (reg:SI 4 si [orig:84 D.26216 ] [84])
        (reg:SI 4 si [orig:84 D.26216 ] [84])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:84 D.26216 ] [84])
        (nil)))
(insn 441 440 442 35 (set (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (reg:SI 1 dx [orig:93 D.26216 ] [93])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (nil)))
(insn 442 441 443 35 (set (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (nil)))
(insn 443 442 444 35 (set (reg/v:SI 42 r13 [orig:107 j ] [107])
        (reg/v:SI 42 r13 [orig:107 j ] [107])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:107 j ] [107])
        (nil)))
(insn 444 443 445 35 (set (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (reg:DI 41 r12 [orig:144 D.26221 ] [144])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (nil)))
(insn 445 444 446 35 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (nil)))
(insn 446 445 447 35 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (nil)))
(insn 447 446 448 35 (set (reg/f:DI 6 bp [256])
        (reg/f:DI 6 bp [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [256])
        (nil)))
(insn 448 447 449 35 (set (reg/f:DI 39 r10 [257])
        (reg/f:DI 39 r10 [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [257])
        (nil)))
(insn 449 448 313 35 (set (reg/f:DI 40 r11 [258])
        (reg/f:DI 40 r11 [258])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [258])
        (nil)))
(insn 313 449 401 35 (set (mem:SI (plus:DI (reg/f:DI 6 bp [256])
                (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) [0 MEM[symbol: coordinates, index: ivtmp.241_108, offset: 0B]+0 S4 A32])
        (reg:SI 1 dx [orig:93 D.26216 ] [93])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:93 D.26216 ] [93])
        (nil)))
(jump_insn 401 313 402 35 (set (pc)
        (label_ref 314)) 650 {jump}
     (nil)
 -> 314)
;;  succ:       31 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 402 401 361)
;; basic block 36, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [4.8%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 361 402 360 36 166 "" [1 uses])
(note 360 361 19 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 19 360 322 36 (set (reg/v:SI 0 ax [orig:110 num_floats ] [110])
        (const_int 0 [0])) tiles.cpp:460 89 {*movsi_internal}
     (nil))
;;  succ:       37 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 37, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [100.0%]  (FALLTHRU)
;;              32 [100.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 42 [r13] 44 [r15]
;; live  kill	 17 [flags]
(code_label 322 19 323 37 160 "" [1 uses])
(note 323 322 324 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 37 (set (reg:DI 0 ax [orig:254 num_floats ] [254])
        (sign_extend:DI (reg/v:SI 0 ax [orig:110 num_floats ] [110]))) tiles.cpp:476 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:110 num_floats ] [110])
        (nil)))
(insn 325 324 327 37 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:254 num_floats ] [254])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 272 [0x110])) [0 coordinates S4 A32])
        (reg/v:SI 42 r13 [orig:107 j ] [107])) tiles.cpp:476 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:254 num_floats ] [254])
        (nil)))
(insn 327 325 328 37 (set (reg:SI 2 cx)
        (const_int 449 [0x1c1])) tiles.cpp:478 89 {*movsi_internal}
     (nil))
(insn 328 327 329 37 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S8 A64])) tiles.cpp:478 87 {*movdi_internal_rex64}
     (nil))
(insn 329 328 330 37 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S4 A32])) tiles.cpp:478 89 {*movsi_internal}
     (nil))
(insn 330 329 331 37 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [256])) tiles.cpp:478 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 331 330 332 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8hash_UNHPiili") [flags 0x1]  <function_decl 0x2b67b8f25700 hash_UNH>) [0 hash_UNH S1 A8])
            (const_int 0 [0]))) tiles.cpp:478 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                    (nil))))))
(insn 332 331 333 37 (set (reg:SI 0 ax [orig:106 D.26216 ] [106])
        (reg:SI 0 ax)) tiles.cpp:478 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_EQUIV (mem:SI (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
            (nil))))
(insn 333 332 334 37 (set (mem:SI (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:106 D.26216 ] [106])) tiles.cpp:478 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:106 D.26216 ] [106])
        (nil)))
(insn 334 333 336 37 (parallel [
            (set (reg/v:SI 42 r13 [orig:107 j ] [107])
                (plus:SI (reg/v:SI 42 r13 [orig:107 j ] [107])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:457 273 {*addsi_1}
     (nil))
(debug_insn 336 334 337 37 (var_location:SI j (reg/v:SI 42 r13 [orig:107 j ] [107])) -1
     (nil))
(insn 337 336 338 37 (parallel [
            (set (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
                (plus:DI (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 338 337 339 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 42 r13 [orig:107 j ] [107])
            (reg/v:SI 3 bx [orig:148 num_tilings ] [148]))) tiles.cpp:457 7 {*cmpsi_1}
     (nil))
(jump_insn 339 338 341 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 353)
            (pc))) tiles.cpp:457 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 353)
;;  succ:       38 [91.0%]  (FALLTHRU,DFS_BACK)
;;              40 [9.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 38, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [91.0%]  (FALLTHRU,DFS_BACK)
;;              24 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 341 339 342 38 154 "" [1 uses])
(note 342 341 343 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(debug_insn 343 342 344 38 (var_location:SI j (reg/v:SI 42 r13 [orig:107 j ] [107])) -1
     (nil))
(debug_insn 344 343 345 38 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 345 344 346 38 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])
            (const_int 0 [0]))) tiles.cpp:460 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 346 345 347 38 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) tiles.cpp:460 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 361)
;;  succ:       39 [95.2%]  (FALLTHRU)
;;              36 [4.8%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 39, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [95.2%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 347 346 15 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 15 347 16 39 (set (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
        (const_int 1 [0x1])) tiles.cpp:460 89 {*movsi_internal}
     (nil))
(insn 16 15 373 39 (set (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
        (const_int 0 [0])) tiles.cpp:460 87 {*movdi_internal_rex64}
     (nil))
(insn 373 16 374 39 (set (reg/f:DI 40 r11 [258])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))
        (nil)))
(insn 374 373 450 39 (set (reg/f:DI 39 r10 [257])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 450 374 451 39 (set (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
        (reg:SI 5 di [orig:63 ivtmp.245 ] [63])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:63 ivtmp.245 ] [63])
        (nil)))
(insn 451 450 452 39 (set (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
        (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:72 ivtmp.241 ] [72])
        (nil)))
(insn 452 451 453 39 (set (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:94 ivtmp.255 ] [94])
        (nil)))
(insn 453 452 454 39 (set (reg/v:SI 42 r13 [orig:107 j ] [107])
        (reg/v:SI 42 r13 [orig:107 j ] [107])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:107 j ] [107])
        (nil)))
(insn 454 453 455 39 (set (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (reg:DI 41 r12 [orig:144 D.26221 ] [144])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:144 D.26221 ] [144])
        (nil)))
(insn 455 454 456 39 (set (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (reg/v:SI 3 bx [orig:148 num_tilings ] [148])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:148 num_tilings ] [148])
        (nil)))
(insn 456 455 457 39 (set (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:152 wrap_widths ] [152])
        (nil)))
(insn 457 456 458 39 (set (reg/f:DI 6 bp [256])
        (reg/f:DI 6 bp [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [256])
        (nil)))
(insn 458 457 459 39 (set (reg/f:DI 39 r10 [257])
        (reg/f:DI 39 r10 [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [257])
        (nil)))
(insn 459 458 403 39 (set (reg/f:DI 40 r11 [258])
        (reg/f:DI 40 r11 [258])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [258])
        (nil)))
(jump_insn 403 459 404 39 (set (pc)
        (label_ref 348)) 650 {jump}
     (nil)
 -> 348)
;;  succ:       25 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 404 403 353)
;; basic block 40, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 39, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [9.0%]  (LOOP_EXIT)
;;              7 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 353 404 354 40 141 "" [2 uses])
(note 354 353 0 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int) (_Z9tileswrapPiiP15collision_tablePfiS_S_i, funcdef_no=1101, decl_uid=23893, cgraph_uid=345)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=480, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=416, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 105
Updating elimination of equiv for reg 153
Updating elimination of equiv for reg 172
Updating elimination of equiv for reg 217
Updating elimination of equiv for reg 221
Updating elimination of equiv for reg 225
Updating elimination of equiv for reg 250
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=296 from oldreg=150, assigning class GENERAL_REGS to address r296
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 24:  (0) =r  (1) p {*leasi}
      Creating newreg=297 from oldreg=70, assigning class GENERAL_REGS to r297
   24: r297:SI=r296:SI+r153:SI+0x1
    Inserting insn reload before:
  459: r296:SI=r150:SI
    Inserting insn reload after:
  460: r70:SI=r297:SI

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 460:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 459:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=7,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) p {*leadi}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=15,losers=2 -- reject
	 Choosing alt 0 in insn 69:  (0) =x  (1) r {*floatsisf2_sse_interunit}
      Creating newreg=298 from oldreg=129, assigning class SSE_REGS to r298
   69: r298:SF=float(r147:SI)
    Inserting insn reload after:
  461: r129:SF=r298:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 461:  (0) m  (1) x {*movsf_internal}
      Creating newreg=299 from oldreg=150, assigning class GENERAL_REGS to address r299
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) p {*leadi}
   72: r168:DI=zero_extend(r299:SI-0x1)
    Inserting insn reload before:
  462: r299:SI=r150:SI

          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 77:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
      Creating newreg=300 from oldreg=170, assigning class SSE_REGS to r300
   77: r300:SF=r300:SF*[r292:DI+r289:DI]
    Inserting insn reload before:
  463: r300:SF=r129:SF
    Inserting insn reload after:
  464: r170:SF=r300:SF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 463:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) x {fix_truncsfsi_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 86:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 97:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (1) rzw {*call_value}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 106:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=301 from oldreg=79, assigning class GENERAL_REGS to r301
  106: {r301:SI=r301:SI 0>>0x2;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  465: r301:SI=r150:SI
    Inserting insn reload after:
  466: r79:SI=r301:SI

          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 465:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=12,losers=2,rld_nregs=1
          alt=2,overall=14,losers=2 -- reject
	 Choosing alt 0 in insn 117:  (0) =x  (1) x {*vec_dupv4si}
      Creating newreg=302 from oldreg=147, assigning class SSE_REGS to r302
  117: r184:V4SI=vec_duplicate(r302:SI)
    Inserting insn reload before:
  467: r302:SI=r147:SI

          alt=0,overall=13,losers=2,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=0
          alt=2,overall=14,losers=2 -- reject
          alt=3,overall=14,losers=2 -- reject
          alt=4,overall=19,losers=2 -- reject
          alt=5,overall=20,losers=2 -- reject
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=19,losers=2 -- reject
          alt=9,overall=22,losers=3 -- reject
          alt=11,overall=10,losers=1 -- reject
      Creating newreg=303, assigning class NO_REGS to secondary r303
  467: r303:SI=r147:SI
    Inserting the sec. move after:
  468: r302:SI=r303:SI

          alt=0,overall=14,losers=2,rld_nregs=1
          alt=1,overall=15,losers=2 -- reject
          alt=3,overall=21,losers=3 -- reject
          alt=4,overall=19,losers=2 -- reject
          alt=5,overall=20,losers=2 -- reject
          alt=7,overall=9,losers=1,rld_nregs=1
          alt=8,overall=19,losers=2 -- reject
          alt=9,overall=16,losers=2 -- reject
          alt=11,overall=3,losers=0,rld_nregs=0
	 Choosing alt 11 in insn 468:  (0) *x  (1) m {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 121:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=304, assigning class SSE_REGS to r304
  121: r304:V2DI=zero_extend(vec_select(r304:V2DI#0,parallel))*zero_extend(vec_select(r184:V4SI,parallel))
    Inserting insn reload before:
  469: clobber r304:V2DI
  470: r304:V2DI#0=r185:V4SI
    Inserting insn reload after:
  471: r187:V4SI#0=r304:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 471:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 122:  (0) =x  (1) 0  (2) xN {lshrv2di3}
      Creating newreg=305 from oldreg=189, assigning class SSE_REGS to r305
  122: r305:V2DI=r305:V2DI 0>>0x20
      REG_DEAD r185:V4SI
    Inserting insn reload before:
  472: r305:V2DI=r185:V4SI#0
    Inserting insn reload after:
  473: r189:V2DI=r305:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 472:  (0) x  (1) xm {*movv2di_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 123:  (0) =x  (1) 0  (2) xN {lshrv2di3}
      Creating newreg=306 from oldreg=190, assigning class SSE_REGS to r306
  123: r306:V2DI=r306:V2DI 0>>0x20
    Inserting insn reload before:
  474: r306:V2DI=r184:V4SI#0
    Inserting insn reload after:
  475: r190:V2DI=r306:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 474:  (0) x  (1) xm {*movv2di_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 124:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 128:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 136:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=307, assigning class SSE_REGS to r307
  136: r307:V2DI=zero_extend(vec_select(r307:V2DI#0,parallel))*zero_extend(vec_select(r184:V4SI,parallel))
    Inserting insn reload before:
  476: clobber r307:V2DI
  477: r307:V2DI#0=r191:V4SI
    Inserting insn reload after:
  478: r193:V4SI#0=r307:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 478:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 477:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 139:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 143:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 151:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=308, assigning class SSE_REGS to r308
  151: r308:V2DI=zero_extend(vec_select(r308:V2DI#0,parallel))*zero_extend(vec_select(r184:V4SI,parallel))
    Inserting insn reload before:
  479: clobber r308:V2DI
  480: r308:V2DI#0=r197:V4SI
    Inserting insn reload after:
  481: r199:V4SI#0=r308:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 481:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 480:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 154:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 158:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 166:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
      Creating newreg=309, assigning class SSE_REGS to r309
  166: r309:V2DI=zero_extend(vec_select(r309:V2DI#0,parallel))*zero_extend(vec_select(r184:V4SI,parallel))
    Inserting insn reload before:
  482: clobber r309:V2DI
  483: r309:V2DI#0=r203:V4SI
    Inserting insn reload after:
  484: r205:V4SI#0=r309:V2DI

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 484:  (0) x  (1) xm {*movv2di_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 483:  (0) x  (1) xm {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
	 Choosing alt 0 in insn 169:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 173:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =x  (1) m {sse2_loaddqu}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 181
	 Choosing alt 0 in insn 181:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =x  (1) 0  (2) xN {lshrv2di3}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 0 in insn 184:  (0) =x  (1) %0  (2) xm {*vec_widen_umult_even_v4si}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =x  (1) xm {sse2_pshufd_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =x  (1) 0  (2) xm {vec_interleave_lowv4si}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=11,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
  Commutative operand exchange in insn 198
	 Choosing alt 2 in insn 198:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=310 from oldreg=217, assigning class GENERAL_REGS to r310
  198: {r310:SI=r310:SI*[r215:DI*0x4+r151:DI];clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV [r215:DI*0x4+frame:DI-0x100]
    Inserting insn reload before:
  485: r310:SI=r147:SI
    Inserting insn reload after:
  486: r217:SI=r310:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 214:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=2,overall=11,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
  Commutative operand exchange in insn 217
	 Choosing alt 2 in insn 217:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=311 from oldreg=221, assigning class GENERAL_REGS to r311
  217: {r311:SI=r311:SI*[r219:DI*0x4+r151:DI];clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV [r219:DI*0x4+frame:DI-0x100]
    Inserting insn reload before:
  487: r311:SI=r147:SI
    Inserting insn reload after:
  488: r221:SI=r311:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 219:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=2,overall=11,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
  Commutative operand exchange in insn 229
	 Choosing alt 2 in insn 229:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=312 from oldreg=225, assigning class GENERAL_REGS to r312
  229: {r312:SI=r312:SI*[r223:DI*0x4+r151:DI];clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV [r223:DI*0x4+frame:DI-0x100]
    Inserting insn reload before:
  489: r312:SI=r147:SI
    Inserting insn reload after:
  490: r225:SI=r312:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 231:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) rm {*cmpsi_1}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=313 from oldreg=150, assigning class GENERAL_REGS to address r313
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =r  (1) p {*leadi}
  244: r228:DI=zero_extend(r313:SI-0x1)
    Inserting insn reload before:
  491: r313:SI=r150:SI

          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) p {*leadi}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 413:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 417:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 259:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=314 from oldreg=232, assigning class GENERAL_REGS to r314
  259: {r314:SI=r314:SI-r83:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  492: r314:SI=r82:SI
    Inserting insn reload after:
  493: r232:SI=r314:SI

          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 261:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=315 from oldreg=92, assigning class GENERAL_REGS to r315
  261: {r315:SI=r315:SI-r234:SI;clobber flags:CC;}
      REG_DEAD r234:SI
      REG_DEAD r82:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  494: r315:SI=r82:SI
    Inserting insn reload after:
  495: r92:SI=r315:SI

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 267:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=316 from oldreg=237, assigning class GENERAL_REGS to r316
  267: {r316:SI=r316:SI-r82:SI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  496: r316:SI=r83:SI
    Inserting insn reload after:
  497: r237:SI=r316:SI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 268:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =r  (1) p {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 275:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=12,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 281:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
      Creating newreg=317 from oldreg=247, assigning class AREG to r317
  281: {r317:SI=r317:SI/[frame:DI+r267:DI+0xa0];r92:SI=r317:SI%[frame:DI+r267:DI+0xa0];clobber flags:CC;}
      REG_UNUSED r247:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  498: r317:SI=r92:SI

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 283:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 290:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 291:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 294:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 295:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =r  (1) %0  (2) rme {*addsi_2}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 312:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 324:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 326:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 331:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 332:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 335:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=7,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 343:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) p {*leadi}

********** Inheritance #1: **********

EBB 2
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=318 from oldreg=150, assigning class GENERAL_REGS to inheritance r318
    Original reg change 150->318 (bb2):
    8: r318:SI=r8:SI
      REG_DEAD r8:SI
    Add original<-inheritance after:
  499: r150:SI=r318:SI

    Inheritance reuse change 150->318 (bb2):
  459: r296:SI=r318:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10 11 12 13 14 15 16
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=319 from oldreg=150, assigning class GENERAL_REGS to inheritance r319
    Original reg change 150->319 (bb10):
  465: r301:SI=r319:SI
    Add inheritance<-original before:
  500: r319:SI=r150:SI

    Inheritance reuse change 150->319 (bb11):
  114: flags:CC=cmp(r319:SI,0x3)
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=320 from oldreg=150, assigning class GENERAL_REGS to inheritance r320
    Original reg change 150->320 (bb10):
   95: r173:DI=sign_extend(r320:SI)
    Add inheritance<-original before:
  501: r320:SI=r150:SI

    Inheritance reuse change 150->320 (bb10):
  500: r319:SI=r320:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21 22
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=321 from oldreg=150, assigning class GENERAL_REGS to inheritance r321
    Original reg change 150->321 (bb21):
  222: flags:CCGC=cmp(r321:SI,r80:SI)
    Add inheritance<-original before:
  502: r321:SI=r150:SI

    Inheritance reuse change 150->321 (bb22):
  235: flags:CCGC=cmp(r65:SI,r321:SI)
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 23
EBB 24
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=322 from oldreg=295, assigning class GENERAL_REGS to inheritance r322
    Original reg change 295->322 (bb24):
  413: r322:DI=r151:DI
      REG_DEAD r151:DI
    Add original<-inheritance after:
  503: r295:DI=r322:DI

    Inheritance reuse change 295->322 (bb24):
  417: r262:DI=r322:DI
      REG_DEAD r322:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   503: r295:DI=r322:DI
deleting insn with uid = 503.
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38 39
EBB 40

********** Pseudo live ranges #1: **********

  BB 40
  BB 7
   Insn 381: point = 0
  BB 37
   Insn 337: point = 0
   Insn 336: point = 0
   Insn 335: point = 0
   Insn 332: point = 0
   Insn 331: point = 0
   Insn 330: point = 1
   Insn 329: point = 2
   Insn 328: point = 2
   Insn 327: point = 2
   Insn 326: point = 2
   Insn 324: point = 2
   Insn 323: point = 3
  BB 32
   Insn 397: point = 6
   Insn 18: point = 6
   Insn 423: point = 7
   Insn 422: point = 9
   Insn 421: point = 11
   Insn 420: point = 13
   Insn 419: point = 15
   Insn 418: point = 17
  BB 31
   Insn 298: point = 20
   Insn 297: point = 20
   Insn 295: point = 20
   Insn 294: point = 20
   Insn 291: point = 20
   Insn 290: point = 21
  BB 35
   Insn 399: point = 24
   Insn 312: point = 24
   Insn 448: point = 25
   Insn 447: point = 27
   Insn 446: point = 29
   Insn 445: point = 31
   Insn 444: point = 33
   Insn 443: point = 35
   Insn 442: point = 37
   Insn 441: point = 39
   Insn 440: point = 41
   Insn 439: point = 43
   Insn 438: point = 45
   Insn 437: point = 47
  BB 34
   Insn 309: point = 50
   Insn 308: point = 50
  BB 33
   Insn 436: point = 51
   Insn 435: point = 53
   Insn 434: point = 55
   Insn 433: point = 57
   Insn 432: point = 59
   Insn 431: point = 61
   Insn 430: point = 63
   Insn 429: point = 65
   Insn 428: point = 67
   Insn 427: point = 69
   Insn 426: point = 71
   Insn 425: point = 73
   Insn 424: point = 75
   Insn 305: point = 77
  BB 30
   Insn 287: point = 79
   Insn 286: point = 79
  BB 29
   Insn 283: point = 80
   Insn 281: point = 80
   Insn 498: point = 82
	Hard reg 1 is preferable by r317 with profit 166
  BB 28
   Insn 277: point = 85
   Insn 276: point = 85
   Insn 275: point = 85
  BB 26
   Insn 395: point = 86
   Insn 495: point = 86
	Hard reg 1 is preferable by r315 with profit 166
   Insn 261: point = 88
   Insn 494: point = 89
	Hard reg 1 is preferable by r315 with profit 166
	Hard reg 37 is preferable by r315 with profit 166
   Insn 260: point = 91
   Insn 493: point = 93
	Hard reg 0 is preferable by r314 with profit 166
   Insn 259: point = 95
   Insn 492: point = 95
  BB 27
   Insn 271: point = 97
   Insn 270: point = 97
   Insn 269: point = 99
   Insn 268: point = 101
   Insn 497: point = 103
	Hard reg 0 is preferable by r316 with profit 166
   Insn 267: point = 105
   Insn 496: point = 105
  BB 25
   Insn 257: point = 107
   Insn 256: point = 107
   Insn 255: point = 107
   Insn 253: point = 108
  BB 39
   Insn 401: point = 110
   Insn 458: point = 110
   Insn 457: point = 112
   Insn 456: point = 114
   Insn 455: point = 116
   Insn 454: point = 118
   Insn 453: point = 120
   Insn 452: point = 122
   Insn 451: point = 124
   Insn 450: point = 126
   Insn 449: point = 128
   Insn 372: point = 130
   Insn 371: point = 131
   Insn 16: point = 132
   Insn 15: point = 133
  BB 36
   Insn 19: point = 135
  BB 38
   Insn 344: point = 137
   Insn 343: point = 137
  BB 24
   Insn 393: point = 138
   Insn 417: point = 138
	Hard reg 43 is preferable by r322 with profit 1
   Insn 416: point = 140
   Insn 415: point = 142
   Insn 414: point = 144
   Insn 413: point = 146
	Hard reg 43 is preferable by r322 with profit 1
	Hard reg 6 is preferable by r322 with profit 1
   Insn 412: point = 148
   Insn 411: point = 150
   Insn 370: point = 152
   Insn 20: point = 153
   Insn 246: point = 154
   Insn 244: point = 156
   Insn 491: point = 158
   Insn 242: point = 159
  BB 6
   Insn 63: point = 162
   Insn 62: point = 162
  BB 23
   Insn 391: point = 163
  BB 17
   Insn 385: point = 164
   Insn 199: point = 164
   Insn 486: point = 165
	Hard reg 1 is preferable by r310 with profit 1
   Insn 198: point = 167
   Insn 485: point = 167
   Insn 195: point = 168
  BB 22
   Insn 236: point = 171
   Insn 235: point = 171
   Insn 231: point = 172
   Insn 230: point = 174
   Insn 490: point = 175
	Hard reg 2 is preferable by r312 with profit 1
   Insn 229: point = 177
   Insn 489: point = 177
   Insn 226: point = 178
  BB 4
   Insn 376: point = 181
  BB 21
   Insn 223: point = 182
   Insn 222: point = 182
   Insn 502: point = 182
   Insn 219: point = 183
   Insn 218: point = 184
   Insn 488: point = 185
	Hard reg 2 is preferable by r311 with profit 1
   Insn 217: point = 187
   Insn 487: point = 187
   Insn 214: point = 188
  BB 20
   Insn 14: point = 190
  BB 19
   Insn 388: point = 192
  BB 18
   Insn 210: point = 193
   Insn 209: point = 193
   Insn 208: point = 193
  BB 16
   Insn 383: point = 196
   Insn 188: point = 196
   Insn 187: point = 197
   Insn 186: point = 198
   Insn 185: point = 198
   Insn 184: point = 200
   Insn 182: point = 202
   Insn 181: point = 204
   Insn 180: point = 206
  BB 15
   Insn 177: point = 208
   Insn 176: point = 208
   Insn 173: point = 209
   Insn 172: point = 210
   Insn 171: point = 211
   Insn 170: point = 211
   Insn 169: point = 213
   Insn 167: point = 215
   Insn 484: point = 217
   Insn 166: point = 219
   Insn 483: point = 221
   Insn 482: point = 222
   Insn 165: point = 223
  BB 14
   Insn 162: point = 225
   Insn 161: point = 225
   Insn 158: point = 225
   Insn 157: point = 226
   Insn 156: point = 227
   Insn 155: point = 227
   Insn 154: point = 229
   Insn 152: point = 231
   Insn 481: point = 233
   Insn 151: point = 235
   Insn 480: point = 237
   Insn 479: point = 238
   Insn 150: point = 239
  BB 13
   Insn 147: point = 241
   Insn 146: point = 241
   Insn 143: point = 241
   Insn 142: point = 242
   Insn 141: point = 243
   Insn 140: point = 243
   Insn 139: point = 245
   Insn 137: point = 247
   Insn 478: point = 249
   Insn 136: point = 251
   Insn 477: point = 253
   Insn 476: point = 254
   Insn 135: point = 255
  BB 12
   Insn 132: point = 257
   Insn 131: point = 257
   Insn 128: point = 257
   Insn 127: point = 258
   Insn 126: point = 259
   Insn 125: point = 259
   Insn 124: point = 261
   Insn 475: point = 263
	Hard reg 22 is preferable by r306 with profit 1
   Insn 123: point = 265
   Insn 474: point = 265
   Insn 473: point = 266
	Hard reg 24 is preferable by r305 with profit 1
   Insn 122: point = 268
   Insn 472: point = 268
   Insn 471: point = 270
   Insn 121: point = 272
   Insn 470: point = 274
   Insn 469: point = 275
   Insn 120: point = 276
   Insn 117: point = 277
   Insn 468: point = 279
	   Creating copy r302<-r303@1
   Insn 467: point = 281
  BB 11
   Insn 115: point = 283
   Insn 114: point = 283
  BB 10
   Insn 111: point = 285
   Insn 110: point = 285
   Insn 107: point = 285
   Insn 466: point = 286
	Hard reg 1 is preferable by r301 with profit 1
   Insn 106: point = 288
   Insn 465: point = 288
	   Creating copy r301<-r319@1
   Insn 500: point = 289
	   Creating copy r319<-r320@1
   Insn 103: point = 291
   Insn 102: point = 291
   Insn 101: point = 292
   Insn 100: point = 292
   Insn 97: point = 293
   Insn 96: point = 294
   Insn 95: point = 296
   Insn 501: point = 297
   Insn 410: point = 298
   Insn 409: point = 300
  BB 9
   Insn 88: point = 303
   Insn 87: point = 303
   Insn 86: point = 303
   Insn 83: point = 303
   Insn 82: point = 304
   Insn 80: point = 306
   Insn 79: point = 307
   Insn 78: point = 307
   Insn 464: point = 308
	Hard reg 21 is preferable by r300 with profit 33
   Insn 77: point = 310
   Insn 463: point = 310
  BB 8
   Insn 408: point = 312
   Insn 407: point = 314
   Insn 406: point = 316
   Insn 405: point = 318
   Insn 404: point = 320
   Insn 403: point = 322
   Insn 369: point = 324
   Insn 13: point = 325
   Insn 74: point = 326
   Insn 72: point = 328
   Insn 462: point = 330
   Insn 461: point = 331
   Insn 69: point = 333
  BB 3
   Insn 33: point = 335
   Insn 32: point = 335
  BB 5
   Insn 378: point = 336
   Insn 52: point = 336
   Insn 51: point = 336
   Insn 50: point = 337
   Insn 49: point = 337
   Insn 45: point = 338
   Insn 44: point = 340
   Insn 43: point = 342
   Insn 40: point = 344
  BB 2
   Insn 29: point = 346
   Insn 28: point = 346
   Insn 460: point = 346
   Insn 24: point = 348
   Insn 459: point = 350
	   Creating copy r296<-r318@1
   Insn 11: point = 352
   Insn 9: point = 353
   Insn 499: point = 354
   Insn 8: point = 355
	Hard reg 37 is preferable by r318 with profit 1
   Insn 7: point = 356
   Insn 6: point = 357
   Insn 5: point = 358
   Insn 4: point = 359
 r62: [129..133]
 r65: [169..172]
 r70: [0..346]
 r71: [127..132]
 r74: [305..306]
 r78: [194..285]
 r79: [208..286]
 r80: [182..183] [179..180]
 r82: [98..108] [90..96]
 r83: [72..107] [22..43]
 r92: [97..97] [83..86] [70..81] [24..41]
 r93: [145..159]
 r103: [323..325]
 r105: [0..1]
 r106: [143..153]
 r110: [135..135] [4..6]
 r113: [193..193] [182..190] [173..180]
 r127: [64..77]
 r129: [303..331]
 r143: [151..154]
 r145: [321..326]
 r146: [160..359]
 r147: [319..358] [149..300]
 r148: [0..357]
 r149: [317..356]
 r150: [0..354]
 r151: [315..353] [147..298]
 r153: [341..352]
 r156: [343..344]
 r159: [336..342]
 r160: [339..340]
 r161: [337..338]
 r168: [327..328]
 r170: [307..308]
 r172: [303..304]
 r173: [295..296]
 r174: [292..294]
 r184: [205..277]
 r185: [269..276]
 r186: [257..259]
 r187: [260..270]
 r188: [258..261]
 r189: [262..266]
 r190: [201..263]
 r191: [248..255]
 r192: [241..243]
 r193: [244..249]
 r194: [242..245]
 r195: [246..247]
 r197: [232..239]
 r198: [225..227]
 r199: [228..233]
 r200: [226..229]
 r201: [230..231]
 r203: [216..223]
 r204: [209..211]
 r205: [212..217]
 r206: [210..213]
 r207: [214..215]
 r209: [203..206]
 r210: [196..198]
 r211: [199..204]
 r212: [197..200]
 r213: [201..202]
 r215: [164..168]
 r217: [164..165]
 r219: [184..188]
 r221: [184..185]
 r223: [174..178]
 r225: [174..175]
 r228: [155..156]
 r232: [92..93]
 r234: [88..92]
 r235: [91..91]
 r237: [102..103]
 r238: [100..101]
 r240: [98..100]
 r241: [99..99]
 r250: [20..21]
 r253: [2..3]
 r255: [141..152]
 r256: [291..293]
 r257: [313..324]
 r258: [125..144] [0..17]
 r259: [123..142] [0..15]
 r260: [121..150] [0..13]
 r261: [119..148] [0..11]
 r262: [117..138] [0..9]
 r263: [115..140] [0..7]
 r264: [113..130]
 r265: [111..131]
 r266: [76..128] [20..47]
 r267: [74..126] [20..45]
 r268: [68..124] [18..39]
 r269: [66..122] [16..37]
 r270: [62..120] [14..35]
 r271: [60..118] [12..33]
 r272: [58..116] [10..31]
 r273: [56..114] [8..29]
 r274: [54..112] [20..27]
 r275: [52..110] [20..25]
 r276: [48..75]
 r277: [46..73]
 r278: [44..71]
 r279: [42..69]
 r280: [40..67]
 r281: [38..65]
 r282: [50..63]
 r283: [36..61]
 r284: [34..59]
 r285: [32..57]
 r286: [30..55]
 r287: [28..53]
 r288: [26..51]
 r289: [303..322]
 r290: [303..320]
 r291: [301..318]
 r292: [303..316]
 r293: [299..314]
 r294: [303..312]
 r296: [349..350]
 r297: [347..348]
 r298: [332..333]
 r299: [329..330]
 r300: [309..310]
 r301: [287..288]
 r302: [278..279]
 r303: [280..281]
 r304: [271..275]
 r305: [267..268]
 r306: [264..265]
 r307: [250..254]
 r308: [234..238]
 r309: [218..222]
 r310: [166..167]
 r311: [186..187]
 r312: [176..177]
 r313: [157..158]
 r314: [94..95]
 r315: [87..89]
 r316: [104..105]
 r317: [80..82]
 r318: [351..355]
 r319: [283..289]
 r320: [290..297]
 r321: [182..182] [171..180]
 r322: [139..146]
Compressing live ranges: from 360 to 258 - 71%
Ranges after the compression:
 r62: [109..110]
 r65: [135..136]
 r70: [0..251]
 r71: [107..110]
 r74: [220..221]
 r78: [150..209]
 r79: [160..209]
 r80: [141..144]
 r82: [83..90] [76..81]
 r83: [64..90] [18..37]
 r92: [82..82] [62..73] [18..35]
 r93: [119..130]
 r103: [236..237]
 r105: [0..1]
 r106: [117..126]
 r110: [111..111] [4..5]
 r113: [137..149]
 r127: [56..69]
 r129: [218..241]
 r143: [125..126]
 r145: [234..237]
 r146: [131..257]
 r147: [232..257] [123..217]
 r148: [0..257]
 r149: [230..257]
 r150: [0..257]
 r151: [228..257] [121..215]
 r153: [248..257]
 r156: [250..251]
 r159: [244..249]
 r160: [246..247]
 r161: [244..245]
 r168: [238..239]
 r170: [222..223]
 r172: [218..219]
 r173: [214..215]
 r174: [212..213]
 r184: [158..203]
 r185: [200..203]
 r186: [190..191]
 r187: [192..201]
 r188: [190..193]
 r189: [194..197]
 r190: [154..195]
 r191: [186..189]
 r192: [180..181]
 r193: [182..187]
 r194: [180..183]
 r195: [184..185]
 r197: [176..179]
 r198: [170..171]
 r199: [172..177]
 r200: [170..173]
 r201: [174..175]
 r203: [166..169]
 r204: [160..161]
 r205: [162..167]
 r206: [160..163]
 r207: [164..165]
 r209: [156..159]
 r210: [150..151]
 r211: [152..157]
 r212: [150..153]
 r213: [154..155]
 r215: [131..134]
 r217: [131..132]
 r219: [145..148]
 r221: [145..146]
 r223: [137..140]
 r225: [137..138]
 r228: [127..128]
 r232: [78..79]
 r234: [74..78]
 r235: [77..77]
 r237: [87..88]
 r238: [85..86]
 r240: [83..85]
 r241: [84..84]
 r250: [16..17]
 r253: [2..3]
 r255: [115..126]
 r256: [212..213]
 r257: [226..237]
 r258: [105..118] [0..15]
 r259: [103..116] [0..13]
 r260: [101..124] [0..11]
 r261: [99..122] [0..9]
 r262: [97..112] [0..7]
 r263: [95..114] [0..5]
 r264: [93..110]
 r265: [91..110]
 r266: [68..108] [16..41]
 r267: [66..106] [16..39]
 r268: [60..104] [16..33]
 r269: [58..102] [14..31]
 r270: [54..100] [12..29]
 r271: [52..98] [10..27]
 r272: [50..96] [8..25]
 r273: [48..94] [6..23]
 r274: [46..92] [16..21]
 r275: [44..90] [16..19]
 r276: [42..67]
 r277: [40..65]
 r278: [38..63]
 r279: [36..61]
 r280: [34..59]
 r281: [32..57]
 r282: [42..55]
 r283: [30..53]
 r284: [28..51]
 r285: [26..49]
 r286: [24..47]
 r287: [22..45]
 r288: [20..43]
 r289: [218..235]
 r290: [218..233]
 r291: [218..231]
 r292: [218..229]
 r293: [216..227]
 r294: [218..225]
 r296: [254..255]
 r297: [252..253]
 r298: [242..243]
 r299: [240..241]
 r300: [224..225]
 r301: [210..211]
 r302: [204..205]
 r303: [206..207]
 r304: [202..203]
 r305: [198..199]
 r306: [196..197]
 r307: [188..189]
 r308: [178..179]
 r309: [168..169]
 r310: [133..134]
 r311: [147..148]
 r312: [139..140]
 r313: [129..130]
 r314: [80..81]
 r315: [74..75]
 r316: [89..90]
 r317: [70..71]
 r318: [256..257]
 r319: [208..211]
 r320: [212..215]
 r321: [135..143]
 r322: [113..120]
	 Assigning to 317 (cl=AREG, orig=247, freq=332, tfirst=317, tfreq=332)...
	   Assign 0 to reload r317 (freq=332)
	 Assigning to 314 (cl=GENERAL_REGS, orig=232, freq=498, tfirst=314, tfreq=498)...
	   Assign 0 to reload r314 (freq=498)
	 Assigning to 315 (cl=GENERAL_REGS, orig=92, freq=498, tfirst=315, tfreq=498)...
	   Assign 37 to reload r315 (freq=498)
	 Assigning to 316 (cl=GENERAL_REGS, orig=237, freq=498, tfirst=316, tfreq=498)...
	   Assign 0 to reload r316 (freq=498)
	 Assigning to 301 (cl=GENERAL_REGS, orig=79, freq=3, tfirst=301, tfreq=5)...
	   Assign 1 to reload r301 (freq=3)
	Hard reg 1 is preferable by r319 with profit 1
	Hard reg 1 is preferable by r320 with profit 1
	 Assigning to 319 (cl=GENERAL_REGS, orig=150, freq=3, tfirst=301, tfreq=5)...
	   Assign 5 to inheritance r319 (freq=3)
	Hard reg 1 is preferable by r320 with profit 1
	Hard reg 5 is preferable by r320 with profit 1
	 Assigning to 320 (cl=GENERAL_REGS, orig=150, freq=3, tfirst=301, tfreq=5)...
	   Assign 44 to inheritance r320 (freq=3)
	 Assigning to 296 (cl=GENERAL_REGS, orig=150, freq=2, tfirst=296, tfreq=3)...
	   Assign 5 to reload r296 (freq=2)
	Hard reg 37 is preferable by r318 with profit 1
	Hard reg 5 is preferable by r318 with profit 1
	 Assigning to 318 (cl=GENERAL_REGS, orig=150, freq=3, tfirst=296, tfreq=3)...
	   Assign 5 to inheritance r318 (freq=3)
	 Assigning to 310 (cl=GENERAL_REGS, orig=217, freq=3, tfirst=310, tfreq=3)...
	   Assign 1 to reload r310 (freq=3)
	 Assigning to 311 (cl=GENERAL_REGS, orig=221, freq=3, tfirst=311, tfreq=3)...
	   Assign 2 to reload r311 (freq=3)
	 Assigning to 312 (cl=GENERAL_REGS, orig=225, freq=3, tfirst=312, tfreq=3)...
	   Assign 2 to reload r312 (freq=3)
	 Assigning to 321 (cl=GENERAL_REGS, orig=150, freq=3, tfirst=321, tfreq=3)...
	   Assign 5 to inheritance r321 (freq=3)
	 Assigning to 297 (cl=GENERAL_REGS, orig=70, freq=2, tfirst=297, tfreq=2)...
	   Assign 5 to reload r297 (freq=2)
	 Assigning to 299 (cl=GENERAL_REGS, orig=150, freq=2, tfirst=299, tfreq=2)...
	   Assign 0 to reload r299 (freq=2)
	 Assigning to 313 (cl=GENERAL_REGS, orig=150, freq=2, tfirst=313, tfreq=2)...
	   Assign 0 to reload r313 (freq=2)
	 Assigning to 322 (cl=GENERAL_REGS, orig=151, freq=2, tfirst=322, tfreq=2)...
	   Assign 0 to inheritance r322 (freq=2)
	 Assigning to 300 (cl=SSE_REGS, orig=170, freq=99, tfirst=300, tfreq=99)...
	   Assign 21 to reload r300 (freq=99)
	 Assigning to 304 (cl=SSE_REGS, orig=304, freq=5, tfirst=304, tfreq=5)...
	   Assign 25 to reload r304 (freq=5)
	 Assigning to 307 (cl=SSE_REGS, orig=307, freq=5, tfirst=307, tfreq=5)...
	   Assign 26 to reload r307 (freq=5)
	 Assigning to 308 (cl=SSE_REGS, orig=308, freq=5, tfirst=308, tfreq=5)...
	   Assign 27 to reload r308 (freq=5)
	 Assigning to 309 (cl=SSE_REGS, orig=309, freq=5, tfirst=309, tfreq=5)...
	   Assign 28 to reload r309 (freq=5)
	 Assigning to 305 (cl=SSE_REGS, orig=189, freq=3, tfirst=305, tfreq=3)...
	   Assign 24 to reload r305 (freq=3)
	 Assigning to 306 (cl=SSE_REGS, orig=190, freq=3, tfirst=306, tfreq=3)...
	   Assign 22 to reload r306 (freq=3)
	 Assigning to 298 (cl=SSE_REGS, orig=129, freq=2, tfirst=298, tfreq=2)...
	   Assign 25 to reload r298 (freq=2)
	 Assigning to 302 (cl=SSE_REGS, orig=147, freq=2, tfirst=302, tfreq=2)...
	   Assign 26 to reload r302 (freq=2)
	Hard reg 26 is preferable by r303 with profit 1
	Improving inheritance for 319(5) and 320(44)...
	   Assign 44 to inheritance r320 (freq=3)
	Improving inheritance for 320(44) and 319(5)...
	   Assign 44 to inheritance r319 (freq=3)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 5 out of 5 (100.00%)

********** Local #2: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 499:  (0) m  (1) re {*movsi_internal}
  Slot 0 regnos (width = 4):	 150
  Slot 1 regnos (width = 4):	 129	 303
  Slot 2 regnos (width = 4):	 70
  Slot 3 regnos (width = 8):	 148
  Slot 4 regnos (width = 8):	 146
Changing spilled pseudos to memory in insn #4
Changing spilled pseudos to memory in insn #6
Changing spilled pseudos to memory in insn #499
Changing spilled pseudos to memory in insn #460
Changing spilled pseudos to memory in insn #25
Changing spilled pseudos to memory in insn #32
Changing spilled pseudos to memory in insn #40
Changing spilled pseudos to memory in insn #461
Changing spilled pseudos to memory in insn #462
Changing spilled pseudos to memory in insn #463
Changing spilled pseudos to memory in insn #501
Changing spilled pseudos to memory in insn #467
Changing spilled pseudos to memory in insn #468
Changing spilled pseudos to memory in insn #209
Changing spilled pseudos to memory in insn #502
Changing spilled pseudos to memory in insn #242
Changing spilled pseudos to memory in insn #491
Changing spilled pseudos to memory in insn #18
Changing spilled pseudos to memory in insn #326
Changing spilled pseudos to memory in insn #327
Changing spilled pseudos to memory in insn #343
New elimination table:
Can eliminate 16 to 7 (offset=512, prev_offset=480)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=448, prev_offset=416)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 105
Updating elimination of equiv for reg 153
Updating elimination of equiv for reg 172
Updating elimination of equiv for reg 217
Updating elimination of equiv for reg 221
Updating elimination of equiv for reg 225
Updating elimination of equiv for reg 250

********** Local #3: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r  (1) p {*leadi}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 324:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 173:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 158:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 143:  (0) m  (1) x {*movv4si_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 128:  (0) m  (1) x {*movv4si_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 97:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 343:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 326:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=13,losers=2,rld_nregs=1
          alt=1,overall=18,losers=2 -- reject
          alt=2,overall=14,losers=2 -- reject
          alt=3,overall=14,losers=2 -- reject
          alt=4,overall=19,losers=2 -- reject
          alt=5,overall=20,losers=2 -- reject
          alt=7,overall=11,losers=1,rld_nregs=1
          alt=8,overall=19,losers=2 -- reject
          alt=9,overall=19,losers=2 -- reject
          alt=11,overall=1,losers=0,rld_nregs=0
	 Choosing alt 11 in insn 468:  (0) *x  (1) m {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 467:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 463:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=17,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 461:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=25,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 460:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 499:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can eliminate 16 to 7 (offset=512, prev_offset=512)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=448, prev_offset=448)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 105
Updating elimination of equiv for reg 153
Updating elimination of equiv for reg 172
Updating elimination of equiv for reg 217
Updating elimination of equiv for reg 221
Updating elimination of equiv for reg 225
Updating elimination of equiv for reg 250
changing reg in insn 15
changing reg in insn 449
changing reg in insn 231
changing reg in insn 235
changing reg in insn 195
changing reg in insn 16
changing reg in insn 450
changing reg in insn 80
changing reg in insn 82
changing reg in insn 107
changing reg in insn 110
changing reg in insn 208
changing reg in insn 176
changing reg in insn 161
changing reg in insn 146
changing reg in insn 131
changing reg in insn 107
changing reg in insn 219
changing reg in insn 226
changing reg in insn 225
changing reg in insn 222
changing reg in insn 221
changing reg in insn 253
changing reg in insn 270
changing reg in insn 267
changing reg in insn 256
changing reg in insn 439
changing reg in insn 255
changing reg in insn 426
changing reg in insn 290
changing reg in insn 259
changing reg in insn 256
changing reg in insn 440
changing reg in insn 271
changing reg in insn 281
changing reg in insn 270
changing reg in insn 427
changing reg in insn 271
changing reg in insn 275
changing reg in insn 283
changing reg in insn 312
changing reg in insn 286
changing reg in insn 242
changing reg in insn 414
changing reg in insn 13
changing reg in insn 403
changing reg in insn 330
changing reg in insn 331
changing reg in insn 20
changing reg in insn 415
changing reg in insn 19
changing reg in insn 18
changing reg in insn 323
changing reg in insn 14
changing reg in insn 208
changing reg in insn 209
changing reg in insn 361
changing reg in insn 231
changing reg in insn 219
changing reg in insn 214
changing reg in insn 213
changing reg in insn 305
changing reg in insn 430
changing reg in insn 246
changing reg in insn 411
changing reg in insn 74
changing reg in insn 404
changing reg in insn 409
changing reg in insn 5
changing reg in insn 412
changing reg in insn 405
changing reg in insn 69
changing reg in insn 62
changing reg in insn 7
changing reg in insn 406
changing reg in insn 410
changing reg in insn 9
changing reg in insn 413
changing reg in insn 407
changing reg in insn 229
changing reg in insn 217
changing reg in insn 198
changing reg in insn 180
changing reg in insn 165
changing reg in insn 150
changing reg in insn 135
changing reg in insn 120
changing reg in insn 11
changing reg in insn 24
changing reg in insn 44
changing reg in insn 28
changing reg in insn 40
changing reg in insn 43
changing reg in insn 43
changing reg in insn 51
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 49
changing reg in insn 72
changing reg in insn 74
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 100
changing reg in insn 117
changing reg in insn 166
changing reg in insn 151
changing reg in insn 136
changing reg in insn 121
changing reg in insn 127
changing reg in insn 125
changing reg in insn 127
changing reg in insn 128
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 126
changing reg in insn 142
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 140
changing reg in insn 141
changing reg in insn 142
changing reg in insn 141
changing reg in insn 137
changing reg in insn 157
changing reg in insn 155
changing reg in insn 157
changing reg in insn 158
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 156
changing reg in insn 152
changing reg in insn 172
changing reg in insn 170
changing reg in insn 172
changing reg in insn 173
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 171
changing reg in insn 167
changing reg in insn 187
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 185
changing reg in insn 186
changing reg in insn 187
changing reg in insn 186
changing reg in insn 182
changing reg in insn 195
changing reg in insn 198
changing reg in insn 199
changing reg in insn 198
changing reg in insn 199
changing reg in insn 214
changing reg in insn 217
changing reg in insn 218
changing reg in insn 217
changing reg in insn 218
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 229
changing reg in insn 230
changing reg in insn 244
changing reg in insn 246
changing reg in insn 260
changing reg in insn 260
changing reg in insn 260
changing reg in insn 261
changing reg in insn 260
changing reg in insn 268
changing reg in insn 268
changing reg in insn 269
changing reg in insn 269
changing reg in insn 269
changing reg in insn 270
changing reg in insn 269
changing reg in insn 290
changing reg in insn 291
changing reg in insn 323
changing reg in insn 324
changing reg in insn 370
changing reg in insn 416
changing reg in insn 97
changing reg in insn 102
changing reg in insn 369
changing reg in insn 408
changing reg in insn 414
changing reg in insn 418
changing reg in insn 335
changing reg in insn 451
changing reg in insn 335
changing reg in insn 331
changing reg in insn 330
changing reg in insn 415
changing reg in insn 419
changing reg in insn 332
changing reg in insn 452
changing reg in insn 336
changing reg in insn 334
changing reg in insn 332
changing reg in insn 324
changing reg in insn 341
changing reg in insn 411
changing reg in insn 420
changing reg in insn 453
changing reg in insn 412
changing reg in insn 421
changing reg in insn 454
changing reg in insn 336
changing reg in insn 417
changing reg in insn 422
changing reg in insn 455
changing reg in insn 416
changing reg in insn 423
changing reg in insn 456
changing reg in insn 328
changing reg in insn 372
changing reg in insn 457
changing reg in insn 371
changing reg in insn 458
changing reg in insn 449
changing reg in insn 437
changing reg in insn 295
changing reg in insn 424
changing reg in insn 295
changing reg in insn 290
changing reg in insn 450
changing reg in insn 438
changing reg in insn 294
changing reg in insn 425
changing reg in insn 255
changing reg in insn 253
changing reg in insn 276
changing reg in insn 275
changing reg in insn 283
changing reg in insn 281
changing reg in insn 281
changing reg in insn 297
changing reg in insn 294
changing reg in insn 291
changing reg in insn 305
changing reg in insn 312
changing reg in insn 290
changing reg in insn 451
changing reg in insn 441
changing reg in insn 428
changing reg in insn 418
changing reg in insn 452
changing reg in insn 442
changing reg in insn 429
changing reg in insn 419
changing reg in insn 453
changing reg in insn 443
changing reg in insn 431
changing reg in insn 420
changing reg in insn 297
changing reg in insn 454
changing reg in insn 444
changing reg in insn 432
changing reg in insn 421
changing reg in insn 260
changing reg in insn 260
changing reg in insn 271
changing reg in insn 269
changing reg in insn 269
changing reg in insn 455
changing reg in insn 445
changing reg in insn 433
changing reg in insn 422
changing reg in insn 276
changing reg in insn 456
changing reg in insn 446
changing reg in insn 434
changing reg in insn 423
changing reg in insn 275
changing reg in insn 283
changing reg in insn 312
changing reg in insn 457
changing reg in insn 447
changing reg in insn 435
changing reg in insn 255
changing reg in insn 291
changing reg in insn 290
changing reg in insn 458
changing reg in insn 448
changing reg in insn 436
changing reg in insn 253
changing reg in insn 424
changing reg in insn 437
changing reg in insn 425
changing reg in insn 438
changing reg in insn 426
changing reg in insn 439
changing reg in insn 427
changing reg in insn 308
changing reg in insn 440
changing reg in insn 308
changing reg in insn 308
changing reg in insn 428
changing reg in insn 441
changing reg in insn 429
changing reg in insn 442
changing reg in insn 430
changing reg in insn 308
changing reg in insn 308
changing reg in insn 431
changing reg in insn 443
changing reg in insn 432
changing reg in insn 444
changing reg in insn 433
changing reg in insn 445
changing reg in insn 434
changing reg in insn 446
changing reg in insn 435
changing reg in insn 447
changing reg in insn 436
changing reg in insn 448
changing reg in insn 403
changing reg in insn 86
changing reg in insn 87
changing reg in insn 86
changing reg in insn 83
changing reg in insn 77
changing reg in insn 82
changing reg in insn 404
changing reg in insn 87
changing reg in insn 405
changing reg in insn 409
changing reg in insn 406
changing reg in insn 77
changing reg in insn 407
changing reg in insn 410
changing reg in insn 408
changing reg in insn 83
changing reg in insn 82
deleting insn with uid = 469.
deleting insn with uid = 476.
deleting insn with uid = 479.
deleting insn with uid = 482.


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 6 failed.
Forwarding edge 6->7 to 40 failed.
Forwarding edge 18->19 to 6 failed.
Forwarding edge 22->23 to 6 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 329.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 60 count 48 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 60 count 45 (  1.1)


void tileswrap(int*, int, collision_table*, float*, int, int*, int*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={35d,40u,1e} r1={30d,38u,2e} r2={16d,22u,1e} r3={8d,19u} r4={12d,11u} r5={18d,17u,1e} r6={9d,17u,1e} r7={1d,85u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1e} r17={48d,20u} r18={4d} r19={4d} r20={10e} r21={14d,15u} r22={11d,11u} r23={19d,15u} r24={22d,20u} r25={8d,3u} r26={8d,3u} r27={7d,2u} r28={7d,2u} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={8d,8u} r38={10d,6u} r39={4d} r40={8d,4u} r41={8d,11u,1e} r42={8d,8u} r43={8d,8u} r44={12d,19u,1e} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 866{443d,404u,19e} in 309{305 regular + 4 call} insns.
(note 3 0 21 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags] 43 [r14]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags] 43 [r14]
;; live  kill	
(note 21 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 21 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S8 A64])
        (reg:DI 5 di [ the_tiles ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ the_tiles ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg:SI 4 si [ num_tilings ])) tiles.cpp:492 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_tilings ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])
        (reg:DI 1 dx [ ctable ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ ctable ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 43 r14 [orig:149 floats ] [149])
        (reg:DI 2 cx [ floats ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ floats ])
        (nil)))
(insn 8 7 499 2 (set (reg/v:SI 5 di [orig:150 num_floats ] [150])
        (reg:SI 37 r8 [ num_floats ])) tiles.cpp:492 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ num_floats ])
        (nil)))
(insn 499 8 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])
        (reg/v:SI 5 di [orig:150 num_floats ] [150])) tiles.cpp:492 89 {*movsi_internal}
     (nil))
(insn 9 499 11 2 (set (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
        (reg:DI 38 r9 [ wrap_widths ])) tiles.cpp:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ wrap_widths ])
        (nil)))
(insn 11 9 12 2 (set (reg/v:SI 0 ax [orig:153 num_ints ] [153])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 520 [0x208])) [0 num_ints+0 S4 A64])) tiles.cpp:492 89 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 num_ints+0 S4 A64])
        (nil)))
(note 12 11 23 2 NOTE_INSN_FUNCTION_BEG)
(note 23 12 459 2 NOTE_INSN_DELETED)
(insn 459 23 24 2 (set (reg/v:SI 5 di [orig:150 num_floats ] [150])
        (reg/v:SI 5 di [orig:150 num_floats ] [150])) tiles.cpp:498 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:150 num_floats ] [150])
        (nil)))
(insn 24 459 460 2 (set (reg/v:SI 5 di [orig:70 num_coordinates ] [70])
        (plus:SI (plus:SI (reg/v:SI 5 di [orig:150 num_floats ] [150])
                (reg/v:SI 0 ax [orig:153 num_ints ] [153]))
            (const_int 1 [0x1]))) tiles.cpp:498 266 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:150 num_floats ] [150])
        (nil)))
(insn 460 24 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [0 %sfp+-20 S4 A32])
        (reg/v:SI 5 di [orig:70 num_coordinates ] [70])) tiles.cpp:498 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:70 num_coordinates ] [70])
        (nil)))
(debug_insn 25 460 27 2 (var_location:SI num_coordinates (mem/c:SI (plus:DI (reg/f:DI 7 sp)
            (const_int 12 [0xc])) [0 %sfp+-20 S4 A32])) tiles.cpp:498 -1
     (nil))
(debug_insn 27 25 28 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 28 27 29 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 0 ax [orig:153 num_ints ] [153])
            (const_int 0 [0]))) tiles.cpp:500 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 29 28 55 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) tiles.cpp:500 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9762 [0x2622])
        (nil))
 -> 37)
;;  succ:       5 [97.6%] 
;;              3 [2.4%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14]

;; basic block 3, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [2.4%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 55 29 30 3 172 "" [1 uses])
(note 30 55 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 3 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 32 31 33 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])
            (const_int 0 [0]))) tiles.cpp:503 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 33 32 375 3 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 67)
;;  succ:       8 [95.2%] 
;;              4 [4.8%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]

;; basic block 4, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [4.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 375 33 376 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 376 375 377 4 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 377 376 37)
;; basic block 5, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [97.6%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 37 377 38 5 169 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 39 38 40 5 NOTE_INSN_DELETED)
(insn 40 39 41 5 (set (reg:DI 1 dx [orig:156 D.26282 ] [156])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32]))) tiles.cpp:500 149 {*extendsidi2_rex64}
     (nil))
(note 41 40 42 5 NOTE_INSN_DELETED)
(note 42 41 43 5 NOTE_INSN_DELETED)
(insn 43 42 44 5 (set (reg:DI 5 di [orig:159 D.26289 ] [159])
        (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:156 D.26282 ] [156])
                    (const_int 4 [0x4]))
                (reg/f:DI 7 sp))
            (const_int 276 [0x114]))) tiles.cpp:500 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:156 D.26282 ] [156])
        (nil)))
(insn 44 43 45 5 (set (reg:DI 0 ax [orig:160 D.26282 ] [160])
        (sign_extend:DI (reg/v:SI 0 ax [orig:153 num_ints ] [153]))) tiles.cpp:500 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:153 num_ints ] [153])
        (nil)))
(insn 45 44 49 5 (parallel [
            (set (reg:DI 1 dx [orig:161 D.26282 ] [161])
                (ashift:DI (reg:DI 0 ax [orig:160 D.26282 ] [160])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:500 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:160 D.26282 ] [160])
        (nil)))
(insn 49 45 50 5 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:161 D.26282 ] [161])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:161 D.26282 ] [161])
        (nil)))
(insn 50 49 51 5 (set (reg:DI 4 si)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 512 [0x200])) [0 ints+0 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 5 di [orig:159 D.26289 ] [159])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:159 D.26289 ] [159])
        (nil)))
(call_insn 52 51 378 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b67b90e9500 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 378 52 379 5 (set (pc)
        (label_ref 55)) 650 {jump}
     (nil)
 -> 55)
;;  succ:       3 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]

(barrier 379 378 59)
;; basic block 6, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;;              21 [25.0%] 
;;              4 [100.0%] 
;;              17 [100.0%] 
;;              23 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 59 379 60 6 171 "" [5 uses])
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(insn 62 61 63 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
            (const_int 0 [0]))) tiles.cpp:510 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 63 62 380 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) tiles.cpp:510 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 240)
;;  succ:       24 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 380 63 381 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 381 380 382 7 (set (pc)
        (label_ref 351)) 650 {jump}
     (nil)
 -> 351)
;;  succ:       40 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 382 381 67)
;; basic block 8, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [95.2%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 25 [xmm4] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 25 [xmm4] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 67 382 68 8 170 "" [1 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 461 8 (set (reg:SF 25 xmm4 [orig:129 D.26283 ] [129])
        (float:SF (reg/v:SI 3 bx [orig:147 num_tilings ] [147]))) 240 {*floatsisf2_sse_interunit}
     (nil))
(insn 461 69 71 8 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A32])
        (reg:SF 25 xmm4 [orig:129 D.26283 ] [129])) 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 25 xmm4 [orig:129 D.26283 ] [129])
        (nil)))
(note 71 461 462 8 NOTE_INSN_DELETED)
(insn 462 71 72 8 (set (reg/v:SI 0 ax [orig:150 num_floats ] [150])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) 89 {*movsi_internal}
     (nil))
(insn 72 462 73 8 (set (reg:DI 0 ax [orig:168 D.26282 ] [168])
        (zero_extend:DI (plus:SI (reg/v:SI 0 ax [orig:150 num_floats ] [150])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:150 num_floats ] [150])
        (nil)))
(note 73 72 74 8 NOTE_INSN_DELETED)
(insn 74 73 13 8 (set (reg:DI 42 r13 [orig:145 D.26282 ] [145])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:168 D.26282 ] [168])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:168 D.26282 ] [168])
        (nil)))
(insn 13 74 369 8 (set (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])
        (const_int 0 [0])) tiles.cpp:503 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 369 13 403 8 (set (reg/f:DI 41 r12 [257])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))
        (nil)))
(insn 403 369 404 8 (set (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])
        (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])
        (nil)))
(insn 404 403 405 8 (set (reg:DI 42 r13 [orig:145 D.26282 ] [145])
        (reg:DI 42 r13 [orig:145 D.26282 ] [145])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:145 D.26282 ] [145])
        (nil)))
(insn 405 404 406 8 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (nil)))
(insn 406 405 407 8 (set (reg/v/f:DI 43 r14 [orig:149 floats ] [149])
        (reg/v/f:DI 43 r14 [orig:149 floats ] [149])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:149 floats ] [149])
        (nil)))
(insn 407 406 408 8 (set (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
        (nil)))
(insn 408 407 90 8 (set (reg/f:DI 41 r12 [257])
        (reg/f:DI 41 r12 [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [257])
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 330, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [95.2%]  (DFS_BACK)
;;              8 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 21 [xmm0] 44 [r15]
;; live  kill	 17 [flags]
(code_label 90 408 75 9 176 "" [1 uses])
(note 75 90 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 463 9 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 463 76 77 9 (set (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A32])) tiles.cpp:504 135 {*movsf_internal}
     (nil))
(insn 77 463 464 9 (set (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])
        (mult:SF (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])
            (mem:SF (plus:DI (reg/v/f:DI 43 r14 [orig:149 floats ] [149])
                    (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])) [0 MEM[base: floats_29(D), index: ivtmp.311_79, offset: 0B]+0 S4 A32]))) tiles.cpp:504 777 {*fop_sf_comm_sse}
     (nil))
(insn 464 77 78 9 (set (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])
        (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])) tiles.cpp:504 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])
        (nil)))
(insn 78 464 79 9 (set (reg:SF 21 xmm0)
        (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])) tiles.cpp:504 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:170 D.26283 ] [170])
        (nil)))
(call_insn/u 79 78 80 9 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floorf") [flags 0x41]  <function_decl 0x2b67b7876a00 __builtin_floorf>) [0 __builtin_floorf S1 A8])
            (const_int 0 [0]))) tiles.cpp:504 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 80 79 82 9 (set (reg:SF 21 xmm0 [orig:74 D.26283 ] [74])
        (reg:SF 21 xmm0)) tiles.cpp:504 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 82 80 83 9 (set (reg:SI 0 ax [172])
        (fix:SI (reg:SF 21 xmm0 [orig:74 D.26283 ] [74]))) tiles.cpp:504 177 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:74 D.26283 ] [74])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 41 r12 [257])
                    (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])) [0 MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B]+0 S4 A32])
            (nil))))
(insn 83 82 85 9 (set (mem:SI (plus:DI (reg/f:DI 41 r12 [257])
                (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])) [0 MEM[symbol: qstate, index: ivtmp.311_79, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [172])) tiles.cpp:504 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [172])
        (nil)))
(debug_insn 85 83 86 9 (var_location:SI i (debug_expr:SI D#19)) -1
     (nil))
(insn 86 85 87 9 (parallel [
            (set (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])
                (plus:DI (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 87 86 88 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 44 r15 [orig:103 ivtmp.311 ] [103])
            (reg:DI 42 r13 [orig:145 D.26282 ] [145]))) tiles.cpp:503 8 {*cmpdi_1}
     (nil))
(jump_insn 88 87 94 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 90)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 90)
;;  succ:       9 [95.2%]  (DFS_BACK)
;;              10 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 44 [r15]
;; live  kill	 17 [flags]
(note 94 88 409 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 409 94 410 10 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (nil)))
(insn 410 409 501 10 (set (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
        (nil)))
(insn 501 410 95 10 (set (reg/v:SI 44 r15 [orig:150 num_floats ] [150])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) tiles.cpp:505 89 {*movsi_internal}
     (nil))
(insn 95 501 96 10 (set (reg:DI 1 dx [orig:173 D.26282 ] [173])
        (sign_extend:DI (reg/v:SI 44 r15 [orig:150 num_floats ] [150]))) tiles.cpp:505 149 {*extendsidi2_rex64}
     (nil))
(insn 96 95 97 10 (parallel [
            (set (reg:DI 1 dx [orig:174 D.26282 ] [174])
                (ashift:DI (reg:DI 1 dx [orig:173 D.26282 ] [173])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:505 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:173 D.26282 ] [173])
        (nil)))
(insn 97 96 100 10 (parallel [
            (set (reg/f:DI 5 di [256])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 100 97 101 10 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:174 D.26282 ] [174])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:174 D.26282 ] [174])
        (nil)))
(insn 101 100 102 10 (set (reg:SI 4 si)
        (const_int 0 [0])) 89 {*movsi_internal}
     (nil))
(insn 102 101 103 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [256])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0]))
            (nil))))
(call_insn 103 102 500 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2b67b90e9600 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 500 103 465 10 (set (reg/v:SI 44 r15 [orig:150 num_floats ] [150])
        (reg/v:SI 44 r15 [orig:150 num_floats ] [150])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:150 num_floats ] [150])
        (nil)))
(insn 465 500 106 10 (set (reg:SI 1 dx [orig:79 bnd.268 ] [79])
        (reg/v:SI 44 r15 [orig:150 num_floats ] [150])) 89 {*movsi_internal}
     (nil))
(insn 106 465 466 10 (parallel [
            (set (reg:SI 1 dx [orig:79 bnd.268 ] [79])
                (lshiftrt:SI (reg:SI 1 dx [orig:79 bnd.268 ] [79])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 545 {*lshrsi3_1}
     (nil))
(insn 466 106 107 10 (set (reg:SI 1 dx [orig:79 bnd.268 ] [79])
        (reg:SI 1 dx [orig:79 bnd.268 ] [79])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:79 bnd.268 ] [79])
        (nil)))
(insn 107 466 108 10 (parallel [
            (set (reg:SI 0 ax [orig:78 ratio_mult_vf.269 ] [78])
                (ashift:SI (reg:SI 1 dx [orig:79 bnd.268 ] [79])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashlsi3_1}
     (nil))
(note 108 107 109 10 NOTE_INSN_DELETED)
(note 109 108 110 10 NOTE_INSN_DELETED)
(insn 110 109 111 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:78 ratio_mult_vf.269 ] [78])
            (const_int 0 [0]))) 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 111 110 360 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 357)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 357)
;;  succ:       20 [33.3%] 
;;              11 [66.7%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [66.7%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 360 111 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 112 360 113 11 NOTE_INSN_DELETED)
(note 113 112 114 11 NOTE_INSN_DELETED)
(insn 114 113 115 11 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 44 r15 [orig:150 num_floats ] [150])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:150 num_floats ] [150])
        (nil)))
(jump_insn 115 114 116 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 357)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3334 [0xd06])
        (nil))
 -> 357)
;;  succ:       12 [66.7%]  (FALLTHRU)
;;              20 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]

;; basic block 12, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [66.7%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5]
;; live  kill	
(note 116 115 467 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 467 116 468 12 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A32])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (nil))
(insn 468 467 117 12 (set (reg/v:SI 26 xmm5 [orig:147 num_tilings ] [147])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 %sfp+-24 S4 A32])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 303)
        (nil)))
(insn 117 468 119 12 (set (reg:V4SI 21 xmm0 [184])
        (vec_duplicate:V4SI (reg/v:SI 26 xmm5 [orig:147 num_tilings ] [147]))) 1643 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg/v:SI 26 xmm5 [orig:147 num_tilings ] [147])
        (nil)))
(debug_insn 119 117 120 12 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 120 119 470 12 (set (reg:V16QI 22 xmm1 [orig:185 vect_var_.275 ] [185])
        (unspec:V16QI [
                (mem:V16QI (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151]) [0 MEM[(int *)wrap_widths_39(D)]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 470 120 121 12 (set (reg:V4SI 25 xmm4 [304])
        (reg:V4SI 22 xmm1 [orig:185 vect_var_.275 ] [185])) tiles.cpp:506 1142 {*movv4si_internal}
     (nil))
(insn 121 470 471 12 (set (reg:V2DI 25 xmm4 [304])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 25 xmm4 [304])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [184])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 471 121 472 12 (set (reg:V2DI 23 xmm2 [187])
        (reg:V2DI 25 xmm4 [304])) tiles.cpp:506 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 25 xmm4 [304])
        (nil)))
(insn 472 471 122 12 (set (reg:V2DI 24 xmm3 [189])
        (reg:V2DI 22 xmm1 [orig:185 vect_var_.275 ] [185])) tiles.cpp:506 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [orig:185 vect_var_.275 ] [185])
        (nil)))
(insn 122 472 473 12 (set (reg:V2DI 24 xmm3 [189])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [189])
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (nil))
(insn 473 122 474 12 (set (reg:V2DI 24 xmm3 [189])
        (reg:V2DI 24 xmm3 [189])) tiles.cpp:506 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [189])
        (nil)))
(insn 474 473 123 12 (set (reg:V2DI 22 xmm1 [190])
        (reg:V2DI 21 xmm0 [184])) tiles.cpp:506 1144 {*movv2di_internal}
     (nil))
(insn 123 474 475 12 (set (reg:V2DI 22 xmm1 [190])
        (lshiftrt:V2DI (reg:V2DI 22 xmm1 [190])
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (nil))
(insn 475 123 124 12 (set (reg:V2DI 22 xmm1 [190])
        (reg:V2DI 22 xmm1 [190])) tiles.cpp:506 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [190])
        (nil)))
(insn 124 475 125 12 (set (reg:V2DI 24 xmm3 [188])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [189])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [190])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [189])
        (nil)))
(insn 125 124 126 12 (set (reg:V4SI 23 xmm2 [orig:186 vect_var_.276 ] [186])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [187])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [187])
        (nil)))
(insn 126 125 127 12 (set (reg:V4SI 24 xmm3 [188])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [188])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 127 126 128 12 (set (reg:V4SI 23 xmm2 [orig:186 vect_var_.276 ] [186])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:186 vect_var_.276 ] [186])
                (reg:V4SI 24 xmm3 [188]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [188])
        (nil)))
(insn 128 127 130 12 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:186 vect_var_.276 ] [186])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:186 vect_var_.276 ] [186])
        (nil)))
(debug_insn 130 128 131 12 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 131 130 132 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:79 bnd.268 ] [79])
            (const_int 1 [0x1]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 132 131 133 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       13 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]

;; basic block 13, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [66.7%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 17 [flags] 23 [xmm2] 24 [xmm3] 26 [xmm5]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 17 [flags] 23 [xmm2] 24 [xmm3] 26 [xmm5]
;; live  kill	
(note 133 132 134 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 134 133 135 13 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 135 134 477 13 (set (reg:V16QI 24 xmm3 [orig:191 vect_var_.275 ] [191])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
                        (const_int 16 [0x10])) [0 MEM[(int *)wrap_widths_39(D) + 16B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 477 135 136 13 (set (reg:V4SI 26 xmm5 [307])
        (reg:V4SI 24 xmm3 [orig:191 vect_var_.275 ] [191])) tiles.cpp:506 1142 {*movv4si_internal}
     (nil))
(insn 136 477 478 13 (set (reg:V2DI 26 xmm5 [307])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [307])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [184])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 478 136 137 13 (set (reg:V2DI 23 xmm2 [193])
        (reg:V2DI 26 xmm5 [307])) tiles.cpp:506 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 26 xmm5 [307])
        (nil)))
(insn 137 478 139 13 (set (reg:V2DI 24 xmm3 [195])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [orig:191 vect_var_.275 ] [191])
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:191 vect_var_.275 ] [191])
        (nil)))
(insn 139 137 140 13 (set (reg:V2DI 24 xmm3 [194])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [195])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [190])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [195])
        (nil)))
(insn 140 139 141 13 (set (reg:V4SI 23 xmm2 [orig:192 vect_var_.276 ] [192])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [193])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [193])
        (nil)))
(insn 141 140 142 13 (set (reg:V4SI 24 xmm3 [194])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [194])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 142 141 143 13 (set (reg:V4SI 23 xmm2 [orig:192 vect_var_.276 ] [192])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:192 vect_var_.276 ] [192])
                (reg:V4SI 24 xmm3 [194]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [194])
        (nil)))
(insn 143 142 145 13 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 16B]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:192 vect_var_.276 ] [192])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:192 vect_var_.276 ] [192])
        (nil)))
(debug_insn 145 143 146 13 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 146 145 147 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:79 bnd.268 ] [79])
            (const_int 2 [0x2]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 147 146 148 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       14 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]

;; basic block 14, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [66.7%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 17 [flags] 23 [xmm2] 24 [xmm3] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 17 [flags] 23 [xmm2] 24 [xmm3] 27 [xmm6]
;; live  kill	
(note 148 147 149 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 149 148 150 14 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 150 149 480 14 (set (reg:V16QI 24 xmm3 [orig:197 vect_var_.275 ] [197])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
                        (const_int 32 [0x20])) [0 MEM[(int *)wrap_widths_39(D) + 32B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 480 150 151 14 (set (reg:V4SI 27 xmm6 [308])
        (reg:V4SI 24 xmm3 [orig:197 vect_var_.275 ] [197])) tiles.cpp:506 1142 {*movv4si_internal}
     (nil))
(insn 151 480 481 14 (set (reg:V2DI 27 xmm6 [308])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 27 xmm6 [308])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [184])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 481 151 152 14 (set (reg:V2DI 23 xmm2 [199])
        (reg:V2DI 27 xmm6 [308])) tiles.cpp:506 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 27 xmm6 [308])
        (nil)))
(insn 152 481 154 14 (set (reg:V2DI 24 xmm3 [201])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [orig:197 vect_var_.275 ] [197])
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:197 vect_var_.275 ] [197])
        (nil)))
(insn 154 152 155 14 (set (reg:V2DI 24 xmm3 [200])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [201])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [190])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [201])
        (nil)))
(insn 155 154 156 14 (set (reg:V4SI 23 xmm2 [orig:198 vect_var_.276 ] [198])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [199])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [199])
        (nil)))
(insn 156 155 157 14 (set (reg:V4SI 24 xmm3 [200])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [200])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 157 156 158 14 (set (reg:V4SI 23 xmm2 [orig:198 vect_var_.276 ] [198])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:198 vect_var_.276 ] [198])
                (reg:V4SI 24 xmm3 [200]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [200])
        (nil)))
(insn 158 157 160 14 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 32B]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:198 vect_var_.276 ] [198])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:198 vect_var_.276 ] [198])
        (nil)))
(debug_insn 160 158 161 14 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 161 160 162 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:79 bnd.268 ] [79])
            (const_int 3 [0x3]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 162 161 163 14 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       15 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]

;; basic block 15, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [66.7%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 17 [flags] 23 [xmm2] 24 [xmm3] 28 [xmm7]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 17 [flags] 23 [xmm2] 24 [xmm3] 28 [xmm7]
;; live  kill	
(note 163 162 164 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 164 163 165 15 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 165 164 483 15 (set (reg:V16QI 24 xmm3 [orig:203 vect_var_.275 ] [203])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
                        (const_int 48 [0x30])) [0 MEM[(int *)wrap_widths_39(D) + 48B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 483 165 166 15 (set (reg:V4SI 28 xmm7 [309])
        (reg:V4SI 24 xmm3 [orig:203 vect_var_.275 ] [203])) tiles.cpp:506 1142 {*movv4si_internal}
     (nil))
(insn 166 483 484 15 (set (reg:V2DI 28 xmm7 [309])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 28 xmm7 [309])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [184])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (nil))
(insn 484 166 167 15 (set (reg:V2DI 23 xmm2 [205])
        (reg:V2DI 28 xmm7 [309])) tiles.cpp:506 1144 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 28 xmm7 [309])
        (nil)))
(insn 167 484 169 15 (set (reg:V2DI 24 xmm3 [207])
        (lshiftrt:V2DI (reg:V2DI 24 xmm3 [orig:203 vect_var_.275 ] [203])
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:203 vect_var_.275 ] [203])
        (nil)))
(insn 169 167 170 15 (set (reg:V2DI 24 xmm3 [206])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [207])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [190])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [207])
        (nil)))
(insn 170 169 171 15 (set (reg:V4SI 23 xmm2 [orig:204 vect_var_.276 ] [204])
        (vec_select:V4SI (reg:V4SI 23 xmm2 [205])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [205])
        (nil)))
(insn 171 170 172 15 (set (reg:V4SI 24 xmm3 [206])
        (vec_select:V4SI (reg:V4SI 24 xmm3 [206])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 172 171 173 15 (set (reg:V4SI 23 xmm2 [orig:204 vect_var_.276 ] [204])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 23 xmm2 [orig:204 vect_var_.276 ] [204])
                (reg:V4SI 24 xmm3 [206]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [206])
        (nil)))
(insn 173 172 175 15 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 48B]+0 S16 A128])
        (reg:V4SI 23 xmm2 [orig:204 vect_var_.276 ] [204])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:204 vect_var_.276 ] [204])
        (nil)))
(debug_insn 175 173 176 15 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(insn 176 175 177 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:79 bnd.268 ] [79])
            (const_int 4 [0x4]))) 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:79 bnd.268 ] [79])
        (nil)))
(jump_insn 177 176 178 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil))
 -> 206)
;;  succ:       16 [66.7%]  (FALLTHRU)
;;              18 [33.3%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]

;; basic block 16, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [66.7%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; live  gen 	 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  kill	
(note 178 177 179 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 179 178 180 16 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 180 179 181 16 (set (reg:V16QI 23 xmm2 [orig:209 vect_var_.275 ] [209])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
                        (const_int 64 [0x40])) [0 MEM[(int *)wrap_widths_39(D) + 64B]+0 S16 A32])
            ] UNSPEC_LOADU)) tiles.cpp:506 1162 {sse2_loaddqu}
     (nil))
(insn 181 180 182 16 (set (reg:V2DI 21 xmm0 [211])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [184])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [orig:209 vect_var_.275 ] [209])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [184])
        (nil)))
(insn 182 181 184 16 (set (reg:V2DI 23 xmm2 [213])
        (lshiftrt:V2DI (reg:V2DI 23 xmm2 [orig:209 vect_var_.275 ] [209])
            (const_int 32 [0x20]))) tiles.cpp:506 1522 {lshrv2di3}
     (expr_list:REG_DEAD (reg:V4SI 23 xmm2 [orig:209 vect_var_.275 ] [209])
        (nil)))
(insn 184 182 185 16 (set (reg:V2DI 22 xmm1 [212])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [190])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [213])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) tiles.cpp:506 1500 {*vec_widen_umult_even_v4si}
     (expr_list:REG_DEAD (reg:V2DI 23 xmm2 [213])
        (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [190])
            (nil))))
(insn 185 184 186 16 (set (reg:V4SI 21 xmm0 [orig:210 vect_var_.276 ] [210])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [211])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [211])
        (nil)))
(insn 186 185 187 16 (set (reg:V4SI 22 xmm1 [212])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [212])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) tiles.cpp:506 1631 {sse2_pshufd_1}
     (nil))
(insn 187 186 188 16 (set (reg:V4SI 21 xmm0 [orig:210 vect_var_.276 ] [210])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [orig:210 vect_var_.276 ] [210])
                (reg:V4SI 22 xmm1 [212]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) tiles.cpp:506 1616 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [212])
        (nil)))
(insn 188 187 190 16 (set (mem/c:V4SI (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [0 MEM[(int[20] *)&wrap_widths_times_num_tilings + 64B]+0 S16 A128])
        (reg:V4SI 21 xmm0 [orig:210 vect_var_.276 ] [210])) tiles.cpp:506 1142 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [orig:210 vect_var_.276 ] [210])
        (nil)))
(debug_insn 190 188 383 16 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))
(jump_insn 383 190 384 16 (set (pc)
        (label_ref 206)) 650 {jump}
     (nil)
 -> 206)
;;  succ:       18 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

(barrier 384 383 234)
;; basic block 17, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [75.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 234 384 193 17 180 "" [1 uses])
(note 193 234 194 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 194 193 195 17 (var_location:SI i (debug_expr:SI D#21)) -1
     (nil))
(insn 195 194 197 17 (set (reg:DI 0 ax [orig:215 i ] [215])
        (sign_extend:DI (reg/v:SI 0 ax [orig:65 i ] [65]))) tiles.cpp:506 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:65 i ] [65])
        (nil)))
(note 197 195 485 17 NOTE_INSN_DELETED)
(insn 485 197 198 17 (set (reg:SI 1 dx [orig:217 D.26281 ] [217])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) tiles.cpp:506 89 {*movsi_internal}
     (nil))
(insn 198 485 486 17 (parallel [
            (set (reg:SI 1 dx [orig:217 D.26281 ] [217])
                (mult:SI (reg:SI 1 dx [orig:217 D.26281 ] [217])
                    (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:215 i ] [215])
                                (const_int 4 [0x4]))
                            (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])) [0 *_149+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 344 {*mulsi3_1}
     (expr_list:REG_EQUIV (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:215 i ] [215])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (nil)))
(insn 486 198 199 17 (set (reg:SI 1 dx [orig:217 D.26281 ] [217])
        (reg:SI 1 dx [orig:217 D.26281 ] [217])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:217 D.26281 ] [217])
        (nil)))
(insn 199 486 200 17 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:215 i ] [215])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 1 dx [orig:217 D.26281 ] [217])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:217 D.26281 ] [217])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:215 i ] [215])
            (nil))))
(debug_insn 200 199 202 17 (var_location:SI D#20 (plus:SI (debug_expr:SI D#21)
        (const_int 1 [0x1]))) tiles.cpp:503 -1
     (nil))
(debug_insn 202 200 385 17 (var_location:SI i (debug_expr:SI D#20)) -1
     (nil))
(jump_insn 385 202 386 17 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 386 385 206)
;; basic block 18, loop depth 0, count 0, freq 10, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [33.3%] 
;;              12 [33.3%] 
;;              13 [33.3%] 
;;              14 [33.3%] 
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 206 386 207 18 178 "" [5 uses])
(note 207 206 208 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 18 (set (reg/v:SI 0 ax [orig:113 i ] [113])
        (reg:SI 0 ax [orig:78 ratio_mult_vf.269 ] [78])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:78 ratio_mult_vf.269 ] [78])
        (nil)))
(insn 209 208 210 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:113 i ] [113])
            (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32]))) 7 {*cmpsi_1}
     (nil))
(jump_insn 210 209 387 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 211)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 6666 [0x1a0a])
        (nil))
 -> 211)
;;  succ:       21 [66.7%] 
;;              19 [33.3%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 [33.3%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 387 210 388 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 388 387 389 19 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 389 388 357)
;; basic block 20, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [33.3%] 
;;              10 [33.3%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 357 389 356 20 192 "" [2 uses])
(note 356 357 14 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 14 356 211 20 (set (reg/v:SI 0 ax [orig:113 i ] [113])
        (const_int 0 [0])) tiles.cpp:505 89 {*movsi_internal}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 21, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              18 [66.7%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 211 14 212 21 177 "" [1 uses])
(note 212 211 213 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 21 (var_location:SI i (reg/v:SI 0 ax [orig:113 i ] [113])) -1
     (nil))
(insn 214 213 216 21 (set (reg:DI 1 dx [orig:219 i ] [219])
        (sign_extend:DI (reg/v:SI 0 ax [orig:113 i ] [113]))) tiles.cpp:506 149 {*extendsidi2_rex64}
     (nil))
(note 216 214 487 21 NOTE_INSN_DELETED)
(insn 487 216 217 21 (set (reg:SI 2 cx [orig:221 D.26281 ] [221])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) tiles.cpp:506 89 {*movsi_internal}
     (nil))
(insn 217 487 488 21 (parallel [
            (set (reg:SI 2 cx [orig:221 D.26281 ] [221])
                (mult:SI (reg:SI 2 cx [orig:221 D.26281 ] [221])
                    (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:219 i ] [219])
                                (const_int 4 [0x4]))
                            (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])) [0 *_107+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 344 {*mulsi3_1}
     (expr_list:REG_EQUIV (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:219 i ] [219])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (nil)))
(insn 488 217 218 21 (set (reg:SI 2 cx [orig:221 D.26281 ] [221])
        (reg:SI 2 cx [orig:221 D.26281 ] [221])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:221 D.26281 ] [221])
        (nil)))
(insn 218 488 219 21 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:219 i ] [219])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 2 cx [orig:221 D.26281 ] [221])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:221 D.26281 ] [221])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:219 i ] [219])
            (nil))))
(insn 219 218 221 21 (parallel [
            (set (reg/v:SI 1 dx [orig:80 i ] [80])
                (plus:SI (reg/v:SI 0 ax [orig:113 i ] [113])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 273 {*addsi_1}
     (nil))
(debug_insn 221 219 502 21 (var_location:SI i (reg/v:SI 1 dx [orig:80 i ] [80])) -1
     (nil))
(insn 502 221 222 21 (set (reg/v:SI 5 di [orig:150 num_floats ] [150])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) tiles.cpp:503 89 {*movsi_internal}
     (nil))
(insn 222 502 223 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 5 di [orig:150 num_floats ] [150])
            (reg/v:SI 1 dx [orig:80 i ] [80]))) tiles.cpp:503 7 {*cmpsi_1}
     (nil))
(jump_insn 223 222 224 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil))
 -> 59)
;;  succ:       22 [75.0%]  (FALLTHRU)
;;              6 [25.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 22, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [75.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(note 224 223 225 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 22 (var_location:SI i (reg/v:SI 1 dx [orig:80 i ] [80])) -1
     (nil))
(insn 226 225 228 22 (set (reg:DI 1 dx [orig:223 i ] [223])
        (sign_extend:DI (reg/v:SI 1 dx [orig:80 i ] [80]))) tiles.cpp:506 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:80 i ] [80])
        (nil)))
(note 228 226 489 22 NOTE_INSN_DELETED)
(insn 489 228 229 22 (set (reg:SI 2 cx [orig:225 D.26281 ] [225])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) tiles.cpp:506 89 {*movsi_internal}
     (nil))
(insn 229 489 490 22 (parallel [
            (set (reg:SI 2 cx [orig:225 D.26281 ] [225])
                (mult:SI (reg:SI 2 cx [orig:225 D.26281 ] [225])
                    (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:223 i ] [223])
                                (const_int 4 [0x4]))
                            (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])) [0 *_33+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:506 344 {*mulsi3_1}
     (expr_list:REG_EQUIV (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:223 i ] [223])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -256 [0xffffffffffffff00])) [0 wrap_widths_times_num_tilings S4 A32])
        (nil)))
(insn 490 229 230 22 (set (reg:SI 2 cx [orig:225 D.26281 ] [225])
        (reg:SI 2 cx [orig:225 D.26281 ] [225])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:225 D.26281 ] [225])
        (nil)))
(insn 230 490 361 22 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:223 i ] [223])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 192 [0xc0])) [0 wrap_widths_times_num_tilings S4 A32])
        (reg:SI 2 cx [orig:225 D.26281 ] [225])) tiles.cpp:506 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:225 D.26281 ] [225])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:223 i ] [223])
            (nil))))
(debug_insn 361 230 231 22 (var_location:SI D#21 (plus:SI (reg/v:SI 0 ax [orig:113 i ] [113])
        (const_int 2 [0x2]))) -1
     (nil))
(insn 231 361 233 22 (parallel [
            (set (reg/v:SI 0 ax [orig:65 i ] [65])
                (plus:SI (reg/v:SI 0 ax [orig:113 i ] [113])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:503 273 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:113 i ] [113])
        (nil)))
(debug_insn 233 231 235 22 (var_location:SI i (debug_expr:SI D#21)) -1
     (nil))
(insn 235 233 236 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 0 ax [orig:65 i ] [65])
            (reg/v:SI 5 di [orig:150 num_floats ] [150]))) tiles.cpp:503 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:150 num_floats ] [150])
        (nil)))
(jump_insn 236 235 390 22 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) tiles.cpp:503 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 7500 [0x1d4c])
        (nil))
 -> 234)
;;  succ:       17 [75.0%] 
;;              23 [25.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 23, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 [25.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 390 236 391 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 391 390 392 23 (set (pc)
        (label_ref 59)) 650 {jump}
     (nil)
 -> 59)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 392 391 240)
;; basic block 24, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 240 392 241 24 173 "" [1 uses])
(note 241 240 242 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 24 (set (reg:DI 44 r15 [orig:93 ivtmp.305 ] [93])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+-8 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 146 [ the_tiles ])
        (nil)))
(note 243 242 491 24 NOTE_INSN_DELETED)
(insn 491 243 244 24 (set (reg/v:SI 0 ax [orig:150 num_floats ] [150])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) 89 {*movsi_internal}
     (nil))
(insn 244 491 245 24 (set (reg:DI 0 ax [orig:228 D.26282 ] [228])
        (zero_extend:DI (plus:SI (reg/v:SI 0 ax [orig:150 num_floats ] [150])
                (const_int -1 [0xffffffffffffffff])))) 267 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:150 num_floats ] [150])
        (nil)))
(note 245 244 246 24 NOTE_INSN_DELETED)
(insn 246 245 20 24 (set (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:228 D.26282 ] [228])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:228 D.26282 ] [228])
        (nil)))
(insn 20 246 370 24 (set (reg/v:SI 43 r14 [orig:106 j ] [106])
        (const_int 0 [0])) tiles.cpp:510 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 370 20 411 24 (set (reg/f:DI 41 r12 [255])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 272 [0x110]))) 267 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 411 370 412 24 (set (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (reg:DI 42 r13 [orig:143 D.26282 ] [143])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (nil)))
(insn 412 411 413 24 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (nil)))
(insn 413 412 503 24 (set (reg/v/f:DI 0 ax [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:151 wrap_widths ] [151])
        (nil)))
(note 503 413 414 24 NOTE_INSN_DELETED)
(insn 414 503 415 24 (set (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (reg:DI 44 r15 [orig:93 ivtmp.305 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:93 ivtmp.305 ] [93])
        (nil)))
(insn 415 414 416 24 (set (reg/v:SI 44 r15 [orig:106 j ] [106])
        (reg/v:SI 43 r14 [orig:106 j ] [106])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:106 j ] [106])
        (nil)))
(insn 416 415 417 24 (set (reg/f:DI 41 r12 [255])
        (reg/f:DI 41 r12 [255])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [255])
        (nil)))
(insn 417 416 393 24 (set (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 0 ax [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:151 wrap_widths ] [151])
        (nil)))
(jump_insn 393 417 394 24 (set (pc)
        (label_ref 339)) 650 {jump}
     (nil)
 -> 339)
;;  succ:       38 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 394 393 346)
;; basic block 25, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [95.2%]  (DFS_BACK)
;;              39 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 5 [di] 7 [sp] 40 [r11]
;; lr  def 	 4 [si] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(code_label 346 394 250 25 191 "" [2 uses])
(note 250 346 251 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(debug_insn 251 250 253 25 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 253 251 255 25 (set (reg:SI 37 r8 [orig:82 D.26281 ] [82])
        (mem:SI (plus:DI (reg/f:DI 40 r11 [257])
                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[symbol: qstate, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 89 {*movsi_internal}
     (nil))
(insn 255 253 256 25 (set (reg:SI 4 si [orig:83 D.26281 ] [83])
        (mem:SI (plus:DI (reg/f:DI 5 di [256])
                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) tiles.cpp:516 89 {*movsi_internal}
     (nil))
(insn 256 255 257 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 37 r8 [orig:82 D.26281 ] [82])
            (reg:SI 4 si [orig:83 D.26281 ] [83]))) tiles.cpp:516 7 {*cmpsi_1}
     (nil))
(jump_insn 257 256 258 25 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) tiles.cpp:516 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 264)
;;  succ:       26 [50.0%]  (FALLTHRU)
;;              27 [50.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 26, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [50.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 37 [r8]
;; live  kill	 17 [flags]
(note 258 257 492 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 492 258 259 26 (set (reg:SI 0 ax [orig:232 D.26281 ] [232])
        (reg:SI 37 r8 [orig:82 D.26281 ] [82])) tiles.cpp:517 89 {*movsi_internal}
     (nil))
(insn 259 492 493 26 (parallel [
            (set (reg:SI 0 ax [orig:232 D.26281 ] [232])
                (minus:SI (reg:SI 0 ax [orig:232 D.26281 ] [232])
                    (reg:SI 4 si [orig:83 D.26281 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 309 {*subsi_1}
     (nil))
(insn 493 259 260 26 (set (reg:SI 0 ax [orig:232 D.26281 ] [232])
        (reg:SI 0 ax [orig:232 D.26281 ] [232])) tiles.cpp:517 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:232 D.26281 ] [232])
        (nil)))
(insn 260 493 494 26 (parallel [
            (set (reg:SI 0 ax [235])
                (div:SI (reg:SI 0 ax [orig:232 D.26281 ] [232])
                    (reg/v:SI 3 bx [orig:147 num_tilings ] [147])))
            (set (reg:SI 1 dx [orig:234 D.26281 ] [234])
                (mod:SI (reg:SI 0 ax [orig:232 D.26281 ] [232])
                    (reg/v:SI 3 bx [orig:147 num_tilings ] [147])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:232 D.26281 ] [232])
        (expr_list:REG_UNUSED (reg:SI 0 ax [235])
            (nil))))
(insn 494 260 261 26 (set (reg:SI 37 r8 [orig:92 D.26281 ] [92])
        (reg:SI 37 r8 [orig:82 D.26281 ] [82])) tiles.cpp:517 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:82 D.26281 ] [82])
        (nil)))
(insn 261 494 495 26 (parallel [
            (set (reg:SI 37 r8 [orig:92 D.26281 ] [92])
                (minus:SI (reg:SI 37 r8 [orig:92 D.26281 ] [92])
                    (reg:SI 1 dx [orig:234 D.26281 ] [234])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:517 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:234 D.26281 ] [234])
        (nil)))
(insn 495 261 395 26 (set (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (reg:SI 37 r8 [orig:92 D.26281 ] [92])) tiles.cpp:517 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:92 D.26281 ] [92])
        (nil)))
(jump_insn 395 495 396 26 (set (pc)
        (label_ref 272)) 650 {jump}
     (nil)
 -> 272)
;;  succ:       28 [100.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 396 395 264)
;; basic block 27, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 264 396 265 27 182 "" [1 uses])
(note 265 264 266 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(note 266 265 496 27 NOTE_INSN_DELETED)
(insn 496 266 267 27 (set (reg:SI 0 ax [orig:237 D.26281 ] [237])
        (reg:SI 4 si [orig:83 D.26281 ] [83])) tiles.cpp:519 89 {*movsi_internal}
     (nil))
(insn 267 496 497 27 (parallel [
            (set (reg:SI 0 ax [orig:237 D.26281 ] [237])
                (minus:SI (reg:SI 0 ax [orig:237 D.26281 ] [237])
                    (reg:SI 37 r8 [orig:82 D.26281 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 309 {*subsi_1}
     (nil))
(insn 497 267 268 27 (set (reg:SI 0 ax [orig:237 D.26281 ] [237])
        (reg:SI 0 ax [orig:237 D.26281 ] [237])) tiles.cpp:519 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:237 D.26281 ] [237])
        (nil)))
(insn 268 497 269 27 (parallel [
            (set (reg:SI 0 ax [orig:238 D.26281 ] [238])
                (plus:SI (reg:SI 0 ax [orig:237 D.26281 ] [237])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:237 D.26281 ] [237])
        (nil)))
(insn 269 268 270 27 (parallel [
            (set (reg:SI 0 ax [241])
                (div:SI (reg:SI 0 ax [orig:238 D.26281 ] [238])
                    (reg/v:SI 3 bx [orig:147 num_tilings ] [147])))
            (set (reg:SI 1 dx [orig:240 D.26281 ] [240])
                (mod:SI (reg:SI 0 ax [orig:238 D.26281 ] [238])
                    (reg/v:SI 3 bx [orig:147 num_tilings ] [147])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 366 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:238 D.26281 ] [238])
        (expr_list:REG_UNUSED (reg:SI 0 ax [241])
            (nil))))
(insn 270 269 271 27 (set (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (plus:SI (plus:SI (reg:SI 37 r8 [orig:82 D.26281 ] [82])
                (reg:SI 1 dx [orig:240 D.26281 ] [240]))
            (const_int 1 [0x1]))) tiles.cpp:519 266 {*leasi}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:240 D.26281 ] [240])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:82 D.26281 ] [82])
            (nil))))
(insn 271 270 272 27 (parallel [
            (set (reg:SI 1 dx [orig:92 D.26281 ] [92])
                (minus:SI (reg:SI 1 dx [orig:92 D.26281 ] [92])
                    (reg/v:SI 3 bx [orig:147 num_tilings ] [147])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:519 309 {*subsi_1}
     (nil))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 28, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;;              26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 272 271 273 28 183 "" [1 uses])
(note 273 272 275 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 275 273 276 28 (set (mem:SI (plus:DI (reg/f:DI 41 r12 [255])
                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 1 dx [orig:92 D.26281 ] [92])) 89 {*movsi_internal}
     (nil))
(insn 276 275 277 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
                    (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[base: wrap_widths_39(D), index: ivtmp.291_105, offset: 0B]+0 S4 A32])
            (const_int 0 [0]))) tiles.cpp:521 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 277 276 278 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) tiles.cpp:521 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 284)
;;  succ:       29 [50.0%]  (FALLTHRU)
;;              30 [50.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 29, loop depth 0, count 0, freq 1667, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(note 278 277 279 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 279 278 280 29 NOTE_INSN_DELETED)
(note 280 279 498 29 NOTE_INSN_DELETED)
(insn 498 280 281 29 (set (reg:SI 0 ax [247])
        (reg:SI 1 dx [orig:92 D.26281 ] [92])) tiles.cpp:521 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (nil)))
(insn 281 498 283 29 (parallel [
            (set (reg:SI 0 ax [247])
                (div:SI (reg:SI 0 ax [247])
                    (mem:SI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71]))
                            (const_int 192 [0xc0])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (set (reg:SI 1 dx [orig:92 D.26281 ] [92])
                (mod:SI (reg:SI 0 ax [247])
                    (mem:SI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71]))
                            (const_int 192 [0xc0])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:521 366 {*divmodsi4}
     (expr_list:REG_UNUSED (reg:SI 0 ax [247])
        (nil)))
(insn 283 281 284 29 (set (mem:SI (plus:DI (reg/f:DI 41 r12 [255])
                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 1 dx [orig:92 D.26281 ] [92])) tiles.cpp:521 89 {*movsi_internal}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 30, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%] 
;;              29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 284 283 285 30 184 "" [1 uses])
(note 285 284 286 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 30 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 1 dx [orig:92 D.26281 ] [92])
            (const_int 0 [0]))) tiles.cpp:523 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 287 286 313 30 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) tiles.cpp:523 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 302)
;;  succ:       33 [91.0%] 
;;              31 [9.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 31, loop depth 0, count 0, freq 3333, maybe hot
;; Invalid sum of incoming frequencies 1119, should be 3333
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [9.0%]  (FALLTHRU)
;;              35 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 7 [sp] 38 [r9] 42 [r13]
;; lr  def 	 2 [cx] 4 [si] 17 [flags] 38 [r9]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 4 [si] 17 [flags] 38 [r9]
;; live  kill	 17 [flags]
(code_label 313 287 288 31 189 "" [1 uses])
(note 288 313 290 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 290 288 291 31 (parallel [
            (set (reg:SI 4 si [250])
                (plus:SI (reg:SI 4 si [orig:83 D.26281 ] [83])
                    (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:527 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:83 D.26281 ] [83])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 5 di [256])
                    (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
            (nil))))
(insn 291 290 293 31 (set (mem:SI (plus:DI (reg/f:DI 5 di [256])
                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[symbol: base, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 4 si [250])) tiles.cpp:527 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [250])
        (nil)))
(debug_insn 293 291 294 31 (var_location:SI i (debug_expr:SI D#18)) -1
     (nil))
(insn 294 293 295 31 (parallel [
            (set (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
                (plus:DI (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 295 294 297 31 (parallel [
            (set (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
                (plus:SI (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (nil))
(insn 297 295 298 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
            (reg:DI 42 r13 [orig:143 D.26282 ] [143]))) tiles.cpp:513 8 {*cmpdi_1}
     (nil))
(jump_insn 298 297 301 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 346)
            (pc))) tiles.cpp:513 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9524 [0x2534])
        (nil))
 -> 346)
;;  succ:       25 [95.2%]  (DFS_BACK)
;;              32 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 32, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [4.8%]  (FALLTHRU,LOOP_EXIT)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 301 298 418 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 418 301 419 32 (set (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (nil)))
(insn 419 418 420 32 (set (reg/v:SI 44 r15 [orig:106 j ] [106])
        (reg/v:SI 44 r15 [orig:106 j ] [106])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:106 j ] [106])
        (nil)))
(insn 420 419 421 32 (set (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (reg:DI 42 r13 [orig:143 D.26282 ] [143])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (nil)))
(insn 421 420 422 32 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (nil)))
(insn 422 421 423 32 (set (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (nil)))
(insn 423 422 18 32 (set (reg/f:DI 41 r12 [255])
        (reg/f:DI 41 r12 [255])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [255])
        (nil)))
(insn 18 423 397 32 (set (reg/v:SI 0 ax [orig:110 num_floats ] [110])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])) 89 {*movsi_internal}
     (nil))
(jump_insn 397 18 398 32 (set (pc)
        (label_ref 321)) 650 {jump}
     (nil)
 -> 321)
;;  succ:       37 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 398 397 302)
;; basic block 33, loop depth 0, count 0, freq 819, maybe hot
;; Invalid sum of incoming frequencies 3033, should be 819
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [91.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 302 398 303 33 185 "" [1 uses])
(note 303 302 305 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 305 303 424 33 (set (reg:SI 0 ax [orig:127 D.26281 ] [127])
        (mem:SI (plus:DI (plus:DI (reg/f:DI 7 sp)
                    (reg:DI 2 cx [orig:71 ivtmp.291 ] [71]))
                (const_int 192 [0xc0])) [0 MEM[symbol: wrap_widths_times_num_tilings, index: ivtmp.291_105, offset: 0B]+0 S4 A32])) 89 {*movsi_internal}
     (nil))
(insn 424 305 425 33 (set (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
        (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
        (nil)))
(insn 425 424 426 33 (set (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
        (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
        (nil)))
(insn 426 425 427 33 (set (reg:SI 4 si [orig:83 D.26281 ] [83])
        (reg:SI 4 si [orig:83 D.26281 ] [83])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:83 D.26281 ] [83])
        (nil)))
(insn 427 426 428 33 (set (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (reg:SI 1 dx [orig:92 D.26281 ] [92])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (nil)))
(insn 428 427 429 33 (set (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (nil)))
(insn 429 428 430 33 (set (reg/v:SI 44 r15 [orig:106 j ] [106])
        (reg/v:SI 44 r15 [orig:106 j ] [106])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:106 j ] [106])
        (nil)))
(insn 430 429 431 33 (set (reg:SI 0 ax [orig:127 D.26281 ] [127])
        (reg:SI 0 ax [orig:127 D.26281 ] [127])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:127 D.26281 ] [127])
        (nil)))
(insn 431 430 432 33 (set (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (reg:DI 42 r13 [orig:143 D.26282 ] [143])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (nil)))
(insn 432 431 433 33 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (nil)))
(insn 433 432 434 33 (set (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (nil)))
(insn 434 433 435 33 (set (reg/f:DI 41 r12 [255])
        (reg/f:DI 41 r12 [255])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [255])
        (nil)))
(insn 435 434 436 33 (set (reg/f:DI 5 di [256])
        (reg/f:DI 5 di [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [256])
        (nil)))
(insn 436 435 318 33 (set (reg/f:DI 40 r11 [257])
        (reg/f:DI 40 r11 [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [257])
        (nil)))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 34, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [91.0%]  (DFS_BACK)
;;              33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 318 436 306 34 190 "" [1 uses])
(note 306 318 307 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(note 307 306 308 34 NOTE_INSN_DELETED)
(insn 308 307 309 34 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg:SI 1 dx [orig:92 D.26281 ] [92])
                        (reg:SI 0 ax [orig:127 D.26281 ] [127]))
                    (const_int 0 [0])))
            (set (reg:SI 1 dx [orig:92 D.26281 ] [92])
                (plus:SI (reg:SI 1 dx [orig:92 D.26281 ] [92])
                    (reg:SI 0 ax [orig:127 D.26281 ] [127])))
        ]) tiles.cpp:523 281 {*addsi_2}
     (nil))
(jump_insn 309 308 310 34 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 318)
            (pc))) tiles.cpp:523 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 318)
;;  succ:       34 [91.0%]  (DFS_BACK)
;;              35 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 35, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 310 309 437 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 437 310 438 35 (set (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
        (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
        (nil)))
(insn 438 437 439 35 (set (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
        (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
        (nil)))
(insn 439 438 440 35 (set (reg:SI 4 si [orig:83 D.26281 ] [83])
        (reg:SI 4 si [orig:83 D.26281 ] [83])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:83 D.26281 ] [83])
        (nil)))
(insn 440 439 441 35 (set (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (reg:SI 1 dx [orig:92 D.26281 ] [92])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (nil)))
(insn 441 440 442 35 (set (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (nil)))
(insn 442 441 443 35 (set (reg/v:SI 44 r15 [orig:106 j ] [106])
        (reg/v:SI 44 r15 [orig:106 j ] [106])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:106 j ] [106])
        (nil)))
(insn 443 442 444 35 (set (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (reg:DI 42 r13 [orig:143 D.26282 ] [143])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (nil)))
(insn 444 443 445 35 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (nil)))
(insn 445 444 446 35 (set (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (nil)))
(insn 446 445 447 35 (set (reg/f:DI 41 r12 [255])
        (reg/f:DI 41 r12 [255])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [255])
        (nil)))
(insn 447 446 448 35 (set (reg/f:DI 5 di [256])
        (reg/f:DI 5 di [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [256])
        (nil)))
(insn 448 447 312 35 (set (reg/f:DI 40 r11 [257])
        (reg/f:DI 40 r11 [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [257])
        (nil)))
(insn 312 448 399 35 (set (mem:SI (plus:DI (reg/f:DI 41 r12 [255])
                (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) [0 MEM[symbol: coordinates, index: ivtmp.291_105, offset: 0B]+0 S4 A32])
        (reg:SI 1 dx [orig:92 D.26281 ] [92])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:92 D.26281 ] [92])
        (nil)))
(jump_insn 399 312 400 35 (set (pc)
        (label_ref 313)) 650 {jump}
     (nil)
 -> 313)
;;  succ:       31 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 400 399 359)
;; basic block 36, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [4.8%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 359 400 358 36 193 "" [1 uses])
(note 358 359 19 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 19 358 321 36 (set (reg/v:SI 0 ax [orig:110 num_floats ] [110])
        (const_int 0 [0])) tiles.cpp:513 89 {*movsi_internal}
     (nil))
;;  succ:       37 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 37, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [100.0%]  (FALLTHRU)
;;              32 [100.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags] 44 [r15]
;; live  kill	 17 [flags]
(code_label 321 19 322 37 187 "" [1 uses])
(note 322 321 323 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 37 (set (reg:DI 0 ax [orig:253 num_floats ] [253])
        (sign_extend:DI (reg/v:SI 0 ax [orig:110 num_floats ] [110]))) tiles.cpp:530 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:110 num_floats ] [110])
        (nil)))
(insn 324 323 326 37 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:253 num_floats ] [253])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 272 [0x110])) [0 coordinates S4 A32])
        (reg/v:SI 44 r15 [orig:106 j ] [106])) tiles.cpp:530 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:253 num_floats ] [253])
        (nil)))
(insn 326 324 327 37 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 %sfp+-16 S8 A64])) tiles.cpp:532 87 {*movdi_internal_rex64}
     (nil))
(insn 327 326 328 37 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [0 %sfp+-20 S4 A32])) tiles.cpp:532 89 {*movsi_internal}
     (nil))
(insn 328 327 329 37 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [255])) tiles.cpp:532 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(call_insn 329 328 330 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z4hashPiiP15collision_table") [flags 0x1]  <function_decl 0x2b67b8f25800 hash>) [0 hash S1 A8])
            (const_int 0 [0]))) tiles.cpp:532 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 330 329 331 37 (set (reg:SI 0 ax [orig:105 D.26281 ] [105])
        (reg:SI 0 ax)) tiles.cpp:532 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_EQUIV (mem:SI (reg:DI 6 bp [orig:93 ivtmp.305 ] [93]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
            (nil))))
(insn 331 330 332 37 (set (mem:SI (reg:DI 6 bp [orig:93 ivtmp.305 ] [93]) [0 MEM[base: _77, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:105 D.26281 ] [105])) tiles.cpp:532 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:105 D.26281 ] [105])
        (nil)))
(insn 332 331 334 37 (parallel [
            (set (reg/v:SI 44 r15 [orig:106 j ] [106])
                (plus:SI (reg/v:SI 44 r15 [orig:106 j ] [106])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tiles.cpp:510 273 {*addsi_1}
     (nil))
(debug_insn 334 332 335 37 (var_location:SI j (reg/v:SI 44 r15 [orig:106 j ] [106])) -1
     (nil))
(insn 335 334 336 37 (parallel [
            (set (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
                (plus:DI (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(insn 336 335 337 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 44 r15 [orig:106 j ] [106])
            (reg/v:SI 3 bx [orig:147 num_tilings ] [147]))) tiles.cpp:510 7 {*cmpsi_1}
     (nil))
(jump_insn 337 336 339 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 351)
            (pc))) tiles.cpp:510 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 351)
;;  succ:       38 [91.0%]  (FALLTHRU,DFS_BACK)
;;              40 [9.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 38, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [91.0%]  (FALLTHRU,DFS_BACK)
;;              24 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 339 337 340 38 181 "" [1 uses])
(note 340 339 341 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(debug_insn 341 340 342 38 (var_location:SI j (reg/v:SI 44 r15 [orig:106 j ] [106])) -1
     (nil))
(debug_insn 342 341 343 38 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 343 342 344 38 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [0 %sfp+-28 S4 A32])
            (const_int 0 [0]))) tiles.cpp:513 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 344 343 345 38 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) tiles.cpp:513 612 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 476 [0x1dc])
        (nil))
 -> 359)
;;  succ:       39 [95.2%]  (FALLTHRU)
;;              36 [4.8%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 39, loop depth 0, count 0, freq 159, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [95.2%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(note 345 344 15 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 15 345 16 39 (set (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
        (const_int 1 [0x1])) tiles.cpp:513 89 {*movsi_internal}
     (nil))
(insn 16 15 371 39 (set (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
        (const_int 0 [0])) tiles.cpp:513 87 {*movdi_internal_rex64}
     (nil))
(insn 371 16 372 39 (set (reg/f:DI 40 r11 [257])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -416 [0xfffffffffffffe60]))
        (nil)))
(insn 372 371 449 39 (set (reg/f:DI 5 di [256])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) 267 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -336 [0xfffffffffffffeb0]))
        (nil)))
(insn 449 372 450 39 (set (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
        (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:62 ivtmp.295 ] [62])
        (nil)))
(insn 450 449 451 39 (set (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
        (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:71 ivtmp.291 ] [71])
        (nil)))
(insn 451 450 452 39 (set (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:93 ivtmp.305 ] [93])
        (nil)))
(insn 452 451 453 39 (set (reg/v:SI 44 r15 [orig:106 j ] [106])
        (reg/v:SI 44 r15 [orig:106 j ] [106])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:106 j ] [106])
        (nil)))
(insn 453 452 454 39 (set (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (reg:DI 42 r13 [orig:143 D.26282 ] [143])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:143 D.26282 ] [143])
        (nil)))
(insn 454 453 455 39 (set (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (reg/v:SI 3 bx [orig:147 num_tilings ] [147])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:147 num_tilings ] [147])
        (nil)))
(insn 455 454 456 39 (set (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:151 wrap_widths ] [151])
        (nil)))
(insn 456 455 457 39 (set (reg/f:DI 41 r12 [255])
        (reg/f:DI 41 r12 [255])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [255])
        (nil)))
(insn 457 456 458 39 (set (reg/f:DI 5 di [256])
        (reg/f:DI 5 di [256])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [256])
        (nil)))
(insn 458 457 401 39 (set (reg/f:DI 40 r11 [257])
        (reg/f:DI 40 r11 [257])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [257])
        (nil)))
(jump_insn 401 458 402 39 (set (pc)
        (label_ref 346)) 650 {jump}
     (nil)
 -> 346)
;;  succ:       25 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 402 401 351)
;; basic block 40, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 39, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [9.0%]  (LOOP_EXIT)
;;              7 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 351 402 352 40 168 "" [2 uses])
(note 352 351 0 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Function (static initializers for tiles.cpp) (_GLOBAL__sub_I_tiles.cpp, funcdef_no=1103, decl_uid=25455, cgraph_uid=347) (executed once)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rzw {*call}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 9:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 10:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) Uz {*sibcall_value}
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


(static initializers for tiles.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 116{108d,8u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (var_location:SI __priority (const_int 65535 [0xffff])) -1
     (nil))
(debug_insn 6 5 7 2 (var_location:SI __initialize_p (const_int 1 [0x1])) -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b67b8db5390 __ioinit>)) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x2b67b8912200 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.8/iostream:74 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x2b67b8facab0 __dso_handle>)) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 12 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b67b8db5390 __ioinit>)) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (nil))
(insn 12 10 13 2 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b67b8912400 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) /usr/include/c++/4.8/iostream:74 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b67b8912400 __comp_dtor >)
        (nil)))
(call_insn/j 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x2b67b8f83f00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.8/iostream:74 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 14 13 0)
