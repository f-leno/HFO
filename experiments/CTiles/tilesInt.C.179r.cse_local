
;; Function PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*) (_ZL18CollisionTable_newP11_typeobjectP7_objectS2_, funcdef_no=146, decl_uid=11212, cgraph_uid=146)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 31
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r60={1d,4u} r62={1d,2u} r65={1d,1u} 
;;    total ref usage 100{70d,30u,0e} in 12{11 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 4 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 62 65
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 60 62 65
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

( 2 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(0){ }u28(6){ }u29(7){ }u30(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 17 to worklist
  Adding insn 27 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 24 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
;; Following path with 9 sets: 2 
;; Following path with 1 sets: 4 
;; Following path with 2 sets: 5 
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r60={1d,4u} r62={1d,2u} r65={1d,1u} 
;;    total ref usage 100{70d,30u,0e} in 12{11 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 62 65
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 60 62 65
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 5 2 (set (reg/v/f:DI 62 [ type ])
        (reg:DI 5 di [ type ])) tilesInt.C:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ type ])
        (nil)))
(note 5 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 65 [ type_3(D)->tp_alloc ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 62 [ type ])
                (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 0 [0])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ type ])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ type ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 65 [ type_3(D)->tp_alloc ]) [0 *_4 S1 A8])
            (const_int 0 [0]))) tilesInt.C:22 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 65 [ type_3(D)->tp_alloc ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/v/f:DI 60 [ self ])
        (reg:DI 0 ax)) tilesInt.C:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 13 12 14 2 (var_location:DI self (reg/v/f:DI 60 [ self ])) tilesInt.C:22 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 60 [ self ])
            (const_int 0 [0]))) tilesInt.C:23 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 18)
            (pc))) tilesInt.C:23 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil)))
 -> 18)
;;  succ:       4 [89.9%]  (FALLTHRU)
;;              5 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 4, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	
;; live  kill	
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (mem/f/j:DI (plus:DI (reg/v/f:DI 60 [ self ])
                (const_int 16 [0x10])) [0 self_6->ct+0 S8 A64])
        (const_int 0 [0])) tilesInt.C:25 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 18 17 19 5 2 "" [1 uses])
(note 19 18 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 19 27 5 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 60 [ self ])) tilesInt.C:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ self ])
        (nil)))
(insn 27 24 0 5 (use (reg/i:DI 0 ax)) tilesInt.C:29 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*) (_ZL19tiles_LoadTilesWrapP7_objectS0_, funcdef_no=154, decl_uid=11314, cgraph_uid=154)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 28 (  1.2)


PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 393
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={27d,23u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,23u} r7={1d,68u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,22u} r17={53d,10u} r18={23d} r19={23d} r20={1d,53u,7e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r105={2d,5u} r106={2d,4u} r107={2d,1u} r108={1d,1u} r110={1d,1u} r113={1d,4u} r117={1d,4u} r119={1d,1u} r122={1d,4u} r123={1d,2u} r124={1d,1u} r126={1d,4u} r131={1d,1u} r132={1d,1u} r135={1d,5u} r136={1d,1u} r137={2d,6u} r141={1d,1u} r142={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,1u} r154={1d,2u} r157={1d,1u} r158={1d,4u} r159={2d,8u} r163={1d,1u} r168={2d,3u} r174={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,4u} r185={1d,1u} r188={1d,1u} r191={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r214={1d,1u} r215={1d,1u,1e} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} 
;;    total ref usage 1550{1183d,359u,8e} in 212{189 regular + 23 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 20 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 108 178 179 180 181 182 184 185 188 191
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 108 178 179 180 181 182 184 185 188 191
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[3]->( 5 23 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123

( 3 )->[5]->( 21 23 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u107(6){ }u108(7){ }u109(16){ }u110(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 124
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122

( 7 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

( 6 22 )->[7]->( 6 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u121(6){ }u122(7){ }u123(16){ }u124(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 131 132 137 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 131 132 137 203
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

( 23 7 21 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 135 136 204
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 135 136 204
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136

( 8 11 )->[9]->( 13 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u160(6){ }u161(7){ }u162(16){ }u163(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 149 205
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 149 205
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u172(6){ }u173(7){ }u174(16){ }u175(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136
;; live  gen 	 159
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

( 12 10 )->[11]->( 12 9 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u176(6){ }u177(7){ }u178(16){ }u179(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 122 136 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 141 142 145 146 159 206 207
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 141 142 145 146 159 206 207
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

( 11 )->[12]->( 11 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u215(6){ }u216(7){ }u217(16){ }u218(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

( 9 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u219(6){ }u220(7){ }u221(16){ }u222(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 208 209 210
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 208 209 210
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

( 9 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u246(6){ }u247(7){ }u248(16){ }u249(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 154 211 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 154 211 212
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

( 13 14 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u276(6){ }u277(7){ }u278(16){ }u279(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157 158
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  gen 	 17 [flags] 157 158
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158

( 15 18 )->[16]->( 24 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u285(6){ }u286(7){ }u287(16){ }u288(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 107
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u293(6){ }u294(7){ }u295(16){ }u296(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  def 	 17 [flags] 168 174 214 215 217 218 219 220
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  gen 	 168 174 214 215 217 218 219 220
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

( 19 17 )->[18]->( 19 16 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 163 168 221 222 223 224 225
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 163 168 221 222 223 224 225
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

( 18 )->[19]->( 18 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u334(6){ }u335(7){ }u336(16){ }u337(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

( 2 )->[20]->( 24 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u338(6){ }u339(7){ }u340(16){ }u341(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 107
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

( 5 )->[21]->( 22 8 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u347(6){ }u348(7){ }u349(16){ }u350(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 106 126 227 228 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 106 126 227 228 229
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

( 21 )->[22]->( 7 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u368(6){ }u369(7){ }u370(16){ }u371(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 137
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

( 3 5 )->[23]->( 8 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u372(6){ }u373(7){ }u374(16){ }u375(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 105 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 105 106
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

( 20 16 )->[24]->( 1 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u376(6){ }u377(7){ }u378(16){ }u379(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 24 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u382(0){ }u383(6){ }u384(7){ }u385(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 101 to worklist
  Adding insn 98 to worklist
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 74 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 133 to worklist
  Adding insn 127 to worklist
  Adding insn 123 to worklist
  Adding insn 117 to worklist
  Adding insn 109 to worklist
  Adding insn 105 to worklist
  Adding insn 139 to worklist
  Adding insn 136 to worklist
  Adding insn 161 to worklist
  Adding insn 154 to worklist
  Adding insn 152 to worklist
  Adding insn 149 to worklist
  Adding insn 174 to worklist
  Adding insn 167 to worklist
  Adding insn 182 to worklist
  Adding insn 179 to worklist
  Adding insn 215 to worklist
  Adding insn 208 to worklist
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 199 to worklist
  Adding insn 197 to worklist
  Adding insn 194 to worklist
  Adding insn 234 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 253 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 241 to worklist
  Adding insn 261 to worklist
  Adding insn 265 to worklist
  Adding insn 301 to worklist
  Adding insn 295 to worklist
  Adding insn 287 to worklist
  Adding insn 330 to worklist
  Adding insn 322 to worklist
  Adding insn 315 to worklist
  Adding insn 343 to worklist
Finished finding needed instructions:
processing block 24 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 340 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
  Adding insn 56 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
  Adding insn 266 to worklist
  Adding insn 264 to worklist
  Adding insn 263 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
  Adding insn 300 to worklist
  Adding insn 298 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 292 to worklist
  Adding insn 291 to worklist
  Adding insn 290 to worklist
  Adding insn 289 to worklist
  Adding insn 288 to worklist
  Adding insn 286 to worklist
  Adding insn 285 to worklist
  Adding insn 284 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
  Adding insn 55 to worklist
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 279 to worklist
  Adding insn 276 to worklist
  Adding insn 275 to worklist
  Adding insn 273 to worklist
  Adding insn 272 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
  Adding insn 260 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
  Adding insn 233 to worklist
  Adding insn 232 to worklist
  Adding insn 231 to worklist
  Adding insn 230 to worklist
  Adding insn 229 to worklist
  Adding insn 228 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
  Adding insn 252 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 244 to worklist
  Adding insn 242 to worklist
  Adding insn 240 to worklist
  Adding insn 239 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 207 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 198 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 193 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
  Adding insn 54 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136
  Adding insn 173 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
  Adding insn 160 to worklist
  Adding insn 158 to worklist
  Adding insn 153 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
  Adding insn 51 to worklist
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
  Adding insn 329 to worklist
  Adding insn 323 to worklist
  Adding insn 321 to worklist
  Adding insn 320 to worklist
  Adding insn 319 to worklist
  Adding insn 317 to worklist
  Adding insn 316 to worklist
  Adding insn 314 to worklist
  Adding insn 313 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 135 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 88 to worklist
  Adding insn 83 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 49 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 30 (  1.2)
;; Following path with 45 sets: 2 
;; Following path with 31 sets: 3 
;; Following path with 5 sets: 5 
;; Following path with 2 sets: 23 
;; Following path with 16 sets: 21 
;; Following path with 1 sets: 22 
;; Following path with 16 sets: 7 
;; Following path with 11 sets: 8 
;; Following path with 1 sets: 10 
;; Following path with 25 sets: 11 
;; Following path with 7 sets: 9 
;; Following path with 15 sets: 14 
;; Following path with 13 sets: 13 
;; Following path with 6 sets: 15 
;; Following path with 13 sets: 17 
;; Following path with 18 sets: 18 
;; Following path with 4 sets: 16 
;; Following path with 1 sets: 20 
;; Following path with 2 sets: 24 
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={27d,23u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,23u} r7={1d,68u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,22u} r17={53d,10u} r18={23d} r19={23d} r20={1d,53u,7e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r105={2d,5u} r106={2d,4u} r107={2d,1u} r108={1d,1u} r110={1d,1u} r113={1d,4u} r117={1d,4u} r119={1d,1u} r122={1d,4u} r123={1d,2u} r124={1d,1u} r126={1d,4u} r131={1d,1u} r132={1d,1u} r135={1d,5u} r136={1d,1u} r137={2d,6u} r141={1d,1u} r142={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,1u} r154={1d,2u} r157={1d,1u} r158={1d,4u} r159={2d,8u} r163={1d,1u} r168={2d,3u} r174={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,4u} r185={1d,1u} r188={1d,1u} r191={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r214={1d,1u} r215={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} 
;;    total ref usage 1549{1183d,359u,7e} in 212{189 regular + 23 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 108 178 179 180 181 182 184 185 188 191
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 108 178 179 180 181 182 184 185 188 191
;; live  kill	 17 [flags]
(note 57 0 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 49 57 50 2 (set (reg/v/f:DI 178 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:245 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 50 49 59 2 NOTE_INSN_FUNCTION_BEG)
(insn 59 50 60 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:246 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 60 59 61 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:247 -1
     (nil))
(insn 61 60 62 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:250 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 62 61 63 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:251 -1
     (nil))
(insn 63 62 64 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:253 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 64 63 65 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:254 -1
     (nil))
(insn 65 64 66 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:256 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 66 65 67 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:257 -1
     (nil))
(insn 67 66 68 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:258 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 68 67 69 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:259 -1
     (nil))
(debug_insn 69 68 70 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:260 -1
     (nil))
(insn 70 69 71 2 (parallel [
            (set (reg/f:DI 179)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:268 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 2 (parallel [
            (set (reg/f:DI 180)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:268 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 2 (parallel [
            (set (reg/f:DI 181)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:268 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 2 (parallel [
            (set (reg/f:DI 182)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:268 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 74 73 75 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S8 A64])
        (reg/f:DI 182)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 75 74 77 2 (set (reg:DI 184)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 77 75 78 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 2 (parallel [
            (set (reg/f:DI 185)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:268 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 79 78 82 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 185)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 82 79 83 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 2 (parallel [
            (set (reg/f:DI 188)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:268 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 87 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 188)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 87 84 88 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 184)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 2 (parallel [
            (set (reg/f:DI 191)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:268 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 191)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 90 89 91 2 (set (reg:DI 38 r9)
        (reg/f:DI 179)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 91 90 92 2 (set (reg:DI 37 r8)
        (reg/f:DI 180)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 180)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90]))
            (nil))))
(insn 92 91 94 2 (set (reg:DI 2 cx)
        (reg/f:DI 181)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 94 92 95 2 (set (reg:DI 1 dx)
        (reg:DI 184)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 184)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
            (nil))))
(insn 95 94 96 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b97208f5ab0 *.LC0>)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 2 (set (reg:DI 5 di)
        (reg/v/f:DI 178 [ args ])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 178 [ args ])
        (nil)))
(insn 97 96 98 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:268 91 {*movqi_internal}
     (nil))
(call_insn 98 97 99 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 56 [0x38]))) tilesInt.C:268 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                    (const_int 40 [0x28])) [0  S8 A64]))
                                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                        (const_int 48 [0x30])) [0  S8 A64]))
                                                            (nil))))))))))))))))
(insn 99 98 100 2 (set (reg:SI 108 [ D.11826 ])
        (reg:SI 0 ax)) tilesInt.C:268 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 100 99 101 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.11826 ])
            (const_int 0 [0]))) tilesInt.C:263 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.11826 ])
        (nil)))
(jump_insn 101 100 102 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 346)
            (pc))) tilesInt.C:263 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 346)
;;  succ:       20 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 110 113 117 119 122 123 193 194 196 197 198 200 201
;; live  kill	 17 [flags]
(note 102 101 103 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 3 (set (reg/f:DI 193 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:271 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 3 (set (reg:DI 5 di)
        (reg/f:DI 193 [ variables_list ])) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 193 [ variables_list ])
        (nil)))
(call_insn 105 104 106 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:271 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 106 105 107 3 (set (reg:DI 110 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 107 106 108 3 (parallel [
            (set (reg:DI 194 [ D.11828 ])
                (ashift:DI (reg:DI 110 [ D.11827 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:271 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ D.11827 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 3 (set (reg:DI 5 di)
        (reg:DI 194 [ D.11828 ])) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 194 [ D.11828 ])
        (nil)))
(call_insn 109 108 110 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:271 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 110 109 112 3 (set (reg/v/f:DI 113 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 195)
            (nil))))
(debug_insn 112 110 113 3 (var_location:DI variables (reg/v/f:DI 113 [ variables ])) tilesInt.C:271 -1
     (nil))
(insn 113 112 114 3 (set (reg:SI 197 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:272 89 {*movsi_internal}
     (nil))
(insn 114 113 115 3 (set (reg:DI 196 [ D.11828 ])
        (sign_extend:DI (reg:SI 197 [ num_tilings ]))) tilesInt.C:272 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 197 [ num_tilings ])
        (nil)))
(insn 115 114 116 3 (parallel [
            (set (reg:DI 198 [ D.11828 ])
                (ashift:DI (reg:DI 196 [ D.11828 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:272 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 196 [ D.11828 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 3 (set (reg:DI 5 di)
        (reg:DI 198 [ D.11828 ])) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 198 [ D.11828 ])
        (nil)))
(call_insn 117 116 118 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:272 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 118 117 120 3 (set (reg/v/f:DI 117 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 199)
            (nil))))
(debug_insn 120 118 121 3 (var_location:DI the_tiles (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:272 -1
     (nil))
(insn 121 120 122 3 (set (reg/f:DI 200 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:273 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 123 3 (set (reg:DI 5 di)
        (reg/f:DI 200 [ variables_list ])) tilesInt.C:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 200 [ variables_list ])
        (nil)))
(call_insn 123 122 124 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:273 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 124 123 125 3 (set (reg:DI 119 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 125 124 126 3 (parallel [
            (set (reg:DI 201 [ D.11828 ])
                (ashift:DI (reg:DI 119 [ D.11827 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:273 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.11827 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 3 (set (reg:DI 5 di)
        (reg:DI 201 [ D.11828 ])) tilesInt.C:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 201 [ D.11828 ])
        (nil)))
(call_insn 127 126 128 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:273 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 128 127 130 3 (set (reg/v/f:DI 122 [ wrapwidths ])
        (reg:DI 0 ax)) tilesInt.C:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 202)
            (nil))))
(debug_insn 130 128 131 3 (var_location:DI wrapwidths (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:273 -1
     (nil))
(insn 131 130 132 3 (set (reg/f:DI 123 [ ints_list.7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:275 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ ints_list.7 ])
            (const_int 0 [0]))) tilesInt.C:275 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 133 132 134 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 335)
            (pc))) tilesInt.C:275 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 335)
;;  succ:       5 [69.8%]  (FALLTHRU)
;;              23 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123

;; basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u107(6){ }u108(7){ }u109(16){ }u110(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122 123
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 124
;; live  kill	
(note 134 133 135 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 5 (set (reg:DI 5 di)
        (reg/f:DI 123 [ ints_list.7 ])) tilesInt.C:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 123 [ ints_list.7 ])
        (nil)))
(call_insn 136 135 137 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:275 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 5 (set (reg:DI 124 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 138 137 139 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 124 [ D.11827 ])
            (const_int 0 [0]))) tilesInt.C:275 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.11827 ])
        (nil)))
(jump_insn 139 138 159 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) tilesInt.C:275 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 311)
;;  succ:       21 [73.0%] 
;;              23 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122

;; basic block 6, loop depth 1, count 0, freq 2401, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  gen 	
;; live  kill	
(code_label 159 139 143 6 12 "" [1 uses])
(note 143 159 332 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

;; basic block 7, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;;              22 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u121(6){ }u122(7){ }u123(16){ }u124(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 137
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 131 132 137 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 131 132 137 203
;; live  kill	 17 [flags]
(code_label 332 143 144 7 23 "" [0 uses])
(note 144 332 145 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 145 144 146 7 (var_location:SI i (subreg:SI (reg:DI 137 [ ivtmp.80 ]) 0)) -1
     (nil))
(insn 146 145 147 7 (set (reg/f:DI 203 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:280 87 {*movdi_internal_rex64}
     (nil))
(insn 147 146 148 7 (set (reg:DI 4 si)
        (reg:DI 137 [ ivtmp.80 ])) tilesInt.C:280 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 7 (set (reg:DI 5 di)
        (reg/f:DI 203 [ ints_list ])) tilesInt.C:280 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 203 [ ints_list ])
        (nil)))
(call_insn 149 148 150 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:280 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 150 149 151 7 (set (reg/f:DI 131 [ D.11825 ])
        (reg:DI 0 ax)) tilesInt.C:280 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 151 150 152 7 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.11825 ])) tilesInt.C:280 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.11825 ])
        (nil)))
(call_insn 152 151 153 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:280 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 153 152 154 7 (set (reg:DI 132 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:280 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 154 153 155 7 (set (mem:SI (plus:DI (mult:DI (reg:DI 137 [ ivtmp.80 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 105 [ ints ])) [0 MEM[base: ints_53, index: ivtmp.80_132, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 132 [ D.11827 ]) 0)) tilesInt.C:280 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 132 [ D.11827 ])
        (nil)))
(debug_insn 155 154 157 7 (var_location:SI D#3 (plus:SI (subreg:SI (reg:DI 137 [ ivtmp.80 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 157 155 158 7 (var_location:SI i (debug_expr:SI D#3)) -1
     (nil))
(insn 158 157 160 7 (parallel [
            (set (reg:DI 137 [ ivtmp.80 ])
                (plus:DI (reg:DI 137 [ ivtmp.80 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 160 158 161 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 106 [ num_ints ])
            (subreg:SI (reg:DI 137 [ ivtmp.80 ]) 0))) tilesInt.C:279 7 {*cmpsi_1}
     (nil))
(jump_insn 161 160 328 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) tilesInt.C:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 159)
;;  succ:       6 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;;              7 [9.0%]  (FALLTHRU)
;;              21 [9.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 135 136 204
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 135 136 204
;; live  kill	
(code_label 328 161 162 8 22 "" [1 uses])
(note 162 328 163 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 163 162 164 8 (var_location:SI num_ints (reg/v:SI 106 [ num_ints ])) -1
     (nil))
(debug_insn 164 163 165 8 (var_location:DI ints (reg/v/f:DI 105 [ ints ])) -1
     (nil))
(insn 165 164 166 8 (set (reg/f:DI 204 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:283 87 {*movdi_internal_rex64}
     (nil))
(insn 166 165 167 8 (set (reg:DI 5 di)
        (reg/f:DI 204 [ variables_list ])) tilesInt.C:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 204 [ variables_list ])
        (nil)))
(call_insn 167 166 168 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:283 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 8 (set (reg:DI 135 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 169 168 170 8 (set (reg/v:SI 136 [ num_variables ])
        (subreg:SI (reg:DI 135 [ D.11827 ]) 0)) tilesInt.C:283 89 {*movsi_internal}
     (nil))
(debug_insn 170 169 172 8 (var_location:SI num_variables (subreg:SI (reg:DI 135 [ D.11827 ]) 0)) tilesInt.C:283 -1
     (nil))
(debug_insn 172 170 173 8 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 173 172 174 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 135 [ D.11827 ]) 0)
            (const_int 0 [0]))) tilesInt.C:285 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 174 173 213 8 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) tilesInt.C:285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 186)
;;  succ:       10 [91.0%] 
;;              9 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136

;; basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU)
;;              11 [9.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u160(6){ }u161(7){ }u162(16){ }u163(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 149 205
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 149 205
;; live  kill	
(code_label 213 174 175 9 16 "" [1 uses])
(note 175 213 176 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 9 (set (reg/f:DI 205 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:291 87 {*movdi_internal_rex64}
     (nil))
(insn 177 176 178 9 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:291 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 9 (set (reg:DI 5 di)
        (reg/f:DI 205 [ memorctable ])) tilesInt.C:291 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 205 [ memorctable ])
        (nil)))
(call_insn 179 178 180 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:291 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 180 179 181 9 (set (reg:SI 149 [ D.11826 ])
        (reg:SI 0 ax)) tilesInt.C:291 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 181 180 182 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11826 ])
            (const_int 0 [0]))) tilesInt.C:291 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 149 [ D.11826 ])
        (nil)))
(jump_insn 182 181 186 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) tilesInt.C:291 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 220)
;;  succ:       13 [50.0%] 
;;              14 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135

;; basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [91.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u172(6){ }u173(7){ }u174(16){ }u175(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136
;; live  gen 	 159
;; live  kill	
(code_label 186 182 187 10 13 "" [1 uses])
(note 187 186 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 187 217 10 (set (reg:DI 159 [ ivtmp.74 ])
        (const_int 0 [0])) tilesInt.C:285 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

;; basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,DFS_BACK)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u176(6){ }u177(7){ }u178(16){ }u179(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 122 136 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 141 142 145 146 159 206 207
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 141 142 145 146 159 206 207
;; live  kill	 17 [flags]
(code_label 217 54 188 11 17 "" [0 uses])
(note 188 217 189 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 189 188 191 11 (var_location:SI i (subreg:SI (reg:DI 159 [ ivtmp.74 ]) 0)) -1
     (nil))
(insn 191 189 192 11 (set (reg/f:DI 206 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(insn 192 191 193 11 (set (reg:DI 4 si)
        (reg:DI 159 [ ivtmp.74 ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 11 (set (reg:DI 5 di)
        (reg/f:DI 206 [ variables_list ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 206 [ variables_list ])
        (nil)))
(call_insn 194 193 195 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 195 194 196 11 (set (reg/f:DI 141 [ D.11825 ])
        (reg:DI 0 ax)) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 196 195 197 11 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.11825 ])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.11825 ])
        (nil)))
(call_insn 197 196 198 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 198 197 199 11 (set (reg:DF 142 [ D.11829 ])
        (reg:DF 21 xmm0)) tilesInt.C:287 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 199 198 200 11 (set (mem:SF (plus:DI (mult:DI (reg:DI 159 [ ivtmp.74 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 113 [ variables ])) [0 MEM[base: variables_30, index: ivtmp.74_133, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 142 [ D.11829 ]))) tilesInt.C:287 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 142 [ D.11829 ])
        (nil)))
(insn 200 199 201 11 (set (reg/f:DI 207 [ wrapwidths_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:288 87 {*movdi_internal_rex64}
     (nil))
(insn 201 200 202 11 (set (reg:DI 4 si)
        (reg:DI 159 [ ivtmp.74 ])) tilesInt.C:288 87 {*movdi_internal_rex64}
     (nil))
(insn 202 201 203 11 (set (reg:DI 5 di)
        (reg/f:DI 207 [ wrapwidths_list ])) tilesInt.C:288 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 207 [ wrapwidths_list ])
        (nil)))
(call_insn 203 202 204 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:288 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 204 203 205 11 (set (reg/f:DI 145 [ D.11825 ])
        (reg:DI 0 ax)) tilesInt.C:288 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 205 204 206 11 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.11825 ])) tilesInt.C:288 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.11825 ])
        (nil)))
(call_insn 206 205 207 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:288 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 207 206 208 11 (set (reg:DI 146 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:288 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 208 207 209 11 (set (mem:SI (plus:DI (mult:DI (reg:DI 159 [ ivtmp.74 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 122 [ wrapwidths ])) [0 MEM[base: wrapwidths_42, index: ivtmp.74_133, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 146 [ D.11827 ]) 0)) tilesInt.C:288 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 146 [ D.11827 ])
        (nil)))
(debug_insn 209 208 211 11 (var_location:SI D#2 (plus:SI (subreg:SI (reg:DI 159 [ ivtmp.74 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 211 209 212 11 (var_location:SI i (debug_expr:SI D#2)) -1
     (nil))
(insn 212 211 214 11 (parallel [
            (set (reg:DI 159 [ ivtmp.74 ])
                (plus:DI (reg:DI 159 [ ivtmp.74 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 214 212 215 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 136 [ num_variables ])
            (subreg:SI (reg:DI 159 [ ivtmp.74 ]) 0))) tilesInt.C:285 7 {*cmpsi_1}
     (nil))
(jump_insn 215 214 216 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) tilesInt.C:285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 213)
;;  succ:       12 [91.0%]  (FALLTHRU)
;;              9 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

;; basic block 12, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u215(6){ }u216(7){ }u217(16){ }u218(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  gen 	
;; live  kill	
(note 216 215 220 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       11 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135 136 159

;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u219(6){ }u220(7){ }u221(16){ }u222(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 208 209 210
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 208 209 210
;; live  kill	
(code_label 220 216 221 13 14 "" [1 uses])
(note 221 220 222 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 222 221 223 13 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:293 -1
     (nil))
(insn 223 222 224 13 (set (reg/f:DI 208 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 13 (set (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 208 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 208 [ memorctable ])
        (nil)))
(insn 225 224 226 13 (set (reg:SI 210 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:294 89 {*movsi_internal}
     (nil))
(insn 226 225 227 13 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 106 [ num_ints ])) tilesInt.C:294 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 106 [ num_ints ])
        (nil)))
(insn 227 226 228 13 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 105 [ ints ])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ ints ])
        (nil)))
(insn 228 227 229 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 122 [ wrapwidths ])
        (nil)))
(insn 229 228 230 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 135 [ D.11827 ]) 0)) tilesInt.C:294 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ D.11827 ])
        (nil)))
(insn 230 229 231 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 113 [ variables ])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 113 [ variables ])
        (nil)))
(insn 231 230 232 13 (set (reg:DI 1 dx)
        (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 209 [ MEM[(struct CollisionTable *)memorctable.10_93].ct ])
        (nil)))
(insn 232 231 233 13 (set (reg:SI 4 si)
        (reg:SI 210 [ num_tilings ])) tilesInt.C:294 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 210 [ num_tilings ])
        (nil)))
(insn 233 232 234 13 (set (reg:DI 5 di)
        (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (nil))
(call_insn 234 233 238 13 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:294 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

;; basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u246(6){ }u247(7){ }u248(16){ }u249(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 154 211 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 135
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 154 211 212
;; live  kill	
(note 238 234 239 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 14 (set (reg/f:DI 211 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (nil))
(insn 240 239 241 14 (set (reg:DI 5 di)
        (reg/f:DI 211 [ memorctable ])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 211 [ memorctable ])
        (nil)))
(call_insn 241 240 242 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:298 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 242 241 243 14 (set (reg:DI 154 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:298 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 243 242 244 14 (var_location:SI memory_size (subreg:SI (reg:DI 154 [ D.11827 ]) 0)) tilesInt.C:298 -1
     (nil))
(insn 244 243 245 14 (set (reg:SI 212 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:299 89 {*movsi_internal}
     (nil))
(insn 245 244 246 14 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 106 [ num_ints ])) tilesInt.C:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 106 [ num_ints ])
        (nil)))
(insn 246 245 247 14 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 105 [ ints ])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ ints ])
        (nil)))
(insn 247 246 248 14 (set (reg:DI 38 r9)
        (reg/v/f:DI 122 [ wrapwidths ])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 122 [ wrapwidths ])
        (nil)))
(insn 248 247 249 14 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 135 [ D.11827 ]) 0)) tilesInt.C:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ D.11827 ])
        (nil)))
(insn 249 248 250 14 (set (reg:DI 2 cx)
        (reg/v/f:DI 113 [ variables ])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 113 [ variables ])
        (nil)))
(insn 250 249 251 14 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 154 [ D.11827 ]) 0)) tilesInt.C:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 154 [ D.11827 ])
        (nil)))
(insn 251 250 252 14 (set (reg:SI 4 si)
        (reg:SI 212 [ num_tilings ])) tilesInt.C:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 212 [ num_tilings ])
        (nil)))
(insn 252 251 253 14 (set (reg:DI 5 di)
        (reg/v/f:DI 117 [ the_tiles ])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (nil))
(call_insn 253 252 254 14 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:299 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u276(6){ }u277(7){ }u278(16){ }u279(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157 158
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; live  gen 	 17 [flags] 157 158
;; live  kill	 17 [flags]
(code_label 254 253 255 15 18 "" [0 uses])
(note 255 254 256 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 15 (set (reg:SI 157 [ num_tilings.4 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 num_tilings+0 S4 A128])) tilesInt.C:302 89 {*movsi_internal}
     (nil))
(insn 257 256 259 15 (parallel [
            (set (reg/v:SI 158 [ i ])
                (plus:SI (reg:SI 157 [ num_tilings.4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:302 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 157 [ num_tilings.4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 259 257 260 15 (var_location:SI i (reg/v:SI 158 [ i ])) -1
     (nil))
(insn 260 259 261 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 158 [ i ])
            (const_int 0 [0]))) tilesInt.C:302 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 261 260 299 15 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) tilesInt.C:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 269)
;;  succ:       17 [91.0%] 
;;              16 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158

;; basic block 16, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [9.0%]  (FALLTHRU)
;;              18 [9.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u285(6){ }u286(7){ }u287(16){ }u288(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 107
;; live  kill	
(code_label 299 261 262 16 20 "" [1 uses])
(note 262 299 263 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b97208f5b48 *.LC1>)) tilesInt.C:304 87 {*movdi_internal_rex64}
     (nil))
(insn 264 263 265 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:304 91 {*movqi_internal}
     (nil))
(call_insn 265 264 266 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:304 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 266 265 269 16 (set (reg/f:DI 107 [ D.11825 ])
        (reg:DI 0 ax)) tilesInt.C:304 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [91.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u293(6){ }u294(7){ }u295(16){ }u296(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; lr  def 	 17 [flags] 168 174 214 215 217 218 219 220
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 158
;; live  gen 	 168 174 214 215 217 218 219 220
;; live  kill	 17 [flags]
(code_label 269 266 270 17 19 "" [1 uses])
(note 270 269 272 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 272 270 273 17 (set (reg:DI 214 [ D.11831 ])
        (zero_extend:DI (reg/v:SI 158 [ i ]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 273 272 275 17 (parallel [
            (set (reg:DI 215 [ D.11831 ])
                (plus:DI (reg:DI 214 [ D.11831 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 214 [ D.11831 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 275 273 276 17 (parallel [
            (set (reg:DI 217)
                (neg:DI (reg:DI 215 [ D.11831 ])))
            (clobber (reg:CC 17 flags))
        ]) 461 {*negdi2_1}
     (expr_list:REG_DEAD (reg:DI 215 [ D.11831 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 276 275 279 17 (parallel [
            (set (reg:DI 218)
                (ashift:DI (reg:DI 217)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 279 276 280 17 (set (reg:DI 219 [ D.11831 ])
        (sign_extend:DI (reg/v:SI 158 [ i ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 158 [ i ])
        (nil)))
(insn 280 279 281 17 (parallel [
            (set (reg:DI 220 [ D.11831 ])
                (ashift:DI (reg:DI 219 [ D.11831 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 219 [ D.11831 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 281 280 55 17 (parallel [
            (set (reg/f:DI 174 [ D.11833 ])
                (plus:DI (reg/v/f:DI 117 [ the_tiles ])
                    (reg:DI 220 [ D.11831 ])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.11831 ])
        (expr_list:REG_DEAD (reg/v/f:DI 117 [ the_tiles ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 281 303 17 (set (reg:DI 168 [ ivtmp.70 ])
        (const_int 0 [0])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

;; basic block 18, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU,DFS_BACK)
;;              17 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 163 168 221 222 223 224 225
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 163 168 221 222 223 224 225
;; live  kill	 17 [flags]
(code_label 303 55 282 18 21 "" [0 uses])
(note 282 303 283 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 283 282 284 18 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 284 283 285 18 (set (reg:SI 222 [ MEM[base: _147, index: ivtmp.70_138, offset: 0B] ])
        (mem:SI (plus:DI (reg/f:DI 174 [ D.11833 ])
                (reg:DI 168 [ ivtmp.70 ])) [0 MEM[base: _147, index: ivtmp.70_138, offset: 0B]+0 S4 A32])) tilesInt.C:303 89 {*movsi_internal}
     (nil))
(insn 285 284 286 18 (set (reg:DI 221 [ D.11827 ])
        (sign_extend:DI (reg:SI 222 [ MEM[base: _147, index: ivtmp.70_138, offset: 0B] ]))) tilesInt.C:303 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 222 [ MEM[base: _147, index: ivtmp.70_138, offset: 0B] ])
        (nil)))
(insn 286 285 287 18 (set (reg:DI 5 di)
        (reg:DI 221 [ D.11827 ])) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 221 [ D.11827 ])
        (nil)))
(call_insn 287 286 288 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:303 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 288 287 289 18 (set (reg/f:DI 163 [ D.11825 ])
        (reg:DI 0 ax)) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 289 288 290 18 (set (reg:SI 224 [ start_element ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 start_element+0 S4 A128])) tilesInt.C:303 89 {*movsi_internal}
     (nil))
(insn 290 289 291 18 (set (reg:DI 223 [ D.11827 ])
        (sign_extend:DI (reg:SI 224 [ start_element ]))) tilesInt.C:303 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 224 [ start_element ])
        (nil)))
(insn 291 290 292 18 (set (reg/f:DI 225 [ tiles_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 tiles_list+0 S8 A128])) tilesInt.C:303 87 {*movdi_internal_rex64}
     (nil))
(insn 292 291 293 18 (set (reg:DI 1 dx)
        (reg/f:DI 163 [ D.11825 ])) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 163 [ D.11825 ])
        (nil)))
(insn 293 292 294 18 (set (reg:DI 4 si)
        (reg:DI 223 [ D.11827 ])) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 223 [ D.11827 ])
        (nil)))
(insn 294 293 295 18 (set (reg:DI 5 di)
        (reg/f:DI 225 [ tiles_list ])) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 225 [ tiles_list ])
        (nil)))
(call_insn 295 294 297 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:303 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 297 295 298 18 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(insn 298 297 300 18 (parallel [
            (set (reg:DI 168 [ ivtmp.70 ])
                (plus:DI (reg:DI 168 [ ivtmp.70 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 300 298 301 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 168 [ ivtmp.70 ])
            (reg:DI 218))) tilesInt.C:302 8 {*cmpdi_1}
     (nil))
(jump_insn 301 300 302 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) tilesInt.C:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 299)
;;  succ:       19 [91.0%]  (FALLTHRU)
;;              16 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

;; basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [91.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u334(6){ }u335(7){ }u336(16){ }u337(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  gen 	
;; live  kill	
(note 302 301 346 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;;  succ:       18 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 174 218

;; basic block 20, loop depth 0, count 0, freq 245, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u338(6){ }u339(7){ }u340(16){ }u341(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 107
;; live  kill	
(code_label 346 302 345 20 24 "" [1 uses])
(note 345 346 56 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 56 345 311 20 (set (reg/f:DI 107 [ D.11825 ])
        (const_int 0 [0])) tilesInt.C:269 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 21, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [73.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u347(6){ }u348(7){ }u349(16){ }u350(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 106 126 227 228 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 106 126 227 228 229
;; live  kill	 17 [flags]
(code_label 311 56 312 21 11 "" [1 uses])
(note 312 311 313 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 21 (set (reg/f:DI 227 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:277 87 {*movdi_internal_rex64}
     (nil))
(insn 314 313 315 21 (set (reg:DI 5 di)
        (reg/f:DI 227 [ ints_list ])) tilesInt.C:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 227 [ ints_list ])
        (nil)))
(call_insn 315 314 316 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:277 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 316 315 317 21 (set (reg:DI 126 [ D.11827 ])
        (reg:DI 0 ax)) tilesInt.C:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 317 316 318 21 (set (reg/v:SI 106 [ num_ints ])
        (subreg:SI (reg:DI 126 [ D.11827 ]) 0)) tilesInt.C:277 89 {*movsi_internal}
     (nil))
(debug_insn 318 317 319 21 (var_location:SI num_ints (subreg:SI (reg:DI 126 [ D.11827 ]) 0)) tilesInt.C:277 -1
     (nil))
(insn 319 318 320 21 (set (reg:DI 228 [ D.11828 ])
        (sign_extend:DI (subreg:SI (reg:DI 126 [ D.11827 ]) 0))) tilesInt.C:278 149 {*extendsidi2_rex64}
     (nil))
(insn 320 319 321 21 (parallel [
            (set (reg:DI 229 [ D.11828 ])
                (ashift:DI (reg:DI 228 [ D.11828 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:278 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.11828 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 321 320 322 21 (set (reg:DI 5 di)
        (reg:DI 229 [ D.11828 ])) tilesInt.C:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 229 [ D.11828 ])
        (nil)))
(call_insn 322 321 323 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:278 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 323 322 325 21 (set (reg/v/f:DI 105 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 230)
            (nil))))
(debug_insn 325 323 327 21 (var_location:DI ints (reg/v/f:DI 105 [ ints ])) tilesInt.C:278 -1
     (nil))
(debug_insn 327 325 329 21 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 329 327 330 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 126 [ D.11827 ]) 0)
            (const_int 0 [0]))) tilesInt.C:279 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.11827 ])
        (nil)))
(jump_insn 330 329 331 21 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) tilesInt.C:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 328)
;;  succ:       22 [91.0%]  (FALLTHRU)
;;              8 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

;; basic block 22, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [91.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u368(6){ }u369(7){ }u370(16){ }u371(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  gen 	 137
;; live  kill	
(note 331 330 51 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 51 331 335 22 (set (reg:DI 137 [ ivtmp.80 ])
        (const_int 0 [0])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122 137

;; basic block 23, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [27.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u372(6){ }u373(7){ }u374(16){ }u375(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 105 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 117 122
;; live  gen 	 105 106
;; live  kill	
(code_label 335 51 336 23 10 "" [1 uses])
(note 336 335 52 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 52 336 53 23 (set (reg/v:SI 106 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:260 89 {*movsi_internal}
     (nil))
(insn 53 52 347 23 (set (reg/v/f:DI 105 [ ints ])
        (const_int 0 [0])) tilesInt.C:259 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 113 117 122

;; basic block 24, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 23, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              16 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u376(6){ }u377(7){ }u378(16){ }u379(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 0 [ax]
;; live  kill	
(note 347 53 340 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 340 347 343 24 (set (reg/i:DI 0 ax)
        (reg/f:DI 107 [ D.11825 ])) tilesInt.C:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.11825 ])
        (nil)))
(insn 343 340 0 24 (use (reg/i:DI 0 ax)) tilesInt.C:305 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_GetTilesWrap(PyObject*, PyObject*) (_ZL18tiles_GetTilesWrapP7_objectS0_, funcdef_no=155, decl_uid=11346, cgraph_uid=155)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 29 (  1.2)


PyObject* tiles_GetTilesWrap(PyObject*, PyObject*)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 370
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={26d,22u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,24u} r7={1d,63u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,23u} r17={46d,10u} r18={23d} r19={23d} r20={1d,51u,5e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r74={1d,1u} r77={1d,4u} r78={1d,2u} r79={1d,1u} r81={1d,4u} r86={1d,1u} r87={1d,1u} r90={1d,5u} r91={1d,1u} r92={2d,6u} r96={1d,1u} r97={1d,1u} r100={1d,1u} r101={1d,1u} r104={1d,1u} r109={1d,2u} r114={1d,3u} r116={2d,8u} r120={1d,1u} r124={2d,5u} r126={1d,2u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,3u} r136={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1515{1166d,344u,5e} in 199{176 regular + 23 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 19 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 129 130 131 132 133 135 136
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 63 129 130 131 132 133 135 136
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[3]->( 5 24 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78

( 3 )->[5]->( 22 24 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 79
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77

( 7 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u101(6){ }u102(7){ }u103(16){ }u104(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

( 6 23 )->[7]->( 6 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u105(6){ }u106(7){ }u107(16){ }u108(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 92 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 86 87 92 150
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

( 24 7 22 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u129(6){ }u130(7){ }u131(16){ }u132(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 90 91 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 90 91 151
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91

( 8 11 )->[9]->( 13 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(6){ }u145(7){ }u146(16){ }u147(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 104 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 104 152
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 116
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91
;; live  gen 	 116
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

( 12 10 )->[11]->( 12 9 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u160(6){ }u161(7){ }u162(16){ }u163(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 77 91 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 97 100 101 116 153 154
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 96 97 100 101 116 153 154
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

( 11 )->[12]->( 11 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u199(6){ }u200(7){ }u201(16){ }u202(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

( 9 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u203(6){ }u204(7){ }u205(16){ }u206(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 155 156 157
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 155 156 157
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

( 9 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 109 158 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 109 158 159
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

( 13 14 )->[15]->( 16 20 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u260(6){ }u261(7){ }u262(16){ }u263(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 160 161
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 114 160 161
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u272(6){ }u273(7){ }u274(16){ }u275(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  gen 	 124
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

( 18 16 )->[17]->( 18 21 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u276(6){ }u277(7){ }u278(16){ }u279(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 120 124 126 162 163
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 120 124 126 162 163
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

( 17 )->[18]->( 17 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u301(6){ }u302(7){ }u303(16){ }u304(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

( 2 )->[19]->( 25 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u305(6){ }u306(7){ }u307(16){ }u308(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

( 15 )->[20]->( 25 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

( 17 )->[21]->( 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u314(6){ }u315(7){ }u316(16){ }u317(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

( 5 )->[22]->( 23 8 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u324(6){ }u325(7){ }u326(16){ }u327(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 81 165 166 167
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 81 165 166 167
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

( 22 )->[23]->( 7 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u345(6){ }u346(7){ }u347(16){ }u348(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 92
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

( 3 5 )->[24]->( 8 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u349(6){ }u350(7){ }u351(16){ }u352(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 60 61
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

( 21 19 20 )->[25]->( 1 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u353(6){ }u354(7){ }u355(16){ }u356(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 25 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u359(0){ }u360(6){ }u361(7){ }u362(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 51 to worklist
  Adding insn 48 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 83 to worklist
  Adding insn 77 to worklist
  Adding insn 73 to worklist
  Adding insn 67 to worklist
  Adding insn 59 to worklist
  Adding insn 55 to worklist
  Adding insn 89 to worklist
  Adding insn 86 to worklist
  Adding insn 111 to worklist
  Adding insn 104 to worklist
  Adding insn 102 to worklist
  Adding insn 99 to worklist
  Adding insn 124 to worklist
  Adding insn 117 to worklist
  Adding insn 132 to worklist
  Adding insn 129 to worklist
  Adding insn 165 to worklist
  Adding insn 158 to worklist
  Adding insn 156 to worklist
  Adding insn 153 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 144 to worklist
  Adding insn 184 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 203 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 191 to worklist
  Adding insn 213 to worklist
  Adding insn 209 to worklist
  Adding insn 231 to worklist
  Adding insn 225 to worklist
  Adding insn 220 to worklist
  Adding insn 260 to worklist
  Adding insn 252 to worklist
  Adding insn 245 to worklist
  Adding insn 273 to worklist
Finished finding needed instructions:
processing block 25 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 270 to worklist
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
  Adding insn 11 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
  Adding insn 12 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
  Adding insn 230 to worklist
  Adding insn 229 to worklist
  Adding insn 226 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
  Adding insn 10 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
  Adding insn 13 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
  Adding insn 212 to worklist
  Adding insn 210 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
  Adding insn 206 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 194 to worklist
  Adding insn 192 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
  Adding insn 164 to worklist
  Adding insn 162 to worklist
  Adding insn 157 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 148 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
  Adding insn 9 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91
  Adding insn 123 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
  Adding insn 110 to worklist
  Adding insn 108 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
  Adding insn 6 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
  Adding insn 259 to worklist
  Adding insn 253 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
processing block 24 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
  Adding insn 8 to worklist
  Adding insn 7 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 4 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 31 (  1.2)
;; Following path with 38 sets: 2 
;; Following path with 31 sets: 3 
;; Following path with 5 sets: 5 
;; Following path with 2 sets: 24 
;; Following path with 16 sets: 22 
;; Following path with 1 sets: 23 
;; Following path with 16 sets: 7 
;; Following path with 11 sets: 8 
;; Following path with 1 sets: 10 
;; Following path with 25 sets: 11 
;; Following path with 7 sets: 9 
;; Following path with 15 sets: 14 
;; Following path with 13 sets: 13 
;; Following path with 8 sets: 15 
;; Following path with 1 sets: 20 
;; Following path with 1 sets: 16 
;; Following path with 17 sets: 17 
;; Following path with 1 sets: 21 
;; Following path with 1 sets: 19 
;; Following path with 2 sets: 25 
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_GetTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={26d,22u} r1={28d,4u} r2={27d,3u} r4={32d,9u} r5={47d,23u} r6={1d,24u} r7={1d,63u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,23u} r17={46d,10u} r18={23d} r19={23d} r20={1d,51u,5e} r21={24d,1u} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r74={1d,1u} r77={1d,4u} r78={1d,2u} r79={1d,1u} r81={1d,4u} r86={1d,1u} r87={1d,1u} r90={1d,5u} r91={1d,1u} r92={2d,6u} r96={1d,1u} r97={1d,1u} r100={1d,1u} r101={1d,1u} r104={1d,1u} r109={1d,2u} r114={1d,3u} r116={2d,8u} r120={1d,1u} r124={2d,5u} r126={1d,2u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,3u} r136={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1515{1166d,344u,5e} in 199{176 regular + 23 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 129 130 131 132 133 135 136
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 63 129 130 131 132 133 135 136
;; live  kill	 17 [flags]
(note 14 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 14 5 2 (set (reg/v/f:DI 129 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:310 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:311 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:313 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 19 18 20 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:314 -1
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:316 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:317 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:319 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 23 22 24 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:320 -1
     (nil))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:321 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 25 24 26 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:322 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:323 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 130)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:329 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:329 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:329 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 2 (parallel [
            (set (reg/f:DI 133)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:329 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg/f:DI 133)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 32 31 34 2 (set (reg:DI 135)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 34 32 35 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg:DI 135)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:DI 136)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:329 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 39 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 136)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 39 36 40 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 135)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 42 2 (set (reg:DI 38 r9)
        (reg/f:DI 130)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 42 40 43 2 (set (reg:DI 37 r8)
        (reg:DI 135)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 135)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
            (nil))))
(insn 43 42 44 2 (set (reg:DI 2 cx)
        (reg/f:DI 131)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 44 43 45 2 (set (reg:DI 1 dx)
        (reg/f:DI 132)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 45 44 46 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b9720943b48 *.LC2>)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg/v/f:DI 129 [ args ])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 129 [ args ])
        (nil)))
(insn 47 46 48 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:329 91 {*movqi_internal}
     (nil))
(call_insn 48 47 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 32 [0x20]))) tilesInt.C:329 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (nil)))))))))))))
(insn 49 48 50 2 (set (reg:SI 63 [ D.11864 ])
        (reg:SI 0 ax)) tilesInt.C:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 50 49 51 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.11864 ])
            (const_int 0 [0]))) tilesInt.C:326 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 63 [ D.11864 ])
        (nil)))
(jump_insn 51 50 52 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 276)
            (pc))) tilesInt.C:326 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 276)
;;  succ:       19 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 74 77 78 140 141 143 144 145 147 148
;; live  kill	 17 [flags]
(note 52 51 53 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 3 (set (reg/f:DI 140 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:332 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 3 (set (reg:DI 5 di)
        (reg/f:DI 140 [ variables_list ])) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140 [ variables_list ])
        (nil)))
(call_insn 55 54 56 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:332 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 3 (set (reg:DI 65 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 57 56 58 3 (parallel [
            (set (reg:DI 141 [ D.11866 ])
                (ashift:DI (reg:DI 65 [ D.11865 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:332 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.11865 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 3 (set (reg:DI 5 di)
        (reg:DI 141 [ D.11866 ])) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 141 [ D.11866 ])
        (nil)))
(call_insn 59 58 60 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:332 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 62 3 (set (reg/v/f:DI 68 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 142)
            (nil))))
(debug_insn 62 60 63 3 (var_location:DI variables (reg/v/f:DI 68 [ variables ])) tilesInt.C:332 -1
     (nil))
(insn 63 62 64 3 (set (reg:SI 144 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:333 89 {*movsi_internal}
     (nil))
(insn 64 63 65 3 (set (reg:DI 143 [ D.11866 ])
        (sign_extend:DI (reg:SI 144 [ num_tilings ]))) tilesInt.C:333 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144 [ num_tilings ])
        (nil)))
(insn 65 64 66 3 (parallel [
            (set (reg:DI 145 [ D.11866 ])
                (ashift:DI (reg:DI 143 [ D.11866 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:333 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.11866 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 3 (set (reg:DI 5 di)
        (reg:DI 145 [ D.11866 ])) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 145 [ D.11866 ])
        (nil)))
(call_insn 67 66 68 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:333 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 68 67 70 3 (set (reg/v/f:DI 72 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 146)
            (nil))))
(debug_insn 70 68 71 3 (var_location:DI the_tiles (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:333 -1
     (nil))
(insn 71 70 72 3 (set (reg/f:DI 147 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 3 (set (reg:DI 5 di)
        (reg/f:DI 147 [ variables_list ])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 147 [ variables_list ])
        (nil)))
(call_insn 73 72 74 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:334 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 74 73 75 3 (set (reg:DI 74 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 75 74 76 3 (parallel [
            (set (reg:DI 148 [ D.11866 ])
                (ashift:DI (reg:DI 74 [ D.11865 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:334 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 74 [ D.11865 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 3 (set (reg:DI 5 di)
        (reg:DI 148 [ D.11866 ])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 148 [ D.11866 ])
        (nil)))
(call_insn 77 76 78 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:334 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 78 77 80 3 (set (reg/v/f:DI 77 [ wrapwidths ])
        (reg:DI 0 ax)) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 149)
            (nil))))
(debug_insn 80 78 81 3 (var_location:DI wrapwidths (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:334 -1
     (nil))
(insn 81 80 82 3 (set (reg/f:DI 78 [ ints_list.18 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:335 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 78 [ ints_list.18 ])
            (const_int 0 [0]))) tilesInt.C:335 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 83 82 84 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 265)
            (pc))) tilesInt.C:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 265)
;;  succ:       5 [69.8%]  (FALLTHRU)
;;              24 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78

;; basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77 78
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 79
;; live  kill	
(note 84 83 85 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 5 (set (reg:DI 5 di)
        (reg/f:DI 78 [ ints_list.18 ])) tilesInt.C:335 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ ints_list.18 ])
        (nil)))
(call_insn 86 85 87 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:335 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 87 86 88 5 (set (reg:DI 79 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:335 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 88 87 89 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 79 [ D.11865 ])
            (const_int 0 [0]))) tilesInt.C:335 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 79 [ D.11865 ])
        (nil)))
(jump_insn 89 88 109 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) tilesInt.C:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 241)
;;  succ:       22 [73.0%] 
;;              24 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77

;; basic block 6, loop depth 1, count 0, freq 2401, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u101(6){ }u102(7){ }u103(16){ }u104(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  gen 	
;; live  kill	
(code_label 109 89 93 6 38 "" [1 uses])
(note 93 109 262 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

;; basic block 7, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;;              23 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u105(6){ }u106(7){ }u107(16){ }u108(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 92 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 86 87 92 150
;; live  kill	 17 [flags]
(code_label 262 93 94 7 47 "" [0 uses])
(note 94 262 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 95 94 96 7 (var_location:SI i (subreg:SI (reg:DI 92 [ ivtmp.98 ]) 0)) -1
     (nil))
(insn 96 95 97 7 (set (reg/f:DI 150 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:340 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 7 (set (reg:DI 4 si)
        (reg:DI 92 [ ivtmp.98 ])) tilesInt.C:340 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 7 (set (reg:DI 5 di)
        (reg/f:DI 150 [ ints_list ])) tilesInt.C:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 150 [ ints_list ])
        (nil)))
(call_insn 99 98 100 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:340 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 7 (set (reg/f:DI 86 [ D.11863 ])
        (reg:DI 0 ax)) tilesInt.C:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 101 100 102 7 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.11863 ])) tilesInt.C:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.11863 ])
        (nil)))
(call_insn 102 101 103 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:340 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 7 (set (reg:DI 87 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 104 103 105 7 (set (mem:SI (plus:DI (mult:DI (reg:DI 92 [ ivtmp.98 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 60 [ ints ])) [0 MEM[base: ints_52, index: ivtmp.98_129, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 87 [ D.11865 ]) 0)) tilesInt.C:340 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.11865 ])
        (nil)))
(debug_insn 105 104 107 7 (var_location:SI D#5 (plus:SI (subreg:SI (reg:DI 92 [ ivtmp.98 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 107 105 108 7 (var_location:SI i (debug_expr:SI D#5)) -1
     (nil))
(insn 108 107 110 7 (parallel [
            (set (reg:DI 92 [ ivtmp.98 ])
                (plus:DI (reg:DI 92 [ ivtmp.98 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 108 111 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 61 [ num_ints ])
            (subreg:SI (reg:DI 92 [ ivtmp.98 ]) 0))) tilesInt.C:339 7 {*cmpsi_1}
     (nil))
(jump_insn 111 110 258 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) tilesInt.C:339 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 109)
;;  succ:       6 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%]  (FALLTHRU)
;;              7 [9.0%]  (FALLTHRU)
;;              22 [9.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u129(6){ }u130(7){ }u131(16){ }u132(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 90 91 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 90 91 151
;; live  kill	
(code_label 258 111 112 8 46 "" [1 uses])
(note 112 258 113 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 113 112 114 8 (var_location:SI num_ints (reg/v:SI 61 [ num_ints ])) -1
     (nil))
(debug_insn 114 113 115 8 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) -1
     (nil))
(insn 115 114 116 8 (set (reg/f:DI 151 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:343 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 8 (set (reg:DI 5 di)
        (reg/f:DI 151 [ variables_list ])) tilesInt.C:343 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 151 [ variables_list ])
        (nil)))
(call_insn 117 116 118 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:343 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 118 117 119 8 (set (reg:DI 90 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:343 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 119 118 120 8 (set (reg/v:SI 91 [ num_variables ])
        (subreg:SI (reg:DI 90 [ D.11865 ]) 0)) tilesInt.C:343 89 {*movsi_internal}
     (nil))
(debug_insn 120 119 122 8 (var_location:SI num_variables (subreg:SI (reg:DI 90 [ D.11865 ]) 0)) tilesInt.C:343 -1
     (nil))
(debug_insn 122 120 123 8 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 123 122 124 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 90 [ D.11865 ]) 0)
            (const_int 0 [0]))) tilesInt.C:345 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 124 123 163 8 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) tilesInt.C:345 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 136)
;;  succ:       10 [91.0%] 
;;              9 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91

;; basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU)
;;              11 [9.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(6){ }u145(7){ }u146(16){ }u147(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 104 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 104 152
;; live  kill	
(code_label 163 124 125 9 42 "" [1 uses])
(note 125 163 126 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 9 (set (reg/f:DI 152 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:351 87 {*movdi_internal_rex64}
     (nil))
(insn 127 126 128 9 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:351 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 9 (set (reg:DI 5 di)
        (reg/f:DI 152 [ memorctable ])) tilesInt.C:351 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 152 [ memorctable ])
        (nil)))
(call_insn 129 128 130 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:351 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 130 129 131 9 (set (reg:SI 104 [ D.11864 ])
        (reg:SI 0 ax)) tilesInt.C:351 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 131 130 132 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.11864 ])
            (const_int 0 [0]))) tilesInt.C:351 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 104 [ D.11864 ])
        (nil)))
(jump_insn 132 131 136 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) tilesInt.C:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 170)
;;  succ:       13 [50.0%] 
;;              14 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90

;; basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [91.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 116
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91
;; live  gen 	 116
;; live  kill	
(code_label 136 132 137 10 39 "" [1 uses])
(note 137 136 9 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 9 137 167 10 (set (reg:DI 116 [ ivtmp.92 ])
        (const_int 0 [0])) tilesInt.C:345 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

;; basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,DFS_BACK)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u160(6){ }u161(7){ }u162(16){ }u163(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 77 91 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 97 100 101 116 153 154
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 96 97 100 101 116 153 154
;; live  kill	 17 [flags]
(code_label 167 9 138 11 43 "" [0 uses])
(note 138 167 139 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 139 138 141 11 (var_location:SI i (subreg:SI (reg:DI 116 [ ivtmp.92 ]) 0)) -1
     (nil))
(insn 141 139 142 11 (set (reg/f:DI 153 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 variables_list+0 S8 A128])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(insn 142 141 143 11 (set (reg:DI 4 si)
        (reg:DI 116 [ ivtmp.92 ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 11 (set (reg:DI 5 di)
        (reg/f:DI 153 [ variables_list ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 153 [ variables_list ])
        (nil)))
(call_insn 144 143 145 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 145 144 146 11 (set (reg/f:DI 96 [ D.11863 ])
        (reg:DI 0 ax)) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 146 145 147 11 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.11863 ])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.11863 ])
        (nil)))
(call_insn 147 146 148 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 148 147 149 11 (set (reg:DF 97 [ D.11867 ])
        (reg:DF 21 xmm0)) tilesInt.C:347 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 149 148 150 11 (set (mem:SF (plus:DI (mult:DI (reg:DI 116 [ ivtmp.92 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 68 [ variables ])) [0 MEM[base: variables_29, index: ivtmp.92_130, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 97 [ D.11867 ]))) tilesInt.C:347 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 97 [ D.11867 ])
        (nil)))
(insn 150 149 151 11 (set (reg/f:DI 154 [ wrapwidths_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:348 87 {*movdi_internal_rex64}
     (nil))
(insn 151 150 152 11 (set (reg:DI 4 si)
        (reg:DI 116 [ ivtmp.92 ])) tilesInt.C:348 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 153 11 (set (reg:DI 5 di)
        (reg/f:DI 154 [ wrapwidths_list ])) tilesInt.C:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 154 [ wrapwidths_list ])
        (nil)))
(call_insn 153 152 154 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:348 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 11 (set (reg/f:DI 100 [ D.11863 ])
        (reg:DI 0 ax)) tilesInt.C:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 155 154 156 11 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.11863 ])) tilesInt.C:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.11863 ])
        (nil)))
(call_insn 156 155 157 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:348 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 157 156 158 11 (set (reg:DI 101 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 158 157 159 11 (set (mem:SI (plus:DI (mult:DI (reg:DI 116 [ ivtmp.92 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 77 [ wrapwidths ])) [0 MEM[base: wrapwidths_41, index: ivtmp.92_130, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 101 [ D.11865 ]) 0)) tilesInt.C:348 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ D.11865 ])
        (nil)))
(debug_insn 159 158 161 11 (var_location:SI D#4 (plus:SI (subreg:SI (reg:DI 116 [ ivtmp.92 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 161 159 162 11 (var_location:SI i (debug_expr:SI D#4)) -1
     (nil))
(insn 162 161 164 11 (parallel [
            (set (reg:DI 116 [ ivtmp.92 ])
                (plus:DI (reg:DI 116 [ ivtmp.92 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 162 165 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 91 [ num_variables ])
            (subreg:SI (reg:DI 116 [ ivtmp.92 ]) 0))) tilesInt.C:345 7 {*cmpsi_1}
     (nil))
(jump_insn 165 164 166 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) tilesInt.C:345 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 163)
;;  succ:       12 [91.0%]  (FALLTHRU)
;;              9 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

;; basic block 12, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u199(6){ }u200(7){ }u201(16){ }u202(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  gen 	
;; live  kill	
(note 166 165 170 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       11 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90 91 116

;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u203(6){ }u204(7){ }u205(16){ }u206(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 155 156 157
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 155 156 157
;; live  kill	
(code_label 170 166 171 13 40 "" [1 uses])
(note 171 170 172 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 172 171 173 13 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:353 -1
     (nil))
(insn 173 172 174 13 (set (reg/f:DI 155 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (nil))
(insn 174 173 175 13 (set (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 155 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 155 [ memorctable ])
        (nil)))
(insn 175 174 176 13 (set (reg:SI 157 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:354 89 {*movsi_internal}
     (nil))
(insn 176 175 177 13 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:354 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 177 176 178 13 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 178 177 179 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 77 [ wrapwidths ])
        (nil)))
(insn 179 178 180 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 90 [ D.11865 ]) 0)) tilesInt.C:354 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.11865 ])
        (nil)))
(insn 180 179 181 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 181 180 182 13 (set (reg:DI 1 dx)
        (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 156 [ MEM[(struct CollisionTable *)memorctable.21_92].ct ])
        (nil)))
(insn 182 181 183 13 (set (reg:SI 4 si)
        (reg:SI 157 [ num_tilings ])) tilesInt.C:354 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 157 [ num_tilings ])
        (nil)))
(insn 183 182 184 13 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (nil))
(call_insn 184 183 188 13 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:354 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 109 158 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 90
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 109 158 159
;; live  kill	
(note 188 184 189 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 14 (set (reg/f:DI 158 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (nil))
(insn 190 189 191 14 (set (reg:DI 5 di)
        (reg/f:DI 158 [ memorctable ])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 158 [ memorctable ])
        (nil)))
(call_insn 191 190 192 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:358 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 192 191 193 14 (set (reg:DI 109 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 193 192 194 14 (var_location:SI memory_size (subreg:SI (reg:DI 109 [ D.11865 ]) 0)) tilesInt.C:358 -1
     (nil))
(insn 194 193 195 14 (set (reg:SI 159 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:359 89 {*movsi_internal}
     (nil))
(insn 195 194 196 14 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 196 195 197 14 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 197 196 198 14 (set (reg:DI 38 r9)
        (reg/v/f:DI 77 [ wrapwidths ])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 77 [ wrapwidths ])
        (nil)))
(insn 198 197 199 14 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 90 [ D.11865 ]) 0)) tilesInt.C:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.11865 ])
        (nil)))
(insn 199 198 200 14 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 200 199 201 14 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 109 [ D.11865 ]) 0)) tilesInt.C:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.11865 ])
        (nil)))
(insn 201 200 202 14 (set (reg:SI 4 si)
        (reg:SI 159 [ num_tilings ])) tilesInt.C:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 159 [ num_tilings ])
        (nil)))
(insn 202 201 203 14 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (nil))
(call_insn 203 202 204 14 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:359 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u260(6){ }u261(7){ }u262(16){ }u263(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 160 161
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 114 160 161
;; live  kill	
(code_label 204 203 205 15 44 "" [0 uses])
(note 205 204 206 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 15 (set (reg:SI 161 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:362 89 {*movsi_internal}
     (nil))
(insn 207 206 208 15 (set (reg:DI 160 [ D.11865 ])
        (sign_extend:DI (reg:SI 161 [ num_tilings ]))) tilesInt.C:362 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 161 [ num_tilings ])
        (nil)))
(insn 208 207 209 15 (set (reg:DI 5 di)
        (reg:DI 160 [ D.11865 ])) tilesInt.C:362 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 160 [ D.11865 ])
        (nil)))
(call_insn 209 208 210 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:362 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 210 209 211 15 (set (reg/v/f:DI 114 [ tiles_list ])
        (reg:DI 0 ax)) tilesInt.C:362 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 211 210 212 15 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 212 211 213 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:363 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 213 212 214 15 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) tilesInt.C:363 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 280)
;;  succ:       16 [91.0%]  (FALLTHRU)
;;              20 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114

;; basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [91.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u272(6){ }u273(7){ }u274(16){ }u275(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114
;; live  gen 	 124
;; live  kill	
(note 214 213 10 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 10 214 233 16 (set (reg:DI 124 [ ivtmp.87 ])
        (const_int 0 [0])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

;; basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU,DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u276(6){ }u277(7){ }u278(16){ }u279(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 120 124 126 162 163
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 120 124 126 162 163
;; live  kill	 17 [flags]
(code_label 233 10 215 17 45 "" [0 uses])
(note 215 233 216 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 216 215 217 17 (var_location:SI i (subreg:SI (reg:DI 124 [ ivtmp.87 ]) 0)) -1
     (nil))
(insn 217 216 218 17 (set (reg:SI 163 [ MEM[base: the_tiles_34, index: ivtmp.87_139, step: 4, offset: 0B] ])
        (mem:SI (plus:DI (mult:DI (reg:DI 124 [ ivtmp.87 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 72 [ the_tiles ])) [0 MEM[base: the_tiles_34, index: ivtmp.87_139, step: 4, offset: 0B]+0 S4 A32])) tilesInt.C:364 89 {*movsi_internal}
     (nil))
(insn 218 217 219 17 (set (reg:DI 162 [ D.11865 ])
        (sign_extend:DI (reg:SI 163 [ MEM[base: the_tiles_34, index: ivtmp.87_139, step: 4, offset: 0B] ]))) tilesInt.C:364 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 163 [ MEM[base: the_tiles_34, index: ivtmp.87_139, step: 4, offset: 0B] ])
        (nil)))
(insn 219 218 220 17 (set (reg:DI 5 di)
        (reg:DI 162 [ D.11865 ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 162 [ D.11865 ])
        (nil)))
(call_insn 220 219 221 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:364 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 221 220 222 17 (set (reg/f:DI 120 [ D.11863 ])
        (reg:DI 0 ax)) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 222 221 223 17 (set (reg:DI 1 dx)
        (reg/f:DI 120 [ D.11863 ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.11863 ])
        (nil)))
(insn 223 222 224 17 (set (reg:DI 4 si)
        (reg:DI 124 [ ivtmp.87 ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 17 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (nil))
(call_insn 225 224 226 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:364 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 226 225 228 17 (parallel [
            (set (reg:SI 126 [ D.11864 ])
                (plus:SI (subreg:SI (reg:DI 124 [ ivtmp.87 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 228 226 229 17 (var_location:SI i (reg:SI 126 [ D.11864 ])) -1
     (nil))
(insn 229 228 230 17 (parallel [
            (set (reg:DI 124 [ ivtmp.87 ])
                (plus:DI (reg:DI 124 [ ivtmp.87 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 230 229 231 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])
            (reg:SI 126 [ D.11864 ]))) tilesInt.C:363 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 126 [ D.11864 ])
        (nil)))
(jump_insn 231 230 232 17 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 284)
            (pc))) tilesInt.C:363 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 284)
;;  succ:       18 [91.0%]  (FALLTHRU)
;;              21 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

;; basic block 18, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [91.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u301(6){ }u302(7){ }u303(16){ }u304(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  gen 	
;; live  kill	
(note 232 231 276 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;;  succ:       17 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 114 124

;; basic block 19, loop depth 0, count 0, freq 245, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u305(6){ }u306(7){ }u307(16){ }u308(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 62
;; live  kill	
(code_label 276 232 275 19 48 "" [1 uses])
(note 275 276 11 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 11 275 280 19 (set (reg/f:DI 62 [ D.11863 ])
        (const_int 0 [0])) tilesInt.C:330 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 20, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [9.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
(code_label 280 11 279 20 49 "" [1 uses])
(note 279 280 13 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 13 279 284 20 (set (reg/f:DI 62 [ D.11863 ])
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:365 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ tiles_list ])
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 21, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [9.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u314(6){ }u315(7){ }u316(16){ }u317(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; live  gen 	 62
;; live  kill	
(code_label 284 13 283 21 50 "" [1 uses])
(note 283 284 12 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 12 283 241 21 (set (reg/f:DI 62 [ D.11863 ])
        (reg/v/f:DI 114 [ tiles_list ])) tilesInt.C:365 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ tiles_list ])
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 22, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [73.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u324(6){ }u325(7){ }u326(16){ }u327(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 81 165 166 167
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 81 165 166 167
;; live  kill	 17 [flags]
(code_label 241 12 242 22 37 "" [1 uses])
(note 242 241 243 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 22 (set (reg/f:DI 165 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:337 87 {*movdi_internal_rex64}
     (nil))
(insn 244 243 245 22 (set (reg:DI 5 di)
        (reg/f:DI 165 [ ints_list ])) tilesInt.C:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 165 [ ints_list ])
        (nil)))
(call_insn 245 244 246 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:337 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 246 245 247 22 (set (reg:DI 81 [ D.11865 ])
        (reg:DI 0 ax)) tilesInt.C:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 247 246 248 22 (set (reg/v:SI 61 [ num_ints ])
        (subreg:SI (reg:DI 81 [ D.11865 ]) 0)) tilesInt.C:337 89 {*movsi_internal}
     (nil))
(debug_insn 248 247 249 22 (var_location:SI num_ints (subreg:SI (reg:DI 81 [ D.11865 ]) 0)) tilesInt.C:337 -1
     (nil))
(insn 249 248 250 22 (set (reg:DI 166 [ D.11866 ])
        (sign_extend:DI (subreg:SI (reg:DI 81 [ D.11865 ]) 0))) tilesInt.C:338 149 {*extendsidi2_rex64}
     (nil))
(insn 250 249 251 22 (parallel [
            (set (reg:DI 167 [ D.11866 ])
                (ashift:DI (reg:DI 166 [ D.11866 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:338 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 166 [ D.11866 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 22 (set (reg:DI 5 di)
        (reg:DI 167 [ D.11866 ])) tilesInt.C:338 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 167 [ D.11866 ])
        (nil)))
(call_insn 252 251 253 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:338 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 253 252 255 22 (set (reg/v/f:DI 60 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:338 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 168)
            (nil))))
(debug_insn 255 253 257 22 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) tilesInt.C:338 -1
     (nil))
(debug_insn 257 255 259 22 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 259 257 260 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 81 [ D.11865 ]) 0)
            (const_int 0 [0]))) tilesInt.C:339 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 81 [ D.11865 ])
        (nil)))
(jump_insn 260 259 261 22 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) tilesInt.C:339 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 258)
;;  succ:       23 [91.0%]  (FALLTHRU)
;;              8 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

;; basic block 23, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [91.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u345(6){ }u346(7){ }u347(16){ }u348(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  gen 	 92
;; live  kill	
(note 261 260 6 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 6 261 265 23 (set (reg:DI 92 [ ivtmp.98 ])
        (const_int 0 [0])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77 92

;; basic block 24, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [27.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u349(6){ }u350(7){ }u351(16){ }u352(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 77
;; live  gen 	 60 61
;; live  kill	
(code_label 265 6 266 24 36 "" [1 uses])
(note 266 265 7 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 7 266 8 24 (set (reg/v:SI 61 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:323 89 {*movsi_internal}
     (nil))
(insn 8 7 285 24 (set (reg/v/f:DI 60 [ ints ])
        (const_int 0 [0])) tilesInt.C:322 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 77

;; basic block 25, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 24, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              19 [100.0%]  (FALLTHRU)
;;              20 [100.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u353(6){ }u354(7){ }u355(16){ }u356(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
(note 285 8 270 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 270 285 273 25 (set (reg/i:DI 0 ax)
        (reg/f:DI 62 [ D.11863 ])) tilesInt.C:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.11863 ])
        (nil)))
(insn 273 270 0 25 (use (reg/i:DI 0 ax)) tilesInt.C:366 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_LoadTiles(PyObject*, PyObject*) (_ZL15tiles_LoadTilesP7_objectS0_, funcdef_no=152, decl_uid=11255, cgraph_uid=152)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 28 (  1.2)


PyObject* tiles_LoadTiles(PyObject*, PyObject*)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 349
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={23d,19u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,23u} r7={1d,56u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,22u} r17={47d,10u} r18={19d} r19={19d} r20={1d,49u,6e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r61={2d,5u} r62={2d,4u} r63={2d,1u} r64={1d,1u} r66={1d,1u} r69={1d,4u} r73={1d,4u} r74={1d,2u} r75={1d,1u} r77={1d,4u} r82={1d,1u} r83={1d,1u} r86={1d,5u} r87={1d,1u} r88={2d,6u} r92={1d,1u} r93={1d,1u} r96={1d,1u} r101={1d,2u} r104={1d,1u} r105={1d,4u} r106={2d,6u} r110={1d,1u} r115={2d,3u} r121={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r131={1d,3u} r132={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u,1e} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 1319{992d,320u,7e} in 187{168 regular + 19 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 20 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 125 126 127 128 129 131 132 135
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 64 125 126 127 128 129 131 132 135
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[3]->( 5 23 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 69 73 74 137 138 140 141 142
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 66 69 73 74 137 138 140 141 142
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74

( 3 )->[5]->( 21 23 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 75
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73

( 7 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u94(6){ }u95(7){ }u96(16){ }u97(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

( 6 22 )->[7]->( 6 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 88 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 82 83 88 144
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

( 23 7 21 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 86 87 145
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87

( 8 11 )->[9]->( 13 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u137(6){ }u138(7){ }u139(16){ }u140(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 146
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 96 146
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87
;; live  gen 	 106
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

( 12 10 )->[11]->( 12 9 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u153(6){ }u154(7){ }u155(16){ }u156(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 87 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 92 93 106 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 92 93 106 147
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

( 11 )->[12]->( 11 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u177(6){ }u178(7){ }u179(16){ }u180(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

( 9 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u181(6){ }u182(7){ }u183(16){ }u184(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 148 149 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 148 149 150
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

( 9 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u205(6){ }u206(7){ }u207(16){ }u208(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 101 151 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 101 151 152
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

( 13 14 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u232(6){ }u233(7){ }u234(16){ }u235(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  gen 	 17 [flags] 104 105
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105

( 15 18 )->[16]->( 24 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u249(6){ }u250(7){ }u251(16){ }u252(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  def 	 17 [flags] 115 121 154 155 157 158 159 160
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  gen 	 115 121 154 155 157 158 159 160
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

( 19 17 )->[18]->( 19 16 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u265(6){ }u266(7){ }u267(16){ }u268(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 115 161 162 163 164 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 110 115 161 162 163 164 165
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

( 18 )->[19]->( 18 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u290(6){ }u291(7){ }u292(16){ }u293(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

( 2 )->[20]->( 24 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u294(6){ }u295(7){ }u296(16){ }u297(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

( 5 )->[21]->( 22 8 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u303(6){ }u304(7){ }u305(16){ }u306(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 77 167 168 169
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 61 62 77 167 168 169
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

( 21 )->[22]->( 7 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u324(6){ }u325(7){ }u326(16){ }u327(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 88
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

( 3 5 )->[23]->( 8 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u328(6){ }u329(7){ }u330(16){ }u331(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 61 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

( 20 16 )->[24]->( 1 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 24 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u338(0){ }u339(6){ }u340(7){ }u341(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 72 to worklist
  Adding insn 66 to worklist
  Adding insn 58 to worklist
  Adding insn 54 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 100 to worklist
  Adding insn 93 to worklist
  Adding insn 91 to worklist
  Adding insn 88 to worklist
  Adding insn 113 to worklist
  Adding insn 106 to worklist
  Adding insn 121 to worklist
  Adding insn 118 to worklist
  Adding insn 144 to worklist
  Adding insn 137 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 162 to worklist
  Adding insn 155 to worklist
  Adding insn 180 to worklist
  Adding insn 173 to worklist
  Adding insn 169 to worklist
  Adding insn 188 to worklist
  Adding insn 192 to worklist
  Adding insn 228 to worklist
  Adding insn 222 to worklist
  Adding insn 214 to worklist
  Adding insn 257 to worklist
  Adding insn 249 to worklist
  Adding insn 242 to worklist
  Adding insn 270 to worklist
Finished finding needed instructions:
processing block 24 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 267 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 12 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
  Adding insn 193 to worklist
  Adding insn 191 to worklist
  Adding insn 190 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
  Adding insn 227 to worklist
  Adding insn 225 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 213 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
  Adding insn 11 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
  Adding insn 187 to worklist
  Adding insn 184 to worklist
  Adding insn 183 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
  Adding insn 172 to worklist
  Adding insn 170 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 136 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
  Adding insn 10 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87
  Adding insn 112 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
  Adding insn 99 to worklist
  Adding insn 97 to worklist
  Adding insn 92 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
  Adding insn 7 to worklist
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
  Adding insn 256 to worklist
  Adding insn 250 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
  Adding insn 9 to worklist
  Adding insn 8 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 33 count 30 (  1.2)
;; Following path with 39 sets: 2 
;; Following path with 21 sets: 3 
;; Following path with 5 sets: 5 
;; Following path with 2 sets: 23 
;; Following path with 16 sets: 21 
;; Following path with 1 sets: 22 
;; Following path with 16 sets: 7 
;; Following path with 11 sets: 8 
;; Following path with 1 sets: 10 
;; Following path with 16 sets: 11 
;; Following path with 7 sets: 9 
;; Following path with 14 sets: 14 
;; Following path with 12 sets: 13 
;; Following path with 6 sets: 15 
;; Following path with 13 sets: 17 
;; Following path with 18 sets: 18 
;; Following path with 4 sets: 16 
;; Following path with 1 sets: 20 
;; Following path with 2 sets: 24 
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_LoadTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={23d,19u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,23u} r7={1d,56u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,22u} r17={47d,10u} r18={19d} r19={19d} r20={1d,49u,6e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r61={2d,5u} r62={2d,4u} r63={2d,1u} r64={1d,1u} r66={1d,1u} r69={1d,4u} r73={1d,4u} r74={1d,2u} r75={1d,1u} r77={1d,4u} r82={1d,1u} r83={1d,1u} r86={1d,5u} r87={1d,1u} r88={2d,6u} r92={1d,1u} r93={1d,1u} r96={1d,1u} r101={1d,2u} r104={1d,1u} r105={1d,4u} r106={2d,6u} r110={1d,1u} r115={2d,3u} r121={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r131={1d,3u} r132={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 1318{992d,320u,6e} in 187{168 regular + 19 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 125 126 127 128 129 131 132 135
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 64 125 126 127 128 129 131 132 135
;; live  kill	 17 [flags]
(note 13 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 13 6 2 (set (reg/v/f:DI 125 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:136 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 6 5 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 6 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:137 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 16 15 17 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:138 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:141 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:142 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:144 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 20 19 21 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:145 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:147 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 22 21 23 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:148 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:149 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 126)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:156 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg/f:DI 127)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:156 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 128)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:156 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:156 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 129)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 29 28 31 2 (set (reg:DI 131)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 31 29 32 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 131)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:156 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 36 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 132)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 36 33 37 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 131)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg/f:DI 135)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:156 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 135)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 39 38 40 2 (set (reg:DI 38 r9)
        (reg/f:DI 126)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 40 39 41 2 (set (reg:DI 37 r8)
        (reg/f:DI 127)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 127)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 41 40 43 2 (set (reg:DI 2 cx)
        (reg/f:DI 128)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 43 41 44 2 (set (reg:DI 1 dx)
        (reg:DI 131)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 131)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
            (nil))))
(insn 44 43 45 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b97208f5ab0 *.LC0>)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg/v/f:DI 125 [ args ])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ args ])
        (nil)))
(insn 46 45 47 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:156 91 {*movqi_internal}
     (nil))
(call_insn 47 46 48 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 40 [0x28]))) tilesInt.C:156 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (nil))))))))))))))
(insn 48 47 49 2 (set (reg:SI 64 [ D.11898 ])
        (reg:SI 0 ax)) tilesInt.C:156 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 49 48 50 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.11898 ])
            (const_int 0 [0]))) tilesInt.C:152 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 64 [ D.11898 ])
        (nil)))
(jump_insn 50 49 51 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 273)
            (pc))) tilesInt.C:152 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 273)
;;  succ:       20 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 69 73 74 137 138 140 141 142
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 66 69 73 74 137 138 140 141 142
;; live  kill	 17 [flags]
(note 51 50 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 3 (set (reg/f:DI 137 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:160 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 3 (set (reg:DI 5 di)
        (reg/f:DI 137 [ variables_list ])) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 137 [ variables_list ])
        (nil)))
(call_insn 54 53 55 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:160 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 3 (set (reg:DI 66 [ D.11899 ])
        (reg:DI 0 ax)) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 138 [ D.11900 ])
                (ashift:DI (reg:DI 66 [ D.11899 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:160 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 66 [ D.11899 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 3 (set (reg:DI 5 di)
        (reg:DI 138 [ D.11900 ])) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 138 [ D.11900 ])
        (nil)))
(call_insn 58 57 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:160 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 69 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 139)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI variables (reg/v/f:DI 69 [ variables ])) tilesInt.C:160 -1
     (nil))
(insn 62 61 63 3 (set (reg:SI 141 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:161 89 {*movsi_internal}
     (nil))
(insn 63 62 64 3 (set (reg:DI 140 [ D.11900 ])
        (sign_extend:DI (reg:SI 141 [ num_tilings ]))) tilesInt.C:161 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 141 [ num_tilings ])
        (nil)))
(insn 64 63 65 3 (parallel [
            (set (reg:DI 142 [ D.11900 ])
                (ashift:DI (reg:DI 140 [ D.11900 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:161 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.11900 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 3 (set (reg:DI 5 di)
        (reg:DI 142 [ D.11900 ])) tilesInt.C:161 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 142 [ D.11900 ])
        (nil)))
(call_insn 66 65 67 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:161 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 67 66 69 3 (set (reg/v/f:DI 73 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:161 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 143)
            (nil))))
(debug_insn 69 67 70 3 (var_location:DI the_tiles (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:161 -1
     (nil))
(insn 70 69 71 3 (set (reg/f:DI 74 [ ints_list.27 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:163 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 74 [ ints_list.27 ])
            (const_int 0 [0]))) tilesInt.C:163 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 72 71 73 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) tilesInt.C:163 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 262)
;;  succ:       5 [69.8%]  (FALLTHRU)
;;              23 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74

;; basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73 74
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 75
;; live  kill	
(note 73 72 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 5 (set (reg:DI 5 di)
        (reg/f:DI 74 [ ints_list.27 ])) tilesInt.C:163 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ ints_list.27 ])
        (nil)))
(call_insn 75 74 76 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:163 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 76 75 77 5 (set (reg:DI 75 [ D.11899 ])
        (reg:DI 0 ax)) tilesInt.C:163 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 77 76 78 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 75 [ D.11899 ])
            (const_int 0 [0]))) tilesInt.C:163 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 75 [ D.11899 ])
        (nil)))
(jump_insn 78 77 98 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) tilesInt.C:163 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 238)
;;  succ:       21 [73.0%] 
;;              23 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73

;; basic block 6, loop depth 1, count 0, freq 2401, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u94(6){ }u95(7){ }u96(16){ }u97(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  gen 	
;; live  kill	
(code_label 98 78 82 6 64 "" [1 uses])
(note 82 98 259 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

;; basic block 7, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;;              22 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 88 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 82 83 88 144
;; live  kill	 17 [flags]
(code_label 259 82 83 7 75 "" [0 uses])
(note 83 259 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 84 83 85 7 (var_location:SI i (subreg:SI (reg:DI 88 [ ivtmp.118 ]) 0)) -1
     (nil))
(insn 85 84 86 7 (set (reg/f:DI 144 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:168 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 7 (set (reg:DI 4 si)
        (reg:DI 88 [ ivtmp.118 ])) tilesInt.C:168 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 7 (set (reg:DI 5 di)
        (reg/f:DI 144 [ ints_list ])) tilesInt.C:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 144 [ ints_list ])
        (nil)))
(call_insn 88 87 89 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:168 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 89 88 90 7 (set (reg/f:DI 82 [ D.11897 ])
        (reg:DI 0 ax)) tilesInt.C:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 90 89 91 7 (set (reg:DI 5 di)
        (reg/f:DI 82 [ D.11897 ])) tilesInt.C:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 82 [ D.11897 ])
        (nil)))
(call_insn 91 90 92 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:168 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 92 91 93 7 (set (reg:DI 83 [ D.11899 ])
        (reg:DI 0 ax)) tilesInt.C:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 93 92 94 7 (set (mem:SI (plus:DI (mult:DI (reg:DI 88 [ ivtmp.118 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 61 [ ints ])) [0 MEM[base: ints_45, index: ivtmp.118_115, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 83 [ D.11899 ]) 0)) tilesInt.C:168 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ D.11899 ])
        (nil)))
(debug_insn 94 93 96 7 (var_location:SI D#8 (plus:SI (subreg:SI (reg:DI 88 [ ivtmp.118 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 96 94 97 7 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))
(insn 97 96 99 7 (parallel [
            (set (reg:DI 88 [ ivtmp.118 ])
                (plus:DI (reg:DI 88 [ ivtmp.118 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 97 100 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ num_ints ])
            (subreg:SI (reg:DI 88 [ ivtmp.118 ]) 0))) tilesInt.C:167 7 {*cmpsi_1}
     (nil))
(jump_insn 100 99 255 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) tilesInt.C:167 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 98)
;;  succ:       6 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;;              7 [9.0%]  (FALLTHRU)
;;              21 [9.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u122(6){ }u123(7){ }u124(16){ }u125(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 86 87 145
;; live  kill	
(code_label 255 100 101 8 74 "" [1 uses])
(note 101 255 102 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 102 101 103 8 (var_location:SI num_ints (reg/v:SI 62 [ num_ints ])) -1
     (nil))
(debug_insn 103 102 104 8 (var_location:DI ints (reg/v/f:DI 61 [ ints ])) -1
     (nil))
(insn 104 103 105 8 (set (reg/f:DI 145 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:171 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 8 (set (reg:DI 5 di)
        (reg/f:DI 145 [ variables_list ])) tilesInt.C:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 145 [ variables_list ])
        (nil)))
(call_insn 106 105 107 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:171 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 107 106 108 8 (set (reg:DI 86 [ D.11899 ])
        (reg:DI 0 ax)) tilesInt.C:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 108 107 109 8 (set (reg/v:SI 87 [ num_variables ])
        (subreg:SI (reg:DI 86 [ D.11899 ]) 0)) tilesInt.C:171 89 {*movsi_internal}
     (nil))
(debug_insn 109 108 111 8 (var_location:SI num_variables (subreg:SI (reg:DI 86 [ D.11899 ]) 0)) tilesInt.C:171 -1
     (nil))
(debug_insn 111 109 112 8 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 112 111 113 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 86 [ D.11899 ]) 0)
            (const_int 0 [0]))) tilesInt.C:173 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 142 8 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) tilesInt.C:173 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 125)
;;  succ:       10 [91.0%] 
;;              9 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87

;; basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU)
;;              11 [9.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u137(6){ }u138(7){ }u139(16){ }u140(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 96 146
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 96 146
;; live  kill	
(code_label 142 113 114 9 68 "" [1 uses])
(note 114 142 115 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 9 (set (reg/f:DI 146 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:176 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 9 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:176 87 {*movdi_internal_rex64}
     (nil))
(insn 117 116 118 9 (set (reg:DI 5 di)
        (reg/f:DI 146 [ memorctable ])) tilesInt.C:176 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 146 [ memorctable ])
        (nil)))
(call_insn 118 117 119 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:176 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 119 118 120 9 (set (reg:SI 96 [ D.11898 ])
        (reg:SI 0 ax)) tilesInt.C:176 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 120 119 121 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.11898 ])
            (const_int 0 [0]))) tilesInt.C:176 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.11898 ])
        (nil)))
(jump_insn 121 120 125 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) tilesInt.C:176 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 149)
;;  succ:       13 [50.0%] 
;;              14 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86

;; basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [91.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 106
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87
;; live  gen 	 106
;; live  kill	
(code_label 125 121 126 10 65 "" [1 uses])
(note 126 125 10 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 10 126 146 10 (set (reg:DI 106 [ ivtmp.113 ])
        (const_int 0 [0])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

;; basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,DFS_BACK)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u153(6){ }u154(7){ }u155(16){ }u156(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 87 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 92 93 106 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 92 93 106 147
;; live  kill	 17 [flags]
(code_label 146 10 127 11 69 "" [0 uses])
(note 127 146 128 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 128 127 129 11 (var_location:SI i (subreg:SI (reg:DI 106 [ ivtmp.113 ]) 0)) -1
     (nil))
(insn 129 128 130 11 (set (reg/f:DI 147 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:174 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 11 (set (reg:DI 4 si)
        (reg:DI 106 [ ivtmp.113 ])) tilesInt.C:174 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 132 11 (set (reg:DI 5 di)
        (reg/f:DI 147 [ variables_list ])) tilesInt.C:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 147 [ variables_list ])
        (nil)))
(call_insn 132 131 133 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:174 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 133 132 134 11 (set (reg/f:DI 92 [ D.11897 ])
        (reg:DI 0 ax)) tilesInt.C:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 134 133 135 11 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.11897 ])) tilesInt.C:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.11897 ])
        (nil)))
(call_insn 135 134 136 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:174 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 136 135 137 11 (set (reg:DF 93 [ D.11901 ])
        (reg:DF 21 xmm0)) tilesInt.C:174 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 137 136 138 11 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ ivtmp.113 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 69 [ variables ])) [0 MEM[base: variables_29, index: ivtmp.113_116, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 93 [ D.11901 ]))) tilesInt.C:174 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 93 [ D.11901 ])
        (nil)))
(debug_insn 138 137 140 11 (var_location:SI D#7 (plus:SI (subreg:SI (reg:DI 106 [ ivtmp.113 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 140 138 141 11 (var_location:SI i (debug_expr:SI D#7)) -1
     (nil))
(insn 141 140 143 11 (parallel [
            (set (reg:DI 106 [ ivtmp.113 ])
                (plus:DI (reg:DI 106 [ ivtmp.113 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 141 144 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ num_variables ])
            (subreg:SI (reg:DI 106 [ ivtmp.113 ]) 0))) tilesInt.C:173 7 {*cmpsi_1}
     (nil))
(jump_insn 144 143 145 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) tilesInt.C:173 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 142)
;;  succ:       12 [91.0%]  (FALLTHRU)
;;              9 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

;; basic block 12, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u177(6){ }u178(7){ }u179(16){ }u180(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  gen 	
;; live  kill	
(note 145 144 149 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       11 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86 87 106

;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u181(6){ }u182(7){ }u183(16){ }u184(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 148 149 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 148 149 150
;; live  kill	
(code_label 149 145 150 13 66 "" [1 uses])
(note 150 149 151 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 151 150 152 13 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:178 -1
     (nil))
(insn 152 151 153 13 (set (reg/f:DI 148 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (nil))
(insn 153 152 154 13 (set (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 148 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 148 [ memorctable ])
        (nil)))
(insn 154 153 155 13 (set (reg:SI 150 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:179 89 {*movsi_internal}
     (nil))
(insn 155 154 156 13 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 62 [ num_ints ])) tilesInt.C:179 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 62 [ num_ints ])
        (nil)))
(insn 156 155 157 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 61 [ ints ])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ints ])
        (nil)))
(insn 157 156 158 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 86 [ D.11899 ]) 0)) tilesInt.C:179 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ D.11899 ])
        (nil)))
(insn 158 157 159 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 69 [ variables ])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 69 [ variables ])
        (nil)))
(insn 159 158 160 13 (set (reg:DI 1 dx)
        (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 149 [ MEM[(struct CollisionTable *)memorctable.29_77].ct ])
        (nil)))
(insn 160 159 161 13 (set (reg:SI 4 si)
        (reg:SI 150 [ num_tilings ])) tilesInt.C:179 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 150 [ num_tilings ])
        (nil)))
(insn 161 160 162 13 (set (reg:DI 5 di)
        (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (nil))
(call_insn 162 161 166 13 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:179 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

;; basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u205(6){ }u206(7){ }u207(16){ }u208(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 101 151 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 86
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 101 151 152
;; live  kill	
(note 166 162 167 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 14 (set (reg/f:DI 151 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (nil))
(insn 168 167 169 14 (set (reg:DI 5 di)
        (reg/f:DI 151 [ memorctable ])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 151 [ memorctable ])
        (nil)))
(call_insn 169 168 170 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:183 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 14 (set (reg:DI 101 [ D.11899 ])
        (reg:DI 0 ax)) tilesInt.C:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 171 170 172 14 (var_location:SI memory_size (subreg:SI (reg:DI 101 [ D.11899 ]) 0)) tilesInt.C:183 -1
     (nil))
(insn 172 171 173 14 (set (reg:SI 152 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:184 89 {*movsi_internal}
     (nil))
(insn 173 172 174 14 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 62 [ num_ints ])) tilesInt.C:184 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 62 [ num_ints ])
        (nil)))
(insn 174 173 175 14 (set (reg:DI 38 r9)
        (reg/v/f:DI 61 [ ints ])) tilesInt.C:184 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 61 [ ints ])
        (nil)))
(insn 175 174 176 14 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 86 [ D.11899 ]) 0)) tilesInt.C:184 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ D.11899 ])
        (nil)))
(insn 176 175 177 14 (set (reg:DI 2 cx)
        (reg/v/f:DI 69 [ variables ])) tilesInt.C:184 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 69 [ variables ])
        (nil)))
(insn 177 176 178 14 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 101 [ D.11899 ]) 0)) tilesInt.C:184 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ D.11899 ])
        (nil)))
(insn 178 177 179 14 (set (reg:SI 4 si)
        (reg:SI 152 [ num_tilings ])) tilesInt.C:184 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152 [ num_tilings ])
        (nil)))
(insn 179 178 180 14 (set (reg:DI 5 di)
        (reg/v/f:DI 73 [ the_tiles ])) tilesInt.C:184 87 {*movdi_internal_rex64}
     (nil))
(call_insn 180 179 181 14 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:184 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u232(6){ }u233(7){ }u234(16){ }u235(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; live  gen 	 17 [flags] 104 105
;; live  kill	 17 [flags]
(code_label 181 180 182 15 70 "" [0 uses])
(note 182 181 183 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 15 (set (reg:SI 104 [ num_tilings.24 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 num_tilings+0 S4 A128])) tilesInt.C:187 89 {*movsi_internal}
     (nil))
(insn 184 183 186 15 (parallel [
            (set (reg/v:SI 105 [ i ])
                (plus:SI (reg:SI 104 [ num_tilings.24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:187 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ num_tilings.24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 186 184 187 15 (var_location:SI i (reg/v:SI 105 [ i ])) -1
     (nil))
(insn 187 186 188 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 105 [ i ])
            (const_int 0 [0]))) tilesInt.C:187 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 188 187 226 15 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) tilesInt.C:187 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 196)
;;  succ:       17 [91.0%] 
;;              16 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105

;; basic block 16, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [9.0%]  (FALLTHRU)
;;              18 [9.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 63
;; live  kill	
(code_label 226 188 189 16 72 "" [1 uses])
(note 189 226 190 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b97208f5b48 *.LC1>)) tilesInt.C:189 87 {*movdi_internal_rex64}
     (nil))
(insn 191 190 192 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:189 91 {*movqi_internal}
     (nil))
(call_insn 192 191 193 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:189 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 193 192 196 16 (set (reg/f:DI 63 [ D.11897 ])
        (reg:DI 0 ax)) tilesInt.C:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

;; basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [91.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u249(6){ }u250(7){ }u251(16){ }u252(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; lr  def 	 17 [flags] 115 121 154 155 157 158 159 160
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 105
;; live  gen 	 115 121 154 155 157 158 159 160
;; live  kill	 17 [flags]
(code_label 196 193 197 17 71 "" [1 uses])
(note 197 196 199 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 199 197 200 17 (set (reg:DI 154 [ D.11903 ])
        (zero_extend:DI (reg/v:SI 105 [ i ]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 200 199 202 17 (parallel [
            (set (reg:DI 155 [ D.11903 ])
                (plus:DI (reg:DI 154 [ D.11903 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.11903 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 202 200 203 17 (parallel [
            (set (reg:DI 157)
                (neg:DI (reg:DI 155 [ D.11903 ])))
            (clobber (reg:CC 17 flags))
        ]) 461 {*negdi2_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.11903 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 206 17 (parallel [
            (set (reg:DI 158)
                (ashift:DI (reg:DI 157)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 203 207 17 (set (reg:DI 159 [ D.11903 ])
        (sign_extend:DI (reg/v:SI 105 [ i ]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 105 [ i ])
        (nil)))
(insn 207 206 208 17 (parallel [
            (set (reg:DI 160 [ D.11903 ])
                (ashift:DI (reg:DI 159 [ D.11903 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 159 [ D.11903 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 208 207 11 17 (parallel [
            (set (reg/f:DI 121 [ D.11905 ])
                (plus:DI (reg/v/f:DI 73 [ the_tiles ])
                    (reg:DI 160 [ D.11903 ])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 160 [ D.11903 ])
        (expr_list:REG_DEAD (reg/v/f:DI 73 [ the_tiles ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 208 230 17 (set (reg:DI 115 [ ivtmp.110 ])
        (const_int 0 [0])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

;; basic block 18, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU,DFS_BACK)
;;              17 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u265(6){ }u266(7){ }u267(16){ }u268(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 110 115 161 162 163 164 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 110 115 161 162 163 164 165
;; live  kill	 17 [flags]
(code_label 230 11 209 18 73 "" [0 uses])
(note 209 230 210 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 210 209 211 18 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(insn 211 210 212 18 (set (reg:SI 162 [ MEM[base: _130, index: ivtmp.110_121, offset: 0B] ])
        (mem:SI (plus:DI (reg/f:DI 121 [ D.11905 ])
                (reg:DI 115 [ ivtmp.110 ])) [0 MEM[base: _130, index: ivtmp.110_121, offset: 0B]+0 S4 A32])) tilesInt.C:188 89 {*movsi_internal}
     (nil))
(insn 212 211 213 18 (set (reg:DI 161 [ D.11899 ])
        (sign_extend:DI (reg:SI 162 [ MEM[base: _130, index: ivtmp.110_121, offset: 0B] ]))) tilesInt.C:188 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 162 [ MEM[base: _130, index: ivtmp.110_121, offset: 0B] ])
        (nil)))
(insn 213 212 214 18 (set (reg:DI 5 di)
        (reg:DI 161 [ D.11899 ])) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 161 [ D.11899 ])
        (nil)))
(call_insn 214 213 215 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:188 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 18 (set (reg/f:DI 110 [ D.11897 ])
        (reg:DI 0 ax)) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 216 215 217 18 (set (reg:SI 164 [ start_element ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 start_element+0 S4 A128])) tilesInt.C:188 89 {*movsi_internal}
     (nil))
(insn 217 216 218 18 (set (reg:DI 163 [ D.11899 ])
        (sign_extend:DI (reg:SI 164 [ start_element ]))) tilesInt.C:188 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 164 [ start_element ])
        (nil)))
(insn 218 217 219 18 (set (reg/f:DI 165 [ tiles_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 tiles_list+0 S8 A128])) tilesInt.C:188 87 {*movdi_internal_rex64}
     (nil))
(insn 219 218 220 18 (set (reg:DI 1 dx)
        (reg/f:DI 110 [ D.11897 ])) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.11897 ])
        (nil)))
(insn 220 219 221 18 (set (reg:DI 4 si)
        (reg:DI 163 [ D.11899 ])) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 163 [ D.11899 ])
        (nil)))
(insn 221 220 222 18 (set (reg:DI 5 di)
        (reg/f:DI 165 [ tiles_list ])) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 165 [ tiles_list ])
        (nil)))
(call_insn 222 221 224 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:188 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 224 222 225 18 (var_location:SI i (debug_expr:SI D#6)) -1
     (nil))
(insn 225 224 227 18 (parallel [
            (set (reg:DI 115 [ ivtmp.110 ])
                (plus:DI (reg:DI 115 [ ivtmp.110 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 227 225 228 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 115 [ ivtmp.110 ])
            (reg:DI 158))) tilesInt.C:187 8 {*cmpdi_1}
     (nil))
(jump_insn 228 227 229 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) tilesInt.C:187 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 226)
;;  succ:       19 [91.0%]  (FALLTHRU)
;;              16 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

;; basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [91.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u290(6){ }u291(7){ }u292(16){ }u293(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  gen 	
;; live  kill	
(note 229 228 273 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;;  succ:       18 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 121 158

;; basic block 20, loop depth 0, count 0, freq 245, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u294(6){ }u295(7){ }u296(16){ }u297(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 63
;; live  kill	
(code_label 273 229 272 20 76 "" [1 uses])
(note 272 273 12 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 12 272 238 20 (set (reg/f:DI 63 [ D.11897 ])
        (const_int 0 [0])) tilesInt.C:157 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

;; basic block 21, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [73.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u303(6){ }u304(7){ }u305(16){ }u306(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 77 167 168 169
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 61 62 77 167 168 169
;; live  kill	 17 [flags]
(code_label 238 12 239 21 63 "" [1 uses])
(note 239 238 240 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 21 (set (reg/f:DI 167 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:165 87 {*movdi_internal_rex64}
     (nil))
(insn 241 240 242 21 (set (reg:DI 5 di)
        (reg/f:DI 167 [ ints_list ])) tilesInt.C:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 167 [ ints_list ])
        (nil)))
(call_insn 242 241 243 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:165 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 21 (set (reg:DI 77 [ D.11899 ])
        (reg:DI 0 ax)) tilesInt.C:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 244 243 245 21 (set (reg/v:SI 62 [ num_ints ])
        (subreg:SI (reg:DI 77 [ D.11899 ]) 0)) tilesInt.C:165 89 {*movsi_internal}
     (nil))
(debug_insn 245 244 246 21 (var_location:SI num_ints (subreg:SI (reg:DI 77 [ D.11899 ]) 0)) tilesInt.C:165 -1
     (nil))
(insn 246 245 247 21 (set (reg:DI 168 [ D.11900 ])
        (sign_extend:DI (subreg:SI (reg:DI 77 [ D.11899 ]) 0))) tilesInt.C:166 149 {*extendsidi2_rex64}
     (nil))
(insn 247 246 248 21 (parallel [
            (set (reg:DI 169 [ D.11900 ])
                (ashift:DI (reg:DI 168 [ D.11900 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:166 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 168 [ D.11900 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 248 247 249 21 (set (reg:DI 5 di)
        (reg:DI 169 [ D.11900 ])) tilesInt.C:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 169 [ D.11900 ])
        (nil)))
(call_insn 249 248 250 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:166 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 250 249 252 21 (set (reg/v/f:DI 61 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 170)
            (nil))))
(debug_insn 252 250 254 21 (var_location:DI ints (reg/v/f:DI 61 [ ints ])) tilesInt.C:166 -1
     (nil))
(debug_insn 254 252 256 21 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 256 254 257 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 77 [ D.11899 ]) 0)
            (const_int 0 [0]))) tilesInt.C:167 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 77 [ D.11899 ])
        (nil)))
(jump_insn 257 256 258 21 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) tilesInt.C:167 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 255)
;;  succ:       22 [91.0%]  (FALLTHRU)
;;              8 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

;; basic block 22, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [91.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u324(6){ }u325(7){ }u326(16){ }u327(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  gen 	 88
;; live  kill	
(note 258 257 7 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 7 258 262 22 (set (reg:DI 88 [ ivtmp.118 ])
        (const_int 0 [0])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73 88

;; basic block 23, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [27.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u328(6){ }u329(7){ }u330(16){ }u331(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 73
;; live  gen 	 61 62
;; live  kill	
(code_label 262 7 263 23 62 "" [1 uses])
(note 263 262 8 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 8 263 9 23 (set (reg/v:SI 62 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:149 89 {*movsi_internal}
     (nil))
(insn 9 8 274 23 (set (reg/v/f:DI 61 [ ints ])
        (const_int 0 [0])) tilesInt.C:148 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 69 73

;; basic block 24, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 23, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              16 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; live  gen 	 0 [ax]
;; live  kill	
(note 274 9 267 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 267 274 270 24 (set (reg/i:DI 0 ax)
        (reg/f:DI 63 [ D.11897 ])) tilesInt.C:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.11897 ])
        (nil)))
(insn 270 267 0 24 (use (reg/i:DI 0 ax)) tilesInt.C:190 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function PyObject* tiles_GetTiles(PyObject*, PyObject*) (_ZL14tiles_GetTilesP7_objectS0_, funcdef_no=153, decl_uid=11285, cgraph_uid=153)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 29 (  1.2)


PyObject* tiles_GetTiles(PyObject*, PyObject*)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 326
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={22d,18u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,24u} r7={1d,51u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,23u} r17={40d,10u} r18={19d} r19={19d} r20={1d,47u,4e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r73={1d,2u} r74={1d,1u} r76={1d,4u} r81={1d,1u} r82={1d,1u} r85={1d,5u} r86={1d,1u} r87={2d,6u} r91={1d,1u} r92={1d,1u} r95={1d,1u} r100={1d,2u} r105={1d,3u} r107={2d,6u} r111={1d,1u} r115={2d,5u} r117={1d,2u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r126={1d,2u} r128={1d,1u} r129={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 1284{975d,305u,4e} in 172{153 regular + 19 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 19 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 120 121 122 123 124 126
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 63 120 121 122 123 124 126
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[3]->( 5 24 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u40(6){ }u41(7){ }u42(16){ }u43(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 73 128 129 131 132 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 73 128 129 131 132 133
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73

( 3 )->[5]->( 22 24 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u68(6){ }u69(7){ }u70(16){ }u71(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 74
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72

( 7 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

( 6 23 )->[7]->( 6 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u82(6){ }u83(7){ }u84(16){ }u85(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 87 135
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 81 82 87 135
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

( 24 7 22 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u106(6){ }u107(7){ }u108(16){ }u109(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 86 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 85 86 136
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86

( 8 11 )->[9]->( 13 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u121(6){ }u122(7){ }u123(16){ }u124(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 95 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 95 137
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86
;; live  gen 	 107
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

( 12 10 )->[11]->( 12 9 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u137(6){ }u138(7){ }u139(16){ }u140(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 86 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 92 107 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 91 92 107 138
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

( 11 )->[12]->( 11 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

( 9 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u165(6){ }u166(7){ }u167(16){ }u168(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 139 140 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 139 140 141
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

( 9 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u189(6){ }u190(7){ }u191(16){ }u192(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 100 142 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 100 142 143
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

( 13 14 )->[15]->( 16 20 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u216(6){ }u217(7){ }u218(16){ }u219(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 144 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 144 145
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u228(6){ }u229(7){ }u230(16){ }u231(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  gen 	 115
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

( 18 16 )->[17]->( 18 21 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u232(6){ }u233(7){ }u234(16){ }u235(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 111 115 117 146 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 111 115 117 146 147
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

( 17 )->[18]->( 17 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u257(6){ }u258(7){ }u259(16){ }u260(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

( 2 )->[19]->( 25 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u261(6){ }u262(7){ }u263(16){ }u264(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

( 15 )->[20]->( 25 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u265(6){ }u266(7){ }u267(16){ }u268(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

( 17 )->[21]->( 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u270(6){ }u271(7){ }u272(16){ }u273(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

( 5 )->[22]->( 23 8 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u280(6){ }u281(7){ }u282(16){ }u283(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 76 149 150 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 76 149 150 151
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

( 22 )->[23]->( 7 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u301(6){ }u302(7){ }u303(16){ }u304(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 87
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

( 3 5 )->[24]->( 8 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u305(6){ }u306(7){ }u307(16){ }u308(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 60 61
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

( 21 19 20 )->[25]->( 1 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 25 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u315(0){ }u316(6){ }u317(7){ }u318(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 64 to worklist
  Adding insn 58 to worklist
  Adding insn 50 to worklist
  Adding insn 46 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 92 to worklist
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 80 to worklist
  Adding insn 105 to worklist
  Adding insn 98 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 136 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
  Adding insn 124 to worklist
  Adding insn 154 to worklist
  Adding insn 147 to worklist
  Adding insn 172 to worklist
  Adding insn 165 to worklist
  Adding insn 161 to worklist
  Adding insn 182 to worklist
  Adding insn 178 to worklist
  Adding insn 200 to worklist
  Adding insn 194 to worklist
  Adding insn 189 to worklist
  Adding insn 229 to worklist
  Adding insn 221 to worklist
  Adding insn 214 to worklist
  Adding insn 242 to worklist
Finished finding needed instructions:
processing block 25 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 239 to worklist
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
  Adding insn 11 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
  Adding insn 12 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 195 to worklist
  Adding insn 193 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 190 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 186 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
  Adding insn 10 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
  Adding insn 13 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
  Adding insn 181 to worklist
  Adding insn 179 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
  Adding insn 164 to worklist
  Adding insn 162 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
  Adding insn 135 to worklist
  Adding insn 133 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
  Adding insn 9 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86
  Adding insn 104 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
  Adding insn 6 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
  Adding insn 228 to worklist
  Adding insn 222 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 213 to worklist
  Adding insn 212 to worklist
processing block 24 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
  Adding insn 8 to worklist
  Adding insn 7 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 4 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 31 (  1.2)
;; Following path with 30 sets: 2 
;; Following path with 21 sets: 3 
;; Following path with 5 sets: 5 
;; Following path with 2 sets: 24 
;; Following path with 16 sets: 22 
;; Following path with 1 sets: 23 
;; Following path with 16 sets: 7 
;; Following path with 11 sets: 8 
;; Following path with 1 sets: 10 
;; Following path with 16 sets: 11 
;; Following path with 7 sets: 9 
;; Following path with 14 sets: 14 
;; Following path with 12 sets: 13 
;; Following path with 8 sets: 15 
;; Following path with 1 sets: 20 
;; Following path with 1 sets: 16 
;; Following path with 17 sets: 17 
;; Following path with 1 sets: 21 
;; Following path with 1 sets: 19 
;; Following path with 2 sets: 25 
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_GetTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={22d,18u} r1={24d,4u} r2={23d,3u} r4={27d,8u} r5={39d,19u} r6={1d,24u} r7={1d,51u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,23u} r17={40d,10u} r18={19d} r19={19d} r20={1d,47u,4e} r21={20d,1u} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r60={2d,5u} r61={2d,4u} r62={3d,1u} r63={1d,1u} r65={1d,1u} r68={1d,4u} r72={1d,4u} r73={1d,2u} r74={1d,1u} r76={1d,4u} r81={1d,1u} r82={1d,1u} r85={1d,5u} r86={1d,1u} r87={2d,6u} r91={1d,1u} r92={1d,1u} r95={1d,1u} r100={1d,2u} r105={1d,3u} r107={2d,6u} r111={1d,1u} r115={2d,5u} r117={1d,2u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r126={1d,2u} r128={1d,1u} r129={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 1284{975d,305u,4e} in 172{153 regular + 19 call} insns.
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 120 121 122 123 124 126
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 63 120 121 122 123 124 126
;; live  kill	 17 [flags]
(note 14 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 14 5 2 (set (reg/v/f:DI 120 [ args ])
        (reg:DI 4 si [ args ])) tilesInt.C:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:194 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:197 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:198 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:200 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:203 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:204 -1
     (nil))
(debug_insn 22 21 23 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:205 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 121)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:210 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 122)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:210 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:210 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 124)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:210 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 124)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 28 27 30 2 (set (reg:DI 126)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:210 87 {*movdi_internal_rex64}
     (nil))
(insn 30 28 31 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 126)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 33 2 (set (reg:DI 38 r9)
        (reg/f:DI 121)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 33 31 34 2 (set (reg:DI 37 r8)
        (reg:DI 126)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 126)
        (expr_list:REG_EQUAL (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
            (nil))))
(insn 34 33 35 2 (set (reg:DI 2 cx)
        (reg/f:DI 122)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 35 34 36 2 (set (reg:DI 1 dx)
        (reg/f:DI 123)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b97209cfa18 *.LC3>)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/v/f:DI 120 [ args ])) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 120 [ args ])
        (nil)))
(insn 38 37 39 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:210 91 {*movqi_internal}
     (nil))
(call_insn 39 38 40 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 16 [0x10]))) tilesInt.C:210 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (nil)))))))))))
(insn 40 39 41 2 (set (reg:SI 63 [ D.11930 ])
        (reg:SI 0 ax)) tilesInt.C:210 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 41 40 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.11930 ])
            (const_int 0 [0]))) tilesInt.C:208 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 63 [ D.11930 ])
        (nil)))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 245)
            (pc))) tilesInt.C:208 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 245)
;;  succ:       19 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u40(6){ }u41(7){ }u42(16){ }u43(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 68 72 73 128 129 131 132 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 65 68 72 73 128 129 131 132 133
;; live  kill	 17 [flags]
(note 43 42 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 3 (set (reg/f:DI 128 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:213 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 3 (set (reg:DI 5 di)
        (reg/f:DI 128 [ variables_list ])) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 128 [ variables_list ])
        (nil)))
(call_insn 46 45 47 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:213 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 3 (set (reg:DI 65 [ D.11931 ])
        (reg:DI 0 ax)) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 48 47 49 3 (parallel [
            (set (reg:DI 129 [ D.11932 ])
                (ashift:DI (reg:DI 65 [ D.11931 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:213 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.11931 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 3 (set (reg:DI 5 di)
        (reg:DI 129 [ D.11932 ])) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 129 [ D.11932 ])
        (nil)))
(call_insn 50 49 51 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:213 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 51 50 53 3 (set (reg/v/f:DI 68 [ variables ])
        (reg:DI 0 ax)) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 130)
            (nil))))
(debug_insn 53 51 54 3 (var_location:DI variables (reg/v/f:DI 68 [ variables ])) tilesInt.C:213 -1
     (nil))
(insn 54 53 55 3 (set (reg:SI 132 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:214 89 {*movsi_internal}
     (nil))
(insn 55 54 56 3 (set (reg:DI 131 [ D.11932 ])
        (sign_extend:DI (reg:SI 132 [ num_tilings ]))) tilesInt.C:214 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 132 [ num_tilings ])
        (nil)))
(insn 56 55 57 3 (parallel [
            (set (reg:DI 133 [ D.11932 ])
                (ashift:DI (reg:DI 131 [ D.11932 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:214 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 131 [ D.11932 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 3 (set (reg:DI 5 di)
        (reg:DI 133 [ D.11932 ])) tilesInt.C:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 133 [ D.11932 ])
        (nil)))
(call_insn 58 57 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:214 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 72 [ the_tiles ])
        (reg:DI 0 ax)) tilesInt.C:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 134)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI the_tiles (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:214 -1
     (nil))
(insn 62 61 63 3 (set (reg/f:DI 73 [ ints_list.37 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:215 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 73 [ ints_list.37 ])
            (const_int 0 [0]))) tilesInt.C:215 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 234)
            (pc))) tilesInt.C:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 234)
;;  succ:       5 [69.8%]  (FALLTHRU)
;;              24 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73

;; basic block 5, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u68(6){ }u69(7){ }u70(16){ }u71(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72 73
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 74
;; live  kill	
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 5 (set (reg:DI 5 di)
        (reg/f:DI 73 [ ints_list.37 ])) tilesInt.C:215 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ ints_list.37 ])
        (nil)))
(call_insn 67 66 68 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:215 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 68 67 69 5 (set (reg:DI 74 [ D.11931 ])
        (reg:DI 0 ax)) tilesInt.C:215 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 69 68 70 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 74 [ D.11931 ])
            (const_int 0 [0]))) tilesInt.C:215 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 74 [ D.11931 ])
        (nil)))
(jump_insn 70 69 90 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) tilesInt.C:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 210)
;;  succ:       22 [73.0%] 
;;              24 [27.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72

;; basic block 6, loop depth 1, count 0, freq 2401, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  gen 	
;; live  kill	
(code_label 90 70 74 6 90 "" [1 uses])
(note 74 90 231 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

;; basic block 7, loop depth 1, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;;              23 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u82(6){ }u83(7){ }u84(16){ }u85(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 87 135
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 81 82 87 135
;; live  kill	 17 [flags]
(code_label 231 74 75 7 99 "" [0 uses])
(note 75 231 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 7 (var_location:SI i (subreg:SI (reg:DI 87 [ ivtmp.135 ]) 0)) -1
     (nil))
(insn 77 76 78 7 (set (reg/f:DI 135 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:220 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 7 (set (reg:DI 4 si)
        (reg:DI 87 [ ivtmp.135 ])) tilesInt.C:220 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 7 (set (reg:DI 5 di)
        (reg/f:DI 135 [ ints_list ])) tilesInt.C:220 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 135 [ ints_list ])
        (nil)))
(call_insn 80 79 81 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:220 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 81 80 82 7 (set (reg/f:DI 81 [ D.11929 ])
        (reg:DI 0 ax)) tilesInt.C:220 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 82 81 83 7 (set (reg:DI 5 di)
        (reg/f:DI 81 [ D.11929 ])) tilesInt.C:220 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81 [ D.11929 ])
        (nil)))
(call_insn 83 82 84 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:220 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 7 (set (reg:DI 82 [ D.11931 ])
        (reg:DI 0 ax)) tilesInt.C:220 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 85 84 86 7 (set (mem:SI (plus:DI (mult:DI (reg:DI 87 [ ivtmp.135 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 60 [ ints ])) [0 MEM[base: ints_44, index: ivtmp.135_112, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 82 [ D.11931 ]) 0)) tilesInt.C:220 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 82 [ D.11931 ])
        (nil)))
(debug_insn 86 85 88 7 (var_location:SI D#10 (plus:SI (subreg:SI (reg:DI 87 [ ivtmp.135 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 88 86 89 7 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))
(insn 89 88 91 7 (parallel [
            (set (reg:DI 87 [ ivtmp.135 ])
                (plus:DI (reg:DI 87 [ ivtmp.135 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 89 92 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 61 [ num_ints ])
            (subreg:SI (reg:DI 87 [ ivtmp.135 ]) 0))) tilesInt.C:219 7 {*cmpsi_1}
     (nil))
(jump_insn 92 91 227 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) tilesInt.C:219 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 90)
;;  succ:       6 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%]  (FALLTHRU)
;;              7 [9.0%]  (FALLTHRU)
;;              22 [9.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u106(6){ }u107(7){ }u108(16){ }u109(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 86 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 85 86 136
;; live  kill	
(code_label 227 92 93 8 98 "" [1 uses])
(note 93 227 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 8 (var_location:SI num_ints (reg/v:SI 61 [ num_ints ])) -1
     (nil))
(debug_insn 95 94 96 8 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) -1
     (nil))
(insn 96 95 97 8 (set (reg/f:DI 136 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:223 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 8 (set (reg:DI 5 di)
        (reg/f:DI 136 [ variables_list ])) tilesInt.C:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 136 [ variables_list ])
        (nil)))
(call_insn 98 97 99 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:223 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 99 98 100 8 (set (reg:DI 85 [ D.11931 ])
        (reg:DI 0 ax)) tilesInt.C:223 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 100 99 101 8 (set (reg/v:SI 86 [ num_variables ])
        (subreg:SI (reg:DI 85 [ D.11931 ]) 0)) tilesInt.C:223 89 {*movsi_internal}
     (nil))
(debug_insn 101 100 103 8 (var_location:SI num_variables (subreg:SI (reg:DI 85 [ D.11931 ]) 0)) tilesInt.C:223 -1
     (nil))
(debug_insn 103 101 104 8 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 104 103 105 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 85 [ D.11931 ]) 0)
            (const_int 0 [0]))) tilesInt.C:225 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 105 104 134 8 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) tilesInt.C:225 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 117)
;;  succ:       10 [91.0%] 
;;              9 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86

;; basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU)
;;              11 [9.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u121(6){ }u122(7){ }u123(16){ }u124(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 95 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 95 137
;; live  kill	
(code_label 134 105 106 9 94 "" [1 uses])
(note 106 134 107 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 9 (set (reg/f:DI 137 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:228 87 {*movdi_internal_rex64}
     (nil))
(insn 108 107 109 9 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:228 87 {*movdi_internal_rex64}
     (nil))
(insn 109 108 110 9 (set (reg:DI 5 di)
        (reg/f:DI 137 [ memorctable ])) tilesInt.C:228 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 137 [ memorctable ])
        (nil)))
(call_insn 110 109 111 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:228 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 9 (set (reg:SI 95 [ D.11930 ])
        (reg:SI 0 ax)) tilesInt.C:228 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 112 111 113 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.11930 ])
            (const_int 0 [0]))) tilesInt.C:228 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.11930 ])
        (nil)))
(jump_insn 113 112 117 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) tilesInt.C:228 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 141)
;;  succ:       13 [50.0%] 
;;              14 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85

;; basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [91.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86
;; live  gen 	 107
;; live  kill	
(code_label 117 113 118 10 91 "" [1 uses])
(note 118 117 9 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 9 118 138 10 (set (reg:DI 107 [ ivtmp.130 ])
        (const_int 0 [0])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

;; basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,DFS_BACK)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u137(6){ }u138(7){ }u139(16){ }u140(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 86 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 92 107 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 91 92 107 138
;; live  kill	 17 [flags]
(code_label 138 9 119 11 95 "" [0 uses])
(note 119 138 120 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 120 119 121 11 (var_location:SI i (subreg:SI (reg:DI 107 [ ivtmp.130 ]) 0)) -1
     (nil))
(insn 121 120 122 11 (set (reg/f:DI 138 [ variables_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 variables_list+0 S8 A128])) tilesInt.C:226 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 123 11 (set (reg:DI 4 si)
        (reg:DI 107 [ ivtmp.130 ])) tilesInt.C:226 87 {*movdi_internal_rex64}
     (nil))
(insn 123 122 124 11 (set (reg:DI 5 di)
        (reg/f:DI 138 [ variables_list ])) tilesInt.C:226 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 138 [ variables_list ])
        (nil)))
(call_insn 124 123 125 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:226 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 11 (set (reg/f:DI 91 [ D.11929 ])
        (reg:DI 0 ax)) tilesInt.C:226 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 126 125 127 11 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.11929 ])) tilesInt.C:226 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.11929 ])
        (nil)))
(call_insn 127 126 128 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:226 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 128 127 129 11 (set (reg:DF 92 [ D.11933 ])
        (reg:DF 21 xmm0)) tilesInt.C:226 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 129 128 130 11 (set (mem:SF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.130 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 68 [ variables ])) [0 MEM[base: variables_28, index: ivtmp.130_113, step: 4, offset: 0B]+0 S4 A32])
        (float_truncate:SF (reg:DF 92 [ D.11933 ]))) tilesInt.C:226 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 92 [ D.11933 ])
        (nil)))
(debug_insn 130 129 132 11 (var_location:SI D#9 (plus:SI (subreg:SI (reg:DI 107 [ ivtmp.130 ]) 0)
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 132 130 133 11 (var_location:SI i (debug_expr:SI D#9)) -1
     (nil))
(insn 133 132 135 11 (parallel [
            (set (reg:DI 107 [ ivtmp.130 ])
                (plus:DI (reg:DI 107 [ ivtmp.130 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 135 133 136 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 86 [ num_variables ])
            (subreg:SI (reg:DI 107 [ ivtmp.130 ]) 0))) tilesInt.C:225 7 {*cmpsi_1}
     (nil))
(jump_insn 136 135 137 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) tilesInt.C:225 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 134)
;;  succ:       12 [91.0%]  (FALLTHRU)
;;              9 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

;; basic block 12, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  gen 	
;; live  kill	
(note 137 136 141 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       11 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85 86 107

;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u165(6){ }u166(7){ }u167(16){ }u168(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 139 140 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 139 140 141
;; live  kill	
(code_label 141 137 142 13 92 "" [1 uses])
(note 142 141 143 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 143 142 144 13 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:230 -1
     (nil))
(insn 144 143 145 13 (set (reg/f:DI 139 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (nil))
(insn 145 144 146 13 (set (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])
        (mem/f/j:DI (plus:DI (reg/f:DI 139 [ memorctable ])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 139 [ memorctable ])
        (nil)))
(insn 146 145 147 13 (set (reg:SI 141 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:231 89 {*movsi_internal}
     (nil))
(insn 147 146 148 13 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:231 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 148 147 149 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 149 148 150 13 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 85 [ D.11931 ]) 0)) tilesInt.C:231 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.11931 ])
        (nil)))
(insn 150 149 151 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 151 150 152 13 (set (reg:DI 1 dx)
        (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140 [ MEM[(struct CollisionTable *)memorctable.39_76].ct ])
        (nil)))
(insn 152 151 153 13 (set (reg:SI 4 si)
        (reg:SI 141 [ num_tilings ])) tilesInt.C:231 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141 [ num_tilings ])
        (nil)))
(insn 153 152 154 13 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (nil))
(call_insn 154 153 158 13 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:231 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u189(6){ }u190(7){ }u191(16){ }u192(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 100 142 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 85
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 100 142 143
;; live  kill	
(note 158 154 159 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 14 (set (reg/f:DI 142 [ memorctable ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 14 (set (reg:DI 5 di)
        (reg/f:DI 142 [ memorctable ])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 142 [ memorctable ])
        (nil)))
(call_insn 161 160 162 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:235 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 162 161 163 14 (set (reg:DI 100 [ D.11931 ])
        (reg:DI 0 ax)) tilesInt.C:235 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 163 162 164 14 (var_location:SI memory_size (subreg:SI (reg:DI 100 [ D.11931 ]) 0)) tilesInt.C:235 -1
     (nil))
(insn 164 163 165 14 (set (reg:SI 143 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:236 89 {*movsi_internal}
     (nil))
(insn 165 164 166 14 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 61 [ num_ints ])) tilesInt.C:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 61 [ num_ints ])
        (nil)))
(insn 166 165 167 14 (set (reg:DI 38 r9)
        (reg/v/f:DI 60 [ ints ])) tilesInt.C:236 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ ints ])
        (nil)))
(insn 167 166 168 14 (set (reg:SI 37 r8)
        (subreg:SI (reg:DI 85 [ D.11931 ]) 0)) tilesInt.C:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ D.11931 ])
        (nil)))
(insn 168 167 169 14 (set (reg:DI 2 cx)
        (reg/v/f:DI 68 [ variables ])) tilesInt.C:236 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 68 [ variables ])
        (nil)))
(insn 169 168 170 14 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 100 [ D.11931 ]) 0)) tilesInt.C:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ D.11931 ])
        (nil)))
(insn 170 169 171 14 (set (reg:SI 4 si)
        (reg:SI 143 [ num_tilings ])) tilesInt.C:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ num_tilings ])
        (nil)))
(insn 171 170 172 14 (set (reg:DI 5 di)
        (reg/v/f:DI 72 [ the_tiles ])) tilesInt.C:236 87 {*movdi_internal_rex64}
     (nil))
(call_insn 172 171 173 14 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:236 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u216(6){ }u217(7){ }u218(16){ }u219(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 105 144 145
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 105 144 145
;; live  kill	
(code_label 173 172 174 15 96 "" [0 uses])
(note 174 173 175 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 15 (set (reg:SI 145 [ num_tilings ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])) tilesInt.C:238 89 {*movsi_internal}
     (nil))
(insn 176 175 177 15 (set (reg:DI 144 [ D.11931 ])
        (sign_extend:DI (reg:SI 145 [ num_tilings ]))) tilesInt.C:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 145 [ num_tilings ])
        (nil)))
(insn 177 176 178 15 (set (reg:DI 5 di)
        (reg:DI 144 [ D.11931 ])) tilesInt.C:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 144 [ D.11931 ])
        (nil)))
(call_insn 178 177 179 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:238 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 15 (set (reg/v/f:DI 105 [ tiles_list ])
        (reg:DI 0 ax)) tilesInt.C:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 180 179 181 15 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 181 180 182 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:239 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 182 181 183 15 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 249)
            (pc))) tilesInt.C:239 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 249)
;;  succ:       16 [91.0%]  (FALLTHRU)
;;              20 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105

;; basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [91.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u228(6){ }u229(7){ }u230(16){ }u231(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105
;; live  gen 	 115
;; live  kill	
(note 183 182 10 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 10 183 202 16 (set (reg:DI 115 [ ivtmp.125 ])
        (const_int 0 [0])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

;; basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU,DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u232(6){ }u233(7){ }u234(16){ }u235(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 111 115 117 146 147
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 111 115 117 146 147
;; live  kill	 17 [flags]
(code_label 202 10 184 17 97 "" [0 uses])
(note 184 202 185 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 185 184 186 17 (var_location:SI i (subreg:SI (reg:DI 115 [ ivtmp.125 ]) 0)) -1
     (nil))
(insn 186 185 187 17 (set (reg:SI 147 [ MEM[base: the_tiles_33, index: ivtmp.125_122, step: 4, offset: 0B] ])
        (mem:SI (plus:DI (mult:DI (reg:DI 115 [ ivtmp.125 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 72 [ the_tiles ])) [0 MEM[base: the_tiles_33, index: ivtmp.125_122, step: 4, offset: 0B]+0 S4 A32])) tilesInt.C:240 89 {*movsi_internal}
     (nil))
(insn 187 186 188 17 (set (reg:DI 146 [ D.11931 ])
        (sign_extend:DI (reg:SI 147 [ MEM[base: the_tiles_33, index: ivtmp.125_122, step: 4, offset: 0B] ]))) tilesInt.C:240 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 147 [ MEM[base: the_tiles_33, index: ivtmp.125_122, step: 4, offset: 0B] ])
        (nil)))
(insn 188 187 189 17 (set (reg:DI 5 di)
        (reg:DI 146 [ D.11931 ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 146 [ D.11931 ])
        (nil)))
(call_insn 189 188 190 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:240 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 190 189 191 17 (set (reg/f:DI 111 [ D.11929 ])
        (reg:DI 0 ax)) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 191 190 192 17 (set (reg:DI 1 dx)
        (reg/f:DI 111 [ D.11929 ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.11929 ])
        (nil)))
(insn 192 191 193 17 (set (reg:DI 4 si)
        (reg:DI 115 [ ivtmp.125 ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 17 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (nil))
(call_insn 194 193 195 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:240 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 195 194 197 17 (parallel [
            (set (reg:SI 117 [ D.11930 ])
                (plus:SI (subreg:SI (reg:DI 115 [ ivtmp.125 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 197 195 198 17 (var_location:SI i (reg:SI 117 [ D.11930 ])) -1
     (nil))
(insn 198 197 199 17 (parallel [
            (set (reg:DI 115 [ ivtmp.125 ])
                (plus:DI (reg:DI 115 [ ivtmp.125 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 198 200 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 num_tilings+0 S4 A128])
            (reg:SI 117 [ D.11930 ]))) tilesInt.C:239 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.11930 ])
        (nil)))
(jump_insn 200 199 201 17 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 253)
            (pc))) tilesInt.C:239 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 253)
;;  succ:       18 [91.0%]  (FALLTHRU)
;;              21 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

;; basic block 18, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [91.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u257(6){ }u258(7){ }u259(16){ }u260(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  gen 	
;; live  kill	
(note 201 200 245 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;;  succ:       17 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 72 105 115

;; basic block 19, loop depth 0, count 0, freq 245, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u261(6){ }u262(7){ }u263(16){ }u264(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 62
;; live  kill	
(code_label 245 201 244 19 100 "" [1 uses])
(note 244 245 11 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 11 244 249 19 (set (reg/f:DI 62 [ D.11929 ])
        (const_int 0 [0])) tilesInt.C:211 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 20, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [9.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u265(6){ }u266(7){ }u267(16){ }u268(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
(code_label 249 11 248 20 101 "" [1 uses])
(note 248 249 13 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 13 248 253 20 (set (reg/f:DI 62 [ D.11929 ])
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:241 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ tiles_list ])
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 21, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [9.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u270(6){ }u271(7){ }u272(16){ }u273(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 62
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; live  gen 	 62
;; live  kill	
(code_label 253 13 252 21 102 "" [1 uses])
(note 252 253 12 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 12 252 210 21 (set (reg/f:DI 62 [ D.11929 ])
        (reg/v/f:DI 105 [ tiles_list ])) tilesInt.C:241 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ tiles_list ])
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 22, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [73.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u280(6){ }u281(7){ }u282(16){ }u283(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 76 149 150 151
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 60 61 76 149 150 151
;; live  kill	 17 [flags]
(code_label 210 12 211 22 89 "" [1 uses])
(note 211 210 212 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 22 (set (reg/f:DI 149 [ ints_list ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 ints_list+0 S8 A128])) tilesInt.C:217 87 {*movdi_internal_rex64}
     (nil))
(insn 213 212 214 22 (set (reg:DI 5 di)
        (reg/f:DI 149 [ ints_list ])) tilesInt.C:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 149 [ ints_list ])
        (nil)))
(call_insn 214 213 215 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:217 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 22 (set (reg:DI 76 [ D.11931 ])
        (reg:DI 0 ax)) tilesInt.C:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 216 215 217 22 (set (reg/v:SI 61 [ num_ints ])
        (subreg:SI (reg:DI 76 [ D.11931 ]) 0)) tilesInt.C:217 89 {*movsi_internal}
     (nil))
(debug_insn 217 216 218 22 (var_location:SI num_ints (subreg:SI (reg:DI 76 [ D.11931 ]) 0)) tilesInt.C:217 -1
     (nil))
(insn 218 217 219 22 (set (reg:DI 150 [ D.11932 ])
        (sign_extend:DI (subreg:SI (reg:DI 76 [ D.11931 ]) 0))) tilesInt.C:218 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 220 22 (parallel [
            (set (reg:DI 151 [ D.11932 ])
                (ashift:DI (reg:DI 150 [ D.11932 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:218 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.11932 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 221 22 (set (reg:DI 5 di)
        (reg:DI 151 [ D.11932 ])) tilesInt.C:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 151 [ D.11932 ])
        (nil)))
(call_insn 221 220 222 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:218 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 222 221 224 22 (set (reg/v/f:DI 60 [ ints ])
        (reg:DI 0 ax)) tilesInt.C:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 152)
            (nil))))
(debug_insn 224 222 226 22 (var_location:DI ints (reg/v/f:DI 60 [ ints ])) tilesInt.C:218 -1
     (nil))
(debug_insn 226 224 228 22 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 228 226 229 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 76 [ D.11931 ]) 0)
            (const_int 0 [0]))) tilesInt.C:219 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 76 [ D.11931 ])
        (nil)))
(jump_insn 229 228 230 22 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) tilesInt.C:219 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 227)
;;  succ:       23 [91.0%]  (FALLTHRU)
;;              8 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

;; basic block 23, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [91.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u301(6){ }u302(7){ }u303(16){ }u304(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  gen 	 87
;; live  kill	
(note 230 229 6 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 6 230 234 23 (set (reg:DI 87 [ ivtmp.135 ])
        (const_int 0 [0])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72 87

;; basic block 24, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [27.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u305(6){ }u306(7){ }u307(16){ }u308(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 60 61
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 72
;; live  gen 	 60 61
;; live  kill	
(code_label 234 6 235 24 88 "" [1 uses])
(note 235 234 7 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 7 235 8 24 (set (reg/v:SI 61 [ num_ints ])
        (const_int 0 [0])) tilesInt.C:205 89 {*movsi_internal}
     (nil))
(insn 8 7 254 24 (set (reg/v/f:DI 60 [ ints ])
        (const_int 0 [0])) tilesInt.C:204 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 68 72

;; basic block 25, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 24, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              19 [100.0%]  (FALLTHRU)
;;              20 [100.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 0 [ax]
;; live  kill	
(note 254 8 239 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 239 254 242 25 (set (reg/i:DI 0 ax)
        (reg/f:DI 62 [ D.11929 ])) tilesInt.C:242 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.11929 ])
        (nil)))
(insn 242 239 0 25 (use (reg/i:DI 0 ax)) tilesInt.C:242 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void CollisionTable_dealloc(CollisionTable*) (_ZL22CollisionTable_deallocP14CollisionTable, funcdef_no=145, decl_uid=11207, cgraph_uid=145)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void CollisionTable_dealloc(CollisionTable*)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 31
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={4d,1u} r18={3d} r19={3d} r20={1d,4u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,3u} r62={1d,3u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 190{159d,31u,0e} in 12{9 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 4 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 62
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 59 62
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

( 2 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 5 [di] 63 64
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u28(6){ }u29(7){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
  Adding insn 12 to worklist
  Adding insn 10 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
;; Following path with 4 sets: 2 
;; Following path with 4 sets: 4 
;; Following path with 4 sets: 5 
starting the processing of deferred insns
ending the processing of deferred insns


void CollisionTable_dealloc(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={4d,1u} r18={3d} r19={3d} r20={1d,4u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,3u} r62={1d,3u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 190{159d,31u,0e} in 12{9 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 62
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 59 62
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 62 [ self ])
        (reg:DI 5 di [ self ])) tilesInt.C:12 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 59 [ D.11948 ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 62 [ self ])
                (const_int 16 [0x10])) [0 self_3(D)->ct+0 S8 A64])) tilesInt.C:13 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.11948 ])
            (const_int 0 [0]))) tilesInt.C:13 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) tilesInt.C:13 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil)))
 -> 14)
;;  succ:       4 [89.9%]  (FALLTHRU)
;;              5 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62

;; basic block 4, loop depth 0, count 0, freq 7041, maybe hot
;; Invalid sum of incoming frequencies 8986, should be 7041
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
;; live  gen 	 5 [di]
;; live  kill	
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.11948 ])) tilesInt.C:15 87 {*movdi_internal_rex64}
     (nil))
(call_insn 11 10 12 4 (call (mem:QI (symbol_ref:DI ("_ZN15collision_tableD1Ev") [flags 0x41]  <function_decl 0x2b972081c200 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) tilesInt.C:15 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 4 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.11948 ])) tilesInt.C:15 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.11948 ])
        (nil)))
(call_insn 13 12 14 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b971fdc8900 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) tilesInt.C:15 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;; Invalid sum of incoming frequencies 8055, should be 10000
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
;; live  gen 	 5 [di] 63 64
;; live  kill	
(code_label 14 13 15 5 120 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:DI 63 [ self_3(D)->ob_type ])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 62 [ self ])
                (const_int 8 [0x8])) [0 self_3(D)->ob_type+0 S8 A64])) tilesInt.C:16 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 5 (set (reg/f:DI 64 [ _7->tp_free ])
        (mem/f/j:DI (plus:DI (reg/f:DI 63 [ self_3(D)->ob_type ])
                (const_int 320 [0x140])) [0 _7->tp_free+0 S8 A64])) tilesInt.C:16 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ self_3(D)->ob_type ])
        (nil)))
(insn 18 17 19 5 (set (reg:DI 5 di)
        (reg/v/f:DI 62 [ self ])) tilesInt.C:16 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 62 [ self ])
        (nil)))
(call_insn/j 19 18 0 5 (call (mem:QI (reg/f:DI 64 [ _7->tp_free ]) [0 *_8 S1 A8])
        (const_int 0 [0])) tilesInt.C:16 659 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 64 [ _7->tp_free ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void inittiles() (inittiles, funcdef_no=156, decl_uid=11376, cgraph_uid=156)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)


void inittiles()

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 46
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={4d,2u} r1={6d,2u} r2={5d,1u} r4={6d,2u} r5={7d,3u} r6={1d,5u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,4u} r17={6d,2u} r18={3d} r19={3d} r20={1d,5u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,3u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 208{167d,41u,0e} in 22{19 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 59
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[3]->( 6 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 60
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

( 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 67 68
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 3 2 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 5 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u42(6){ }u43(7){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 6 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
;; Following path with 5 sets: 2 
;; Following path with 10 sets: 3 
;; Following path with 8 sets: 5 
starting the processing of deferred insns
ending the processing of deferred insns


void inittiles()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={4d,2u} r1={6d,2u} r2={5d,1u} r4={6d,2u} r5={7d,3u} r6={1d,5u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,4u} r17={6d,2u} r18={3d} r19={3d} r20={1d,5u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,3u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 208{167d,41u,0e} in 22{19 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 59
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:381 87 {*movdi_internal_rex64}
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyType_Ready") [flags 0x41]  <function_decl 0x2b97205d2c00 PyType_Ready>) [0 PyType_Ready S1 A8])
            (const_int 0 [0]))) tilesInt.C:381 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 59 [ D.11973 ])
        (reg:SI 0 ax)) tilesInt.C:381 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 8 7 9 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 59 [ D.11973 ])
            (const_int 0 [0]))) tilesInt.C:381 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.11973 ])
        (nil)))
(jump_insn 9 8 13 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) tilesInt.C:381 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 6333 [0x18bd])
            (nil)))
 -> 13)
;;  succ:       6 [36.7%]  (FALLTHRU)
;;              3 [63.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 6333, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [63.3%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 60
;; live  kill	
(code_label 13 9 14 3 140 "" [1 uses])
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 37 r8)
        (const_int 1013 [0x3f5])) tilesInt.C:383 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:DI 1 dx)
        (const_int 0 [0])) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL12TilesMethods") [flags 0x2]  <var_decl 0x2b972084e4c0 TilesMethods>)) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b9720a34688 *.LC7>)) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 21 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x2b97207a2f00 Py_InitModule4_64>) [0 Py_InitModule4_64 S1 A8])
            (const_int 0 [0]))) tilesInt.C:383 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (nil)))))))
(insn 21 20 22 3 (set (reg/v/f:DI 60 [ m ])
        (reg:DI 0 ax)) tilesInt.C:383 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 22 21 24 3 (var_location:DI m (reg/v/f:DI 60 [ m ])) tilesInt.C:383 -1
     (nil))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 60 [ m ])
            (const_int 0 [0]))) tilesInt.C:385 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) tilesInt.C:385 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2164 [0x874])
            (nil)))
 -> 42)
;;  succ:       6 [21.6%] 
;;              5 [78.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; basic block 5, loop depth 0, count 0, freq 4963, maybe hot
;;  prev block 3, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.4%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 67 68
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 67 68
;; live  kill	 17 [flags]
(note 26 25 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 26 33 5 (set (reg:DI 68 [ MEM[(struct PyObject *)&CollisionTableType].ob_refcnt ])
        (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])) tilesInt.C:388 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:DI 67 [ D.11974 ])
                (plus:DI (reg:DI 68 [ MEM[(struct PyObject *)&CollisionTableType].ob_refcnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:388 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 68 [ MEM[(struct PyObject *)&CollisionTableType].ob_refcnt ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 5 (set (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])
        (reg:DI 67 [ D.11974 ])) tilesInt.C:388 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67 [ D.11974 ])
        (nil)))
(insn 35 34 36 5 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:389 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b9720a34720 *.LC8>)) tilesInt.C:389 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg/v/f:DI 60 [ m ])) tilesInt.C:389 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 60 [ m ])
        (nil)))
(call_insn/j 38 37 42 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyModule_AddObject") [flags 0x41]  <function_decl 0x2b97207a2c00 PyModule_AddObject>) [0 PyModule_AddObject S1 A8])
            (const_int 0 [0]))) tilesInt.C:389 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 5037, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [21.6%] 
;;              2 [36.7%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 42 38 43 6 139 "" [1 uses])
(note 43 42 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

