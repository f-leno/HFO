
;; Function PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*) (_ZL18CollisionTable_newP11_typeobjectP7_objectS2_, funcdef_no=146, decl_uid=11212, cgraph_uid=146)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)

**scanning insn=36
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (mem/f/j:DI (plus:DI (reg/v/f:DI 0 ax [orig:62 type ] [62])
        (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64])

   after canon_rtx address: (mem/f/j:DI (plus:DI (reg/v/f:DI 0 ax [orig:62 type ] [62])
        (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64])

   after cselib_expand address: (mem/f/j:DI (plus:DI (reg:DI 5 di)
        (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64])

   after canon_rtx address: (mem/f/j:DI (plus:DI (reg:DI 5 di)
        (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64])
 no cselib val - should be a wild read.
 adding wild read, canon_address failure.
  mem: (plus:DI (reg/v/f:DI 0 ax [orig:62 type ] [62])
    (const_int 304 [0x130]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 0 ax [orig:62 type ] [62])
    (const_int 304 [0x130]))

   after cselib_expand address: (plus:DI (reg:DI 5 di)
    (const_int 304 [0x130]))

   after canon_rtx address: (plus:DI (reg:DI 5 di)
    (const_int 304 [0x130]))
  varying cselib base=3:3 offset = 304
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/v/f:DI 0 ax [orig:62 type ] [62])
        (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64])

**scanning insn=13

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:DI (reg/v/f:DI 0 ax [orig:60 self ] [60])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 0 ax [orig:60 self ] [60])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 0 ax [orig:60 self ] [60])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 0 ax [orig:60 self ] [60])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=27
mems_found = 0, cannot_delete = false

**scanning insn=41
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_new(PyTypeObject*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,7u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r7={3d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d,1u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 88{68d,20u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 6 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 36 6 37 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:20 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 37 36 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 37 5 2 (set (reg/v/f:DI 0 ax [orig:62 type ] [62])
        (reg:DI 5 di [ type ])) tilesInt.C:20 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ type ])
        (nil)))
(note 5 2 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 5 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 0 [0])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 0 ax [orig:62 type ] [62])) tilesInt.C:22 87 {*movdi_internal_rex64}
     (nil))
(call_insn 11 10 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f/j:DI (plus:DI (reg/v/f:DI 0 ax [orig:62 type ] [62])
                        (const_int 304 [0x130])) [0 type_3(D)->tp_alloc+0 S8 A64]) [0 *_4 S1 A8])
            (const_int 0 [0]))) tilesInt.C:22 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(debug_insn 13 11 14 2 (var_location:DI self (reg/v/f:DI 0 ax [orig:60 self ] [60])) tilesInt.C:22 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:60 self ] [60])
            (const_int 0 [0]))) tilesInt.C:23 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 18)
            (pc))) tilesInt.C:23 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil)))
 -> 18)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (mem/f/j:DI (plus:DI (reg/v/f:DI 0 ax [orig:60 self ] [60])
                (const_int 16 [0x10])) [0 self_6->ct+0 S8 A64])
        (const_int 0 [0])) tilesInt.C:25 87 {*movdi_internal_rex64}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 7 [sp]
;; live  kill	 17 [flags]
(code_label 18 17 19 4 2 "" [1 uses])
(note 19 18 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 19 40 4 (use (reg/i:DI 0 ax)) tilesInt.C:29 -1
     (nil))
(note 40 27 41 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 41 40 42 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:29 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(jump_insn 42 41 43 4 (simple_return) tilesInt.C:29 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 43 42 0)

;; Function PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*) (_ZL19tiles_LoadTilesWrapP7_objectS0_, funcdef_no=154, decl_uid=11314, cgraph_uid=154)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 26 (  1.1)

**scanning insn=396
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=397
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=3:8117 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=398
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=4:12175 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=399
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=5:16233 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=400
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=6:20291 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=401
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=7:24349 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=402
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=59
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=8:28215 offset = 112
 processing cselib store [112..120)
mems_found = 1, cannot_delete = false

**scanning insn=60

**scanning insn=61
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=8:28215 offset = 128
 processing cselib store [128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=62

**scanning insn=63
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))
  varying cselib base=8:28215 offset = 144
 processing cselib store [144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=64

**scanning insn=65
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))
  varying cselib base=8:28215 offset = 160
 processing cselib store [160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=66

**scanning insn=67
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))
  varying cselib base=8:28215 offset = 176
 processing cselib store [176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=68

**scanning insn=69

**scanning insn=391
mems_found = 0, cannot_delete = true

**scanning insn=392
mems_found = 0, cannot_delete = true

**scanning insn=74
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=8:28215 offset = 48
 processing cselib store [48..56)
    trying store in insn=67 gid=-1[176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=77
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=8:28215 offset = 40
 processing cselib store [40..48)
    trying store in insn=74 gid=-1[48..56)
    trying store in insn=67 gid=-1[176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=393
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=8:28215 offset = 32
 processing cselib store [32..40)
    trying store in insn=77 gid=-1[40..48)
    trying store in insn=74 gid=-1[48..56)
    trying store in insn=67 gid=-1[176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=82
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))
  varying cselib base=8:28215 offset = 24
 processing cselib store [24..32)
    trying store in insn=79 gid=-1[32..40)
    trying store in insn=77 gid=-1[40..48)
    trying store in insn=74 gid=-1[48..56)
    trying store in insn=67 gid=-1[176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=84
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))
  varying cselib base=8:28215 offset = 16
 processing cselib store [16..24)
    trying store in insn=82 gid=-1[24..32)
    trying store in insn=79 gid=-1[32..40)
    trying store in insn=77 gid=-1[40..48)
    trying store in insn=74 gid=-1[48..56)
    trying store in insn=67 gid=-1[176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=87
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=8:28215 offset = 8
 processing cselib store [8..16)
    trying store in insn=84 gid=-1[16..24)
    trying store in insn=82 gid=-1[24..32)
    trying store in insn=79 gid=-1[32..40)
    trying store in insn=77 gid=-1[40..48)
    trying store in insn=74 gid=-1[48..56)
    trying store in insn=67 gid=-1[176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=395
mems_found = 0, cannot_delete = true

**scanning insn=89
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=8:28215 offset = 0
 processing cselib store [0..8)
    trying store in insn=87 gid=-1[8..16)
    trying store in insn=84 gid=-1[16..24)
    trying store in insn=82 gid=-1[24..32)
    trying store in insn=79 gid=-1[32..40)
    trying store in insn=77 gid=-1[40..48)
    trying store in insn=74 gid=-1[48..56)
    trying store in insn=67 gid=-1[176..184)
    trying store in insn=65 gid=-1[160..168)
    trying store in insn=63 gid=-1[144..152)
    trying store in insn=61 gid=-1[128..136)
    trying store in insn=59 gid=-1[112..120)
mems_found = 1, cannot_delete = false

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)

   after canon_rtx address: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)
  gid=0 offset=0 
 processing const load gid=0[0..1)
removing from active insn=89 has store
removing from active insn=87 has store
removing from active insn=84 has store
removing from active insn=82 has store
removing from active insn=79 has store
removing from active insn=77 has store
removing from active insn=74 has store

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=104
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 144 [0x90])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=389
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=112

**scanning insn=114
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=8:8 offset = 96
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=117
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=118
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=12:12 offset = 64
 processing cselib store [64..72)
mems_found = 1, cannot_delete = false

**scanning insn=120

**scanning insn=122
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))
  varying cselib base=12:12 offset = 144
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 144 [0x90])) [0 variables_list+0 S8 A128])
 processing cselib load against insn 118
mems_found = 0, cannot_delete = true

**scanning insn=123
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=390
mems_found = 0, cannot_delete = true

**scanning insn=127
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=130

**scanning insn=131
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))
  varying cselib base=18:18 offset = 176
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 176 [0xb0])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=136
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=361
mems_found = 0, cannot_delete = true

**scanning insn=145

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=148
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))
  varying cselib base=2:2 offset = 176
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 176 [0xb0])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=149
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=152
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=154
  mem: (plus:DI (mult:DI (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
        (const_int 4 [0x4]))
    (reg/v/f:DI 42 r13 [orig:105 ints ] [105]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
        (const_int 4 [0x4]))
    (reg/v/f:DI 42 r13 [orig:105 ints ] [105]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
        (const_int 2 [0x2]))
    (reg/v/f:DI 42 r13 [orig:105 ints ] [105]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
        (const_int 2 [0x2]))
    (reg/v/f:DI 42 r13 [orig:105 ints ] [105]))
  varying cselib base=9:4159 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=155

**scanning insn=157

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=163

**scanning insn=164

**scanning insn=166
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 144 [0x90])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=167
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=386
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))
  varying cselib base=4:4 offset = 72
 processing cselib store [72..80)
mems_found = 1, cannot_delete = false

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=170

**scanning insn=172

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=2:2 offset = 128
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 128 [0x80])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=179
  mem: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)

   after canon_rtx address: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)
  gid=5 offset=0 
 processing const load gid=5[0..1)

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=365
mems_found = 0, cannot_delete = true

**scanning insn=189

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=193
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 144 [0x90]))
  varying cselib base=2:2 offset = 144
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 144 [0x90])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=194
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=197
  mem: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)

   after canon_rtx address: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)
  gid=6 offset=0 
 processing const load gid=6[0..1)

**scanning insn=387
mems_found = 0, cannot_delete = true

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=381
  mem: (plus:DI (mult:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:113 variables ] [113]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:113 variables ] [113]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:113 variables ] [113]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:113 variables ] [113]))
  varying cselib base=12:4162 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=201
mems_found = 0, cannot_delete = true

**scanning insn=202
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 160 [0xa0]))
  varying cselib base=13:13 offset = 160
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 160 [0xa0])) [0 wrapwidths_list+0 S8 A128])
 processing cselib load against insn 381
mems_found = 0, cannot_delete = true

**scanning insn=203
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)
removing from active insn=381 has store

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=206
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=208
  mem: (plus:DI (mult:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 4 [0x4]))
    (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 4 [0x4]))
    (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 2 [0x2]))
    (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 2 [0x2]))
    (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122]))
  varying cselib base=19:4169 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=209

**scanning insn=211

**scanning insn=212
mems_found = 0, cannot_delete = true

**scanning insn=214
mems_found = 0, cannot_delete = true

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=368
mems_found = 0, cannot_delete = true

**scanning insn=222

**scanning insn=223
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=1:1 offset = 128
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 128 [0x80])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=224
  mem: (plus:DI (reg/f:DI 0 ax [orig:208 memorctable ] [208])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:208 memorctable ] [208])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 0 ax [orig:208 memorctable ] [208])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:208 memorctable ] [208])
    (const_int 16 [0x10]))
  varying cselib base=3:3 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:208 memorctable ] [208])
        (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=226
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=227
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=1:1 offset = 0
 processing cselib store [0..8)
    trying store in insn=226 gid=-1[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=229
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))
  varying cselib base=1:1 offset = 72
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 72 [0x48])) [0 %sfp+56 S4 A64])
 processing cselib load against insn 227
 processing cselib load against insn 226
mems_found = 0, cannot_delete = true

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=232
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=1:1 offset = 96
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 227
 processing cselib load against insn 226
mems_found = 0, cannot_delete = true

**scanning insn=233
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=1:1 offset = 64
 processing cselib load mem:(mem/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 %sfp+48 S8 A64])
 processing cselib load against insn 227
 processing cselib load against insn 226
mems_found = 0, cannot_delete = true

**scanning insn=234
  mem: (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>)

   after canon_rtx address: (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>)
  gid=7 offset=0 
 processing const load gid=7[0..1)

**scanning insn=370
mems_found = 0, cannot_delete = true

**scanning insn=240
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=1:1 offset = 128
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 128 [0x80])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=241
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=243

**scanning insn=245
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=4:4 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=246
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=4:4 offset = 0
 processing cselib store [0..8)
    trying store in insn=245 gid=-1[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=248
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 72 [0x48]))
  varying cselib base=4:4 offset = 72
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 72 [0x48])) [0 %sfp+56 S4 A64])
 processing cselib load against insn 246
 processing cselib load against insn 245
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=251
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=4:4 offset = 96
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 246
 processing cselib load against insn 245
mems_found = 0, cannot_delete = true

**scanning insn=252
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=4:4 offset = 64
 processing cselib load mem:(mem/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 %sfp+48 S8 A64])
 processing cselib load against insn 246
 processing cselib load against insn 245
mems_found = 0, cannot_delete = true

**scanning insn=253
  mem: (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>)

   after canon_rtx address: (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>)
  gid=8 offset=0 
 processing const load gid=8[0..1)

**scanning insn=259

**scanning insn=382
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=1:1 offset = 96
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=261
mems_found = 0, cannot_delete = true

**scanning insn=263
mems_found = 0, cannot_delete = true

**scanning insn=264
mems_found = 0, cannot_delete = true

**scanning insn=265
  mem: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)

   after canon_rtx address: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)
  gid=9 offset=0 
 processing const load gid=9[0..1)

**scanning insn=372
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=275
mems_found = 0, cannot_delete = true

**scanning insn=276
mems_found = 0, cannot_delete = true

**scanning insn=279
mems_found = 0, cannot_delete = true

**scanning insn=384
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=6:6 offset = 64
 processing cselib load mem:(mem/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 %sfp+48 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=281
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=283

**scanning insn=285
  mem: (plus:DI (reg/f:DI 41 r12 [orig:174 D.11833 ] [174])
    (reg:DI 3 bx [orig:168 ivtmp.70 ] [168]))

   after canon_rtx address: (plus:DI (reg/f:DI 41 r12 [orig:174 D.11833 ] [174])
    (reg:DI 3 bx [orig:168 ivtmp.70 ] [168]))

   after cselib_expand address: (plus:DI (reg/f:DI 41 r12 [orig:174 D.11833 ] [174])
    (reg:DI 3 bx [orig:168 ivtmp.70 ] [168]))

   after canon_rtx address: (plus:DI (reg/f:DI 41 r12 [orig:174 D.11833 ] [174])
    (reg:DI 3 bx [orig:168 ivtmp.70 ] [168]))
  varying cselib base=3:70 offset = 0
 processing cselib load mem:(mem:SI (plus:DI (reg/f:DI 41 r12 [orig:174 D.11833 ] [174])
        (reg:DI 3 bx [orig:168 ivtmp.70 ] [168])) [0 MEM[base: _147, index: ivtmp.70_138, offset: 0B]+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=287
  mem: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)
  gid=10 offset=0 
 processing const load gid=10[0..1)

**scanning insn=290
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=5:5 offset = 80
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 start_element+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=292
mems_found = 0, cannot_delete = true

**scanning insn=294
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=5:5 offset = 112
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 112 [0x70])) [0 tiles_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=295
  mem: (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>)
  gid=11 offset=0 
 processing const load gid=11[0..1)

**scanning insn=297

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=300
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=375
mems_found = 0, cannot_delete = true

**scanning insn=314
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 176 [0xb0])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=315
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=316
mems_found = 0, cannot_delete = true

**scanning insn=317
mems_found = 0, cannot_delete = true

**scanning insn=318

**scanning insn=319
mems_found = 0, cannot_delete = true

**scanning insn=320
mems_found = 0, cannot_delete = true

**scanning insn=322
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=323
mems_found = 0, cannot_delete = true

**scanning insn=325

**scanning insn=327

**scanning insn=329
mems_found = 0, cannot_delete = true

**scanning insn=330
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=377
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=379
mems_found = 0, cannot_delete = true

**scanning insn=343
mems_found = 0, cannot_delete = false

**scanning insn=407
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=408
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=4:4267 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=409
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=7:8341 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=410
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=10:12415 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=411
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=13:16489 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=412
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=16:20563 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=413
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=19:24637 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=414
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+0): n  p 
group 10(0+0): n  p 
group 11(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_LoadTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={35d,36u} r1={29d,8u} r2={28d,4u} r3={5d,9u} r4={32d,9u} r5={49d,26u} r6={6d,9u} r7={15d,122u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r17={41d,10u} r18={23d} r19={23d} r20={5e} r21={25d,2u} r22={25d,1u} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,3u} r38={27d,3u} r39={23d} r40={23d} r41={7d,14u} r42={4d,7u} r43={4d,6u} r44={4d,10u} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} 
;;    total ref usage 1435{1151d,279u,5e} in 193{170 regular + 23 call} insns.
(note 47 0 57 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
(note 57 47 396 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 396 57 397 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) tilesInt.C:245 -1
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 397 396 398 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) tilesInt.C:245 -1
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 398 397 399 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) tilesInt.C:245 -1
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 399 398 400 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) tilesInt.C:245 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 400 399 401 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) tilesInt.C:245 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 401 400 402 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:245 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 402 401 403 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -200 [0xffffffffffffff38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:245 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -200 [0xffffffffffffff38])))
            (nil))))
(note 403 402 49 2 NOTE_INSN_PROLOGUE_END)
(insn 49 403 50 2 (set (reg/v/f:DI 5 di [orig:178 args ] [178])
        (reg:DI 4 si [ args ])) tilesInt.C:245 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 50 49 59 2 NOTE_INSN_FUNCTION_BEG)
(insn 59 50 60 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:246 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 60 59 61 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:247 -1
     (nil))
(insn 61 60 62 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:250 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 62 61 63 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:251 -1
     (nil))
(insn 63 62 64 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:253 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 64 63 65 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:254 -1
     (nil))
(insn 65 64 66 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:256 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 66 65 67 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:257 -1
     (nil))
(insn 67 66 68 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:258 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 68 67 69 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:259 -1
     (nil))
(debug_insn 69 68 70 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:260 -1
     (nil))
(note 70 69 71 2 NOTE_INSN_DELETED)
(note 71 70 391 2 NOTE_INSN_DELETED)
(insn 391 71 392 2 (set (reg/f:DI 2 cx [181])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) tilesInt.C:268 267 {*leadi}
     (nil))
(insn 392 391 74 2 (set (reg/f:DI 0 ax [182])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 176 [0xb0]))) tilesInt.C:268 267 {*leadi}
     (nil))
(insn 74 392 75 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0  S8 A64])
        (reg/f:DI 0 ax [182])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [182])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 75 74 77 2 (set (reg:DI 1 dx [184])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 77 75 393 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0  S8 A64])
        (reg:DI 1 dx [184])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 393 77 79 2 (set (reg/f:DI 0 ax [185])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 160 [0xa0]))) tilesInt.C:268 267 {*leadi}
     (nil))
(insn 79 393 82 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 0 ax [185])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [185])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 82 79 394 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 1 dx [184])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 394 82 84 2 (set (reg/f:DI 0 ax [188])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 144 [0x90]))) tilesInt.C:268 267 {*leadi}
     (nil))
(insn 84 394 87 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 0 ax [188])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [188])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 87 84 395 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 1 dx [184])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 395 87 89 2 (set (reg/f:DI 0 ax [191])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) tilesInt.C:268 267 {*leadi}
     (nil))
(insn 89 395 90 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 0 ax [191])) tilesInt.C:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [191])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 90 89 91 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 7 sp)
            (const_int 96 [0x60]))) tilesInt.C:268 267 {*leadi}
     (nil))
(insn 91 90 95 2 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 7 sp)
            (const_int 80 [0x50]))) tilesInt.C:268 267 {*leadi}
     (nil))
(insn 95 91 97 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b97208f5ab0 *.LC0>)) tilesInt.C:268 87 {*movdi_internal_rex64}
     (nil))
(insn 97 95 98 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:268 91 {*movqi_internal}
     (nil))
(call_insn 98 97 99 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 56 [0x38]))) tilesInt.C:268 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                    (const_int 40 [0x28])) [0  S8 A64]))
                                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                        (const_int 48 [0x30])) [0  S8 A64]))
                                                            (nil))))))))))))))))
(insn 99 98 56 2 (set (reg:SI 1 dx [orig:108 D.11826 ] [108])
        (reg:SI 0 ax)) tilesInt.C:268 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 56 99 100 2 (set (reg/f:DI 0 ax [orig:107 D.11825 ] [107])
        (const_int 0 [0])) tilesInt.C:269 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 100 56 101 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:108 D.11826 ] [108])
            (const_int 0 [0]))) tilesInt.C:263 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:108 D.11826 ] [108])
        (nil)))
(jump_insn 101 100 102 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 353)
            (pc))) tilesInt.C:263 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 353)
;;  succ:       22 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(note 102 101 104 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 104 102 105 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [0 variables_list+0 S8 A128])) tilesInt.C:271 87 {*movdi_internal_rex64}
     (nil))
(call_insn 105 104 389 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:271 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 389 105 109 3 (set (reg:DI 5 di [orig:194 D.11828 ] [194])
        (mult:DI (reg:DI 0 ax [orig:110 D.11827 ] [110])
            (const_int 4 [0x4]))) tilesInt.C:271 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:110 D.11827 ] [110])
        (nil)))
(call_insn 109 389 110 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:271 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 110 109 112 3 (set (reg/v/f:DI 3 bx [orig:113 variables ] [113])
        (reg:DI 0 ax)) tilesInt.C:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 195)
            (nil))))
(debug_insn 112 110 113 3 (var_location:DI variables (reg/v/f:DI 3 bx [orig:113 variables ] [113])) tilesInt.C:271 -1
     (nil))
(note 113 112 114 3 NOTE_INSN_DELETED)
(insn 114 113 115 3 (set (reg:DI 5 di [orig:196 D.11828 ] [196])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])) [0 num_tilings+0 S4 A128]))) tilesInt.C:272 149 {*extendsidi2_rex64}
     (nil))
(insn 115 114 117 3 (parallel [
            (set (reg:DI 5 di [orig:198 D.11828 ] [198])
                (ashift:DI (reg:DI 5 di [orig:196 D.11828 ] [196])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:272 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 117 115 118 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:272 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 118 117 120 3 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 %sfp+48 S8 A64])
        (reg:DI 0 ax)) tilesInt.C:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 199)
            (nil))))
(debug_insn 120 118 122 3 (var_location:DI the_tiles (mem/c:DI (plus:DI (reg/f:DI 7 sp)
            (const_int 64 [0x40])) [0 %sfp+48 S8 A64])) tilesInt.C:272 -1
     (nil))
(insn 122 120 123 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [0 variables_list+0 S8 A128])) tilesInt.C:273 87 {*movdi_internal_rex64}
     (nil))
(call_insn 123 122 390 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:273 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 390 123 127 3 (set (reg:DI 5 di [orig:201 D.11828 ] [201])
        (mult:DI (reg:DI 0 ax [orig:119 D.11827 ] [119])
            (const_int 4 [0x4]))) tilesInt.C:273 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:119 D.11827 ] [119])
        (nil)))
(call_insn 127 390 128 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:273 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 128 127 130 3 (set (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122])
        (reg:DI 0 ax)) tilesInt.C:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 202)
            (nil))))
(debug_insn 130 128 131 3 (var_location:DI wrapwidths (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122])) tilesInt.C:273 -1
     (nil))
(insn 131 130 132 3 (set (reg/f:DI 5 di [orig:123 ints_list.7 ] [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [0 ints_list+0 S8 A128])) tilesInt.C:275 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:123 ints_list.7 ] [123])
            (const_int 0 [0]))) tilesInt.C:275 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 133 132 134 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 335)
            (pc))) tilesInt.C:275 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 335)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              21 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 134 133 136 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 136 134 138 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:275 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 138 136 139 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 0 ax [orig:124 D.11827 ] [124])
            (const_int 0 [0]))) tilesInt.C:275 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:124 D.11827 ] [124])
        (nil)))
(jump_insn 139 138 360 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) tilesInt.C:275 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 311)
;;  succ:       19 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 360 139 361 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 361 360 362 5 (set (pc)
        (label_ref 335)) 650 {jump}
     (nil)
 -> 335)
;;  succ:       21 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 362 361 332)
;; basic block 6, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              20 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(code_label 332 362 144 6 23 "" [2 uses])
(note 144 332 145 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 145 144 147 6 (var_location:SI i (reg:SI 41 r12 [orig:137 ivtmp.80 ] [137])) -1
     (nil))
(insn 147 145 148 6 (set (reg:DI 4 si)
        (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])) tilesInt.C:280 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [0 ints_list+0 S8 A128])) tilesInt.C:280 87 {*movdi_internal_rex64}
     (nil))
(call_insn 149 148 151 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:280 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 151 149 152 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:131 D.11825 ] [131])) tilesInt.C:280 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:131 D.11825 ] [131])
        (nil)))
(call_insn 152 151 154 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:280 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 154 152 155 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 42 r13 [orig:105 ints ] [105])) [0 MEM[base: ints_53, index: ivtmp.80_132, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:132 D.11827 ] [132])) tilesInt.C:280 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:132 D.11827 ] [132])
        (nil)))
(debug_insn 155 154 157 6 (var_location:SI D#3 (plus:SI (reg:SI 41 r12 [orig:137 ivtmp.80 ] [137])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 157 155 158 6 (var_location:SI i (debug_expr:SI D#3)) -1
     (nil))
(insn 158 157 160 6 (parallel [
            (set (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
                (plus:DI (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 160 158 161 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 43 r14 [orig:106 num_ints ] [106])
            (reg:SI 41 r12 [orig:137 ivtmp.80 ] [137]))) tilesInt.C:279 7 {*cmpsi_1}
     (nil))
(jump_insn 161 160 328 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 332)
            (pc))) tilesInt.C:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 332)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              21 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 41 [r12] 44 [r15]
;; live  kill	
(code_label 328 161 162 7 22 "" [2 uses])
(note 162 328 163 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 163 162 164 7 (var_location:SI num_ints (reg/v:SI 43 r14 [orig:106 num_ints ] [106])) -1
     (nil))
(debug_insn 164 163 166 7 (var_location:DI ints (reg/v/f:DI 42 r13 [orig:105 ints ] [105])) -1
     (nil))
(insn 166 164 167 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [0 variables_list+0 S8 A128])) tilesInt.C:283 87 {*movdi_internal_rex64}
     (nil))
(call_insn 167 166 386 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:283 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 386 167 169 7 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [0 %sfp+56 S8 A64])
        (reg:DI 0 ax [orig:135 D.11827 ] [135])) tilesInt.C:283 87 {*movdi_internal_rex64}
     (nil))
(insn 169 386 170 7 (set (reg/v:SI 41 r12 [orig:136 num_variables ] [136])
        (reg:SI 0 ax [orig:135 D.11827 ] [135])) tilesInt.C:283 89 {*movsi_internal}
     (nil))
(debug_insn 170 169 172 7 (var_location:SI num_variables (reg:SI 0 ax [orig:135 D.11827 ] [135])) tilesInt.C:283 -1
     (nil))
(debug_insn 172 170 54 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 54 172 173 7 (set (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 0 [0])) tilesInt.C:285 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 173 54 174 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:135 D.11827 ] [135])
            (const_int 0 [0]))) tilesInt.C:285 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:135 D.11827 ] [135])
        (nil)))
(jump_insn 174 173 213 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 355)
            (pc))) tilesInt.C:285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 355)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 213 174 175 8 16 "" [1 uses])
(note 175 213 177 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 177 175 178 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:291 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 memorctable+0 S8 A128])) tilesInt.C:291 87 {*movdi_internal_rex64}
     (nil))
(call_insn 179 178 181 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:291 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 181 179 182 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:149 D.11826 ] [149])
            (const_int 0 [0]))) tilesInt.C:291 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:149 D.11826 ] [149])
        (nil)))
(jump_insn 182 181 363 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) tilesInt.C:291 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 220)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 363 182 365 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 365 363 366 9 (set (pc)
        (label_ref 364)) 650 {jump}
     (nil)
 -> 364)
;;  succ:       13 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

(barrier 366 365 355)
;; basic block 10, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 22 [xmm1] 44 [r15]
;; live  kill	 17 [flags]
(code_label 355 366 354 10 28 "" [2 uses])
(note 354 355 189 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 189 354 192 10 (var_location:SI i (reg:SI 44 r15 [orig:159 ivtmp.74 ] [159])) -1
     (nil))
(insn 192 189 193 10 (set (reg:DI 4 si)
        (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [0 variables_list+0 S8 A128])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (nil))
(call_insn 194 193 196 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 196 194 197 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:141 D.11825 ] [141])) tilesInt.C:287 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:141 D.11825 ] [141])
        (nil)))
(call_insn 197 196 387 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:287 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 387 197 388 10 (set (reg:V2DF 21 xmm0 [orig:142 D.11829 ] [142])
        (vec_duplicate:V2DF (reg:DF 21 xmm0 [orig:142 D.11829 ] [142]))) tilesInt.C:287 1459 {vec_dupv2df}
     (nil))
(insn 388 387 381 10 (set (reg:V4SF 22 xmm1 [231])
        (vec_concat:V4SF (float_truncate:V2SF (reg:V2DF 21 xmm0 [orig:142 D.11829 ] [142]))
            (const_vector:V2SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ]))) tilesInt.C:287 1393 {*sse2_cvtpd2ps}
     (expr_list:REG_DEAD (reg:V2DF 21 xmm0 [orig:142 D.11829 ] [142])
        (nil)))
(insn 381 388 201 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 3 bx [orig:113 variables ] [113])) [0 MEM[base: variables_30, index: ivtmp.74_133, step: 4, offset: 0B]+0 S4 A32])
        (reg:SF 22 xmm1 [231])) tilesInt.C:287 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [231])
        (nil)))
(insn 201 381 202 10 (set (reg:DI 4 si)
        (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])) tilesInt.C:288 87 {*movdi_internal_rex64}
     (nil))
(insn 202 201 203 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:288 87 {*movdi_internal_rex64}
     (nil))
(call_insn 203 202 205 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:288 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 205 203 206 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:145 D.11825 ] [145])) tilesInt.C:288 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:145 D.11825 ] [145])
        (nil)))
(call_insn 206 205 208 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:288 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 208 206 209 10 (set (mem:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122])) [0 MEM[base: wrapwidths_42, index: ivtmp.74_133, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:146 D.11827 ] [146])) tilesInt.C:288 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:146 D.11827 ] [146])
        (nil)))
(debug_insn 209 208 211 10 (var_location:SI D#2 (plus:SI (reg:SI 44 r15 [orig:159 ivtmp.74 ] [159])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 211 209 212 10 (var_location:SI i (debug_expr:SI D#2)) -1
     (nil))
(insn 212 211 214 10 (parallel [
            (set (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
                (plus:DI (reg:DI 44 r15 [orig:159 ivtmp.74 ] [159])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 214 212 215 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:136 num_variables ] [136])
            (reg:SI 44 r15 [orig:159 ivtmp.74 ] [159]))) tilesInt.C:285 7 {*cmpsi_1}
     (nil))
(jump_insn 215 214 367 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 355)
            (pc))) tilesInt.C:285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 355)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 367 215 368 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 368 367 369 11 (set (pc)
        (label_ref 213)) 650 {jump}
     (nil)
 -> 213)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

(barrier 369 368 220)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 220 369 221 12 14 "" [1 uses])
(note 221 220 222 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 222 221 223 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:293 -1
     (nil))
(insn 223 222 224 12 (set (reg/f:DI 0 ax [orig:208 memorctable ] [208])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 memorctable+0 S8 A128])) tilesInt.C:293 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 224 223 226 12 (set (reg/f:DI 1 dx [orig:209 MEM[(struct CollisionTable *)memorctable.10_93].ct ] [209])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:208 memorctable ] [208])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.10_93].ct+0 S8 A64])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:208 memorctable ] [208])
        (nil)))
(insn 226 224 227 12 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 43 r14 [orig:106 num_ints ] [106])) tilesInt.C:294 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:106 num_ints ] [106])
        (nil)))
(insn 227 226 228 12 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 42 r13 [orig:105 ints ] [105])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:105 ints ] [105])
        (nil)))
(insn 228 227 229 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122])
        (nil)))
(insn 229 228 230 12 (set (reg:SI 37 r8)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [0 %sfp+56 S4 A64])) tilesInt.C:294 89 {*movsi_internal}
     (nil))
(insn 230 229 232 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:113 variables ] [113])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:113 variables ] [113])
        (nil)))
(insn 232 230 233 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])) tilesInt.C:294 89 {*movsi_internal}
     (nil))
(insn 233 232 234 12 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 %sfp+48 S8 A64])) tilesInt.C:294 87 {*movdi_internal_rex64}
     (nil))
(call_insn 234 233 370 12 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:294 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
(jump_insn 370 234 371 12 (set (pc)
        (label_ref 254)) 650 {jump}
     (nil)
 -> 254)
;;  succ:       14 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 371 370 364)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 364 371 238 13 31 "" [1 uses])
(note 238 364 240 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 240 238 241 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 memorctable+0 S8 A128])) tilesInt.C:298 87 {*movdi_internal_rex64}
     (nil))
(call_insn 241 240 243 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:298 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(debug_insn 243 241 245 13 (var_location:SI memory_size (reg:SI 0 ax [orig:154 D.11827 ] [154])) tilesInt.C:298 -1
     (nil))
(insn 245 243 246 13 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 43 r14 [orig:106 num_ints ] [106])) tilesInt.C:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:106 num_ints ] [106])
        (nil)))
(insn 246 245 247 13 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 42 r13 [orig:105 ints ] [105])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:105 ints ] [105])
        (nil)))
(insn 247 246 248 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:122 wrapwidths ] [122])
        (nil)))
(insn 248 247 249 13 (set (reg:SI 37 r8)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [0 %sfp+56 S4 A64])) tilesInt.C:299 89 {*movsi_internal}
     (nil))
(insn 249 248 250 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:113 variables ] [113])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:113 variables ] [113])
        (nil)))
(insn 250 249 251 13 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:154 D.11827 ] [154])) tilesInt.C:299 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:154 D.11827 ] [154])
        (nil)))
(insn 251 250 252 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])) tilesInt.C:299 89 {*movsi_internal}
     (nil))
(insn 252 251 253 13 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 %sfp+48 S8 A64])) tilesInt.C:299 87 {*movdi_internal_rex64}
     (nil))
(call_insn 253 252 254 13 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:299 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 254 253 255 14 18 "" [1 uses])
(note 255 254 256 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 256 255 257 14 NOTE_INSN_DELETED)
(note 257 256 259 14 NOTE_INSN_DELETED)
(debug_insn 259 257 382 14 (var_location:SI i (plus:SI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 382 259 260 14 (set (reg/v:SI 0 ax [orig:158 i ] [158])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 num_tilings+0 S4 A128])) tilesInt.C:302 89 {*movsi_internal}
     (nil))
(insn 260 382 261 14 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg/v:SI 0 ax [orig:158 i ] [158])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg/v:SI 0 ax [orig:158 i ] [158])
                (plus:SI (reg/v:SI 0 ax [orig:158 i ] [158])
                    (const_int -1 [0xffffffffffffffff])))
        ]) tilesInt.C:302 281 {*addsi_2}
     (nil))
(jump_insn 261 260 299 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) tilesInt.C:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 269)
;;  succ:       16 [91.0%] 
;;              15 [9.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [9.0%]  (FALLTHRU)
;;              18 [100.0%]  (LOOP_EXIT)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 299 261 262 15 20 "" [1 uses])
(note 262 299 263 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b97208f5b48 *.LC1>)) tilesInt.C:304 87 {*movdi_internal_rex64}
     (nil))
(insn 264 263 265 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:304 91 {*movqi_internal}
     (nil))
(call_insn 265 264 372 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:304 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(jump_insn 372 265 373 15 (set (pc)
        (label_ref 353)) 650 {jump}
     (nil)
 -> 353)
;;  succ:       22 [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 373 372 269)
;; basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [91.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]
(code_label 269 373 270 16 19 "" [1 uses])
(note 270 269 272 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 272 270 273 16 (set (reg:DI 6 bp [217])
        (zero_extend:DI (reg/v:SI 0 ax [orig:158 i ] [158]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(note 273 272 275 16 NOTE_INSN_DELETED)
(insn 275 273 276 16 (set (reg:DI 6 bp [217])
        (not:DI (reg:DI 6 bp [217]))) 496 {*one_cmpldi2_1}
     (nil))
(insn 276 275 279 16 (parallel [
            (set (reg:DI 6 bp [218])
                (ashift:DI (reg:DI 6 bp [217])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 279 276 280 16 (set (reg:DI 0 ax [orig:219 D.11831 ] [219])
        (sign_extend:DI (reg/v:SI 0 ax [orig:158 i ] [158]))) 149 {*extendsidi2_rex64}
     (nil))
(note 280 279 384 16 NOTE_INSN_DELETED)
(insn 384 280 281 16 (set (reg/v/f:DI 2 cx [orig:117 the_tiles ] [117])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 %sfp+48 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 281 384 55 16 (set (reg/f:DI 41 r12 [orig:174 D.11833 ] [174])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:219 D.11831 ] [219])
                (const_int 4 [0x4]))
            (reg/v/f:DI 2 cx [orig:117 the_tiles ] [117]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:117 the_tiles ] [117])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:219 D.11831 ] [219])
            (nil))))
(insn 55 281 303 16 (set (reg:DI 3 bx [orig:168 ivtmp.70 ] [168])
        (const_int 0 [0])) tilesInt.C:302 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 17, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [91.0%]  (DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 303 55 282 17 21 "" [1 uses])
(note 282 303 283 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 283 282 284 17 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(note 284 283 285 17 NOTE_INSN_DELETED)
(insn 285 284 287 17 (set (reg:DI 5 di [orig:221 D.11827 ] [221])
        (sign_extend:DI (mem:SI (plus:DI (reg/f:DI 41 r12 [orig:174 D.11833 ] [174])
                    (reg:DI 3 bx [orig:168 ivtmp.70 ] [168])) [0 MEM[base: _147, index: ivtmp.70_138, offset: 0B]+0 S4 A32]))) tilesInt.C:303 149 {*extendsidi2_rex64}
     (nil))
(call_insn 287 285 289 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:303 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(note 289 287 290 17 NOTE_INSN_DELETED)
(insn 290 289 292 17 (set (reg:DI 4 si [orig:223 D.11827 ] [223])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 80 [0x50])) [0 start_element+0 S4 A128]))) tilesInt.C:303 149 {*extendsidi2_rex64}
     (nil))
(insn 292 290 294 17 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:163 D.11825 ] [163])) tilesInt.C:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:163 D.11825 ] [163])
        (nil)))
(insn 294 292 295 17 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 tiles_list+0 S8 A128])) tilesInt.C:303 87 {*movdi_internal_rex64}
     (nil))
(call_insn 295 294 297 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:303 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 297 295 298 17 (var_location:SI i (debug_expr:SI D#1)) -1
     (nil))
(insn 298 297 300 17 (parallel [
            (set (reg:DI 3 bx [orig:168 ivtmp.70 ] [168])
                (plus:DI (reg:DI 3 bx [orig:168 ivtmp.70 ] [168])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 300 298 301 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 3 bx [orig:168 ivtmp.70 ] [168])
            (reg:DI 6 bp [218]))) tilesInt.C:302 8 {*cmpdi_1}
     (nil))
(jump_insn 301 300 374 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 303)
            (pc))) tilesInt.C:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 303)
;;  succ:       17 [91.0%]  (DFS_BACK)
;;              18 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 [9.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 374 301 375 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 375 374 376 18 (set (pc)
        (label_ref 299)) 650 {jump}
     (nil)
 -> 299)
;;  succ:       15 [100.0%]  (LOOP_EXIT)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 376 375 311)
;; basic block 19, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(code_label 311 376 312 19 11 "" [1 uses])
(note 312 311 314 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 314 312 315 19 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [0 ints_list+0 S8 A128])) tilesInt.C:277 87 {*movdi_internal_rex64}
     (nil))
(call_insn 315 314 316 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:277 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 316 315 317 19 (set (reg:DI 41 r12 [orig:126 D.11827 ] [126])
        (reg:DI 0 ax)) tilesInt.C:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 317 316 318 19 (set (reg/v:SI 43 r14 [orig:106 num_ints ] [106])
        (reg:SI 41 r12 [orig:126 D.11827 ] [126])) tilesInt.C:277 89 {*movsi_internal}
     (nil))
(debug_insn 318 317 319 19 (var_location:SI num_ints (reg:SI 41 r12 [orig:126 D.11827 ] [126])) tilesInt.C:277 -1
     (nil))
(insn 319 318 320 19 (set (reg:DI 5 di [orig:228 D.11828 ] [228])
        (sign_extend:DI (reg:SI 41 r12 [orig:126 D.11827 ] [126]))) tilesInt.C:278 149 {*extendsidi2_rex64}
     (nil))
(insn 320 319 322 19 (parallel [
            (set (reg:DI 5 di [orig:229 D.11828 ] [229])
                (ashift:DI (reg:DI 5 di [orig:228 D.11828 ] [228])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:278 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 322 320 323 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:278 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 323 322 325 19 (set (reg/v/f:DI 42 r13 [orig:105 ints ] [105])
        (reg:DI 0 ax)) tilesInt.C:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 230)
            (nil))))
(debug_insn 325 323 327 19 (var_location:DI ints (reg/v/f:DI 42 r13 [orig:105 ints ] [105])) tilesInt.C:278 -1
     (nil))
(debug_insn 327 325 329 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 329 327 330 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 41 r12 [orig:126 D.11827 ] [126])
            (const_int 0 [0]))) tilesInt.C:279 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 41 r12 [orig:126 D.11827 ] [126])
        (nil)))
(jump_insn 330 329 331 19 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) tilesInt.C:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 328)
;;  succ:       20 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 20, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [91.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 41 [r12]
;; live  kill	
(note 331 330 51 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 51 331 377 20 (set (reg:DI 41 r12 [orig:137 ivtmp.80 ] [137])
        (const_int 0 [0])) tilesInt.C:279 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 377 51 378 20 (set (pc)
        (label_ref 332)) 650 {jump}
     (nil)
 -> 332)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 378 377 335)
;; basic block 21, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 42 [r13] 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 42 [r13] 43 [r14]
;; live  kill	
(code_label 335 378 336 21 10 "" [2 uses])
(note 336 335 52 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 52 336 53 21 (set (reg/v:SI 43 r14 [orig:106 num_ints ] [106])
        (const_int 0 [0])) tilesInt.C:260 89 {*movsi_internal}
     (nil))
(insn 53 52 379 21 (set (reg/v/f:DI 42 r13 [orig:105 ints ] [105])
        (const_int 0 [0])) tilesInt.C:259 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 379 53 380 21 (set (pc)
        (label_ref 328)) 650 {jump}
     (nil)
 -> 328)
;;  succ:       7 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

(barrier 380 379 353)
;; basic block 22, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 21, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              15 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 353 380 347 22 27 "" [2 uses])
(note 347 353 343 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 343 347 406 22 (use (reg/i:DI 0 ax)) tilesInt.C:305 -1
     (nil))
(note 406 343 407 22 NOTE_INSN_EPILOGUE_BEG)
(insn/f 407 406 408 22 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 200 [0xc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:305 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 200 [0xc8])))
            (nil))))
(insn/f 408 407 409 22 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:305 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 409 408 410 22 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:305 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 410 409 411 22 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:305 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 411 410 412 22 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:305 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 412 411 413 22 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:305 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 413 412 414 22 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:305 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 414 413 415 22 (simple_return) tilesInt.C:305 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 415 414 0)

;; Function PyObject* tiles_GetTilesWrap(PyObject*, PyObject*) (_ZL18tiles_GetTilesWrapP7_objectS0_, funcdef_no=155, decl_uid=11346, cgraph_uid=155)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 24 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 25 (  1.1)

**scanning insn=334
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=335
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=3:8117 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=336
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=4:12175 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=337
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=5:16233 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=338
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=6:20291 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=339
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=7:24349 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=340
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=16

**scanning insn=17

**scanning insn=18
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=8:28279 offset = 64
 processing cselib store [64..72)
mems_found = 1, cannot_delete = false

**scanning insn=19

**scanning insn=20
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=8:28279 offset = 80
 processing cselib store [80..88)
    trying store in insn=18 gid=-1[64..72)
mems_found = 1, cannot_delete = false

**scanning insn=21

**scanning insn=22
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=8:28279 offset = 96
 processing cselib store [96..104)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=18 gid=-1[64..72)
mems_found = 1, cannot_delete = false

**scanning insn=23

**scanning insn=24
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=8:28279 offset = 112
 processing cselib store [112..120)
    trying store in insn=22 gid=-1[96..104)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=18 gid=-1[64..72)
mems_found = 1, cannot_delete = false

**scanning insn=25

**scanning insn=26

**scanning insn=330
mems_found = 0, cannot_delete = true

**scanning insn=331
mems_found = 0, cannot_delete = true

**scanning insn=332
mems_found = 0, cannot_delete = true

**scanning insn=31
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))
  varying cselib base=8:28279 offset = 24
 processing cselib store [24..32)
    trying store in insn=24 gid=-1[112..120)
    trying store in insn=22 gid=-1[96..104)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=18 gid=-1[64..72)
mems_found = 1, cannot_delete = false

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))
  varying cselib base=8:28279 offset = 16
 processing cselib store [16..24)
    trying store in insn=31 gid=-1[24..32)
    trying store in insn=24 gid=-1[112..120)
    trying store in insn=22 gid=-1[96..104)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=18 gid=-1[64..72)
mems_found = 1, cannot_delete = false

**scanning insn=333
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=8:28279 offset = 8
 processing cselib store [8..16)
    trying store in insn=34 gid=-1[16..24)
    trying store in insn=31 gid=-1[24..32)
    trying store in insn=24 gid=-1[112..120)
    trying store in insn=22 gid=-1[96..104)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=18 gid=-1[64..72)
mems_found = 1, cannot_delete = false

**scanning insn=39
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=8:28279 offset = 0
 processing cselib store [0..8)
    trying store in insn=36 gid=-1[8..16)
    trying store in insn=34 gid=-1[16..24)
    trying store in insn=31 gid=-1[24..32)
    trying store in insn=24 gid=-1[112..120)
    trying store in insn=22 gid=-1[96..104)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=18 gid=-1[64..72)
mems_found = 1, cannot_delete = false

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)

   after canon_rtx address: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)
  gid=0 offset=0 
 processing const load gid=0[0..1)
removing from active insn=39 has store
removing from active insn=36 has store
removing from active insn=34 has store
removing from active insn=31 has store

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=1:1 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=55
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=328
mems_found = 0, cannot_delete = true

**scanning insn=59
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=62

**scanning insn=64
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=8:8 offset = 48
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=70

**scanning insn=72
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=13:13 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=73
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=329
mems_found = 0, cannot_delete = true

**scanning insn=77
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=80

**scanning insn=81
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=18:18 offset = 112
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 112 [0x70])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=86
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=95

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=2:2 offset = 112
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 112 [0x70])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=99
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=104
  mem: (plus:DI (mult:DI (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
        (const_int 4 [0x4]))
    (reg/v/f:DI 43 r14 [orig:60 ints ] [60]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
        (const_int 4 [0x4]))
    (reg/v/f:DI 43 r14 [orig:60 ints ] [60]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
        (const_int 2 [0x2]))
    (reg/v/f:DI 43 r14 [orig:60 ints ] [60]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
        (const_int 2 [0x2]))
    (reg/v/f:DI 43 r14 [orig:60 ints ] [60]))
  varying cselib base=9:4159 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=105

**scanning insn=107

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=110
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))
  varying cselib base=11:11 offset = 36
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 36 [0x24])) [0 %sfp+20 S4 A32])
 processing cselib load against insn 104
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=113

**scanning insn=114

**scanning insn=116
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=1:1 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=117
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=324
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=4:4 offset = 40
 processing cselib store [40..48)
mems_found = 1, cannot_delete = false

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120

**scanning insn=122

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=2:2 offset = 64
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=129
  mem: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)

   after canon_rtx address: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)
  gid=5 offset=0 
 processing const load gid=5[0..1)

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=302
mems_found = 0, cannot_delete = true

**scanning insn=139

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=143
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=2:2 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=144
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=147
  mem: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)

   after canon_rtx address: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)
  gid=6 offset=0 
 processing const load gid=6[0..1)

**scanning insn=326
mems_found = 0, cannot_delete = true

**scanning insn=327
mems_found = 0, cannot_delete = true

**scanning insn=320
  mem: (plus:DI (mult:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))
  varying cselib base=12:4162 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=152
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=13:13 offset = 96
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 wrapwidths_list+0 S8 A128])
 processing cselib load against insn 320
mems_found = 0, cannot_delete = true

**scanning insn=153
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)
removing from active insn=320 has store

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=158
  mem: (plus:DI (mult:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 4 [0x4]))
    (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 4 [0x4]))
    (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 2 [0x2]))
    (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 2 [0x2]))
    (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77]))
  varying cselib base=19:4169 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=159

**scanning insn=161

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=172

**scanning insn=173
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=1:1 offset = 64
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=174
  mem: (plus:DI (reg/f:DI 0 ax [orig:155 memorctable ] [155])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:155 memorctable ] [155])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 0 ax [orig:155 memorctable ] [155])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:155 memorctable ] [155])
    (const_int 16 [0x10]))
  varying cselib base=3:3 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:155 memorctable ] [155])
        (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=321
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))
  varying cselib base=1:1 offset = 36
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 36 [0x24])) [0 %sfp+20 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=176
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=177
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=1:1 offset = 0
 processing cselib store [0..8)
    trying store in insn=176 gid=-1[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 40 [0x28])) [0 %sfp+24 S4 A64])
 processing cselib load against insn 177
 processing cselib load against insn 176
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=182
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 177
 processing cselib load against insn 176
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
  mem: (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>)

   after canon_rtx address: (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>)
  gid=7 offset=0 
 processing const load gid=7[0..1)

**scanning insn=307
mems_found = 0, cannot_delete = true

**scanning insn=190
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=1:1 offset = 64
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=191
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=193

**scanning insn=322
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))
  varying cselib base=4:4 offset = 36
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 36 [0x24])) [0 %sfp+20 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=195
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=4:4 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=196
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=4:4 offset = 0
 processing cselib store [0..8)
    trying store in insn=195 gid=-1[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=198
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=4:4 offset = 40
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 40 [0x28])) [0 %sfp+24 S4 A64])
 processing cselib load against insn 196
 processing cselib load against insn 195
mems_found = 0, cannot_delete = true

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=201
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=4:4 offset = 48
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 196
 processing cselib load against insn 195
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=203
  mem: (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>)

   after canon_rtx address: (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>)
  gid=8 offset=0 
 processing const load gid=8[0..1)

**scanning insn=207
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=209
  mem: (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>)

   after canon_rtx address: (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>)
  gid=9 offset=0 
 processing const load gid=9[0..1)

**scanning insn=210
mems_found = 0, cannot_delete = true

**scanning insn=211

**scanning insn=212
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=5:5 offset = 48
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=213
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=216

**scanning insn=218
  mem: (plus:DI (mult:DI (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
        (const_int 4 [0x4]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
        (const_int 4 [0x4]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
        (const_int 2 [0x2]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
        (const_int 2 [0x2]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))
  varying cselib base=4:4154 offset = 0
 processing cselib load mem:(mem:SI (plus:DI (mult:DI (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
            (const_int 4 [0x4]))
        (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) [0 MEM[base: the_tiles_34, index: ivtmp.87_139, step: 4, offset: 0B]+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=220
  mem: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)
  gid=10 offset=0 
 processing const load gid=10[0..1)

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=223
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=225
  mem: (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>)
  gid=11 offset=0 
 processing const load gid=11[0..1)

**scanning insn=325
mems_found = 0, cannot_delete = true

**scanning insn=228

**scanning insn=229
mems_found = 0, cannot_delete = true

**scanning insn=230
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=12:12 offset = 48
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=310
mems_found = 0, cannot_delete = true

**scanning insn=244
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=1:1 offset = 112
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 112 [0x70])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=245
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=246
mems_found = 0, cannot_delete = true

**scanning insn=247
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))
  varying cselib base=5:5 offset = 36
 processing cselib store [36..40)
mems_found = 1, cannot_delete = false

**scanning insn=248

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=252
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=255

**scanning insn=257

**scanning insn=259
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=316
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 36 [0x24]))
  varying cselib base=1:1 offset = 36
 processing cselib store [36..40)
mems_found = 1, cannot_delete = false

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=318
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=273
mems_found = 0, cannot_delete = false

**scanning insn=345
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=346
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=5:4204 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=347
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=8:8278 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=348
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=11:12352 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=349
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=14:16426 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=350
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=17:20500 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=351
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=20:24574 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=352
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+0): n  p 
group 10(0+0): n  p 
group 11(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_GetTilesWrap(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={30d,30u} r1={29d,6u} r2={28d,4u} r3={5d,11u} r4={32d,9u} r5={49d,26u} r6={3d,6u} r7={15d,112u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r17={40d,10u} r18={23d} r19={23d} r20={3e} r21={25d,2u} r22={25d,1u} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={27d,5u} r38={27d,3u} r39={23d} r40={23d} r41={5d,8u} r42={6d,13u} r43={4d,7u} r44={4d,10u} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} 
;;    total ref usage 1408{1142d,263u,3e} in 183{160 regular + 23 call} insns.
(note 2 0 14 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	 17 [flags]
(note 14 2 334 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 334 14 335 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) tilesInt.C:309 -1
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 335 334 336 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) tilesInt.C:309 -1
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 336 335 337 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) tilesInt.C:309 -1
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 337 336 338 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) tilesInt.C:309 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 338 337 339 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) tilesInt.C:309 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 339 338 340 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:309 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 340 339 341 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -136 [0xffffffffffffff78])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:309 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -136 [0xffffffffffffff78])))
            (nil))))
(note 341 340 4 2 NOTE_INSN_PROLOGUE_END)
(insn 4 341 5 2 (set (reg/v/f:DI 5 di [orig:129 args ] [129])
        (reg:DI 4 si [ args ])) tilesInt.C:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:310 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:311 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:313 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 19 18 20 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:314 -1
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:316 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:317 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 wrapwidths_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:319 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 23 22 24 2 (var_location:DI wrapwidths (const_int 0 [0])) tilesInt.C:320 -1
     (nil))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:321 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 25 24 26 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:322 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:323 -1
     (nil))
(note 27 26 330 2 NOTE_INSN_DELETED)
(insn 330 27 331 2 (set (reg/f:DI 2 cx [131])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 64 [0x40]))) tilesInt.C:329 267 {*leadi}
     (nil))
(insn 331 330 332 2 (set (reg/f:DI 1 dx [132])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) tilesInt.C:329 267 {*leadi}
     (nil))
(insn 332 331 31 2 (set (reg/f:DI 0 ax [133])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) tilesInt.C:329 267 {*leadi}
     (nil))
(insn 31 332 32 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg/f:DI 0 ax [133])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [133])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 32 31 34 2 (set (reg:DI 37 r8 [135])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 34 32 333 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg:DI 37 r8 [135])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 333 34 36 2 (set (reg/f:DI 0 ax [136])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 96 [0x60]))) tilesInt.C:329 267 {*leadi}
     (nil))
(insn 36 333 39 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 0 ax [136])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [136])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 39 36 40 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 37 r8 [135])) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 45 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 7 sp)
            (const_int 80 [0x50]))) tilesInt.C:329 267 {*leadi}
     (nil))
(insn 45 40 47 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b9720943b48 *.LC2>)) tilesInt.C:329 87 {*movdi_internal_rex64}
     (nil))
(insn 47 45 48 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:329 91 {*movqi_internal}
     (nil))
(call_insn 48 47 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 32 [0x20]))) tilesInt.C:329 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (nil)))))))))))))
(insn 11 48 50 2 (set (reg/f:DI 41 r12 [orig:62 D.11863 ] [62])
        (const_int 0 [0])) tilesInt.C:330 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 50 11 51 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:63 D.11864 ] [63])
            (const_int 0 [0]))) tilesInt.C:326 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.11864 ] [63])
        (nil)))
(jump_insn 51 50 52 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 290)
            (pc))) tilesInt.C:326 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 290)
;;  succ:       23 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 7 [sp] 41 [r12]
;; live  out 	 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 52 51 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 54 52 55 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 variables_list+0 S8 A128])) tilesInt.C:332 87 {*movdi_internal_rex64}
     (nil))
(call_insn 55 54 328 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:332 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 328 55 59 3 (set (reg:DI 5 di [orig:141 D.11866 ] [141])
        (mult:DI (reg:DI 0 ax [orig:65 D.11865 ] [65])
            (const_int 4 [0x4]))) tilesInt.C:332 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.11865 ] [65])
        (nil)))
(call_insn 59 328 60 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:332 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 62 3 (set (reg/v/f:DI 3 bx [orig:68 variables ] [68])
        (reg:DI 0 ax)) tilesInt.C:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 142)
            (nil))))
(debug_insn 62 60 63 3 (var_location:DI variables (reg/v/f:DI 3 bx [orig:68 variables ] [68])) tilesInt.C:332 -1
     (nil))
(note 63 62 64 3 NOTE_INSN_DELETED)
(insn 64 63 65 3 (set (reg:DI 5 di [orig:143 D.11866 ] [143])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])) [0 num_tilings+0 S4 A128]))) tilesInt.C:333 149 {*extendsidi2_rex64}
     (nil))
(insn 65 64 67 3 (parallel [
            (set (reg:DI 5 di [orig:145 D.11866 ] [145])
                (ashift:DI (reg:DI 5 di [orig:143 D.11866 ] [143])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:333 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 67 65 68 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:333 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 68 67 70 3 (set (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])
        (reg:DI 0 ax)) tilesInt.C:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 146)
            (nil))))
(debug_insn 70 68 72 3 (var_location:DI the_tiles (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) tilesInt.C:333 -1
     (nil))
(insn 72 70 73 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 variables_list+0 S8 A128])) tilesInt.C:334 87 {*movdi_internal_rex64}
     (nil))
(call_insn 73 72 329 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:334 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 329 73 77 3 (set (reg:DI 5 di [orig:148 D.11866 ] [148])
        (mult:DI (reg:DI 0 ax [orig:74 D.11865 ] [74])
            (const_int 4 [0x4]))) tilesInt.C:334 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:74 D.11865 ] [74])
        (nil)))
(call_insn 77 329 78 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:334 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 78 77 80 3 (set (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77])
        (reg:DI 0 ax)) tilesInt.C:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 149)
            (nil))))
(debug_insn 80 78 81 3 (var_location:DI wrapwidths (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77])) tilesInt.C:334 -1
     (nil))
(insn 81 80 82 3 (set (reg/f:DI 5 di [orig:78 ints_list.18 ] [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 ints_list+0 S8 A128])) tilesInt.C:335 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:78 ints_list.18 ] [78])
            (const_int 0 [0]))) tilesInt.C:335 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 83 82 84 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 265)
            (pc))) tilesInt.C:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 265)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              22 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 84 83 86 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 86 84 88 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:335 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 88 86 89 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 0 ax [orig:79 D.11865 ] [79])
            (const_int 0 [0]))) tilesInt.C:335 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:79 D.11865 ] [79])
        (nil)))
(jump_insn 89 88 297 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) tilesInt.C:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 241)
;;  succ:       20 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
(note 297 89 298 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 298 297 299 5 (set (pc)
        (label_ref 265)) 650 {jump}
     (nil)
 -> 265)
;;  succ:       22 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 299 298 262)
;; basic block 6, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              21 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
(code_label 262 299 94 6 47 "" [2 uses])
(note 94 262 95 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 95 94 97 6 (var_location:SI i (reg:SI 42 r13 [orig:92 ivtmp.98 ] [92])) -1
     (nil))
(insn 97 95 98 6 (set (reg:DI 4 si)
        (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])) tilesInt.C:340 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 ints_list+0 S8 A128])) tilesInt.C:340 87 {*movdi_internal_rex64}
     (nil))
(call_insn 99 98 101 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:340 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 101 99 102 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:86 D.11863 ] [86])) tilesInt.C:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 D.11863 ] [86])
        (nil)))
(call_insn 102 101 104 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:340 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 104 102 105 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 43 r14 [orig:60 ints ] [60])) [0 MEM[base: ints_52, index: ivtmp.98_129, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:87 D.11865 ] [87])) tilesInt.C:340 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:87 D.11865 ] [87])
        (nil)))
(debug_insn 105 104 107 6 (var_location:SI D#5 (plus:SI (reg:SI 42 r13 [orig:92 ivtmp.98 ] [92])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 107 105 108 6 (var_location:SI i (debug_expr:SI D#5)) -1
     (nil))
(insn 108 107 110 6 (parallel [
            (set (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
                (plus:DI (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 108 111 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 36 [0x24])) [0 %sfp+20 S4 A32])
            (reg:SI 42 r13 [orig:92 ivtmp.98 ] [92]))) tilesInt.C:339 7 {*cmpsi_1}
     (nil))
(jump_insn 111 110 258 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) tilesInt.C:339 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 262)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              22 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 42 [r13] 44 [r15]
;; live  kill	
(code_label 258 111 112 7 46 "" [2 uses])
(note 112 258 113 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 113 112 114 7 (var_location:SI num_ints (mem/c:SI (plus:DI (reg/f:DI 7 sp)
            (const_int 36 [0x24])) [0 %sfp+20 S4 A32])) -1
     (nil))
(debug_insn 114 113 116 7 (var_location:DI ints (reg/v/f:DI 43 r14 [orig:60 ints ] [60])) -1
     (nil))
(insn 116 114 117 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 variables_list+0 S8 A128])) tilesInt.C:343 87 {*movdi_internal_rex64}
     (nil))
(call_insn 117 116 324 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:343 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 324 117 119 7 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 %sfp+24 S8 A64])
        (reg:DI 0 ax [orig:90 D.11865 ] [90])) tilesInt.C:343 87 {*movdi_internal_rex64}
     (nil))
(insn 119 324 120 7 (set (reg/v:SI 42 r13 [orig:91 num_variables ] [91])
        (reg:SI 0 ax [orig:90 D.11865 ] [90])) tilesInt.C:343 89 {*movsi_internal}
     (nil))
(debug_insn 120 119 122 7 (var_location:SI num_variables (reg:SI 0 ax [orig:90 D.11865 ] [90])) tilesInt.C:343 -1
     (nil))
(debug_insn 122 120 9 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 9 122 123 7 (set (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 0 [0])) tilesInt.C:345 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 123 9 124 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:90 D.11865 ] [90])
            (const_int 0 [0]))) tilesInt.C:345 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:90 D.11865 ] [90])
        (nil)))
(jump_insn 124 123 163 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 292)
            (pc))) tilesInt.C:345 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 292)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 163 124 125 8 42 "" [1 uses])
(note 125 163 127 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 127 125 128 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:351 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 memorctable+0 S8 A128])) tilesInt.C:351 87 {*movdi_internal_rex64}
     (nil))
(call_insn 129 128 131 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:351 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 131 129 132 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:104 D.11864 ] [104])
            (const_int 0 [0]))) tilesInt.C:351 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:104 D.11864 ] [104])
        (nil)))
(jump_insn 132 131 300 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) tilesInt.C:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 170)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	
;; live  kill	
(note 300 132 302 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 302 300 303 9 (set (pc)
        (label_ref 301)) 650 {jump}
     (nil)
 -> 301)
;;  succ:       13 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

(barrier 303 302 292)
;; basic block 10, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 22 [xmm1] 44 [r15]
;; live  kill	 17 [flags]
(code_label 292 303 291 10 54 "" [2 uses])
(note 291 292 139 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 139 291 142 10 (var_location:SI i (reg:SI 44 r15 [orig:116 ivtmp.92 ] [116])) -1
     (nil))
(insn 142 139 143 10 (set (reg:DI 4 si)
        (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 variables_list+0 S8 A128])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (nil))
(call_insn 144 143 146 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 146 144 147 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:96 D.11863 ] [96])) tilesInt.C:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 D.11863 ] [96])
        (nil)))
(call_insn 147 146 326 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:347 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 326 147 327 10 (set (reg:V2DF 21 xmm0 [orig:97 D.11867 ] [97])
        (vec_duplicate:V2DF (reg:DF 21 xmm0 [orig:97 D.11867 ] [97]))) tilesInt.C:347 1459 {vec_dupv2df}
     (nil))
(insn 327 326 320 10 (set (reg:V4SF 22 xmm1 [169])
        (vec_concat:V4SF (float_truncate:V2SF (reg:V2DF 21 xmm0 [orig:97 D.11867 ] [97]))
            (const_vector:V2SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ]))) tilesInt.C:347 1393 {*sse2_cvtpd2ps}
     (expr_list:REG_DEAD (reg:V2DF 21 xmm0 [orig:97 D.11867 ] [97])
        (nil)))
(insn 320 327 151 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 3 bx [orig:68 variables ] [68])) [0 MEM[base: variables_29, index: ivtmp.92_130, step: 4, offset: 0B]+0 S4 A32])
        (reg:SF 22 xmm1 [169])) tilesInt.C:347 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [169])
        (nil)))
(insn 151 320 152 10 (set (reg:DI 4 si)
        (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])) tilesInt.C:348 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 153 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 wrapwidths_list+0 S8 A128])) tilesInt.C:348 87 {*movdi_internal_rex64}
     (nil))
(call_insn 153 152 155 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:348 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 155 153 156 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:100 D.11863 ] [100])) tilesInt.C:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:100 D.11863 ] [100])
        (nil)))
(call_insn 156 155 158 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:348 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 158 156 159 10 (set (mem:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77])) [0 MEM[base: wrapwidths_41, index: ivtmp.92_130, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:101 D.11865 ] [101])) tilesInt.C:348 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:101 D.11865 ] [101])
        (nil)))
(debug_insn 159 158 161 10 (var_location:SI D#4 (plus:SI (reg:SI 44 r15 [orig:116 ivtmp.92 ] [116])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 161 159 162 10 (var_location:SI i (debug_expr:SI D#4)) -1
     (nil))
(insn 162 161 164 10 (parallel [
            (set (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
                (plus:DI (reg:DI 44 r15 [orig:116 ivtmp.92 ] [116])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 162 165 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 42 r13 [orig:91 num_variables ] [91])
            (reg:SI 44 r15 [orig:116 ivtmp.92 ] [116]))) tilesInt.C:345 7 {*cmpsi_1}
     (nil))
(jump_insn 165 164 304 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 292)
            (pc))) tilesInt.C:345 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 292)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	
;; live  kill	
(note 304 165 305 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 305 304 306 11 (set (pc)
        (label_ref 163)) 650 {jump}
     (nil)
 -> 163)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

(barrier 306 305 170)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 170 306 171 12 40 "" [1 uses])
(note 171 170 172 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 172 171 173 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 64 [0x40])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:353 -1
     (nil))
(insn 173 172 174 12 (set (reg/f:DI 0 ax [orig:155 memorctable ] [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 memorctable+0 S8 A128])) tilesInt.C:353 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 174 173 321 12 (set (reg/f:DI 1 dx [orig:156 MEM[(struct CollisionTable *)memorctable.21_92].ct ] [156])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:155 memorctable ] [155])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.21_92].ct+0 S8 A64])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:155 memorctable ] [155])
        (nil)))
(insn 321 174 176 12 (set (reg/v:SI 0 ax [orig:61 num_ints ] [61])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [0 %sfp+20 S4 A32])) tilesInt.C:354 89 {*movsi_internal}
     (nil))
(insn 176 321 177 12 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 0 ax [orig:61 num_ints ] [61])) tilesInt.C:354 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:61 num_ints ] [61])
        (nil)))
(insn 177 176 178 12 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 43 r14 [orig:60 ints ] [60])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:60 ints ] [60])
        (nil)))
(insn 178 177 179 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77])
        (nil)))
(insn 179 178 180 12 (set (reg:SI 37 r8)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 %sfp+24 S4 A64])) tilesInt.C:354 89 {*movsi_internal}
     (nil))
(insn 180 179 182 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:68 variables ] [68])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:68 variables ] [68])
        (nil)))
(insn 182 180 183 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])) tilesInt.C:354 89 {*movsi_internal}
     (nil))
(insn 183 182 184 12 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) tilesInt.C:354 87 {*movdi_internal_rex64}
     (nil))
(call_insn 184 183 307 12 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiP15collision_tablePfiS_S_i") [flags 0x41]  <function_decl 0x2b9720830000 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:354 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
(jump_insn 307 184 308 12 (set (pc)
        (label_ref 204)) 650 {jump}
     (nil)
 -> 204)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 308 307 301)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 301 308 188 13 57 "" [1 uses])
(note 188 301 190 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 190 188 191 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 memorctable+0 S8 A128])) tilesInt.C:358 87 {*movdi_internal_rex64}
     (nil))
(call_insn 191 190 193 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:358 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(debug_insn 193 191 322 13 (var_location:SI memory_size (reg:SI 0 ax [orig:109 D.11865 ] [109])) tilesInt.C:358 -1
     (nil))
(insn 322 193 195 13 (set (reg/v:SI 2 cx [orig:61 num_ints ] [61])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [0 %sfp+20 S4 A32])) tilesInt.C:359 89 {*movsi_internal}
     (nil))
(insn 195 322 196 13 (set (mem:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S4 A64])
        (reg/v:SI 2 cx [orig:61 num_ints ] [61])) tilesInt.C:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:61 num_ints ] [61])
        (nil)))
(insn 196 195 197 13 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/v/f:DI 43 r14 [orig:60 ints ] [60])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:60 ints ] [60])
        (nil)))
(insn 197 196 198 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:77 wrapwidths ] [77])
        (nil)))
(insn 198 197 199 13 (set (reg:SI 37 r8)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 %sfp+24 S4 A64])) tilesInt.C:359 89 {*movsi_internal}
     (nil))
(insn 199 198 200 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:68 variables ] [68])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:68 variables ] [68])
        (nil)))
(insn 200 199 201 13 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:109 D.11865 ] [109])) tilesInt.C:359 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:109 D.11865 ] [109])
        (nil)))
(insn 201 200 202 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])) tilesInt.C:359 89 {*movsi_internal}
     (nil))
(insn 202 201 203 13 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) tilesInt.C:359 87 {*movdi_internal_rex64}
     (nil))
(call_insn 203 202 204 13 (call (mem:QI (symbol_ref:DI ("_Z9tileswrapPiiiPfiS_S_i") [flags 0x41]  <function_decl 0x2b9720827f00 tileswrap>) [0 tileswrap S1 A8])
        (const_int 16 [0x10])) tilesInt.C:359 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                (expr_list:REG_BR_PRED (use (mem:SI (plus:DI (reg/f:DI 7 sp)
                                                (const_int 8 [0x8])) [0  S4 A64]))
                                    (nil))))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 41 [r12]
;; live  kill	
(code_label 204 203 205 14 44 "" [1 uses])
(note 205 204 206 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 206 205 207 14 NOTE_INSN_DELETED)
(insn 207 206 209 14 (set (reg:DI 5 di [orig:160 D.11865 ] [160])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])) [0 num_tilings+0 S4 A128]))) tilesInt.C:362 149 {*extendsidi2_rex64}
     (nil))
(call_insn 209 207 210 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:362 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 210 209 211 14 (set (reg/v/f:DI 41 r12 [orig:114 tiles_list ] [114])
        (reg:DI 0 ax)) tilesInt.C:362 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 211 210 212 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 212 211 213 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:363 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 213 212 214 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 290)
            (pc))) tilesInt.C:363 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 290)
;;  succ:       15 [91.0%]  (FALLTHRU)
;;              23 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [91.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 3 [bx]
;; live  kill	
(note 214 213 10 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 10 214 233 15 (set (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
        (const_int 0 [0])) tilesInt.C:363 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 16, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [91.0%]  (DFS_BACK)
;;              15 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 233 10 215 16 45 "" [1 uses])
(note 215 233 216 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 216 215 217 16 (var_location:SI i (reg:SI 3 bx [orig:124 ivtmp.87 ] [124])) -1
     (nil))
(note 217 216 218 16 NOTE_INSN_DELETED)
(insn 218 217 220 16 (set (reg:DI 5 di [orig:162 D.11865 ] [162])
        (sign_extend:DI (mem:SI (plus:DI (mult:DI (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) [0 MEM[base: the_tiles_34, index: ivtmp.87_139, step: 4, offset: 0B]+0 S4 A32]))) tilesInt.C:364 149 {*extendsidi2_rex64}
     (nil))
(call_insn 220 218 221 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:364 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 221 220 223 16 (set (reg/f:DI 1 dx [orig:120 D.11863 ] [120])
        (reg:DI 0 ax)) tilesInt.C:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 223 221 224 16 (set (reg:DI 4 si)
        (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 16 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:114 tiles_list ] [114])) tilesInt.C:364 87 {*movdi_internal_rex64}
     (nil))
(call_insn 225 224 325 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:364 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 325 225 228 16 (set (reg:SI 1 dx [orig:126 D.11864 ] [126])
        (plus:SI (reg:SI 3 bx [orig:124 ivtmp.87 ] [124])
            (const_int 1 [0x1]))) 266 {*leasi}
     (nil))
(debug_insn 228 325 229 16 (var_location:SI i (reg:SI 1 dx [orig:126 D.11864 ] [126])) -1
     (nil))
(insn 229 228 230 16 (parallel [
            (set (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
                (plus:DI (reg:DI 3 bx [orig:124 ivtmp.87 ] [124])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 230 229 231 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])) [0 num_tilings+0 S4 A128])
            (reg:SI 1 dx [orig:126 D.11864 ] [126]))) tilesInt.C:363 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:126 D.11864 ] [126])
        (nil)))
(jump_insn 231 230 309 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 233)
            (pc))) tilesInt.C:363 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 233)
;;  succ:       16 [91.0%]  (DFS_BACK)
;;              17 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 16, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 [9.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
(note 309 231 310 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 310 309 311 17 (set (pc)
        (label_ref:DI 290)) 650 {jump}
     (nil)
 -> 290)
;;  succ:       23 [100.0%] 
;; lr  out 	 7 [sp] 41 [r12]
;; live  out 	 7 [sp] 41 [r12]

(barrier 311 310 241)
;; basic block 20, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 17, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(code_label 241 311 242 20 37 "" [1 uses])
(note 242 241 244 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 244 242 245 20 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 ints_list+0 S8 A128])) tilesInt.C:337 87 {*movdi_internal_rex64}
     (nil))
(call_insn 245 244 246 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:337 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 246 245 247 20 (set (reg:DI 42 r13 [orig:81 D.11865 ] [81])
        (reg:DI 0 ax)) tilesInt.C:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 247 246 248 20 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [0 %sfp+20 S4 A32])
        (reg:SI 42 r13 [orig:81 D.11865 ] [81])) tilesInt.C:337 89 {*movsi_internal}
     (nil))
(debug_insn 248 247 249 20 (var_location:SI num_ints (reg:SI 42 r13 [orig:81 D.11865 ] [81])) tilesInt.C:337 -1
     (nil))
(insn 249 248 250 20 (set (reg:DI 5 di [orig:166 D.11866 ] [166])
        (sign_extend:DI (reg:SI 42 r13 [orig:81 D.11865 ] [81]))) tilesInt.C:338 149 {*extendsidi2_rex64}
     (nil))
(insn 250 249 252 20 (parallel [
            (set (reg:DI 5 di [orig:167 D.11866 ] [167])
                (ashift:DI (reg:DI 5 di [orig:166 D.11866 ] [166])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:338 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 252 250 253 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:338 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 253 252 255 20 (set (reg/v/f:DI 43 r14 [orig:60 ints ] [60])
        (reg:DI 0 ax)) tilesInt.C:338 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 168)
            (nil))))
(debug_insn 255 253 257 20 (var_location:DI ints (reg/v/f:DI 43 r14 [orig:60 ints ] [60])) tilesInt.C:338 -1
     (nil))
(debug_insn 257 255 259 20 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 259 257 260 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 42 r13 [orig:81 D.11865 ] [81])
            (const_int 0 [0]))) tilesInt.C:339 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:81 D.11865 ] [81])
        (nil)))
(jump_insn 260 259 261 20 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) tilesInt.C:339 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 258)
;;  succ:       21 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 21, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [91.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 42 [r13]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 42 [r13]
;; live  kill	
(note 261 260 6 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 6 261 316 21 (set (reg:DI 42 r13 [orig:92 ivtmp.98 ] [92])
        (const_int 0 [0])) tilesInt.C:339 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 316 6 317 21 (set (pc)
        (label_ref 262)) 650 {jump}
     (nil)
 -> 262)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 317 316 265)
;; basic block 22, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 43 [r14]
;; live  kill	
(code_label 265 317 266 22 36 "" [2 uses])
(note 266 265 7 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 7 266 8 22 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [0 %sfp+20 S4 A32])
        (const_int 0 [0])) tilesInt.C:323 89 {*movsi_internal}
     (nil))
(insn 8 7 318 22 (set (reg/v/f:DI 43 r14 [orig:60 ints ] [60])
        (const_int 0 [0])) tilesInt.C:322 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 318 8 319 22 (set (pc)
        (label_ref 258)) 650 {jump}
     (nil)
 -> 258)
;;  succ:       7 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

(barrier 319 318 290)
;; basic block 23, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 22, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%] 
;;              2 [21.4%] 
;;              14 [9.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 290 319 285 23 53 "" [3 uses])
(note 285 290 270 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 270 285 273 23 (set (reg/i:DI 0 ax)
        (reg/f:DI 41 r12 [orig:62 D.11863 ] [62])) tilesInt.C:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:62 D.11863 ] [62])
        (nil)))
(insn 273 270 344 23 (use (reg/i:DI 0 ax)) tilesInt.C:366 -1
     (nil))
(note 344 273 345 23 NOTE_INSN_EPILOGUE_BEG)
(insn/f 345 344 346 23 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:366 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 136 [0x88])))
            (nil))))
(insn/f 346 345 347 23 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:366 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 347 346 348 23 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:366 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 348 347 349 23 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:366 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 349 348 350 23 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:366 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 350 349 351 23 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:366 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 351 350 352 23 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:366 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 352 351 353 23 (simple_return) tilesInt.C:366 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 353 352 0)

;; Function PyObject* tiles_LoadTiles(PyObject*, PyObject*) (_ZL15tiles_LoadTilesP7_objectS0_, funcdef_no=152, decl_uid=11255, cgraph_uid=152)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 26 (  1.1)

**scanning insn=318
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=319
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=3:8117 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=320
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=4:12175 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=321
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=5:16233 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=322
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=6:20291 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=323
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=7:24349 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=324
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=15
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=8:28263 offset = 80
 processing cselib store [80..88)
mems_found = 1, cannot_delete = false

**scanning insn=16

**scanning insn=17
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=8:28263 offset = 96
 processing cselib store [96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=18

**scanning insn=19
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=8:28263 offset = 112
 processing cselib store [112..120)
    trying store in insn=17 gid=-1[96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=20

**scanning insn=21
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=8:28263 offset = 128
 processing cselib store [128..136)
    trying store in insn=19 gid=-1[112..120)
    trying store in insn=17 gid=-1[96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=22

**scanning insn=23

**scanning insn=314
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=8:28263 offset = 32
 processing cselib store [32..40)
    trying store in insn=21 gid=-1[128..136)
    trying store in insn=19 gid=-1[112..120)
    trying store in insn=17 gid=-1[96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=31
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))
  varying cselib base=8:28263 offset = 24
 processing cselib store [24..32)
    trying store in insn=28 gid=-1[32..40)
    trying store in insn=21 gid=-1[128..136)
    trying store in insn=19 gid=-1[112..120)
    trying store in insn=17 gid=-1[96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=316
mems_found = 0, cannot_delete = true

**scanning insn=33
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))
  varying cselib base=8:28263 offset = 16
 processing cselib store [16..24)
    trying store in insn=31 gid=-1[24..32)
    trying store in insn=28 gid=-1[32..40)
    trying store in insn=21 gid=-1[128..136)
    trying store in insn=19 gid=-1[112..120)
    trying store in insn=17 gid=-1[96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=36
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=8:28263 offset = 8
 processing cselib store [8..16)
    trying store in insn=33 gid=-1[16..24)
    trying store in insn=31 gid=-1[24..32)
    trying store in insn=28 gid=-1[32..40)
    trying store in insn=21 gid=-1[128..136)
    trying store in insn=19 gid=-1[112..120)
    trying store in insn=17 gid=-1[96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=317
mems_found = 0, cannot_delete = true

**scanning insn=38
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=8:28263 offset = 0
 processing cselib store [0..8)
    trying store in insn=36 gid=-1[8..16)
    trying store in insn=33 gid=-1[16..24)
    trying store in insn=31 gid=-1[24..32)
    trying store in insn=28 gid=-1[32..40)
    trying store in insn=21 gid=-1[128..136)
    trying store in insn=19 gid=-1[112..120)
    trying store in insn=17 gid=-1[96..104)
    trying store in insn=15 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
  mem: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)

   after canon_rtx address: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)
  gid=0 offset=0 
 processing const load gid=0[0..1)
removing from active insn=38 has store
removing from active insn=36 has store
removing from active insn=33 has store
removing from active insn=31 has store
removing from active insn=28 has store

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=1:1 offset = 112
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 112 [0x70])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=313
mems_found = 0, cannot_delete = true

**scanning insn=58
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=61

**scanning insn=63
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=8:8 offset = 64
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=66
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=67
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=12:12 offset = 40
 processing cselib store [40..48)
mems_found = 1, cannot_delete = false

**scanning insn=69

**scanning insn=70
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=12:12 offset = 128
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 128 [0x80])) [0 ints_list+0 S8 A128])
 processing cselib load against insn 67
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=287
mems_found = 0, cannot_delete = true

**scanning insn=84

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=2:2 offset = 128
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 128 [0x80])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=88
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=91
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=93
  mem: (plus:DI (mult:DI (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
        (const_int 4 [0x4]))
    (reg/v/f:DI 41 r12 [orig:61 ints ] [61]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
        (const_int 4 [0x4]))
    (reg/v/f:DI 41 r12 [orig:61 ints ] [61]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
        (const_int 2 [0x2]))
    (reg/v/f:DI 41 r12 [orig:61 ints ] [61]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
        (const_int 2 [0x2]))
    (reg/v/f:DI 41 r12 [orig:61 ints ] [61]))
  varying cselib base=9:4159 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=94

**scanning insn=96

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=102

**scanning insn=103

**scanning insn=105
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=1:1 offset = 112
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 112 [0x70])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=106
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=109

**scanning insn=111

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=117
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=2:2 offset = 96
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=118
  mem: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)

   after canon_rtx address: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)
  gid=5 offset=0 
 processing const load gid=5[0..1)

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=291
mems_found = 0, cannot_delete = true

**scanning insn=128

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=131
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 112 [0x70]))
  varying cselib base=2:2 offset = 112
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 112 [0x70])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=132
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
  mem: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)

   after canon_rtx address: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)
  gid=6 offset=0 
 processing const load gid=6[0..1)

**scanning insn=311
mems_found = 0, cannot_delete = true

**scanning insn=312
mems_found = 0, cannot_delete = true

**scanning insn=307
  mem: (plus:DI (mult:DI (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:69 variables ] [69]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:69 variables ] [69]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:69 variables ] [69]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:69 variables ] [69]))
  varying cselib base=12:4162 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=138

**scanning insn=140

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=294
mems_found = 0, cannot_delete = true

**scanning insn=151

**scanning insn=152
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=1:1 offset = 96
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=153
  mem: (plus:DI (reg/f:DI 0 ax [orig:148 memorctable ] [148])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:148 memorctable ] [148])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 0 ax [orig:148 memorctable ] [148])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:148 memorctable ] [148])
    (const_int 16 [0x10]))
  varying cselib base=3:3 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:148 memorctable ] [148])
        (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=155
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=1:1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=156
mems_found = 0, cannot_delete = true

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=160
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=1:1 offset = 64
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 155
mems_found = 0, cannot_delete = true

**scanning insn=161
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib load mem:(mem/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 40 [0x28])) [0 %sfp+40 S8 A64])
 processing cselib load against insn 155
mems_found = 0, cannot_delete = true

**scanning insn=162
  mem: (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>)

   after canon_rtx address: (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>)
  gid=7 offset=0 
 processing const load gid=7[0..1)

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=168
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 96 [0x60]))
  varying cselib base=1:1 offset = 96
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 96 [0x60])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=169
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=171

**scanning insn=173
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=4:4 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=4:4 offset = 64
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 173
mems_found = 0, cannot_delete = true

**scanning insn=179
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=4:4 offset = 40
 processing cselib load mem:(mem/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 40 [0x28])) [0 %sfp+40 S8 A64])
 processing cselib load against insn 173
mems_found = 0, cannot_delete = true

**scanning insn=180
  mem: (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>)

   after canon_rtx address: (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>)
  gid=8 offset=0 
 processing const load gid=8[0..1)

**scanning insn=186

**scanning insn=308
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=1:1 offset = 64
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=190
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
  mem: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)

   after canon_rtx address: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)
  gid=9 offset=0 
 processing const load gid=9[0..1)

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=310
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 40 [0x28]))
  varying cselib base=6:6 offset = 40
 processing cselib load mem:(mem/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 40 [0x28])) [0 %sfp+40 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=208
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=210

**scanning insn=212
  mem: (plus:DI (reg/f:DI 41 r12 [orig:121 D.11905 ] [121])
    (reg:DI 3 bx [orig:115 ivtmp.110 ] [115]))

   after canon_rtx address: (plus:DI (reg/f:DI 41 r12 [orig:121 D.11905 ] [121])
    (reg:DI 3 bx [orig:115 ivtmp.110 ] [115]))

   after cselib_expand address: (plus:DI (reg/f:DI 41 r12 [orig:121 D.11905 ] [121])
    (reg:DI 3 bx [orig:115 ivtmp.110 ] [115]))

   after canon_rtx address: (plus:DI (reg/f:DI 41 r12 [orig:121 D.11905 ] [121])
    (reg:DI 3 bx [orig:115 ivtmp.110 ] [115]))
  varying cselib base=3:70 offset = 0
 processing cselib load mem:(mem:SI (plus:DI (reg/f:DI 41 r12 [orig:121 D.11905 ] [121])
        (reg:DI 3 bx [orig:115 ivtmp.110 ] [115])) [0 MEM[base: _130, index: ivtmp.110_121, offset: 0B]+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=214
  mem: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)
  gid=10 offset=0 
 processing const load gid=10[0..1)

**scanning insn=217
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=5:5 offset = 48
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 start_element+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=219
mems_found = 0, cannot_delete = true

**scanning insn=221
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=5:5 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 tiles_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=222
  mem: (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>)
  gid=11 offset=0 
 processing const load gid=11[0..1)

**scanning insn=224

**scanning insn=225
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=241
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 128 [0x80]))
  varying cselib base=1:1 offset = 128
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 128 [0x80])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=242
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=243
mems_found = 0, cannot_delete = true

**scanning insn=244
mems_found = 0, cannot_delete = true

**scanning insn=245

**scanning insn=246
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=249
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=252

**scanning insn=254

**scanning insn=256
mems_found = 0, cannot_delete = true

**scanning insn=257
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=303
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = false

**scanning insn=329
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=330
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=4:4219 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=331
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=7:8293 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=332
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=10:12367 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=333
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=13:16441 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=334
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=16:20515 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=335
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=19:24589 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=336
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+0): n  p 
group 10(0+0): n  p 
group 11(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_LoadTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={30d,28u} r1={25d,7u} r2={24d,4u} r3={5d,9u} r4={27d,8u} r5={41d,22u} r6={9d,16u} r7={15d,103u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r17={37d,10u} r18={19d} r19={19d} r20={4e} r21={21d,2u} r22={21d,1u} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,3u} r38={23d,3u} r39={19d} r40={19d} r41={5d,8u} r42={4d,6u} r43={3d,7u} r44={4d,8u} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} 
;;    total ref usage 1218{969d,245u,4e} in 174{155 regular + 19 call} insns.
(note 3 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
(note 13 3 318 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 318 13 319 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) tilesInt.C:136 -1
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 319 318 320 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) tilesInt.C:136 -1
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 320 319 321 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) tilesInt.C:136 -1
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 321 320 322 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) tilesInt.C:136 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 322 321 323 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) tilesInt.C:136 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 323 322 324 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:136 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 324 323 325 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:136 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -152 [0xffffffffffffff68])))
            (nil))))
(note 325 324 5 2 NOTE_INSN_PROLOGUE_END)
(insn 5 325 6 2 (set (reg/v/f:DI 5 di [orig:125 args ] [125])
        (reg:DI 4 si [ args ])) tilesInt.C:136 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 6 5 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 6 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 tiles_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:137 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 16 15 17 2 (var_location:DI the_tiles (const_int 0 [0])) tilesInt.C:138 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:141 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:142 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:144 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 20 19 21 2 (var_location:DI variables (const_int 0 [0])) tilesInt.C:145 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:147 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 22 21 23 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:148 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:149 -1
     (nil))
(note 24 23 25 2 NOTE_INSN_DELETED)
(note 25 24 314 2 NOTE_INSN_DELETED)
(insn 314 25 315 2 (set (reg/f:DI 2 cx [128])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 80 [0x50]))) tilesInt.C:156 267 {*leadi}
     (nil))
(insn 315 314 28 2 (set (reg/f:DI 0 ax [129])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) tilesInt.C:156 267 {*leadi}
     (nil))
(insn 28 315 29 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0  S8 A64])
        (reg/f:DI 0 ax [129])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [129])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 29 28 31 2 (set (reg:DI 1 dx [131])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 31 29 316 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0  S8 A64])
        (reg:DI 1 dx [131])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 316 31 33 2 (set (reg/f:DI 0 ax [132])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) tilesInt.C:156 267 {*leadi}
     (nil))
(insn 33 316 36 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0  S8 A64])
        (reg/f:DI 0 ax [132])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [132])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 36 33 317 2 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg:DI 1 dx [131])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 317 36 38 2 (set (reg/f:DI 0 ax [135])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 96 [0x60]))) tilesInt.C:156 267 {*leadi}
     (nil))
(insn 38 317 39 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 0 ax [135])) tilesInt.C:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [135])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 39 38 40 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 7 sp)
            (const_int 64 [0x40]))) tilesInt.C:156 267 {*leadi}
     (nil))
(insn 40 39 44 2 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) tilesInt.C:156 267 {*leadi}
     (nil))
(insn 44 40 46 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b97208f5ab0 *.LC0>)) tilesInt.C:156 87 {*movdi_internal_rex64}
     (nil))
(insn 46 44 47 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:156 91 {*movqi_internal}
     (nil))
(call_insn 47 46 48 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 40 [0x28]))) tilesInt.C:156 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [0  S8 A64]))
                                            (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                            (const_int 24 [0x18])) [0  S8 A64]))
                                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                                (const_int 32 [0x20])) [0  S8 A64]))
                                                    (nil))))))))))))))
(insn 48 47 12 2 (set (reg:SI 1 dx [orig:64 D.11898 ] [64])
        (reg:SI 0 ax)) tilesInt.C:156 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 48 49 2 (set (reg/f:DI 0 ax [orig:63 D.11897 ] [63])
        (const_int 0 [0])) tilesInt.C:157 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 49 12 50 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:64 D.11898 ] [64])
            (const_int 0 [0]))) tilesInt.C:152 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:64 D.11898 ] [64])
        (nil)))
(jump_insn 50 49 51 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 279)
            (pc))) tilesInt.C:152 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 279)
;;  succ:       22 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(note 51 50 53 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 53 51 54 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 variables_list+0 S8 A128])) tilesInt.C:160 87 {*movdi_internal_rex64}
     (nil))
(call_insn 54 53 313 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:160 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 313 54 58 3 (set (reg:DI 5 di [orig:138 D.11900 ] [138])
        (mult:DI (reg:DI 0 ax [orig:66 D.11899 ] [66])
            (const_int 4 [0x4]))) tilesInt.C:160 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:66 D.11899 ] [66])
        (nil)))
(call_insn 58 313 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:160 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 3 bx [orig:69 variables ] [69])
        (reg:DI 0 ax)) tilesInt.C:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 139)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI variables (reg/v/f:DI 3 bx [orig:69 variables ] [69])) tilesInt.C:160 -1
     (nil))
(note 62 61 63 3 NOTE_INSN_DELETED)
(insn 63 62 64 3 (set (reg:DI 5 di [orig:140 D.11900 ] [140])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 64 [0x40])) [0 num_tilings+0 S4 A128]))) tilesInt.C:161 149 {*extendsidi2_rex64}
     (nil))
(insn 64 63 66 3 (parallel [
            (set (reg:DI 5 di [orig:142 D.11900 ] [142])
                (ashift:DI (reg:DI 5 di [orig:140 D.11900 ] [140])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:161 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 66 64 67 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:161 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 67 66 69 3 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 %sfp+40 S8 A64])
        (reg:DI 0 ax)) tilesInt.C:161 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 143)
            (nil))))
(debug_insn 69 67 70 3 (var_location:DI the_tiles (mem/c:DI (plus:DI (reg/f:DI 7 sp)
            (const_int 40 [0x28])) [0 %sfp+40 S8 A64])) tilesInt.C:161 -1
     (nil))
(insn 70 69 71 3 (set (reg/f:DI 5 di [orig:74 ints_list.27 ] [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 ints_list+0 S8 A128])) tilesInt.C:163 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:74 ints_list.27 ] [74])
            (const_int 0 [0]))) tilesInt.C:163 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 72 71 73 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) tilesInt.C:163 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 262)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              21 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 73 72 75 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 73 77 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:163 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 77 75 78 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 0 ax [orig:75 D.11899 ] [75])
            (const_int 0 [0]))) tilesInt.C:163 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:75 D.11899 ] [75])
        (nil)))
(jump_insn 78 77 286 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) tilesInt.C:163 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 238)
;;  succ:       19 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(note 286 78 287 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 287 286 288 5 (set (pc)
        (label_ref 262)) 650 {jump}
     (nil)
 -> 262)
;;  succ:       21 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 288 287 259)
;; basic block 6, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              20 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 259 288 83 6 75 "" [2 uses])
(note 83 259 84 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 84 83 86 6 (var_location:SI i (reg:SI 6 bp [orig:88 ivtmp.118 ] [88])) -1
     (nil))
(insn 86 84 87 6 (set (reg:DI 4 si)
        (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])) tilesInt.C:168 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 ints_list+0 S8 A128])) tilesInt.C:168 87 {*movdi_internal_rex64}
     (nil))
(call_insn 88 87 90 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:168 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 90 88 91 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:82 D.11897 ] [82])) tilesInt.C:168 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 D.11897 ] [82])
        (nil)))
(call_insn 91 90 93 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:168 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 93 91 94 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 41 r12 [orig:61 ints ] [61])) [0 MEM[base: ints_45, index: ivtmp.118_115, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:83 D.11899 ] [83])) tilesInt.C:168 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:83 D.11899 ] [83])
        (nil)))
(debug_insn 94 93 96 6 (var_location:SI D#8 (plus:SI (reg:SI 6 bp [orig:88 ivtmp.118 ] [88])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 96 94 97 6 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))
(insn 97 96 99 6 (parallel [
            (set (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
                (plus:DI (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 97 100 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 42 r13 [orig:62 num_ints ] [62])
            (reg:SI 6 bp [orig:88 ivtmp.118 ] [88]))) tilesInt.C:167 7 {*cmpsi_1}
     (nil))
(jump_insn 100 99 255 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) tilesInt.C:167 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 259)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              21 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 5 [di] 6 [bp] 17 [flags] 43 [r14] 44 [r15]
;; live  kill	
(code_label 255 100 101 7 74 "" [2 uses])
(note 101 255 102 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 102 101 103 7 (var_location:SI num_ints (reg/v:SI 42 r13 [orig:62 num_ints ] [62])) -1
     (nil))
(debug_insn 103 102 105 7 (var_location:DI ints (reg/v/f:DI 41 r12 [orig:61 ints ] [61])) -1
     (nil))
(insn 105 103 106 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 variables_list+0 S8 A128])) tilesInt.C:171 87 {*movdi_internal_rex64}
     (nil))
(call_insn 106 105 107 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:171 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 107 106 108 7 (set (reg:DI 43 r14 [orig:86 D.11899 ] [86])
        (reg:DI 0 ax)) tilesInt.C:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 108 107 109 7 (set (reg/v:SI 6 bp [orig:87 num_variables ] [87])
        (reg:SI 43 r14 [orig:86 D.11899 ] [86])) tilesInt.C:171 89 {*movsi_internal}
     (nil))
(debug_insn 109 108 111 7 (var_location:SI num_variables (reg:SI 43 r14 [orig:86 D.11899 ] [86])) tilesInt.C:171 -1
     (nil))
(debug_insn 111 109 10 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 10 111 112 7 (set (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
        (const_int 0 [0])) tilesInt.C:173 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 112 10 113 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 43 r14 [orig:86 D.11899 ] [86])
            (const_int 0 [0]))) tilesInt.C:173 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 142 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) tilesInt.C:173 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 281)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 142 113 114 8 68 "" [1 uses])
(note 114 142 116 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 116 114 117 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:176 87 {*movdi_internal_rex64}
     (nil))
(insn 117 116 118 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 memorctable+0 S8 A128])) tilesInt.C:176 87 {*movdi_internal_rex64}
     (nil))
(call_insn 118 117 120 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:176 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 120 118 121 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 D.11898 ] [96])
            (const_int 0 [0]))) tilesInt.C:176 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:96 D.11898 ] [96])
        (nil)))
(jump_insn 121 120 289 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) tilesInt.C:176 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 149)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 289 121 291 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 291 289 292 9 (set (pc)
        (label_ref 290)) 650 {jump}
     (nil)
 -> 290)
;;  succ:       13 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 292 291 281)
;; basic block 10, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 22 [xmm1] 44 [r15]
;; live  kill	 17 [flags]
(code_label 281 292 280 10 80 "" [2 uses])
(note 280 281 128 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 128 280 130 10 (var_location:SI i (reg:SI 44 r15 [orig:106 ivtmp.113 ] [106])) -1
     (nil))
(insn 130 128 131 10 (set (reg:DI 4 si)
        (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])) tilesInt.C:174 87 {*movdi_internal_rex64}
     (nil))
(insn 131 130 132 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [0 variables_list+0 S8 A128])) tilesInt.C:174 87 {*movdi_internal_rex64}
     (nil))
(call_insn 132 131 134 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:174 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 134 132 135 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:92 D.11897 ] [92])) tilesInt.C:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 D.11897 ] [92])
        (nil)))
(call_insn 135 134 311 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:174 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 311 135 312 10 (set (reg:V2DF 21 xmm0 [orig:93 D.11901 ] [93])
        (vec_duplicate:V2DF (reg:DF 21 xmm0 [orig:93 D.11901 ] [93]))) tilesInt.C:174 1459 {vec_dupv2df}
     (nil))
(insn 312 311 307 10 (set (reg:V4SF 22 xmm1 [171])
        (vec_concat:V4SF (float_truncate:V2SF (reg:V2DF 21 xmm0 [orig:93 D.11901 ] [93]))
            (const_vector:V2SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ]))) tilesInt.C:174 1393 {*sse2_cvtpd2ps}
     (expr_list:REG_DEAD (reg:V2DF 21 xmm0 [orig:93 D.11901 ] [93])
        (nil)))
(insn 307 312 138 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 3 bx [orig:69 variables ] [69])) [0 MEM[base: variables_29, index: ivtmp.113_116, step: 4, offset: 0B]+0 S4 A32])
        (reg:SF 22 xmm1 [171])) tilesInt.C:174 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [171])
        (nil)))
(debug_insn 138 307 140 10 (var_location:SI D#7 (plus:SI (reg:SI 44 r15 [orig:106 ivtmp.113 ] [106])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 140 138 141 10 (var_location:SI i (debug_expr:SI D#7)) -1
     (nil))
(insn 141 140 143 10 (parallel [
            (set (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
                (plus:DI (reg:DI 44 r15 [orig:106 ivtmp.113 ] [106])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 141 144 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 6 bp [orig:87 num_variables ] [87])
            (reg:SI 44 r15 [orig:106 ivtmp.113 ] [106]))) tilesInt.C:173 7 {*cmpsi_1}
     (nil))
(jump_insn 144 143 293 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) tilesInt.C:173 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 281)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 293 144 294 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 294 293 295 11 (set (pc)
        (label_ref 142)) 650 {jump}
     (nil)
 -> 142)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 295 294 149)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 149 295 150 12 66 "" [1 uses])
(note 150 149 151 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 151 150 152 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:178 -1
     (nil))
(insn 152 151 153 12 (set (reg/f:DI 0 ax [orig:148 memorctable ] [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 memorctable+0 S8 A128])) tilesInt.C:178 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 153 152 155 12 (set (reg/f:DI 1 dx [orig:149 MEM[(struct CollisionTable *)memorctable.29_77].ct ] [149])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:148 memorctable ] [148])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.29_77].ct+0 S8 A64])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:148 memorctable ] [148])
        (nil)))
(insn 155 153 156 12 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 42 r13 [orig:62 num_ints ] [62])) tilesInt.C:179 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:62 num_ints ] [62])
        (nil)))
(insn 156 155 157 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 41 r12 [orig:61 ints ] [61])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:61 ints ] [61])
        (nil)))
(insn 157 156 158 12 (set (reg:SI 37 r8)
        (reg:SI 43 r14 [orig:86 D.11899 ] [86])) tilesInt.C:179 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:86 D.11899 ] [86])
        (nil)))
(insn 158 157 160 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:69 variables ] [69])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:69 variables ] [69])
        (nil)))
(insn 160 158 161 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])) tilesInt.C:179 89 {*movsi_internal}
     (nil))
(insn 161 160 162 12 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 %sfp+40 S8 A64])) tilesInt.C:179 87 {*movdi_internal_rex64}
     (nil))
(call_insn 162 161 296 12 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:179 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
(jump_insn 296 162 297 12 (set (pc)
        (label_ref 181)) 650 {jump}
     (nil)
 -> 181)
;;  succ:       14 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 297 296 290)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 290 297 166 13 83 "" [1 uses])
(note 166 290 168 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 168 166 169 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 memorctable+0 S8 A128])) tilesInt.C:183 87 {*movdi_internal_rex64}
     (nil))
(call_insn 169 168 171 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:183 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(debug_insn 171 169 173 13 (var_location:SI memory_size (reg:SI 0 ax [orig:101 D.11899 ] [101])) tilesInt.C:183 -1
     (nil))
(insn 173 171 174 13 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 42 r13 [orig:62 num_ints ] [62])) tilesInt.C:184 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:62 num_ints ] [62])
        (nil)))
(insn 174 173 175 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 41 r12 [orig:61 ints ] [61])) tilesInt.C:184 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:61 ints ] [61])
        (nil)))
(insn 175 174 176 13 (set (reg:SI 37 r8)
        (reg:SI 43 r14 [orig:86 D.11899 ] [86])) tilesInt.C:184 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:86 D.11899 ] [86])
        (nil)))
(insn 176 175 177 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:69 variables ] [69])) tilesInt.C:184 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:69 variables ] [69])
        (nil)))
(insn 177 176 178 13 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:101 D.11899 ] [101])) tilesInt.C:184 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:101 D.11899 ] [101])
        (nil)))
(insn 178 177 179 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])) tilesInt.C:184 89 {*movsi_internal}
     (nil))
(insn 179 178 180 13 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 %sfp+40 S8 A64])) tilesInt.C:184 87 {*movdi_internal_rex64}
     (nil))
(call_insn 180 179 181 13 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:184 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 181 180 182 14 70 "" [1 uses])
(note 182 181 183 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 183 182 184 14 NOTE_INSN_DELETED)
(note 184 183 186 14 NOTE_INSN_DELETED)
(debug_insn 186 184 308 14 (var_location:SI i (plus:SI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 308 186 187 14 (set (reg/v:SI 0 ax [orig:105 i ] [105])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 num_tilings+0 S4 A128])) tilesInt.C:187 89 {*movsi_internal}
     (nil))
(insn 187 308 188 14 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg/v:SI 0 ax [orig:105 i ] [105])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg/v:SI 0 ax [orig:105 i ] [105])
                (plus:SI (reg/v:SI 0 ax [orig:105 i ] [105])
                    (const_int -1 [0xffffffffffffffff])))
        ]) tilesInt.C:187 281 {*addsi_2}
     (nil))
(jump_insn 188 187 226 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) tilesInt.C:187 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 196)
;;  succ:       16 [91.0%] 
;;              15 [9.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [9.0%]  (FALLTHRU)
;;              18 [100.0%]  (LOOP_EXIT)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 226 188 189 15 72 "" [1 uses])
(note 189 226 190 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b97208f5b48 *.LC1>)) tilesInt.C:189 87 {*movdi_internal_rex64}
     (nil))
(insn 191 190 192 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:189 91 {*movqi_internal}
     (nil))
(call_insn 192 191 298 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:189 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(jump_insn 298 192 299 15 (set (pc)
        (label_ref 279)) 650 {jump}
     (nil)
 -> 279)
;;  succ:       22 [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 299 298 196)
;; basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [91.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]
(code_label 196 299 197 16 71 "" [1 uses])
(note 197 196 199 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 199 197 200 16 (set (reg:DI 6 bp [157])
        (zero_extend:DI (reg/v:SI 0 ax [orig:105 i ] [105]))) 139 {*zero_extendsidi2_rex64}
     (nil))
(note 200 199 202 16 NOTE_INSN_DELETED)
(insn 202 200 203 16 (set (reg:DI 6 bp [157])
        (not:DI (reg:DI 6 bp [157]))) 496 {*one_cmpldi2_1}
     (nil))
(insn 203 202 206 16 (parallel [
            (set (reg:DI 6 bp [158])
                (ashift:DI (reg:DI 6 bp [157])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 206 203 207 16 (set (reg:DI 0 ax [orig:159 D.11903 ] [159])
        (sign_extend:DI (reg/v:SI 0 ax [orig:105 i ] [105]))) 149 {*extendsidi2_rex64}
     (nil))
(note 207 206 310 16 NOTE_INSN_DELETED)
(insn 310 207 208 16 (set (reg/v/f:DI 2 cx [orig:73 the_tiles ] [73])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [0 %sfp+40 S8 A64])) 87 {*movdi_internal_rex64}
     (nil))
(insn 208 310 11 16 (set (reg/f:DI 41 r12 [orig:121 D.11905 ] [121])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:159 D.11903 ] [159])
                (const_int 4 [0x4]))
            (reg/v/f:DI 2 cx [orig:73 the_tiles ] [73]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:73 the_tiles ] [73])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:159 D.11903 ] [159])
            (nil))))
(insn 11 208 230 16 (set (reg:DI 3 bx [orig:115 ivtmp.110 ] [115])
        (const_int 0 [0])) tilesInt.C:187 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 17, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [91.0%]  (DFS_BACK)
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 230 11 209 17 73 "" [1 uses])
(note 209 230 210 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 210 209 211 17 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(note 211 210 212 17 NOTE_INSN_DELETED)
(insn 212 211 214 17 (set (reg:DI 5 di [orig:161 D.11899 ] [161])
        (sign_extend:DI (mem:SI (plus:DI (reg/f:DI 41 r12 [orig:121 D.11905 ] [121])
                    (reg:DI 3 bx [orig:115 ivtmp.110 ] [115])) [0 MEM[base: _130, index: ivtmp.110_121, offset: 0B]+0 S4 A32]))) tilesInt.C:188 149 {*extendsidi2_rex64}
     (nil))
(call_insn 214 212 216 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:188 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(note 216 214 217 17 NOTE_INSN_DELETED)
(insn 217 216 219 17 (set (reg:DI 4 si [orig:163 D.11899 ] [163])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])) [0 start_element+0 S4 A128]))) tilesInt.C:188 149 {*extendsidi2_rex64}
     (nil))
(insn 219 217 221 17 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:110 D.11897 ] [110])) tilesInt.C:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:110 D.11897 ] [110])
        (nil)))
(insn 221 219 222 17 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 tiles_list+0 S8 A128])) tilesInt.C:188 87 {*movdi_internal_rex64}
     (nil))
(call_insn 222 221 224 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Insert") [flags 0x41]  <function_decl 0x2b9720705f00 PyList_Insert>) [0 PyList_Insert S1 A8])
            (const_int 0 [0]))) tilesInt.C:188 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(debug_insn 224 222 225 17 (var_location:SI i (debug_expr:SI D#6)) -1
     (nil))
(insn 225 224 227 17 (parallel [
            (set (reg:DI 3 bx [orig:115 ivtmp.110 ] [115])
                (plus:DI (reg:DI 3 bx [orig:115 ivtmp.110 ] [115])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 227 225 228 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 3 bx [orig:115 ivtmp.110 ] [115])
            (reg:DI 6 bp [158]))) tilesInt.C:187 8 {*cmpdi_1}
     (nil))
(jump_insn 228 227 300 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 230)
            (pc))) tilesInt.C:187 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 230)
;;  succ:       17 [91.0%]  (DFS_BACK)
;;              18 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 [9.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 300 228 301 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 301 300 302 18 (set (pc)
        (label_ref 226)) 650 {jump}
     (nil)
 -> 226)
;;  succ:       15 [100.0%]  (LOOP_EXIT)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 302 301 238)
;; basic block 19, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 6 [bp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(code_label 238 302 239 19 63 "" [1 uses])
(note 239 238 241 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 241 239 242 19 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [0 ints_list+0 S8 A128])) tilesInt.C:165 87 {*movdi_internal_rex64}
     (nil))
(call_insn 242 241 243 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:165 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 19 (set (reg:DI 6 bp [orig:77 D.11899 ] [77])
        (reg:DI 0 ax)) tilesInt.C:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 244 243 245 19 (set (reg/v:SI 42 r13 [orig:62 num_ints ] [62])
        (reg:SI 6 bp [orig:77 D.11899 ] [77])) tilesInt.C:165 89 {*movsi_internal}
     (nil))
(debug_insn 245 244 246 19 (var_location:SI num_ints (reg:SI 6 bp [orig:77 D.11899 ] [77])) tilesInt.C:165 -1
     (nil))
(insn 246 245 247 19 (set (reg:DI 5 di [orig:168 D.11900 ] [168])
        (sign_extend:DI (reg:SI 6 bp [orig:77 D.11899 ] [77]))) tilesInt.C:166 149 {*extendsidi2_rex64}
     (nil))
(insn 247 246 249 19 (parallel [
            (set (reg:DI 5 di [orig:169 D.11900 ] [169])
                (ashift:DI (reg:DI 5 di [orig:168 D.11900 ] [168])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:166 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 249 247 250 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:166 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 250 249 252 19 (set (reg/v/f:DI 41 r12 [orig:61 ints ] [61])
        (reg:DI 0 ax)) tilesInt.C:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 170)
            (nil))))
(debug_insn 252 250 254 19 (var_location:DI ints (reg/v/f:DI 41 r12 [orig:61 ints ] [61])) tilesInt.C:166 -1
     (nil))
(debug_insn 254 252 256 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 256 254 257 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 6 bp [orig:77 D.11899 ] [77])
            (const_int 0 [0]))) tilesInt.C:167 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:77 D.11899 ] [77])
        (nil)))
(jump_insn 257 256 258 19 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) tilesInt.C:167 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 255)
;;  succ:       20 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 20, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [91.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp]
;; live  kill	
(note 258 257 7 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 7 258 303 20 (set (reg:DI 6 bp [orig:88 ivtmp.118 ] [88])
        (const_int 0 [0])) tilesInt.C:167 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 303 7 304 20 (set (pc)
        (label_ref 259)) 650 {jump}
     (nil)
 -> 259)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

(barrier 304 303 262)
;; basic block 21, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 41 [r12] 42 [r13]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 41 [r12] 42 [r13]
;; live  kill	
(code_label 262 304 263 21 62 "" [2 uses])
(note 263 262 8 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 8 263 9 21 (set (reg/v:SI 42 r13 [orig:62 num_ints ] [62])
        (const_int 0 [0])) tilesInt.C:149 89 {*movsi_internal}
     (nil))
(insn 9 8 305 21 (set (reg/v/f:DI 41 r12 [orig:61 ints ] [61])
        (const_int 0 [0])) tilesInt.C:148 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 305 9 306 21 (set (pc)
        (label_ref 255)) 650 {jump}
     (nil)
 -> 255)
;;  succ:       7 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 306 305 279)
;; basic block 22, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 21, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              15 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 279 306 274 22 79 "" [2 uses])
(note 274 279 270 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 270 274 328 22 (use (reg/i:DI 0 ax)) tilesInt.C:190 -1
     (nil))
(note 328 270 329 22 NOTE_INSN_EPILOGUE_BEG)
(insn/f 329 328 330 22 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 152 [0x98])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:190 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 152 [0x98])))
            (nil))))
(insn/f 330 329 331 22 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:190 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 331 330 332 22 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:190 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 332 331 333 22 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:190 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 333 332 334 22 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:190 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 334 333 335 22 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:190 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 335 334 336 22 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:190 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 336 335 337 22 (simple_return) tilesInt.C:190 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 337 336 0)

;; Function PyObject* tiles_GetTiles(PyObject*, PyObject*) (_ZL14tiles_GetTilesP7_objectS0_, funcdef_no=153, decl_uid=11285, cgraph_uid=153)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 24 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 25 (  1.1)

**scanning insn=299
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=300
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=3:8117 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=301
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=4:12175 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=302
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=5:16233 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=303
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=6:20291 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=304
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=7:24349 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=305
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=16

**scanning insn=17
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=8:28311 offset = 48
 processing cselib store [48..56)
mems_found = 1, cannot_delete = false

**scanning insn=18

**scanning insn=19
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=8:28311 offset = 64
 processing cselib store [64..72)
    trying store in insn=17 gid=-1[48..56)
mems_found = 1, cannot_delete = false

**scanning insn=20
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=8:28311 offset = 80
 processing cselib store [80..88)
    trying store in insn=19 gid=-1[64..72)
    trying store in insn=17 gid=-1[48..56)
mems_found = 1, cannot_delete = false

**scanning insn=21

**scanning insn=22

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=297
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 8 [0x8]))
  varying cselib base=8:28311 offset = 8
 processing cselib store [8..16)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=19 gid=-1[64..72)
    trying store in insn=17 gid=-1[48..56)
mems_found = 1, cannot_delete = false

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=30
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=8:28311 offset = 0
 processing cselib store [0..8)
    trying store in insn=27 gid=-1[8..16)
    trying store in insn=20 gid=-1[80..88)
    trying store in insn=19 gid=-1[64..72)
    trying store in insn=17 gid=-1[48..56)
mems_found = 1, cannot_delete = false

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)

   after canon_rtx address: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)
  gid=0 offset=0 
 processing const load gid=0[0..1)
removing from active insn=30 has store
removing from active insn=27 has store

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=45
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=1:1 offset = 64
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=46
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=295
mems_found = 0, cannot_delete = true

**scanning insn=50
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=53

**scanning insn=55
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=8:8 offset = 32
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=58
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=61

**scanning insn=62
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=13:13 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=267
mems_found = 0, cannot_delete = true

**scanning insn=76

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=2:2 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=80
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=85
  mem: (plus:DI (mult:DI (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
        (const_int 4 [0x4]))
    (reg/v/f:DI 42 r13 [orig:60 ints ] [60]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
        (const_int 4 [0x4]))
    (reg/v/f:DI 42 r13 [orig:60 ints ] [60]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
        (const_int 2 [0x2]))
    (reg/v/f:DI 42 r13 [orig:60 ints ] [60]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
        (const_int 2 [0x2]))
    (reg/v/f:DI 42 r13 [orig:60 ints ] [60]))
  varying cselib base=9:4159 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=86

**scanning insn=88

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=94

**scanning insn=95

**scanning insn=97
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=1:1 offset = 64
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=291
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))
  varying cselib base=4:4 offset = 24
 processing cselib store [24..32)
mems_found = 1, cannot_delete = false

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=101

**scanning insn=103

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=2:2 offset = 48
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=110
  mem: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)

   after canon_rtx address: (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>)
  gid=5 offset=0 
 processing const load gid=5[0..1)

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=120

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=123
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 64 [0x40]))
  varying cselib base=2:2 offset = 64
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 64 [0x40])) [0 variables_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=124
  mem: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
  mem: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)

   after canon_rtx address: (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>)
  gid=6 offset=0 
 processing const load gid=6[0..1)

**scanning insn=293
mems_found = 0, cannot_delete = true

**scanning insn=294
mems_found = 0, cannot_delete = true

**scanning insn=289
  mem: (plus:DI (mult:DI (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
        (const_int 4 [0x4]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
        (const_int 2 [0x2]))
    (reg/v/f:DI 3 bx [orig:68 variables ] [68]))
  varying cselib base=12:4162 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=130

**scanning insn=132

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=274
mems_found = 0, cannot_delete = true

**scanning insn=143

**scanning insn=144
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=145
  mem: (plus:DI (reg/f:DI 0 ax [orig:139 memorctable ] [139])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:139 memorctable ] [139])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 0 ax [orig:139 memorctable ] [139])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:139 memorctable ] [139])
    (const_int 16 [0x10]))
  varying cselib base=3:3 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:139 memorctable ] [139])
        (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=147
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=1:1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=149
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 24 [0x18])) [0 %sfp+8 S4 A64])
 processing cselib load against insn 147
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=152
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 147
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
  mem: (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>)

   after canon_rtx address: (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>)
  gid=7 offset=0 
 processing const load gid=7[0..1)

**scanning insn=276
mems_found = 0, cannot_delete = true

**scanning insn=160
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 48 [0x30])) [0 memorctable+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=161
  mem: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=163

**scanning insn=165
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=4:4 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 24 [0x18]))
  varying cselib base=4:4 offset = 24
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 24 [0x18])) [0 %sfp+8 S4 A64])
 processing cselib load against insn 165
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=170
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=4:4 offset = 32
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
 processing cselib load against insn 165
mems_found = 0, cannot_delete = true

**scanning insn=171
mems_found = 0, cannot_delete = true

**scanning insn=172
  mem: (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>)

   after canon_rtx address: (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>)
  gid=8 offset=0 
 processing const load gid=8[0..1)

**scanning insn=176
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=178
  mem: (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>)

   after canon_rtx address: (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>)
  gid=9 offset=0 
 processing const load gid=9[0..1)

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=180

**scanning insn=181
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=5:5 offset = 32
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=185

**scanning insn=187
  mem: (plus:DI (mult:DI (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
        (const_int 4 [0x4]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))

   after canon_rtx address: (plus:DI (mult:DI (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
        (const_int 4 [0x4]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))

   after cselib_expand address: (plus:DI (ashift:DI (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
        (const_int 2 [0x2]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))

   after canon_rtx address: (plus:DI (ashift:DI (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
        (const_int 2 [0x2]))
    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72]))
  varying cselib base=4:4154 offset = 0
 processing cselib load mem:(mem:SI (plus:DI (mult:DI (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
            (const_int 4 [0x4]))
        (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) [0 MEM[base: the_tiles_33, index: ivtmp.125_122, step: 4, offset: 0B]+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=189
  mem: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)
  gid=10 offset=0 
 processing const load gid=10[0..1)

**scanning insn=190
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=194
  mem: (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>)

   after canon_rtx address: (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>)
  gid=11 offset=0 
 processing const load gid=11[0..1)

**scanning insn=292
mems_found = 0, cannot_delete = true

**scanning insn=197

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=199
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=12:12 offset = 32
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=279
mems_found = 0, cannot_delete = true

**scanning insn=213
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 80 [0x50]))
  varying cselib base=1:1 offset = 80
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 80 [0x50])) [0 ints_list+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=214
  mem: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)

   after canon_rtx address: (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=216
mems_found = 0, cannot_delete = true

**scanning insn=217

**scanning insn=218
mems_found = 0, cannot_delete = true

**scanning insn=219
mems_found = 0, cannot_delete = true

**scanning insn=221
  mem: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)

   after canon_rtx address: (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=224

**scanning insn=226

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=229
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=285
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=287
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=242
mems_found = 0, cannot_delete = false

**scanning insn=310
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=311
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=5:4172 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=312
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=8:8246 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=313
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=11:12320 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=314
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=14:16394 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=315
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=17:20468 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=316
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=20:24542 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=317
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+0): n  p 
group 10(0+0): n  p 
group 11(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* tiles_GetTiles(PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={24d,24u} r1={25d,6u} r2={23d,3u} r3={5d,11u} r4={27d,8u} r5={41d,22u} r6={3d,6u} r7={15d,90u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r17={36d,10u} r18={19d} r19={19d} r20={2e} r21={21d,2u} r22={21d,1u} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={23d,4u} r38={23d,3u} r39={19d} r40={19d} r41={8d,15u} r42={4d,7u} r43={4d,6u} r44={4d,8u} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} 
;;    total ref usage 1187{959d,226u,2e} in 160{141 regular + 19 call} insns.
(note 2 0 14 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1145, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	 17 [flags]
(note 14 2 299 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 299 14 300 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) tilesInt.C:193 -1
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 300 299 301 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) tilesInt.C:193 -1
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 301 300 302 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) tilesInt.C:193 -1
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 302 301 303 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) tilesInt.C:193 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 303 302 304 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) tilesInt.C:193 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 304 303 305 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:193 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 305 304 306 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -104 [0xffffffffffffff98])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:193 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -104 [0xffffffffffffff98])))
            (nil))))
(note 306 305 4 2 NOTE_INSN_PROLOGUE_END)
(insn 4 306 5 2 (set (reg/v/f:DI 5 di [orig:120 args ] [120])
        (reg:DI 4 si [ args ])) tilesInt.C:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 16 5 17 2 (var_location:DI tiles_list (const_int 0 [0])) tilesInt.C:194 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 memorctable+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:197 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 18 17 19 2 (var_location:DI ct (const_int 0 [0])) tilesInt.C:198 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 variables_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:200 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 ints_list+0 S8 A128])
        (const_int 0 [0])) tilesInt.C:203 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 21 20 22 2 (var_location:DI ints (const_int 0 [0])) tilesInt.C:204 -1
     (nil))
(debug_insn 22 21 23 2 (var_location:SI num_ints (const_int 0 [0])) tilesInt.C:205 -1
     (nil))
(note 23 22 296 2 NOTE_INSN_DELETED)
(insn 296 23 297 2 (set (reg/f:DI 2 cx [122])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) tilesInt.C:210 267 {*leadi}
     (nil))
(insn 297 296 298 2 (set (reg/f:DI 1 dx [123])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) tilesInt.C:210 267 {*leadi}
     (nil))
(insn 298 297 27 2 (set (reg/f:DI 0 ax [124])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 80 [0x50]))) tilesInt.C:210 267 {*leadi}
     (nil))
(insn 27 298 28 2 (set (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0  S8 A64])
        (reg/f:DI 0 ax [124])) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [124])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 28 27 30 2 (set (reg:DI 37 r8 [126])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:210 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyList_Type") [flags 0x40]  <var_decl 0x2b97207048e8 PyList_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])
        (nil)))
(insn 30 28 31 2 (set (mem:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg:DI 37 r8 [126])) tilesInt.C:210 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 36 2 (set (reg:DI 38 r9)
        (plus:DI (reg/f:DI 7 sp)
            (const_int 64 [0x40]))) tilesInt.C:210 267 {*leadi}
     (nil))
(insn 36 31 38 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b97209cfa18 *.LC3>)) tilesInt.C:210 87 {*movdi_internal_rex64}
     (nil))
(insn 38 36 39 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:210 91 {*movqi_internal}
     (nil))
(call_insn 39 38 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 16 [0x10]))) tilesInt.C:210 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (plus:DI (reg/f:DI 7 sp)
                                                    (const_int 8 [0x8])) [0  S8 A64]))
                                        (nil)))))))))))
(insn 11 39 41 2 (set (reg/f:DI 41 r12 [orig:62 D.11929 ] [62])
        (const_int 0 [0])) tilesInt.C:211 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 41 11 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:63 D.11930 ] [63])
            (const_int 0 [0]))) tilesInt.C:208 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.11930 ] [63])
        (nil)))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) tilesInt.C:208 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 259)
;;  succ:       23 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 7 [sp] 41 [r12]
;; live  out 	 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(note 43 42 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 45 43 46 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 variables_list+0 S8 A128])) tilesInt.C:213 87 {*movdi_internal_rex64}
     (nil))
(call_insn 46 45 295 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:213 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 295 46 50 3 (set (reg:DI 5 di [orig:129 D.11932 ] [129])
        (mult:DI (reg:DI 0 ax [orig:65 D.11931 ] [65])
            (const_int 4 [0x4]))) tilesInt.C:213 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.11931 ] [65])
        (nil)))
(call_insn 50 295 51 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:213 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 51 50 53 3 (set (reg/v/f:DI 3 bx [orig:68 variables ] [68])
        (reg:DI 0 ax)) tilesInt.C:213 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 130)
            (nil))))
(debug_insn 53 51 54 3 (var_location:DI variables (reg/v/f:DI 3 bx [orig:68 variables ] [68])) tilesInt.C:213 -1
     (nil))
(note 54 53 55 3 NOTE_INSN_DELETED)
(insn 55 54 56 3 (set (reg:DI 5 di [orig:131 D.11932 ] [131])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])) [0 num_tilings+0 S4 A128]))) tilesInt.C:214 149 {*extendsidi2_rex64}
     (nil))
(insn 56 55 58 3 (parallel [
            (set (reg:DI 5 di [orig:133 D.11932 ] [133])
                (ashift:DI (reg:DI 5 di [orig:131 D.11932 ] [131])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:214 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 58 56 59 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:214 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 61 3 (set (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])
        (reg:DI 0 ax)) tilesInt.C:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 134)
            (nil))))
(debug_insn 61 59 62 3 (var_location:DI the_tiles (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) tilesInt.C:214 -1
     (nil))
(insn 62 61 63 3 (set (reg/f:DI 5 di [orig:73 ints_list.37 ] [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 ints_list+0 S8 A128])) tilesInt.C:215 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:73 ints_list.37 ] [73])
            (const_int 0 [0]))) tilesInt.C:215 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 234)
            (pc))) tilesInt.C:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 234)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              22 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 65 64 67 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 67 65 69 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:215 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 69 67 70 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 0 ax [orig:74 D.11931 ] [74])
            (const_int 0 [0]))) tilesInt.C:215 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:74 D.11931 ] [74])
        (nil)))
(jump_insn 70 69 266 4 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) tilesInt.C:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil)))
 -> 210)
;;  succ:       20 [73.0%] 
;;              5 [27.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 266 70 267 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 267 266 268 5 (set (pc)
        (label_ref 234)) 650 {jump}
     (nil)
 -> 234)
;;  succ:       22 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 268 267 231)
;; basic block 6, loop depth 0, count 0, freq 2639, maybe hot
;; Invalid sum of incoming frequencies 2818, should be 2639
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%]  (DFS_BACK)
;;              21 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(code_label 231 268 75 6 99 "" [2 uses])
(note 75 231 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 78 6 (var_location:SI i (reg:SI 41 r12 [orig:87 ivtmp.135 ] [87])) -1
     (nil))
(insn 78 76 79 6 (set (reg:DI 4 si)
        (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])) tilesInt.C:220 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 6 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 ints_list+0 S8 A128])) tilesInt.C:220 87 {*movdi_internal_rex64}
     (nil))
(call_insn 80 79 82 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:220 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 82 80 83 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:81 D.11929 ] [81])) tilesInt.C:220 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 D.11929 ] [81])
        (nil)))
(call_insn 83 82 85 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:220 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 85 83 86 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 42 r13 [orig:60 ints ] [60])) [0 MEM[base: ints_44, index: ivtmp.135_112, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:82 D.11931 ] [82])) tilesInt.C:220 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:82 D.11931 ] [82])
        (nil)))
(debug_insn 86 85 88 6 (var_location:SI D#10 (plus:SI (reg:SI 41 r12 [orig:87 ivtmp.135 ] [87])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 88 86 89 6 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))
(insn 89 88 91 6 (parallel [
            (set (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
                (plus:DI (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 89 92 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 43 r14 [orig:61 num_ints ] [61])
            (reg:SI 41 r12 [orig:87 ivtmp.135 ] [87]))) tilesInt.C:219 7 {*cmpsi_1}
     (nil))
(jump_insn 92 91 227 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 231)
            (pc))) tilesInt.C:219 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 231)
;;  succ:       6 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 721, should be 900
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [9.0%] 
;;              6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              22 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 41 [r12] 44 [r15]
;; live  kill	
(code_label 227 92 93 7 98 "" [2 uses])
(note 93 227 94 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 94 93 95 7 (var_location:SI num_ints (reg/v:SI 43 r14 [orig:61 num_ints ] [61])) -1
     (nil))
(debug_insn 95 94 97 7 (var_location:DI ints (reg/v/f:DI 42 r13 [orig:60 ints ] [60])) -1
     (nil))
(insn 97 95 98 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 variables_list+0 S8 A128])) tilesInt.C:223 87 {*movdi_internal_rex64}
     (nil))
(call_insn 98 97 291 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:223 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 291 98 100 7 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+8 S8 A64])
        (reg:DI 0 ax [orig:85 D.11931 ] [85])) tilesInt.C:223 87 {*movdi_internal_rex64}
     (nil))
(insn 100 291 101 7 (set (reg/v:SI 41 r12 [orig:86 num_variables ] [86])
        (reg:SI 0 ax [orig:85 D.11931 ] [85])) tilesInt.C:223 89 {*movsi_internal}
     (nil))
(debug_insn 101 100 103 7 (var_location:SI num_variables (reg:SI 0 ax [orig:85 D.11931 ] [85])) tilesInt.C:223 -1
     (nil))
(debug_insn 103 101 9 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 9 103 104 7 (set (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
        (const_int 0 [0])) tilesInt.C:225 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 104 9 105 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:85 D.11931 ] [85])
            (const_int 0 [0]))) tilesInt.C:225 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:85 D.11931 ] [85])
        (nil)))
(jump_insn 105 104 134 7 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 261)
            (pc))) tilesInt.C:225 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 261)
;;  succ:       10 [91.0%] 
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;;              11 [100.0%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 134 105 106 8 94 "" [1 uses])
(note 106 134 108 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 108 106 109 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:228 87 {*movdi_internal_rex64}
     (nil))
(insn 109 108 110 8 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 memorctable+0 S8 A128])) tilesInt.C:228 87 {*movdi_internal_rex64}
     (nil))
(call_insn 110 109 112 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyObject_IsInstance") [flags 0x41]  <function_decl 0x2b97207e8600 PyObject_IsInstance>) [0 PyObject_IsInstance S1 A8])
            (const_int 0 [0]))) tilesInt.C:228 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 112 110 113 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 D.11930 ] [95])
            (const_int 0 [0]))) tilesInt.C:228 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:95 D.11930 ] [95])
        (nil)))
(jump_insn 113 112 269 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) tilesInt.C:228 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil)))
 -> 141)
;;  succ:       12 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 269 113 271 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 271 269 272 9 (set (pc)
        (label_ref 270)) 650 {jump}
     (nil)
 -> 270)
;;  succ:       13 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

(barrier 272 271 261)
;; basic block 10, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%] 
;;              10 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 22 [xmm1] 44 [r15]
;; live  kill	 17 [flags]
(code_label 261 272 260 10 106 "" [2 uses])
(note 260 261 120 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 120 260 122 10 (var_location:SI i (reg:SI 44 r15 [orig:107 ivtmp.130 ] [107])) -1
     (nil))
(insn 122 120 123 10 (set (reg:DI 4 si)
        (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])) tilesInt.C:226 87 {*movdi_internal_rex64}
     (nil))
(insn 123 122 124 10 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 variables_list+0 S8 A128])) tilesInt.C:226 87 {*movdi_internal_rex64}
     (nil))
(call_insn 124 123 126 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_GetItem") [flags 0x41]  <function_decl 0x2b9720705d00 PyList_GetItem>) [0 PyList_GetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:226 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 126 124 127 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:91 D.11929 ] [91])) tilesInt.C:226 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 D.11929 ] [91])
        (nil)))
(call_insn 127 126 293 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("PyFloat_AsDouble") [flags 0x41]  <function_decl 0x2b97206e5e00 PyFloat_AsDouble>) [0 PyFloat_AsDouble S1 A8])
            (const_int 0 [0]))) tilesInt.C:226 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 293 127 294 10 (set (reg:V2DF 21 xmm0 [orig:92 D.11933 ] [92])
        (vec_duplicate:V2DF (reg:DF 21 xmm0 [orig:92 D.11933 ] [92]))) tilesInt.C:226 1459 {vec_dupv2df}
     (nil))
(insn 294 293 289 10 (set (reg:V4SF 22 xmm1 [153])
        (vec_concat:V4SF (float_truncate:V2SF (reg:V2DF 21 xmm0 [orig:92 D.11933 ] [92]))
            (const_vector:V2SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ]))) tilesInt.C:226 1393 {*sse2_cvtpd2ps}
     (expr_list:REG_DEAD (reg:V2DF 21 xmm0 [orig:92 D.11933 ] [92])
        (nil)))
(insn 289 294 130 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 3 bx [orig:68 variables ] [68])) [0 MEM[base: variables_28, index: ivtmp.130_113, step: 4, offset: 0B]+0 S4 A32])
        (reg:SF 22 xmm1 [153])) tilesInt.C:226 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [153])
        (nil)))
(debug_insn 130 289 132 10 (var_location:SI D#9 (plus:SI (reg:SI 44 r15 [orig:107 ivtmp.130 ] [107])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 132 130 133 10 (var_location:SI i (debug_expr:SI D#9)) -1
     (nil))
(insn 133 132 135 10 (parallel [
            (set (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
                (plus:DI (reg:DI 44 r15 [orig:107 ivtmp.130 ] [107])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 135 133 136 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:86 num_variables ] [86])
            (reg:SI 44 r15 [orig:107 ivtmp.130 ] [107]))) tilesInt.C:225 7 {*cmpsi_1}
     (nil))
(jump_insn 136 135 273 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 261)
            (pc))) tilesInt.C:225 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 261)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 273 136 274 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 274 273 275 11 (set (pc)
        (label_ref 134)) 650 {jump}
     (nil)
 -> 134)
;;  succ:       8 [100.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

(barrier 275 274 141)
;; basic block 12, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 141 275 142 12 92 "" [1 uses])
(note 142 141 143 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 143 142 144 12 (var_location:DI ct (mem/f/j:DI (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])) [0 memorctable+0 S8 A128])
            (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:230 -1
     (nil))
(insn 144 143 145 12 (set (reg/f:DI 0 ax [orig:139 memorctable ] [139])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 memorctable+0 S8 A128])) tilesInt.C:230 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 memorctable+0 S8 A128])
        (nil)))
(insn 145 144 147 12 (set (reg/f:DI 1 dx [orig:140 MEM[(struct CollisionTable *)memorctable.39_76].ct ] [140])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:139 memorctable ] [139])
                (const_int 16 [0x10])) [0 MEM[(struct CollisionTable *)memorctable.39_76].ct+0 S8 A64])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:139 memorctable ] [139])
        (nil)))
(insn 147 145 148 12 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 43 r14 [orig:61 num_ints ] [61])) tilesInt.C:231 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:61 num_ints ] [61])
        (nil)))
(insn 148 147 149 12 (set (reg:DI 38 r9)
        (reg/v/f:DI 42 r13 [orig:60 ints ] [60])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:60 ints ] [60])
        (nil)))
(insn 149 148 150 12 (set (reg:SI 37 r8)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+8 S4 A64])) tilesInt.C:231 89 {*movsi_internal}
     (nil))
(insn 150 149 152 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:68 variables ] [68])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:68 variables ] [68])
        (nil)))
(insn 152 150 153 12 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])) tilesInt.C:231 89 {*movsi_internal}
     (nil))
(insn 153 152 154 12 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) tilesInt.C:231 87 {*movdi_internal_rex64}
     (nil))
(call_insn 154 153 276 12 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiP15collision_tablePfiS_i") [flags 0x41]  <function_decl 0x2b972081c400 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:231 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
(jump_insn 276 154 277 12 (set (pc)
        (label_ref 173)) 650 {jump}
     (nil)
 -> 173)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 277 276 270)
;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	
(code_label 270 277 158 13 109 "" [1 uses])
(note 158 270 160 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 160 158 161 13 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 memorctable+0 S8 A128])) tilesInt.C:235 87 {*movdi_internal_rex64}
     (nil))
(call_insn 161 160 163 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_AsLong") [flags 0x41]  <function_decl 0x2b97206d6f00 PyInt_AsLong>) [0 PyInt_AsLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:235 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(debug_insn 163 161 165 13 (var_location:SI memory_size (reg:SI 0 ax [orig:100 D.11931 ] [100])) tilesInt.C:235 -1
     (nil))
(insn 165 163 166 13 (set (mem:SI (reg/f:DI 7 sp) [0  S4 A64])
        (reg/v:SI 43 r14 [orig:61 num_ints ] [61])) tilesInt.C:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:61 num_ints ] [61])
        (nil)))
(insn 166 165 167 13 (set (reg:DI 38 r9)
        (reg/v/f:DI 42 r13 [orig:60 ints ] [60])) tilesInt.C:236 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:60 ints ] [60])
        (nil)))
(insn 167 166 168 13 (set (reg:SI 37 r8)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [0 %sfp+8 S4 A64])) tilesInt.C:236 89 {*movsi_internal}
     (nil))
(insn 168 167 169 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:68 variables ] [68])) tilesInt.C:236 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:68 variables ] [68])
        (nil)))
(insn 169 168 170 13 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:100 D.11931 ] [100])) tilesInt.C:236 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:100 D.11931 ] [100])
        (nil)))
(insn 170 169 171 13 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])) tilesInt.C:236 89 {*movsi_internal}
     (nil))
(insn 171 170 172 13 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) tilesInt.C:236 87 {*movdi_internal_rex64}
     (nil))
(call_insn 172 171 173 13 (call (mem:QI (symbol_ref:DI ("_Z5tilesPiiiPfiS_i") [flags 0x41]  <function_decl 0x2b9720810b00 tiles>) [0 tiles S1 A8])
        (const_int 8 [0x8])) tilesInt.C:236 656 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0  S4 A64]))
                                (nil)))))))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 41 [r12]
;; live  kill	
(code_label 173 172 174 14 96 "" [1 uses])
(note 174 173 175 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 175 174 176 14 NOTE_INSN_DELETED)
(insn 176 175 178 14 (set (reg:DI 5 di [orig:144 D.11931 ] [144])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])) [0 num_tilings+0 S4 A128]))) tilesInt.C:238 149 {*extendsidi2_rex64}
     (nil))
(call_insn 178 176 179 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_New") [flags 0x41]  <function_decl 0x2b9720705b00 PyList_New>) [0 PyList_New S1 A8])
            (const_int 0 [0]))) tilesInt.C:238 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 14 (set (reg/v/f:DI 41 r12 [orig:105 tiles_list ] [105])
        (reg:DI 0 ax)) tilesInt.C:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 180 179 181 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 181 180 182 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
            (const_int 0 [0]))) tilesInt.C:239 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 182 181 183 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) tilesInt.C:239 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 259)
;;  succ:       15 [91.0%]  (FALLTHRU)
;;              23 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [91.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 3 [bx]
;; live  kill	
(note 183 182 10 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 10 183 202 15 (set (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
        (const_int 0 [0])) tilesInt.C:239 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 16, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [91.0%]  (DFS_BACK)
;;              15 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 202 10 184 16 97 "" [1 uses])
(note 184 202 185 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 185 184 186 16 (var_location:SI i (reg:SI 3 bx [orig:115 ivtmp.125 ] [115])) -1
     (nil))
(note 186 185 187 16 NOTE_INSN_DELETED)
(insn 187 186 189 16 (set (reg:DI 5 di [orig:146 D.11931 ] [146])
        (sign_extend:DI (mem:SI (plus:DI (mult:DI (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 6 bp [orig:72 the_tiles ] [72])) [0 MEM[base: the_tiles_33, index: ivtmp.125_122, step: 4, offset: 0B]+0 S4 A32]))) tilesInt.C:240 149 {*extendsidi2_rex64}
     (nil))
(call_insn 189 187 190 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:240 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 190 189 192 16 (set (reg/f:DI 1 dx [orig:111 D.11929 ] [111])
        (reg:DI 0 ax)) tilesInt.C:240 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 192 190 193 16 (set (reg:DI 4 si)
        (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (nil))
(insn 193 192 194 16 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:105 tiles_list ] [105])) tilesInt.C:240 87 {*movdi_internal_rex64}
     (nil))
(call_insn 194 193 292 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_SetItem") [flags 0x41]  <function_decl 0x2b9720705e00 PyList_SetItem>) [0 PyList_SetItem S1 A8])
            (const_int 0 [0]))) tilesInt.C:240 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 292 194 197 16 (set (reg:SI 1 dx [orig:117 D.11930 ] [117])
        (plus:SI (reg:SI 3 bx [orig:115 ivtmp.125 ] [115])
            (const_int 1 [0x1]))) 266 {*leasi}
     (nil))
(debug_insn 197 292 198 16 (var_location:SI i (reg:SI 1 dx [orig:117 D.11930 ] [117])) -1
     (nil))
(insn 198 197 199 16 (parallel [
            (set (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
                (plus:DI (reg:DI 3 bx [orig:115 ivtmp.125 ] [115])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 198 200 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])) [0 num_tilings+0 S4 A128])
            (reg:SI 1 dx [orig:117 D.11930 ] [117]))) tilesInt.C:239 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:117 D.11930 ] [117])
        (nil)))
(jump_insn 200 199 278 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 202)
            (pc))) tilesInt.C:239 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 202)
;;  succ:       16 [91.0%]  (DFS_BACK)
;;              17 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 16, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 [9.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
(note 278 200 279 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 279 278 280 17 (set (pc)
        (label_ref:DI 259)) 650 {jump}
     (nil)
 -> 259)
;;  succ:       23 [100.0%] 
;; lr  out 	 7 [sp] 41 [r12]
;; live  out 	 7 [sp] 41 [r12]

(barrier 280 279 210)
;; basic block 20, loop depth 0, count 0, freq 458, maybe hot
;;  prev block 17, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [73.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(code_label 210 280 211 20 89 "" [1 uses])
(note 211 210 213 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 213 211 214 20 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 ints_list+0 S8 A128])) tilesInt.C:217 87 {*movdi_internal_rex64}
     (nil))
(call_insn 214 213 215 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyList_Size") [flags 0x41]  <function_decl 0x2b9720705c00 PyList_Size>) [0 PyList_Size S1 A8])
            (const_int 0 [0]))) tilesInt.C:217 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 20 (set (reg:DI 41 r12 [orig:76 D.11931 ] [76])
        (reg:DI 0 ax)) tilesInt.C:217 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 216 215 217 20 (set (reg/v:SI 43 r14 [orig:61 num_ints ] [61])
        (reg:SI 41 r12 [orig:76 D.11931 ] [76])) tilesInt.C:217 89 {*movsi_internal}
     (nil))
(debug_insn 217 216 218 20 (var_location:SI num_ints (reg:SI 41 r12 [orig:76 D.11931 ] [76])) tilesInt.C:217 -1
     (nil))
(insn 218 217 219 20 (set (reg:DI 5 di [orig:150 D.11932 ] [150])
        (sign_extend:DI (reg:SI 41 r12 [orig:76 D.11931 ] [76]))) tilesInt.C:218 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 221 20 (parallel [
            (set (reg:DI 5 di [orig:151 D.11932 ] [151])
                (ashift:DI (reg:DI 5 di [orig:150 D.11932 ] [150])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:218 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn 221 219 222 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b971fd5a000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) tilesInt.C:218 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 222 221 224 20 (set (reg/v/f:DI 42 r13 [orig:60 ints ] [60])
        (reg:DI 0 ax)) tilesInt.C:218 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 152)
            (nil))))
(debug_insn 224 222 226 20 (var_location:DI ints (reg/v/f:DI 42 r13 [orig:60 ints ] [60])) tilesInt.C:218 -1
     (nil))
(debug_insn 226 224 228 20 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(insn 228 226 229 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 41 r12 [orig:76 D.11931 ] [76])
            (const_int 0 [0]))) tilesInt.C:219 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 41 r12 [orig:76 D.11931 ] [76])
        (nil)))
(jump_insn 229 228 230 20 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) tilesInt.C:219 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 227)
;;  succ:       21 [91.0%]  (FALLTHRU)
;;              7 [9.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 21, loop depth 0, count 0, freq 417, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [91.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 41 [r12]
;; live  kill	
(note 230 229 6 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 6 230 285 21 (set (reg:DI 41 r12 [orig:87 ivtmp.135 ] [87])
        (const_int 0 [0])) tilesInt.C:219 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 285 6 286 21 (set (pc)
        (label_ref 231)) 650 {jump}
     (nil)
 -> 231)
;;  succ:       6 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 286 285 234)
;; basic block 22, loop depth 0, count 0, freq 442, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              5 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 42 [r13] 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 42 [r13] 43 [r14]
;; live  kill	
(code_label 234 286 235 22 88 "" [2 uses])
(note 235 234 7 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 7 235 8 22 (set (reg/v:SI 43 r14 [orig:61 num_ints ] [61])
        (const_int 0 [0])) tilesInt.C:205 89 {*movsi_internal}
     (nil))
(insn 8 7 287 22 (set (reg/v/f:DI 42 r13 [orig:60 ints ] [60])
        (const_int 0 [0])) tilesInt.C:204 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 287 8 288 22 (set (pc)
        (label_ref 227)) 650 {jump}
     (nil)
 -> 227)
;;  succ:       7 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

(barrier 288 287 259)
;; basic block 23, loop depth 0, count 0, freq 2290, maybe hot
;; Invalid sum of incoming frequencies 1145, should be 2290
;;  prev block 22, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%] 
;;              2 [21.4%] 
;;              14 [9.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 259 288 254 23 105 "" [3 uses])
(note 254 259 239 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 239 254 242 23 (set (reg/i:DI 0 ax)
        (reg/f:DI 41 r12 [orig:62 D.11929 ] [62])) tilesInt.C:242 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:62 D.11929 ] [62])
        (nil)))
(insn 242 239 309 23 (use (reg/i:DI 0 ax)) tilesInt.C:242 -1
     (nil))
(note 309 242 310 23 NOTE_INSN_EPILOGUE_BEG)
(insn/f 310 309 311 23 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:242 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 104 [0x68])))
            (nil))))
(insn/f 311 310 312 23 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:242 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 312 311 313 23 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:242 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 313 312 314 23 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:242 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 314 313 315 23 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:242 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 315 314 316 23 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:242 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 316 315 317 23 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:242 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 317 316 318 23 (simple_return) tilesInt.C:242 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 318 317 0)

;; Function int CollisionTable_init(CollisionTable*, PyObject*, PyObject*) (_ZL19CollisionTable_initP14CollisionTableP7_objectS2_, funcdef_no=147, decl_uid=11218, cgraph_uid=147)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 8 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 8 (    1)

**scanning insn=91
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=92
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=3:8117 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=93
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=4:12175 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=94
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=5:16193 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
  mem: (symbol_ref:DI ("PyArg_ParseTupleAndKeywords") [flags 0x41]  <function_decl 0x2b97207a2400 PyArg_ParseTupleAndKeywords>)

   after canon_rtx address: (symbol_ref:DI ("PyArg_ParseTupleAndKeywords") [flags 0x41]  <function_decl 0x2b97207a2400 PyArg_ParseTupleAndKeywords>)
  gid=0 offset=0 
 processing const load gid=0[0..1)
removing from active insn=12 has store

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
        (const_int 32 [0x20])) [0 safety+0 S8 A128])
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (symbol_ref:DI ("PyString_AsString") [flags 0x41]  <function_decl 0x2b97206efc00 PyString_AsString>)

   after canon_rtx address: (symbol_ref:DI ("PyString_AsString") [flags 0x41]  <function_decl 0x2b97206efc00 PyString_AsString>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (reg/f:DI 4 si [orig:78 D.11941 ] [78])

   after canon_rtx address: (reg/f:DI 4 si [orig:78 D.11941 ] [78])

   after cselib_expand address: (reg/f:DI 0 ax [orig:63 D.11941 ] [63])

   after canon_rtx address: (reg/f:DI 0 ax [orig:63 D.11941 ] [63])
  varying cselib base=6:6 offset = 0
 processing cselib load mem:(mem:BLK (reg/f:DI 4 si [orig:78 D.11941 ] [78]) [0 MEM[(void *)_11]+0 A8])
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
  mem: (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x2b971fdc8700 operator new>)

   after canon_rtx address: (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x2b971fdc8700 operator new>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 7 sp)
    (const_int 16 [0x10]))
  varying cselib base=21:21 offset = 16
 processing cselib load mem:(mem/c:SI (plus:DI (reg/f:DI 7 sp)
        (const_int 16 [0x10])) [0 size+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
  mem: (symbol_ref:DI ("_ZN15collision_tableC1Eii") [flags 0x41]  <function_decl 0x2b972081c000 __comp_ctor >)

   after canon_rtx address: (symbol_ref:DI ("_ZN15collision_tableC1Eii") [flags 0x41]  <function_decl 0x2b972081c000 __comp_ctor >)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=52
  mem: (plus:DI (reg/v/f:DI 41 r12 [orig:70 self ] [70])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 41 r12 [orig:70 self ] [70])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 41 r12 [orig:70 self ] [70])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 41 r12 [orig:70 self ] [70])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=61
  mem: (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b971fdc8900 operator delete>)

   after canon_rtx address: (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b971fdc8900 operator delete>)
  gid=4 offset=0 
 processing const load gid=4[0..1)

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
  mem: (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2b971fdc6b00 __builtin_unwind_resume>)

   after canon_rtx address: (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2b971fdc6b00 __builtin_unwind_resume>)
  gid=5 offset=0 
 processing const load gid=5[0..1)

**scanning insn=70
mems_found = 0, cannot_delete = false

**scanning insn=99
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=100
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=4:4115 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=101
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=7:8189 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=10:12263 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=103
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


int CollisionTable_init(CollisionTable*, PyObject*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12]
;;  ref usage 	r0={13d,9u,1e} r1={11d,4u} r2={10d,2u} r3={6d,7u} r4={11d,4u} r5={15d,8u} r6={3d,5u} r7={9d,29u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1u} r17={12d,4u} r18={6d} r19={6d} r20={1e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,1u} r38={8d,1u} r39={6d} r40={6d} r41={3d,3u} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 413{333d,78u,2e} in 53{47 regular + 6 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	 17 [flags]
(note 8 1 91 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 91 8 92 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) tilesInt.C:32 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 92 91 93 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) tilesInt.C:32 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 93 92 94 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:32 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 94 93 95 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:32 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -48 [0xffffffffffffffd0])))
            (nil))))
(note 95 94 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 95 3 2 (set (reg/v/f:DI 41 r12 [orig:70 self ] [70])
        (reg:DI 5 di [ self ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 5 di [orig:71 args ] [71])
        (reg:DI 4 si [ args ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 4 si [orig:72 kwds ] [72])
        (reg:DI 1 dx [ kwds ])) tilesInt.C:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ kwds ])
        (nil)))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 5 90 2 NOTE_INSN_DELETED)
(insn 90 10 12 2 (set (reg/f:DI 0 ax [74])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 32 [0x20]))) tilesInt.C:37 267 {*leadi}
     (nil))
(insn 12 90 13 2 (set (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64])
        (reg/f:DI 0 ax [74])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(note 13 12 14 2 NOTE_INSN_DELETED)
(insn 14 13 15 2 (set (reg:DI 38 r9)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("PyString_Type") [flags 0x40]  <var_decl 0x2b97206f0688 PyString_Type>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tilesInt.C:37 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("PyString_Type") [flags 0x40]  <var_decl 0x2b97206f0688 PyString_Type>)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) tilesInt.C:37 267 {*leadi}
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (symbol_ref:DI ("_ZZL19CollisionTable_initP14CollisionTableP7_objectS2_E6kwlist") [flags 0x2]  <var_decl 0x2b972081abe0 kwlist>)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 20 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b97209f7d10 *.LC4>)) tilesInt.C:37 87 {*movdi_internal_rex64}
     (nil))
(insn 20 17 21 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:37 91 {*movqi_internal}
     (nil))
(call_insn 21 20 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTupleAndKeywords") [flags 0x41]  <function_decl 0x2b97207a2400 PyArg_ParseTupleAndKeywords>) [0 PyArg_ParseTupleAndKeywords S1 A8])
            (const_int 8 [0x8]))) tilesInt.C:37 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                                (expr_list:REG_FRAME_RELATED_EXPR (use (mem/f:DI (reg/f:DI 7 sp) [0  S8 A64]))
                                    (nil))))))))))
(insn 23 21 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:61 D.11940 ] [61])
            (const_int 0 [0]))) tilesInt.C:37 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.11940 ] [61])
        (nil)))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) tilesInt.C:37 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 926 [0x39e])
            (nil)))
 -> 75)
;;  succ:       5 [9.3%] 
;;              3 [90.7%]  (FALLTHRU)
;; lr  out 	 7 [sp] 16 [argp] 41 [r12]
;; live  out 	 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 9074, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [90.7%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 16 [argp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 2 [cx] 4 [si] 5 [di] 17 [flags]
(note 25 24 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 25 28 3 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [0 safety+0 S8 A128])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (nil))
(call_insn 28 27 33 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyString_AsString") [flags 0x41]  <function_decl 0x2b97206efc00 PyString_AsString>) [0 PyString_AsString S1 A8])
            (const_int 0 [0]))) tilesInt.C:40 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 33 28 85 3 (set (reg:DI 2 cx [80])
        (const_int 7 [0x7])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 7 [0x7])
        (nil)))
(insn 85 33 86 3 (set (reg/f:DI 5 di [77])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b97209f7da8 *.LC5>)) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b97209f7da8 *.LC5>)
        (nil)))
(insn 86 85 34 3 (set (reg/f:DI 4 si [orig:78 D.11941 ] [78])
        (reg/f:DI 0 ax [orig:63 D.11941 ] [63])) tilesInt.C:40 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.11941 ] [63])
        (nil)))
(insn 34 86 35 3 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg/f:DI 4 si [orig:78 D.11941 ] [78]) [0 MEM[(void *)_11]+0 A8])
                    (mem/u/c:BLK (reg/f:DI 5 di [77]) [0 MEM[(void *)"unsafe"]+0 A8])))
            (use (reg:DI 2 cx [80]))
            (use (const_int 1 [0x1]))
            (clobber (reg/f:DI 4 si [orig:78 D.11941 ] [78]))
            (clobber (reg/f:DI 5 di [79]))
            (clobber (reg:DI 2 cx [80]))
        ]) tilesInt.C:40 921 {*cmpstrnqi_nz_1}
     (expr_list:REG_DEAD (reg/f:DI 5 di [77])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:78 D.11941 ] [78])
            (expr_list:REG_DEAD (reg:DI 2 cx [80])
                (expr_list:REG_UNUSED (reg/f:DI 5 di [79])
                    (expr_list:REG_UNUSED (reg/f:DI 4 si [orig:78 D.11941 ] [78])
                        (expr_list:REG_UNUSED (reg:DI 2 cx [80])
                            (expr_list:REG_EQUAL (compare:CC (mem:BLK (reg/f:DI 0 ax [orig:63 D.11941 ] [63]) [0 MEM[(void *)_11]+0 A8])
                                    (mem/u/c:BLK (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b97209f7da8 *.LC5>) [0 MEM[(void *)"unsafe"]+0 A8]))
                                (nil)))))))))
(insn 35 34 36 3 (set (reg:QI 3 bx [81])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (nil))
(insn 36 35 87 3 (set (reg:QI 0 ax [82])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 87 36 38 3 (parallel [
            (set (reg:SI 3 bx [orig:64 D.11940 ] [64])
                (minus:SI (reg:SI 3 bx [81])
                    (reg:SI 0 ax [82])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:40 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [82])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 87 39 3 (set (reg:SI 3 bx [orig:64 D.11940 ] [64])
        (sign_extend:SI (reg:QI 3 bx [orig:64 D.11940 ] [64]))) tilesInt.C:40 155 {extendqisi2}
     (nil))
(debug_insn 39 38 40 3 (var_location:SI isafety (zero_extend:SI (ne:QI (reg:SI 3 bx [orig:64 D.11940 ] [64])
            (const_int 0 [0])))) -1
     (nil))
(insn 40 39 41 3 (set (reg:DI 5 di)
        (const_int 48 [0x30])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (nil))
(call_insn 41 40 42 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x2b971fdc8700 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) tilesInt.C:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 3 (set (reg/f:DI 6 bp [orig:65 D.11942 ] [65])
        (reg:DI 0 ax)) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 43 42 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 3 bx [orig:64 D.11940 ] [64])
            (const_int 0 [0]))) tilesInt.C:40 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:64 D.11940 ] [64])
        (nil)))
(note 44 43 88 3 NOTE_INSN_DELETED)
(insn 88 44 89 3 (set (reg:QI 1 dx [orig:83 D.11943 ] [83])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) tilesInt.C:40 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 89 88 48 3 (set (reg:SI 1 dx [orig:83 D.11943 ] [83])
        (zero_extend:SI (reg:QI 1 dx [orig:83 D.11943 ] [83]))) tilesInt.C:40 145 {*zero_extendqisi2}
     (nil))
(insn 48 89 49 3 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 size+0 S4 A128])) tilesInt.C:44 89 {*movsi_internal}
     (nil))
(insn 49 48 50 3 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:65 D.11942 ] [65])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (nil))
(call_insn 50 49 51 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_tableC1Eii") [flags 0x41]  <function_decl 0x2b972081c000 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) tilesInt.C:44 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 41 [r12]
;; live  out 	 6 [bp] 7 [sp] 41 [r12]

;; basic block 4, loop depth 0, count 0, freq 9074, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 7 4 (set (mem/f/j:DI (plus:DI (reg/v/f:DI 41 r12 [orig:70 self ] [70])
                (const_int 16 [0x10])) [0 self_17(D)->ct+0 S8 A64])
        (reg/f:DI 6 bp [orig:65 D.11942 ] [65])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:70 self ] [70])
        (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:65 D.11942 ] [65])
            (nil))))
(insn 7 52 81 4 (set (reg:SI 0 ax [orig:60 D.11940 ] [60])
        (const_int 0 [0])) tilesInt.C:45 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 81 7 82 4 (set (pc)
        (label_ref 80)) tilesInt.C:45 650 {jump}
     (nil)
 -> 80)
;;  succ:       7 [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 82 81 75)
;; basic block 5, loop depth 0, count 0, freq 926, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.3%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 75 82 74 5 115 "" [1 uses])
(note 74 75 6 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 6 74 83 5 (set (reg:SI 0 ax [orig:60 D.11940 ] [60])
        (const_int -1 [0xffffffffffffffff])) tilesInt.C:38 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(jump_insn 83 6 84 5 (set (pc)
        (label_ref 80)) 650 {jump}
     (nil)
 -> 80)
;;  succ:       7 [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 84 83 77)
;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 6 artificial_defs: { d1(0){ }d15(1){ }}
;; bb 6 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
(code_label/s 77 84 79 6 116 "" [1 uses])
(note 79 77 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 78 79 60 6 (set (reg:DI 3 bx [87])
        (reg:DI 0 ax)) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 60 78 61 6 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:65 D.11942 ] [65])) tilesInt.C:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:65 D.11942 ] [65])
        (nil)))
(call_insn 61 60 63 6 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b971fdc8900 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) tilesInt.C:44 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 63 61 64 6 (set (reg:DI 5 di)
        (reg:DI 3 bx [87])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [87])
        (nil)))
(call_insn 64 63 65 6 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2b971fdc6b00 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 65 64 80)
;; basic block 7, loop depth 0, count 0, freq 20000, maybe hot
;; Invalid sum of incoming frequencies 10000, should be 20000
;;  prev block 6, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]
(code_label 80 65 76 7 117 "" [2 uses])
(note 76 80 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 70 76 98 7 (use (reg/i:SI 0 ax)) tilesInt.C:46 -1
     (nil))
(note 98 70 99 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 99 98 100 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:46 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (nil))))
(insn/f 100 99 101 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:46 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 101 100 102 7 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:46 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 102 101 103 7 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:46 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 103 102 104 7 (simple_return) tilesInt.C:46 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 104 103 0)

;; Function void CollisionTable_dealloc(CollisionTable*) (_ZL22CollisionTable_deallocP14CollisionTable, funcdef_no=145, decl_uid=11207, cgraph_uid=145)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)

**scanning insn=29
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=30
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=3:8117 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=31
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg:DI 5 di [ self ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg:DI 5 di [ self ])
    (const_int 16 [0x10]))
  varying cselib base=5:5 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
        (const_int 16 [0x10])) [0 self_3(D)->ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (symbol_ref:DI ("_ZN15collision_tableD1Ev") [flags 0x41]  <function_decl 0x2b972081c200 __comp_dtor >)

   after canon_rtx address: (symbol_ref:DI ("_ZN15collision_tableD1Ev") [flags 0x41]  <function_decl 0x2b972081c200 __comp_dtor >)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b971fdc8900 operator delete>)

   after canon_rtx address: (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b971fdc8900 operator delete>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=16
  mem: (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
        (const_int 8 [0x8])) [0 self_3(D)->ob_type+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:DI (reg/f:DI 0 ax [orig:63 self_3(D)->ob_type ] [63])
    (const_int 320 [0x140]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:63 self_3(D)->ob_type ] [63])
    (const_int 320 [0x140]))

   after cselib_expand address: (plus:DI (reg/f:DI 0 ax [orig:63 self_3(D)->ob_type ] [63])
    (const_int 320 [0x140]))

   after canon_rtx address: (plus:DI (reg/f:DI 0 ax [orig:63 self_3(D)->ob_type ] [63])
    (const_int 320 [0x140]))
  varying cselib base=3:3 offset = 320
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:63 self_3(D)->ob_type ] [63])
        (const_int 320 [0x140])) [0 _7->tp_free+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=35
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=8:4079 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=11:8153 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64])

   after canon_rtx address: (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64])

   after cselib_expand address: (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64])

   after canon_rtx address: (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64])
  varying cselib base=13:13 offset = 0
 processing cselib load mem:(mem:QI (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64]) [0 *_8 S1 A8])
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


void CollisionTable_dealloc(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,2u} r1={4d} r2={4d} r3={3d,5u,1e} r4={4d} r5={7d,4u} r6={3d,5u} r7={7d,15u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d,1u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 201{168d,32u,1e} in 18{15 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 4 1 29 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 29 4 30 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) tilesInt.C:12 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 30 29 31 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:12 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 31 30 32 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:12 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 32 31 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 32 3 2 (set (reg/v/f:DI 3 bx [orig:62 self ] [62])
        (reg:DI 5 di [ self ])) tilesInt.C:12 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 6 bp [orig:59 D.11948 ] [59])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
                (const_int 16 [0x10])) [0 self_3(D)->ct+0 S8 A64])) tilesInt.C:13 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 6 bp [orig:59 D.11948 ] [59])
            (const_int 0 [0]))) tilesInt.C:13 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) tilesInt.C:13 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil)))
 -> 14)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 7041, maybe hot
;; Invalid sum of incoming frequencies 8986, should be 7041
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:59 D.11948 ] [59])) tilesInt.C:15 87 {*movdi_internal_rex64}
     (nil))
(call_insn 11 10 12 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_tableD1Ev") [flags 0x41]  <function_decl 0x2b972081c200 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) tilesInt.C:15 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 3 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:59 D.11948 ] [59])) tilesInt.C:15 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:59 D.11948 ] [59])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b971fdc8900 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) tilesInt.C:15 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;; Invalid sum of incoming frequencies 8055, should be 10000
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 14 13 15 4 120 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 0 ax [orig:63 self_3(D)->ob_type ] [63])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
                (const_int 8 [0x8])) [0 self_3(D)->ob_type+0 S8 A64])) tilesInt.C:16 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:62 self ] [62])
                (const_int 8 [0x8])) [0 self_3(D)->ob_type+0 S8 A64])
        (nil)))
(insn 17 16 18 4 (set (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:63 self_3(D)->ob_type ] [63])
                (const_int 320 [0x140])) [0 _7->tp_free+0 S8 A64])) tilesInt.C:16 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 38 4 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:62 self ] [62])) tilesInt.C:16 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:62 self ] [62])
        (nil)))
(note 38 18 35 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 35 38 36 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:17 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 36 35 37 4 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:17 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 37 36 19 4 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:17 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(call_insn/j 19 37 20 4 (call (mem:QI (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64]) [0 *_8 S1 A8])
        (const_int 0 [0])) tilesInt.C:16 659 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 _7->tp_free ] [64])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 20 19 0)

;; Function PyObject* CollisionTable_restore(CollisionTable*, PyObject*) (_ZL22CollisionTable_restoreP14CollisionTableP7_object, funcdef_no=151, decl_uid=11248, cgraph_uid=151)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)

**scanning insn=45
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=46
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)

   after canon_rtx address: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
        (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=20
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem/c:SI (reg/f:DI 7 sp) [0 file+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (symbol_ref:DI ("_ZN15collision_table7restoreEi") [flags 0x41]  <function_decl 0x2b9720810a00 restore>)

   after canon_rtx address: (symbol_ref:DI ("_ZN15collision_table7restoreEi") [flags 0x41]  <function_decl 0x2b9720810a00 restore>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
  mem: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)

   after canon_rtx address: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=36
mems_found = 0, cannot_delete = false

**scanning insn=51
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=4:4083 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_restore(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,5u} r1={6d,2u} r2={4d} r3={3d,3u} r4={6d,3u} r5={7d,4u} r7={5d,15u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d,1u} r18={3d} r19={3d} r20={1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 202{168d,33u,1e} in 22{19 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 6 1 45 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 45 6 46 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:72 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 46 45 47 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:72 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (nil))))
(note 47 46 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 47 3 2 (set (reg/v/f:DI 3 bx [orig:64 self ] [64])
        (reg:DI 5 di [ self ])) tilesInt.C:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 5 di [orig:65 args ] [65])
        (reg:DI 4 si [ args ])) tilesInt.C:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 10 2 (set (reg/f:DI 1 dx [66])
        (reg/f:DI 7 sp)) tilesInt.C:74 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(insn 10 8 12 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b9720a1e000 *.LC6>)) tilesInt.C:74 87 {*movdi_internal_rex64}
     (nil))
(insn 12 10 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:74 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) tilesInt.C:74 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 14 13 5 2 (set (reg:SI 1 dx [orig:60 D.11954 ] [60])
        (reg:SI 0 ax)) tilesInt.C:74 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 5 14 15 2 (set (reg/f:DI 0 ax [orig:59 D.11953 ] [59])
        (const_int 0 [0])) tilesInt.C:75 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 15 5 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:60 D.11954 ] [60])
            (const_int 0 [0]))) tilesInt.C:74 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:60 D.11954 ] [60])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) tilesInt.C:74 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 27)
;;  succ:       4 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 17 16 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 20 3 (set (reg/f:DI 5 di [orig:68 self_8(D)->ct ] [68])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
                (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])) tilesInt.C:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:64 self ] [64])
        (nil)))
(insn 20 19 22 3 (set (reg:SI 4 si)
        (mem/c:SI (reg/f:DI 7 sp) [0 file+0 S4 A128])) tilesInt.C:76 89 {*movsi_internal}
     (nil))
(call_insn 22 20 23 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table7restoreEi") [flags 0x41]  <function_decl 0x2b9720810a00 restore>) [0 restore S1 A8])
        (const_int 0 [0])) tilesInt.C:76 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b97208f5b48 *.LC1>)) tilesInt.C:77 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:77 91 {*movqi_internal}
     (nil))
(call_insn 25 24 27 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:77 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	 17 [flags]
(code_label 27 25 28 4 126 "" [1 uses])
(note 28 27 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 28 50 4 (use (reg/i:DI 0 ax)) tilesInt.C:78 -1
     (nil))
(note 50 36 51 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 51 50 52 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:78 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (nil))))
(insn/f 52 51 53 4 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:78 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 53 52 54 4 (simple_return) tilesInt.C:78 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 54 53 0)

;; Function PyObject* CollisionTable_save(CollisionTable*, PyObject*) (_ZL19CollisionTable_saveP14CollisionTableP7_object, funcdef_no=150, decl_uid=11243, cgraph_uid=150)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)

**scanning insn=45
  mem: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))

   after cselib_expand address: (pre_dec:DI (reg/f:DI 7 sp))

   after canon_rtx address: (pre_dec:DI (reg/f:DI 7 sp))
  varying cselib base=2:4059 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = true

**scanning insn=46
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)

   after canon_rtx address: (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
        (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=20
  mem: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)

   after cselib_expand address: (reg/f:DI 7 sp)

   after canon_rtx address: (reg/f:DI 7 sp)
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem/c:SI (reg/f:DI 7 sp) [0 file+0 S4 A128])
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (symbol_ref:DI ("_ZN15collision_table4saveEi") [flags 0x41]  <function_decl 0x2b9720810500 save>)

   after canon_rtx address: (symbol_ref:DI ("_ZN15collision_table4saveEi") [flags 0x41]  <function_decl 0x2b9720810500 save>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
  mem: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)

   after canon_rtx address: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=36
mems_found = 0, cannot_delete = false

**scanning insn=51
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))

   after cselib_expand address: (post_inc:DI (reg/f:DI 7 sp))

   after canon_rtx address: (post_inc:DI (reg/f:DI 7 sp))
  varying cselib base=4:4083 offset = 0
 processing cselib load mem:(mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_save(CollisionTable*, PyObject*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,5u} r1={6d,2u} r2={4d} r3={3d,3u} r4={6d,3u} r5={7d,4u} r7={5d,15u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d,1u} r18={3d} r19={3d} r20={1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 202{168d,33u,1e} in 22{19 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 6 1 45 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 45 6 46 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) tilesInt.C:63 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 46 45 47 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:63 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (nil))))
(note 47 46 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 47 3 2 (set (reg/v/f:DI 3 bx [orig:64 self ] [64])
        (reg:DI 5 di [ self ])) tilesInt.C:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 5 di [orig:65 args ] [65])
        (reg:DI 4 si [ args ])) tilesInt.C:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ args ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 10 2 (set (reg/f:DI 1 dx [66])
        (reg/f:DI 7 sp)) tilesInt.C:65 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(insn 10 8 12 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b9720a1e000 *.LC6>)) tilesInt.C:65 87 {*movdi_internal_rex64}
     (nil))
(insn 12 10 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:65 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyArg_ParseTuple") [flags 0x41]  <function_decl 0x2b97207a2300 PyArg_ParseTuple>) [0 PyArg_ParseTuple S1 A8])
            (const_int 0 [0]))) tilesInt.C:65 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 14 13 5 2 (set (reg:SI 1 dx [orig:60 D.11960 ] [60])
        (reg:SI 0 ax)) tilesInt.C:65 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 5 14 15 2 (set (reg/f:DI 0 ax [orig:59 D.11959 ] [59])
        (const_int 0 [0])) tilesInt.C:66 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 15 5 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:60 D.11960 ] [60])
            (const_int 0 [0]))) tilesInt.C:65 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:60 D.11960 ] [60])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) tilesInt.C:65 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
            (nil)))
 -> 27)
;;  succ:       4 [21.4%] 
;;              3 [78.6%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.6%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 17 16 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 20 3 (set (reg/f:DI 5 di [orig:68 self_8(D)->ct ] [68])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:64 self ] [64])
                (const_int 16 [0x10])) [0 self_8(D)->ct+0 S8 A64])) tilesInt.C:67 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:64 self ] [64])
        (nil)))
(insn 20 19 22 3 (set (reg:SI 4 si)
        (mem/c:SI (reg/f:DI 7 sp) [0 file+0 S4 A128])) tilesInt.C:67 89 {*movsi_internal}
     (nil))
(call_insn 22 20 23 3 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table4saveEi") [flags 0x41]  <function_decl 0x2b9720810500 save>) [0 save S1 A8])
        (const_int 0 [0])) tilesInt.C:67 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b97208f5b48 *.LC1>)) tilesInt.C:68 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:68 91 {*movqi_internal}
     (nil))
(call_insn 25 24 27 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:68 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.4%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	 17 [flags]
(code_label 27 25 28 4 131 "" [1 uses])
(note 28 27 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 28 50 4 (use (reg/i:DI 0 ax)) tilesInt.C:69 -1
     (nil))
(note 50 36 51 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 51 50 52 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:69 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (nil))))
(insn/f 52 51 53 4 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) tilesInt.C:69 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 53 52 54 4 (simple_return) tilesInt.C:69 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 54 53 0)

;; Function PyObject* CollisionTable_usage(CollisionTable*) (_ZL20CollisionTable_usageP14CollisionTable, funcdef_no=149, decl_uid=11238, cgraph_uid=149)

deferring rescan insn with uid = 8.
deferring rescan insn with uid = 13.
starting the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)

**scanning insn=23
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:DI (reg/v/f:DI 5 di [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 5 di [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 5 di [orig:64 self ] [64])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 5 di [orig:64 self ] [64])
    (const_int 16 [0x10]))
  varying cselib base=3:3 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/v/f:DI 5 di [orig:64 self ] [64])
        (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x41]  <function_decl 0x2b9720810f00 usage>)

   after canon_rtx address: (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x41]  <function_decl 0x2b9720810f00 usage>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=10

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=27
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)

   after canon_rtx address: (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_usage(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r7={3d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 124{110d,14u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 4 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 4 24 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:55 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 24 23 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 24 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg/f:DI 5 di [orig:65 self_2(D)->ct ] [65])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 5 di [orig:64 self ] [64])
                (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])) tilesInt.C:58 87 {*movdi_internal_rex64}
     (nil))
(call_insn 8 6 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5usageEv") [flags 0x41]  <function_decl 0x2b9720810f00 usage>) [0 usage S1 A8])
            (const_int 0 [0]))) tilesInt.C:58 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(debug_insn 10 8 11 2 (var_location:SI ret (reg/v:SI 0 ax [orig:60 ret ] [60])) tilesInt.C:58 -1
     (nil))
(insn 11 10 28 2 (set (reg:DI 5 di [orig:66 D.11965 ] [66])
        (sign_extend:DI (reg/v:SI 0 ax [orig:60 ret ] [60]))) tilesInt.C:59 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:60 ret ] [60])
        (nil)))
(note 28 11 27 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f 27 28 13 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:60 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(call_insn/j 13 27 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyInt_FromLong") [flags 0x41]  <function_decl 0x2b97206d6c00 PyInt_FromLong>) [0 PyInt_FromLong S1 A8])
            (const_int 0 [0]))) tilesInt.C:59 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 14 13 0)

;; Function PyObject* CollisionTable_reset(CollisionTable*) (_ZL20CollisionTable_resetP14CollisionTable, funcdef_no=148, decl_uid=11235, cgraph_uid=148)

deferring rescan insn with uid = 8.
deferring rescan insn with uid = 11.
starting the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 11.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)

**scanning insn=21
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:DI (reg/v/f:DI 5 di [orig:62 self ] [62])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 5 di [orig:62 self ] [62])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 5 di [orig:62 self ] [62])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 5 di [orig:62 self ] [62])
    (const_int 16 [0x10]))
  varying cselib base=3:3 offset = 16
 processing cselib load mem:(mem/f/j:DI (plus:DI (reg/v/f:DI 5 di [orig:62 self ] [62])
        (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x41]  <function_decl 0x2b9720810e00 reset>)

   after canon_rtx address: (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x41]  <function_decl 0x2b9720810e00 reset>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=25
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)

   after canon_rtx address: (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


PyObject* CollisionTable_reset(CollisionTable*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r7={3d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 124{111d,13u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 4 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 4 22 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:49 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 22 21 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 22 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg/f:DI 5 di [orig:63 self_2(D)->ct ] [63])
        (mem/f/j:DI (plus:DI (reg/v/f:DI 5 di [orig:62 self ] [62])
                (const_int 16 [0x10])) [0 self_2(D)->ct+0 S8 A64])) tilesInt.C:50 87 {*movdi_internal_rex64}
     (nil))
(call_insn 8 6 9 2 (call (mem:QI (symbol_ref:DI ("_ZN15collision_table5resetEv") [flags 0x41]  <function_decl 0x2b9720810e00 reset>) [0 reset S1 A8])
        (const_int 0 [0])) tilesInt.C:50 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b97208f5b48 *.LC1>)) tilesInt.C:51 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 26 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) tilesInt.C:51 91 {*movqi_internal}
     (nil))
(note 26 10 25 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f 25 26 11 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:52 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(call_insn/j 11 25 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x2b97207a2600 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) tilesInt.C:51 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 12 11 0)

;; Function void inittiles() (inittiles, funcdef_no=156, decl_uid=11376, cgraph_uid=156)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)

**scanning insn=50
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (symbol_ref:DI ("PyType_Ready") [flags 0x41]  <function_decl 0x2b97205d2c00 PyType_Ready>)

   after canon_rtx address: (symbol_ref:DI ("PyType_Ready") [flags 0x41]  <function_decl 0x2b97205d2c00 PyType_Ready>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
  mem: (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x2b97207a2f00 Py_InitModule4_64>)

   after canon_rtx address: (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x2b97207a2f00 Py_InitModule4_64>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=22

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)

   after canon_rtx address: (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)
  gid=2 offset=0 
 processing const load gid=2[0..8)
  mem: (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)

   after canon_rtx address: (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)
  gid=2 offset=0 
 processing const base store gid=2[0..8)
mems_found = 1, cannot_delete = false

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=58
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=38
  mem: (symbol_ref:DI ("PyModule_AddObject") [flags 0x41]  <function_decl 0x2b97207a2c00 PyModule_AddObject>)

   after canon_rtx address: (symbol_ref:DI ("PyModule_AddObject") [flags 0x41]  <function_decl 0x2b97207a2c00 PyModule_AddObject>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=55
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


void inittiles()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={4d,4u} r1={6d,2u} r2={5d,1u} r4={6d,2u} r5={7d,3u} r7={4d,14u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,2u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 195{166d,29u,0e} in 22{19 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 3 1 50 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 50 3 51 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:378 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 51 50 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 51 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:381 87 {*movdi_internal_rex64}
     (nil))
(call_insn 6 5 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyType_Ready") [flags 0x41]  <function_decl 0x2b97205d2c00 PyType_Ready>) [0 PyType_Ready S1 A8])
            (const_int 0 [0]))) tilesInt.C:381 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 8 6 9 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:59 D.11973 ] [59])
            (const_int 0 [0]))) tilesInt.C:381 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.11973 ] [59])
        (nil)))
(jump_insn 9 8 14 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) tilesInt.C:381 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 3667 [0xe53])
            (nil)))
 -> 42)
;;  succ:       5 [36.7%] 
;;              3 [63.3%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 6333, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [63.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
(note 14 9 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 37 r8)
        (const_int 1013 [0x3f5])) tilesInt.C:383 89 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:DI 1 dx)
        (const_int 0 [0])) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZL12TilesMethods") [flags 0x2]  <var_decl 0x2b972084e4c0 TilesMethods>)) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b9720a34688 *.LC7>)) tilesInt.C:383 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 22 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_InitModule4_64") [flags 0x41]  <function_decl 0x2b97207a2f00 Py_InitModule4_64>) [0 Py_InitModule4_64 S1 A8])
            (const_int 0 [0]))) tilesInt.C:383 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_BR_PRED (use (reg:SI 37 r8))
                        (nil)))))))
(debug_insn 22 20 24 3 (var_location:DI m (reg/v/f:DI 0 ax [orig:60 m ] [60])) tilesInt.C:383 -1
     (nil))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:60 m ] [60])
            (const_int 0 [0]))) tilesInt.C:385 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) tilesInt.C:385 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2164 [0x874])
            (nil)))
 -> 42)
;;  succ:       5 [21.6%] 
;;              4 [78.4%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 4963, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.4%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 26 25 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 32 26 33 4 NOTE_INSN_DELETED)
(note 33 32 34 4 NOTE_INSN_DELETED)
(insn 34 33 35 4 (parallel [
            (set (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])
                (plus:DI (mem/j/c:DI (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>) [0 MEM[(struct PyObject *)&CollisionTableType].ob_refcnt+0 S8 A256])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) tilesInt.C:388 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZL18CollisionTableType") [flags 0x2]  <var_decl 0x2b972083a000 CollisionTableType>)) tilesInt.C:389 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b9720a34720 *.LC8>)) tilesInt.C:389 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 59 4 (set (reg:DI 5 di)
        (reg/v/f:DI 0 ax [orig:60 m ] [60])) tilesInt.C:389 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:60 m ] [60])
        (nil)))
(note 59 37 58 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f 58 59 38 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:390 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(call_insn/j 38 58 39 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PyModule_AddObject") [flags 0x41]  <function_decl 0x2b97207a2c00 PyModule_AddObject>) [0 PyModule_AddObject S1 A8])
            (const_int 0 [0]))) tilesInt.C:389 665 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 39 38 42)
;; basic block 5, loop depth 0, count 0, freq 5037, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [21.6%] 
;;              2 [36.7%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 7 [sp]
;; live  kill	 17 [flags]
(code_label 42 39 43 5 139 "" [2 uses])
(note 43 42 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 54 43 55 5 NOTE_INSN_EPILOGUE_BEG)
(insn/f 55 54 56 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) tilesInt.C:390 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(jump_insn 56 55 57 5 (simple_return) tilesInt.C:390 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 57 56 0)
